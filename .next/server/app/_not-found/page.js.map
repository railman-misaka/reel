{"version":3,"file":"app/_not-found/page.js","mappings":"qFAAA,4DCAA,4CCCA,WACA,OAAW,+CAAiD,CAC5D,+BACA,4BACA,YCJA,WACA,OAAW,+CAAiD,CAC5D,+BACA,4BACA,mC4FDA,EECI,E8CHJ,2B9CGe,8BtDLR,E4CEI,EuBFA,EwBcX,EORA,EAeA,EAKA,EAOI,EAkCJ,EAIA,EAQI,EAOJ,E/BtFoB,E+B8FpB,EAIA,EAKA,EOvGW,EASA,EgCTX,MvCiCsB,CA8CL,UO/ES,OASK,8DhJTxB,mBAEP,MADA,wrCAGA,WACA,mBAEA,4DACA,GACA,QAEA,cACA,6BACA,IACA,kBACA,CAAU,SAEV,MADA,mEAAmF,UAAY,EAC/F,CACA,CAEA,CAWA,WACO,aAIP,OAHA,GACA,QAEA,CACA,CACA,cAEA,oDAAyD,EAAO;AAChE,yEACA,CAyBA,UAAoB,GAAM,WAE1B,YAAsB,GAAM,aACpB,GAAM,kBAId,yDACA,MAhCA,YACA,4BAAyC,EACzC,SACA,cACA,QAEA,kBACA,CAAS,CACT,YACA,iBACA,CAAS,CACT,aACA,2BACA,cAEA,kBACA,CACA,CAAK,EACL,mBAAuB,EACvB,SACA,CAAK,CACL,EAYA,cACA,eACA,CAAK,EAEL,4BC/EA,yBACA,wBACA,qBACA,SACA,iBACA,WACA,WACA,gBACA,UACA,EAAU,CACV,gBACA,YAEA,CAEA,eACA,SACA,4BAEA,CAEA,yBACA,UACA,CACA,aACA,6BAIA,OADA,oBACA,GAIA,wBAEA,CACA,CAIO,kBACP,eACA,MACA,wDACA,uBAMA,cACA,UAAkB,IAAkB,EACpC,qBACS,CACT,CAKA,cACA,UAAkB,IAAkB,EACpC,qBACS,CACT,CACA,6CC5DA,kCACA,WACA,IACA,IACA,IACA,IACA,IACA,EACA,gBACA,MACA,wDACA,2CACA,8DAEA,SACA,iCACA,mCACA,UAEA,kDACA,CACA,CAKW,yBACX,kBAA+B,EAC/B,WACA,mBAEA,YADA,IAA4B,IAAe,IAC3C,CACA,WACA,UACA,aACA,UAEA,eACA,8BACA,iBAKA,OAJA,aAAsD,IAAe,EACrE,kDAAyG,QAAe,gBAExH,OACA,CACA,CAEA,SACA,OAA+B,GAAc,WAC7C,CACA,CACA,CAAS,CACT,UACA,UACA,cAAgC,GAAO,QACvC,QAAyB,QAAyB,IAClD,wBACa,QACb,CACA,CACA,8CACA,OACA,qBACA,aAEA,eACA,uBACA,yCACA,WACA,2BACA,mBACA,2BACA,cACA,CACA,CACA,cACA,uBAEA,iBACA,yBACA,sBACA,CACA,qBACA,0DACA,aACA,oFAEA,8BACA,wCAEA,OADA,iBAAgC,QAAW,KAC3C,YACA,KACA,UACA,QACA,CAAS,CACT,CACA,oBACA,4CAGA,OAFA,6BAA4C,QAAW,KACvD,OACA,YACA,KACA,SACA,CAAS,CACT,CACA,eACA,4CAGA,OAFA,+BACA,OACA,YACA,KACA,SACA,CAAS,CACT,CACA,CClHO,SAASA,EAAcC,CAAoB,CAAEC,CAAkB,EACpE,IAAMC,EAA0B,UAAhB,OAAOD,EAAoB,IAAIE,IAAIF,GAAQA,EACrDG,EAAW,IAAID,IAAIH,EAAKC,GACxBI,EAAYH,EAAQI,QAAQ,CAAC,KAAIJ,EAAQK,IAAI,CACnD,OAAUH,EAASE,QAAQ,CAAC,KAAIF,EAASG,IAAI,GAAOF,EAChDD,EAASI,QAAQ,GAAGC,OAAO,CAACJ,EAAQ,IACpCD,EAASI,QAAQ,EACvB,kGCWO,UACP,WACA,iBACA,4DAEA,wCACA,gBACA,CACA,gBACA,iBACA,4DAEA,mBACA,8CAEA,gBACA,CACA,cACA,4BACA,iBACA,gBACA,CACA,CCzCW,cACX,OACA,cAAuB,IAAqC,8BAAwD,CACpH,EADoG,oBACpG,gDACA,2EACA,CACA,gBCTO,cACP,iBACA,eACA,6BACA,CACA,2CAGA,wCCYO,kBAA8B,GAAW,CAChD,eACA,sBACA,uBAEA,cACA,UAAkB,IAAkB,EACpC,qBACS,CACT,CACA,cACA,UAAkB,IAAkB,EACpC,qBACS,CACT,CACA,YACA,UAAkB,IAAkB,EACpC,oBACA,CAAS,CACT,CACA,CACA,QACA,6BACA,2BACA,EACA,UAEA,CADmB,QAAS,GAC5B,sCAEA,MAWO,yBACP,MAkGA,EACA,GAlGA,WAXA,SACA,MACA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c,GAExD,CAKA,eACA,+BACA,CACA,gBACA,4BACA,CACA,SACA,0BACA,EACA,CACA,2BACA,iBAHA,IAKA,CACA,QACA,iBACA,6BACA,EACA,CACA,QACA,EAHA,IAIA,QACA,6BACA,GAEA,IACA,CACA,CCxCO,iBAAiC,GAKxC,SALoD,KAKpD,CACA,MACA,SAAkB,yBAAyB,gBAAgB,+CAA+F,EAS1J,WACA,IAEA,IAGA,4BACA,EACA,CACA,2BACA,gBACA,0HACA,EALA,IAMA,CAQA,iBAGA,8CAGA,wGACA,KAIA,4BAIA,aACA,CACA,yBClDO,UAIP,oBACA,4BACA,CACA,sBACA,4BACA,gCACA,iCAEA,CACA,eACA,YAAgB,sBAA2B,IAAM,IAAe,CAChE,4BAIA,yBACA,IAEA,SAEA,yDAEA,UACA,KACA,eACA,gBAEA,kCAEA,mCACA,MAaA,iCACA,EACA,CACA,UACA,2BAEA,eACA,cAEA,CACA,UAEA,8BACA,CAQA,GAJA,2BAIA,sFACA,MAEA,yBAEA,+CAEA,+BAMA,UACA,KACA,YAA+B,WAAwB,KAEvD,+BAEA,eACA,UAIA,0BAEA,UACA,CAEA,MAA2B,SHqGX4B,CACwB,EAatC,GGnHwC,CHmHlCC,EAAO,IAAI3C,GAKjB,OAFA4C,EAAgBjH,OAAO,CAAC,GAAcgH,EAAK1C,MAAM,CAAC4C,IAE3CF,EAAKrC,MAAM,EACpB,EGzH0C,GAM1C,KACA,gBACA,eACA,qBACA,mEAEA,qBACA,YACA,CAGA,GAFA,wBAEA,uBACA,+GAEA,CAAU,SACV,IACA,EAAU,OAEV,yBACA,GACA,CACA,CACA,QACA,sBACA,CACA,gBAMA,cAJA,qBAKA,CACA,iBAIA,sCACA,SAEA,WACA,CAQA,gBACA,aACA,aAA+B,GAC/B,aAKA,EANiD,KAMjD,yCACA,yBAEA,UACA,CACA,qBAOA,+CACA,2EAQA,IAAa,GALb,EAAmB,QAAkB,CAKV,IAC3B,mCACA,2BACA,GACA,SACA,CAGA,4CAEA,oCACA,2BACA,GACA,SACA,CAGA,WACA,CACA,cACA,kBACA,eACA,UACA,WACA,aACA,EACA,0CACA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B,CAAS,EACT,KACA,eACA,sBAEA,mBAAwB,cAA2B,6BACnD,WAAkC,GAAuB,CACzD,KAA0B,IAAS,OACnC,GAFyD,MAEzD,EACA,OACA,oDACA,mDACA,MACA,QACA,CACA,CAAiB,EACjB,EAAc,IACd,WAAkC,GAAiB,CACnD,KAA0B,IAAS,IADgB,EAChB,CAEnC,WACA,OACA,oDACA,kDACA,CAAiB,GAGjB,QACA,CACA,CCpDO,SACP,eACA,aACA,CACA,QACA,qBACA,CACA,CCHW,SACX,eACA,MAEA,GADA,cACA,kBACA,6CAEA,yDACA,2DACA,MACA,6BACA,OACA,4CACA,2BACA,SACA,6DACA,WACA,CACA,CAAS,CACT,CAQA,wBACA,kDACA,uBACA,YAAuB,+BAAkC,KACzD,IAEA,EACA,+BACA,GACA,8DACA,+BAIA,CAQA,eACA,qBAGA,MACA,sBAGA,qBACA,wBACA,wGAAgI,EAAe,QAAQ,EAAS,eAAe,iBAAwB,EAAE,GAEzM,aAEA,CACA,OACA,WACA,iBACA,4DAEA,CAMA,YACA,sDACA,CAMA,uBACA,oDAGA,gEAIA,CAQA,cAAoC,EACpC,sBAGA,qBAGA,iBACA,gBACA,iBACA,WACA,qBACA,EAEA,yBAGA,0CACA,MAMA,yBACA,KAEA,4BATA,CACA,iBACA,WACA,qBACA,CAWA,CACA,CChIW,2BA4CX,iBCpDA,OAAgB,GAAY,qBEDrB,UACP,eACA,aACA,CACA,iBAEA,uBAEA,CACA,sBAEA,iBACA,2CADA,CAEA,CACA,CCZO,iBAAoC,GAC3C,cACA,MAAc,CAFqD,EAErD,EAAU,CACxB,CACA,CCNO,SACP,eAEA,GADA,cACA,gBACA,iDAAiE,EAAO,+BAExE,CACA,iBAEA,gDAIA,CACA,sBAEA,iBACA,8BACA,IAEA,gCAJA,CAKA,CACA,CCnBO,iBAA0C,GACjD,cACA,MAHA,CACyE,yBAGzE,CACA,sBAEA,iBAGe,GADf,gBACkC,EADlC,OAFA,CAIA,CACA,CCTW,eACX,aAAyB,IAAc,CACvC,0BCHO,eACP,2BAA2C,IAAS,UAE7C,eACP,2BAA2C,IAAS,OCN7C,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OAHA,GACA,uFAEA,oBACA,4CACA,wCACA,QAEA,QACA,CAAS,EACT,MACA,MACA,WACA,OACA,CAAS,CACT,CACA,iCACA,MAAe,SAAS,SAAS,KAAc,gCAC/C,oCAEA,CACA,qCAGA,oDACA,OACA,YACA,KAAsB,IAAY,eAClC,EAEA,QAAgB,WAAa,EAC7B,IACA,UACA,sBAGA,6BAEA,kCACA,KAA8B,GAC9B,QACA,SAAkC,CAClC,WAH8D,EAI9D,gBACA,eACqB,EAGrB,gCACA,kCACA,YACA,QACA,SAAkC,CAClC,aAEA,gBACA,eACqB,GAIrB,UAAiC,aAAe,EAiChD,GAhCA,sCAAiE,GAAmB,aAGpF,GAHoF,OAGpF,0BACA,kCACA,OACA,QACA,SAAkC,CAClC,aAGA,gBACA,eACqB,EAGrB,IACA,iCACA,eACA,QACA,SAA8B,CAC9B,aAGA,gBACA,cACiB,EACjB,aAKA,IAGA,uBACA,OACA,YAEA,KAA8B,IAAY;AAC1C;AACA;AACA;AACA,wEAAwE;;AAExE;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,yBACA,CAEA,yDACA,CAGA,yBACgB,SAAc,gBAC9B,+CACA,aACA,CAAiB,EAED,SAAiB,gBAEjC,IACA,kDACA,KACA,WACA,YACA,gBACA,KACA,CACA,CAAiB,GACjB,CAAc,SACd,mBACA,qDAEA,QACA,CACA,CAAU,SACV,MAAsC,QAAc,IACpD,kBACA,GACA,iBAEA,iBACA,uDACA,KAOA,MAJgB,SAAc,gBAC9B,oCACA,aACA,CAAiB,EACjB,qCACA,KACA,mBACA,YACA,gBAGA,oBACA,CACA,CAAiB,EACjB,QACA,YACA,CAAiB,EAEjB,OACA,YACA,KAAsB,IAAY,oCAClC,CACA,CACA,CACA,oCAA+D,EAC/D,8DACA,MACA,MACA,WACA,OACA,CAAS,CACT,CACA,4BACA,IAAgB,oBAAkB,GAA0B,YAAQ,WAMpE,OALA,uBACA,oDACA,4DAEA,iBACA,gCACA,CACA,CCx+EW,WACX,eACA,mDACA,UACA,qBACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,UACA,UACA,UACA,mBACA,UAEA,2DACA,EACO,aACP,cACA,4CC1BmB,UACnB,eACA,8BAGA,oBACA,aACA,CAAS,CACT,CACA,WACA,MAEA,WAA4C,EAAI,GAAG,+BAAyC,OAC5F,sCACA,KACA,SAEA,YAAgB,sBAA+C,IAAM,IAAe,CACpF,GACA,+BAEA,SACA,MACA,GAEA,gDAEA,IACA,KACA,KAEA,SAGA,uHACA,gCACA,iCAGA,WACA,IACA,eACA,aACA,CAAiB,EACjB,iBACA,KACA,SACA,CAEA,yBACA,KAEA,4BACA,wBACA,SACA,QACA,wBACA,EAEA,8BAEA,wBACA,IAEA,CAAc,SAGd,EACA,iBAEA,IAEA,EAAc,OACd,GACA,+BAEA,CACA,EAAS,GACT,CACA,CACA,CCpFO,SACP,iBACA,mBACA,mBACA,iBACA,eACA,6BACA,CACA,SACA,iBACA,4BACA,mBACA,iDACA,MACA,CACA,mBACA,uCAEA,oBACA,oBACA,kBACA,aACA,CACA,aACA,MACA,cACA,oBACA,CACA,OACA,aACA,wBACA,cAIA,OADA,cACA,CACA,CACA,SACA,uBACA,cACA,qBACA,oBACA,wBAEA,CACA,mBACA,qDACA,6BAEA,CACA,yBACA,qCACA,sBACA,mBACA,qBACA,oBACA,CACA,QACA,mBACA,mBACA,gBACA,CACA,OACA,UACA,kBACA,CAEA,UACA,oBACA,qCACA,qBACA,qBAEA,CACA,QACA,mBACA,mBACA,gBACA,CACA,WACA,uBAEA,kBACA,sBAEA,CClFA,SAEA,yBACA,yBAEA,yBACA,8BAEA,0CACA,2BACA,0BACA,kBACA,SACA,CAAK,MACL,gBACA,QAAqB,CACrB,gBACK,YACL,SAMA,OAHA,IACA,gCAAgD,GAAK,QAAQ,EAAW,GAExE,WALA,QAOA,CAAK,eACL,eACA,CAAK,CACL,CACe,SACf,qBACA,gCACA,iBACA,aACA,4BACA,eACA,sBAEA,QACA,CACA,sBACA,+EACA,CACA,eAGA,GAFA,gBACA,gDACA,yBACA,wCACA,eACA,4BAEA,sBAEA,4EACA,iFAIA,GAHA,uC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EA,OACA,GACA,8CAEA,EAAsC,IAElB,GAAU,QAFuB,GAEvB,EAC9B,iBACA,CAAiB,UACjB,GACA,yCAEA,EAAsC,IAGtC,CAGA,CAHU,IAHsC,GAMhD,+BAEA,uDAEA,WACA,oBACA,qEAIA,KADA,WACA,GACA,sBACA,uBACA,mCACA,2BACA,2BAAqC,GAAuB,wBAC5D,2BACA,SACA,EAA2B,KAA2B,0FACtD,+BAEA,GAAmF,UAAnF,SAAiD,KAAkC,KAAiC,KAAsC,0FAC1J,KAA6C,KAAkC,cAE/E,GACA,0BACA,MACA,KACA,cACA,gBACA,kBACA,qBACA,kBACA,qBACA,EAAa,CAEb,CACA,6BAGA,qEAGA,iCAAoE,GAAO,aAE3E,MADA,4BAEA,CACA,kBACA,WAAuC,GAAiB,EACxD,CACA,WAFwD,QAExD,CACA,OACA,sEACA,CACA,cACA,4BACA,oBACA,GACA,QAEA,sBACA,YACA,IACA,oBAEA,CACA,CAAS,EAET,OADA,oBACA,CACA,CACA,uBACA,QACA,sFACA,CAEA,6BAAyC,EAIzC,SACA,kBACA,kBACA,WAEA,wCACA,aACA,KACA,IACA,mCACA,SACA,oBACA,oBACA,YAEA,UACA,mBACA,SACA,CAAiC,GAEjC,CACA,CAAqB,GAErB,mBAEA,oCACA,oBAEA,IACA,eACA,WACA,YAEA,WACA,CAAkB,SAClB,uCACA,CACA,EAAc,uCACd,aAEA,aADA,iBACA,YACA,SACA,IACA,kBACA,UAAuC,EAAI,GAAG,kCAC9C,mBACA,EAEA,gBAEqB,YAAc,EACnC,CAEA,EAAc,8CACd,aACA,wBACA,uBACA,oBACA,EACA,EACA,YACiB,CACjB,EAAc,6BACd,eACA,kBAGA,MAAkD,YAAlD,qBAAkD,oDAA2E,WAC7H,yCACA,sBAtEA,KAwEA,6BACA,EACA,SACA,EACA,OACA,WACA,cACA,WACA,iBACA,YACA,QACA,EACA,CAC+C,MAC/C,EAGA,kBACA,OAJA,EAIA,wCAHA,sFAIA,CAIA,CAEA,KANe,CAMf,CAHS,GAGT,SACA,QAuDA,EACA,EArDA,+BAA8C,KAAoB,QAClE,MAA+B,GAA2B,WAC1D,MACA,OAF0D,CAE1D,aACA,6BAAkF,KAAe,OACjG,OACA,WACA,QACA,mBACA,aACA,CAEA,CACA,CAGA,gDAAiE,KAAoB,2DACrF,YAEA,eAAgB,GAAa,EAC7B,+BAA4D,KAAoB,QAChF,WACA,eACA,wDACA,sDAA6H,KAAe,QAM5I,GALA,IACA,cACA,eACA,CAEA,SACA,MACA,0DACA,CAAa,EACb,YAEA,wBAEA,OADA,kEACA,EACA,eACA,OACA,UACA,OACA,KAA0B,KAAe,OACzC,OACA,YACA,CAAiB,CACjB,+DACA,YACA,CACA,CACA,iCAAyD,GAAO,IAkChE,MA/BA,sCACA,KACA,KAAmC,KAAc,EAGjD,UADA,6HAA8L,KAAoB,uBAClN,oDAEA,GACA,IACA,UACA,gBACA,kBACA,cACA,YACA,GAEA,wDAMA,GACA,UACA,WACA,gBACA,kBACA,YACA,EACA,uBAEA,CACA,CAEA,iBAKA,gDAAyE,KAAe,QACxF,MAA+B,GAA2B,WAC1D,GACA,UAF0D,CAE1D,KAEA,CACA,2DACA,oCAEA,+BACA,iBAEA,wCACA,YACA,mFAAuG,GAAU,SAEjH,MACA,CACA,IACA,KAGA,sCACA,2BAA2C,GAAO,iBAElD,uDACA,CAAU,SACV,wDACA,CACA,CACA,SE/VA,ICIA,YACA,SACA,SACA,QACA,OACA,EACA,kCGKe,kBAA4B,GAC3C,GADqD,SACrD,GACA,SACA,gDACA,aAAkB,WAAkB,EACpC,MACA,qCAIA,kDACA,UAEoB,GADpB,KACkC,CAClC,KADkC,CACK,SAAkB,OAEzD,KAD+D,GAC/D,GACA,EAAyC,GAA2B,CAFL,CAEK,QAEpE,EAA+B,GAAsB,EADrD,OADoE,SACpE,YACqD,GACjC,GAAkB,mCACtC,CAIA,GADA,EAAuB,QAAmB,IAC1C,mBACA,IAAwB,kBAAiB,mCACzC,GACA,wBAEA,CACA,gCACgB,GAAU,IAC1B,GAD0B,IAC1B,wBAEA,IAEA,OADA,gCACA,EACA,CAAc,SACd,gBAAmC,IAAe,EAClD,QAEA,CAHkD,MAGlD,CACA,CACA,EAEA,iEACA,CACA,0CAAgC,EAAgB,EAKhD,WAAmB,GAAgB,CACnC,IALA,QAImC,SAJnC,KAMA,iBACA,mDACA,wBACA,qFACA,6BACA,cACA,qEACA,sDACA,eACA,2EACA,oDACA,CAAS,CACT,CACA,mBACA,WAAmB,GAAgB,iBACnC,CACA,iBACA,mDAEA,aACA,mEAEA,wBACA,OACA,yDACA,4DACA,CACA,CACA,mBACA,OAEA,uDAAoE,wCAAwC,KAE5G,CACA,sBACA,8CACA,OACA,gDAA6D,EAAK,KAElE,CACA,uBACQ,SAAc,gBACtB,WACS,CACT,CACA,uBACA,OACA,WACA,SAAsB,CACtB,gBAA6B,CAC7B,kBACA,QAAqB,IACrB,CACA,CACA,aAHwC,QAGxC,CACA,4EAEA,sBACA,iBAAgB,GAAe,mCAC/B,MACA,gFAOA,OAHA,IAAyB,IACzB,WAEA,UAEA,CALmD,IAKnD,iBACA,2BACA,2BACA,CAAS,EACT,CACA,kCAUA,EACA,GAVA,kCAGA,oCACA,sCAEA,6BACA,oHAA+J,gBAG/J,mBACA,kDACU,CACV,mCACA,oC7F7JA,U6F6J6D,Q7F7J7D,O6F6J6D,G7F7J7D,oB6F8JA,iBACA,mBAAsC,GAAY,IAElD,KAFkD,CAElD,GACA,CACA,SAEA,UACA,CACA,+BAA+B,yBAAgC,EAC/D,uEACA,EACA,CACA,OACA,QAA8B,CAC9B,SACa,CACb,YACA,EAPA,IAQA,CAGA,eAEA,QACA,CACA,yBAEA,QACA,CACA,gBAGA,CACA,eAEA,QACA,CACA,kBACA,QACA,CACA,kBAEA,CACA,oBAGA,CACA,sBAEA,CACA,oCAEA,WACA,CACA,oBAIA,CACA,gBAIA,CACA,qBACA,cACA,CACA,+BACA,MACA,yGFpOO,gBEoOmQ,IF9N1Q,GALqB,kBAAY,cACjC,UACA,aACA,aACA,CAAK,EACL,OACA,oBtFIO,EsFHP,EtFOA,OsFPiB,EtFOjB,csFPiC,KACjC,CACA,MDCA,MCDkB,GDClB,gBCDqC,IACrC,eACA,CACA,KACA,OACA,EAEA,CACA,KACA,WAAoB,GAAiB,GACrC,WADqC,IACrC,EACA,OACA,CACA,EE6M0Q,0BAE1Q,kCACA,aAAqB,GACrB,CACA,wBAFiD,YAEjD,MACA,gDAKA,cAJA,KAMA,CACA,CCnPO,SACP,mBACA,cACA,WACA,WACA,CAEA,qBACA,4BACA,cAA+B,GAAe,eAC9C,CACA,CACO,SACP,eACA,kBACA,CAEA,cAQA,OAPA,6BACA,kBAGA,IAA2B,IAAkB,oBAC7C,4BAAyC,MAAM,EAAY,GAE3D,IACA,CACA,eCxBO,kBAA6B,GACpC,YADmD,CACnD,EACA,qBAKA,eAJA,6DACA,eACA,iCACA,gBACA,qBACA,iBAEA,CACA,mBACA,8DACA,CACA,CACO,iBAA8B,GACrC,aADqD,CACrD,0BACA,kBACA,uBACA,oBACA,yBACA,qBACA,yBAAmC,GACnC,YADkD,IAClD,KAA+B,IAAe,CAC9C,aACA,CACA,eAEA,aADA,uBACA,oBACA,EACA,EACA,yBAEA,YAEA,gBAEA,OADA,uBACA,IACA,CACA,mBACA,MAEA,4EACA,CACA,aACA,kCACA,CACA,aACA,MAAe,QAAyB,cACxC,CACA,aACA,0BACA,CACA,kBAEA,OADA,yBACA,KAEA,QAEA,OADA,gBACA,KAEA,OACA,2BACA,aACA,CACA,WACA,kBAEA,mBAEA,0CACA,mDACA,IACA,qBAEA,GADA,yDACA,KnG9EU,ImG+E8B,KACxC,oCACA,CAAa,CAFb,EnG9EA,SmG8EuB,CnG9EvB,OmG8EwC,EnG7ExC,OmG6EwC,WnG5ExC,qBACA,gBmG2EwC,GnG1ExC,GACA,IAIA,SAGO,KACP,2BACA,UACA,GAEA,CAAK,EACL,uBACA,EmG2DwC,EnGrExC,EmGwEA,CACA,uBACA,qBACA,uBACA,8BACS,CACT,CACA,WACA,sBACA,UAAsB,IAAc,qFAEpC,iCACA,UAAsB,IAAc,oEAEpC,sCACA,CACA,CCjGA,iDACA,GACA,gBACA,iBACA,mBACA,wBACA,sBACA,CAAC,4BETD,YAGA,gBAGA,wBAIA,sBAIA,wBAGA,eACA,CAAC,CAAE,IAAc,EAAS,GAAK,WAAnB,IAAc,8ECnBnB,OAAM,GACb,kBACA,CAF2B,GAE3B,2BACA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CA,eACA,iBACA,mBAAoC,KACjB,GAAW,GADiB,CAE/C,IAD8B,EAC9B,IAGA,QACA,CAMA,gBACA,WACA,gBACA,WACA,WACA,EACA,wBAIA,qBACA,GAEA,iDACA,KAlBA,+BACA,yBACA,CAAK,CAgBL,EAEA,QACA,CAeO,4BAAqB,0BAAsC,SAClE,QACA,KAEA,YACA,yDACA,IACA,MACA,UACA,EAAkB,CAClB,MACA,CAAiB,CACjB,SACA,CAAa,EA3Bb,kBAAsB,gCAAqC,SAC3D,EACA,kCACA,oBACA,OACA,gBACA,CAAa,CACb,OACA,YACA,CAAa,CACb,wDACA,CAAS,IAVT,IAYA,EAgBA,CACA,aACA,iBACA,SACA,CAAa,GAGb,CCzFO,QACP,cACA,gBACA,6BACA,6BACA,6BACA,2BACA,6BACA,sCACA,EACO,IACP,OACA,WACA,QACA,QACA,CCfA,sBACA,iBACA,EAEA,CACA,EACA,CAEA,eACA,WAGA,YACA,CC0JA,QACA,YACA,OACA,UACA,QACA,MACA,CC1KA,aAAyB,kBAAsB,SAC/C,MACyB,UAAI,SAC7B,KACA,aACA,cACS,CACT,qBACA,CAAK,EAPL,IAQA,CCqTA,iBAA0B,SAAW,EACrC,QACA,OACQ,GAAI,MACZ,oBAAsC,EAAK,EAC3C,eACS,EACD,GAAI,CACZ,uBAAoC,EAAK,EACzC,gBACS,EACD,GAAI,MACZ,mBAAqC,EAAK,EAC1C,iEACA,CAAS,EACT,CC7UA,kBAA8B,EAAM,EACpC,QAAY,qBAA8B,EAC1C,MAAyB,UAAI,SAC7B,MACA,kBACA,IACA,CAAK,CACL,CACA,iBAAoB,SAAW,EAC/B,2CAEA,MADA,qBACA,IACA,MACA,CAAS,CACH,EACN,mBACA,MAA6B,UAAI,SACjC,MACA,MACA,CAAS,CACT,CACA,2BEvBA,eACA,0CACA,CACA,cACA,mCAAuC,sBAAyB,EAChE,CA2BA,iBACA,6BACA,kBACA,IAGA,OADA,UAEA,CAAM,OACN,GACA,SAGA,qBAEA,eADuB,UAAU,WACjC,EACA,CASA,0EAKA,+BAA6D,aAAyB,MAZtF,EAQA,EAMA,EAbA,iBADA,EAcA,IAbA,mBACe,UAAU,SAYzB,EAZyB,GAEzB,EAaA,SACA,cASA,GAPA,EADA,mBACA,EAEA,iCAKA,qBACA,wBACA,kBACA,KACA,KACA,OACA,IACA,iBACA,+BA3BA,EA4BA,aA3BA,UA4BA,CAAc,MAEd,IACA,CACA,GACA,oBAA8D,EAAY,GAE1E,CACA,QACA,CChGA,iBACA,6BACA,CACO,qBACP,EACA,kEAWA,CAVA,mBACA,UACM,IACN,eACA,oBAEA,4BACA,gBAGA,uBACA,CACA,WACA,cACA,EAEA,CACA,kBACA,UACA,CAEA,SC1BA,GCcA,GDdM,ECcE,cDdU,CCcI,2CACtB,4FACA,eACA,yBACA,0BACA,eACA,0BACA,EACA,cACA,GACA,IACA,WACA,wBACA,8BACA,EALA,OAQa,GAAI,2CACV,2CACA,yBACA,yBACA,yBACY,yBACZ,yBACA,0BACA,iCACA,6BACM,GAAM,0BACZ,0BACA,iCACA,YAAkC,EAAE,IAAI,IAAI,kBAC5C,0BACA,iCACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BCvDA,QACP,KAAU,GAAM,EAAD,CAAK,MACpB,MAAW,GAAG,GAAK,MACnB,KAAU,CADS,EACF,GAAI,MACrB,KADgB,CAAK,IAErB,KAAU,GAAM,EAAD,CAAK,MACpB,MADoB,GACH,EAAD,CAAK,MACrB,MADqB,GACF,GAAI,CAAL,OAClB,EACA,EAFuB,CAEvB,CACA,UACA,YACA,aACA,EAgCO,mBA/BP,iBACA,0CACA,UAEA,0BACA,OAEA,cACA,eAIA,oCACA,2BAEA,sBAGA,EAcA,YACA,CAaA,eCxDA,IACA,SACA,UACA,OACA,CACA,MACA,SACA,YACA,CACA,UACA,SACA,YACA,CACA,OACA,WACA,CACA,OACA,SACA,YACA,UACA,OACA,CACA,OACA,SACA,eACA,aACA,kBACA,QACA,SACA,EA4BO,mBACP,MAA2B,GAAyB,GACpD,eACA,IAFoD,sBAExC,0BLhDL,YAEP,WACA,EAbA,SK0D8F,ELzD9F,4DACA,4BAAuC,EAAO,SAC9C,IAWA,EAVA,WACA,gDACA,4BAAuC,EAAO,SAC9C,IAcA,OACA,qBAH+B,GAAqC,6CAIpE,sBAZA,EAaA,CACA,EKiC8F,GAC9F,KACA,gBACA,MAhCA,sBAoDA,MAnDA,aACA,MAAsB,GAAa,GACnC,OADmC,CACnC,IACA,aASA,0BAKA,GALyD,GAEzD,SAF6E,EAG7E,EAoCA,EApCA,EAoCA,EApCA,EAsCA,aAAyC,IAAzC,IHvFA,eGuFwD,GHvFxD,CGuFwD,OD5BjD,QC6BS,CD7BT,MACP,eACA,oBACA,SAEA,ECwBgB,iHAAkH,SAA4B,6FArC9J,GACA,IAAa,GAAU,IACvB,EAAM,CADiB,GAEvB,EAEA,IAAa,GAAU,IACvB,CACA,EAFuB,EASvB,OACA,GACA,SACA,CACA,QACA,CACA,QACA,mBACA,gBACA,qBACA,sBACA,6BACA,+BACA,uBACA,0BAYO,eACP,kBAaA,OACA,KACA,MAAe,GAAY,UAC3B,EAGA,OAlBA,kBAZA,EAeA,YAdA,CADA,EAaA,8BAZA,QACA,uBADA,SAgBA,mBADA,EACA,CACA,QAFA,EAEA,CACA,EAHA,EAGA,GAAsC,GAAY,OAClD,CAEA,CAHkD,CAGlD,wCACA,EAKA,KACA,YAAmC,GAA8B,gBACjE,CACA,EACA,IACA,IAJiE,GAKjE,SACA,UACA,YACA,cACA,CACO,eACP,MACA,kBACA,+BACA,GACA,KACA,MAAe,GAAY,UAC3B,EACA,gBACA,gBAKA,GAHA,2CACA,4EACA,SACA,WACA,eACA,aAEA,UAAuC,GAAyB,eAChE,KAEA,EAHgE,GAGhE,MAEA,eAKA,CAEA,QACA,iBCzJO,yBAKP,EACA,EACA,EANA,IAAY,+BAA4B,KACxC,aACA,aACA,qBAAkF,KAAmB,CAiBrG,OAbA,GACA,eACA,WACA,QACM,GACN,eACA,SACA,QACM,IACN,eACA,SACA,QAEA,CACA,MACA,UACA,UACA,CACA,CACO,uBACP,IAAY,OAAuB,KACnC,cACA,mBAGA,CEhCA,mBAGA,qBACA,4BACA,uDACA,GACA,CACA,OAAW,GAA8B,MACzC,CACO,WACP,MACA,kBACA,SAUA,OATA,SAAkC,GAAyB,mBAC3D,GAD2D,OAC3D,iBACA,OACA,CAAS,EACT,4BACA,cACA,cACS,CACT,CAAK,EACL,CACA,EACA,mBACA,kBACA,SACA,iCACA,qCACA,MACA,CACA,aACA,EACA,EAEA,QACA,2BACA,mBACA,UACA,MACA,cAEA,CAAa,GAGb,QACA,CASO,iBACP,kBACA,MAVA,uBACA,EAGA,CACA,OAHA,6CAGA,IACA,EALA,IAMA,EAGA,iBACA,sBASA,MANA,CACA,YACA,YACA,MALA,gBAMA,MALA,eAMA,CAEA,EACA,IACA,YACA,YACA,eACA,UACA,cACA,kBACA,uBACA,oBACA,oBACA,oBACA,cACA,CACA,OACA,kBACA,+BACA,SAKA,aAJA,wBACA,6CACA,0BACA,+CACA,KACA,gBACA,eACA,gCAA8D,EAAI,GAAG,EAAM,EAE3E,CACA,mBACA,EACO,MACP,EACA,CACA,YACA,iDACA,EAJA,KAMA,IACA,SACA,QACA,SACA,KACA,QACA,CACO,OACP,kBACA,SACA,iBACA,WACA,MACA,eAEA,aADA,WACA,SACA,MAAuC,GAAyB,YAChE,UADgE,CAChE,MACA,MACc,KAAgB,GAAyB,GAEvD,CACA,QACA,EACO,OACP,CANuD,GAMvD,EACA,kBACA,UACA,OACA,UACA,EAEA,8BAAiF,GAAyB,qDAC1G,KACA,EAAU,QACV,OACA,sCACA,oBACA,eACA,0CACA,CACA,EACO,OACP,kBACA,eAEA,KAAwB,GAAyB,MAEjD,QACA,EACO,YACP,EACA,CACA,cACA,sDACA,EAJA,KAMO,MACP,EACA,CACA,cACA,OAAgB,GAAyB,SACzC,EAJA,KCnKO,MDsKkC,GCtKlC,aACC,GAAa,IACrB,KACA,CAFqB,EAGrB,iBACA,EACA,CACO,WACP,MACA,YAEA,OACA,QACA,QACA,EACA,oBACA,sCACM,GAAS,GAAa,GAC5B,OAD4B,CAE5B,MACA,MAEA,aAA0B,GAAQ,CAClC,IADkC,EACP,GAAyB,MACpD,gBADoD,EACpD,CACA,CAEA,QACA,GCxBA,YACA,2CACA,uBACA,yBACA,2CACA,6BACA,6EACA,iDACA,yCACA,uCACA,2DACA,mDACA,kCACA,CAAC,UAAwC,EAEzC,YACA,yEACA,gDACA,CAAC,UAAgD,EAEjD,YACA,mDACA,mCACA,+DACA,0CACA,CAAC,UAAwC,EAEzC,YACA,2CACA,yCACA,2DACA,iEACA,+DACA,6DACA,iEACA,6DACA,iEACA,qDACA,6CACA,iCACA,iCACA,yCACA,iDACA,2CACA,uDACA,yDACA,mDACA,yEACA,uDACA,6CACA,2CACA,uDACA,uCACA,+CAEA,gBACA,0BACA,4BACA,+BACA,CAAC,CAAE,IAAuB,EAAkB,GAAK,EAGjD,CACC,SAA0C,EAD3C,KAHqB,IAAuB,EAG5C,2BAGA,YACA,iDACA,yCACA,yCACA,yCACA,4CACA,CAAC,UAAgC,EAEjC,YACA,4CACA,4DACA,0CACA,yBACA,CAAC,CAAE,IAAkB,EAAa,GAAK,EAGvC,CACC,SAAgC,EAJjB,IAAkB,QAGlC,uBAIA,CACC,SAA4B,EAD7B,6BAIA,CACC,SAA8D,EAD/D,8CAGA,YACA,sDACA,qDACA,CAAC,UAAkD,EAGnD,CACC,SAAwC,EADzC,6BAGO,QACP,qBACA,2BACA,4BACA,wBACA,kBACA,0BACA,wBACA,kBACA,mCACA,mCACA,mCACA,qCACA,oCACA,uCACA,+BACA,wCACA,CAGO,IACP,oCACA,qCACA,wCACA,CEjHA,SAAQ,uBAA2B,mDARnC,EAAU,EAAQ,IAAoB,CAS/B,YATU,MASV,MACP,iBACA,QACA,cACA,aACA,CACA,CAKA,eACA,CALO,kBACP,8BACA,gBACA,EAEA,aACA,kCAEA,GACA,qBAEA,aACA,cACA,iCACS,GAET,OACA,EACA,WACA,yCACA,KACA,YACA,IACA,WACA,QACA,MACA,OACA,CAAS,CACT,CACA,CACA,UAKA,oBACA,OAAe,GAAK,4BACpB,CACA,aACA,SACA,CACA,0BACA,kBACA,KAEA,OADA,kBACA,CACA,CACA,qBACA,OAAe,GAAK,oCACpB,CACA,6BACA,kBACA,GAAY,GAAK,kBAEjB,WAEA,wBACA,mBACA,CACA,YACA,MACA,aAEA,IAAgB,aAAc,sBAC9B,KACA,UACA,EAAU,CACV,KACA,SACA,IACA,CACA,EACA,gBACA,IAAa,GAAwB,6DACrC,WAGA,oFACA,KACA,EAGU,UAAkC,GAAK,uCACjD,QAHA,oCACA,MAIA,WAMA,OALA,cACA,mBACA,mBACA,iBAEA,8EACA,8FACA,OACA,aACA,6CAAiF,GAAgB,iBACjG,uBAA+C,yCAAyC,QAAQ,kEAAoF,GACpL,QACA,qBACA,CAAyB,CAEzB,EACA,GACA,gDAAuG,IAEvG,IACA,cACA,uBAEA,WACA,GD/HgB,CC+HQ,MAAU,GD9HX,CC8HW,SD9H9B,OAAO0I,GACP,SC6H8B,CD7HpBA,EACc,YAAxB,OAAOA,EAAQC,IAAI,CC8HvB,kBACA,QAGA,IACyB,UAEzB,MADA,QACA,CACA,CAAyB,aAKzB,OAHA,QACA,IAEA,CACA,CAAkB,SAGlB,MAFA,QACA,IACA,CACA,CACA,CAAa,EACb,CACA,WACA,WACA,wBACA,KACA,EAAc,CACd,KACA,QACA,GAAqC,iDAGrC,WACA,OACA,6CACA,4BAEA,yBACA,eACA,wBAUA,+CAVA,EACA,yCACA,2BACA,yBAEA,OADA,cACA,uBACA,EACA,yBAEA,CAGA,CAHc,CAlBd,CAsBA,CACA,gBACA,WACA,gFACA,gDACA,CACA,kBAEA,OADA,EAAyC,GAAK,6BAE9C,CACA,wBACA,+BACA,gBACA,CACA,0BACA,+BACA,YACA,GACA,UAEA,CACA,CACA,IAAM,GAAS,MACf,OADe,GACf,GACA,YACA,CAAC,GCzCD,yBACA,0CACA,UAAgB,GAAQ,EACxB,UAAyB,KAAS,MAAS,EAAmB,GAA5B,aAA4B,EAC9D,6BAA8C,EAAM,EACpD,YACA,aACA,CACA,CAAa,6BACb,CACA,uBACA,CACA,yBACA,0CACA,UAAgB,GAAQ,EACxB,UAAyB,KAAS,MAAS,EAAmB,GAA5B,aAA4B,EAC9D,6BAA8C,EAAM,EACpD,YACA,aACA,CACA,CAAa,6BACb,CACA,uBACA,CACA,yBACA,MACA,iCACA,6BNzMO,MMyM0D,ENxMjE,CADO,EMyMwE,YNxM/E,aMyMA,uFACA,CACA,uBACA,aAAY,GAAW,EACvB,kBACA,gCACA,eACA,gBACA,oBACA,kBACA,EAQA,MAPA,CACA,OACA,QACA,YACA,UACA,oBAGA,CAEA,wBAAiC,wEAAuE,MACxG,EACA,EACA,qBACA,KACA,QAAoB,GAAsB,YAC1C,OAD0C,CAEpC,CACN,IAAgB,iBAAqD,MAAQ,GAAqB,GAClG,IACA,GACA,CACA,GACA,IALkG,CAKlG,GAAqB,GAAQ,EAE7B,uBACA,kBACA,OACA,CAAK,OACL,kBACA,OACA,CAAK,OAML,GALA,QACA,EACA,EACA,EACA,EACA,MACA,YAA+B,GAAsB,KACrD,cADqD,CACrD,GACA,OACA,CAAS,OACT,kBACA,OACA,CAAS,MACT,QACA,OACA,MACA,CACA,CACA,OAAmC,YAAK,KAExC,+BASA,UAPA,GAOA,EADA,OAPA,GAQA,IANA,CACA,KACA,KACA,KACA,CAEA,MACA,CACA,2CAqBA,EApBA,cAAsC,EAAM,IAC5C,kBACA,EACA,EACA,EACA,EACA,CAGA,OAGA,IACA,mBACA,IACA,KACA,kBACA,EAEA,aAqBA,aAlBA,EAfA,WAeA,CACA,SACA,cACA,EAEA,CACA,QACA,EAEA,UACA,OACA,gBACA,oBACA,kBACA,QACA,QACA,cAA2B,KAAgB,WAC3C,CAAK,EACL,GACA,iBACA,uBACA,CAMA,OALA,8BAGA,UAEA,CACA,CACA,wCACA,iCACA,iBACA,IACA,eACA,kBAEA,+BACA,8BAGA,CA4EA,+BACA,cACA,cACA,OACA,yBAEA,aACA,YAAsC,WAA0B,KAChE,aAEA,uBA3BA,gBACA,wBACA,SACA,CAAK,GACL,sBAKA,WACA,EACA,aACA,IAGA,SACA,EAYA,MAEA,CAEA,0BACA,wBASA,GAFA,EAJ2J,GAK3J,oCACA,sCAEA,qBAEM,kCAEN,MAEA,QACA,CACO,2BAiBP,EAhBA,MdxbA,CAEA,cACA,Ecqb6B,Sdrb7B,KACA,OcobkD,KdpblD,KACA,kBAEA,WACA,iBACA,qBACA,aACA,eACA,cACA,cACA,aACA,eACA,Y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ACA,WAA0C,UAAI,SAC9C,eACA,2BAGA,0EACA,CAAS,OACD,GAAI,MACZ,YACA,oBACS,EACD,GAAI,MACZ,WACA,+CACA,CAAS,EACD,GAAI,MACZ,WACA,kBACA,CAAS,EACD,GAAI,MACZ,UACA,kBACS,EACD,GAAI,MACZ,YACA,oBACS,EACD,GAAI,MACZ,SACA,0CACS,EACD,GAAI,MACZ,YACA,8CACS,EACD,GAAI,MACZ,WACA,mBACS,KACT,6BAA8E,UAAI,SAClF,eACA,MACA,CAAa,SACb,yBAAwE,UAAI,SAC5E,aACA,MACA,CAAa,SACb,+BAAiF,UAAI,SACrF,gBACA,MACA,CAAa,MACL,GAAI,MACZ,WACA,kBACA,CAAS,EACD,GAAI,MACZ,iBACA,yBACS,KACT,6CACA,iBACA,SAAkD,GAAI,MACtD,EACA,SACA,CAAqB,GAEE,GAAI,CAC3B,OACA,SACA,CAAiB,GAER,GACT,CACA,EoBJiB,CACjB,UACA,CAAS,EnB7HF,kBmB8HmB,GnB9HW,EAAY,EACjD,kBACA,cAAY,+BAAqC,EACjD,OAAW,GAAU,CACrB,MACA,gBACA,YACA,CAAS,OACT,iEACA,gBACA,WACA,YACA,CAAiB,SACjB,iEACA,gBACA,QACA,YACA,CAAiB,SACjB,iEACA,gBACA,OACA,YACA,CAAiB,SACjB,CACA,EmBsG0B,CAC1B,wBACS,EpBAF,UoBCW,OpBDW,EAAQ,EACrC,kBACA,UAAY,iBAAqB,EACjC,YAA4B,EAAM,EAIlC,OAHA,GACA,sBAAqC,GAAY,EAExB,UAAI,SAC7B,wBACA,SACA,CAAK,CACL,EoBVkB,CAClB,gBACS,EpBSF,YoBRa,OpBQW,EAAU,EACzC,kBACA,UAAY,YAAgB,EAC5B,OAAW,GAAU,CACrB,EAA8B,IADT,EACS,IAAI,SAClC,qBACA,SACA,CAAS,UACT,WAAsD,UAAI,SAC1D,qBACA,SACA,CAAa,MACb,CACA,EoBrBoB,CACpB,oBACS,EACD,SpB0BD,CAA+B,SoB1BX,QpB0BW,CAAiB,EACvD,kBACA,SACA,gBACA,SACA,aACA,MAA0B,EAAI,MAG9B,MAAyB,UAAI,SAC7B,wBACA,SACA,CAAK,CACL,EoBvC2B,CAC3B,iCACA,CAAS,EpB6DF,gBoB5DiB,OpB4DW,EAAc,SACjD,EACW,GAAU,CACb,GAAS,CACjB,EAFqB,GACJ,MACjB,2BACA,kBACS,EACD,GAAS,CACjB,KADiB,MACjB,QACA,iBACS,EACD,GAAS,CACjB,KADiB,MACjB,sBACA,kBACS,EACD,GAAS,CACjB,KADiB,MACjB,KACA,cACS,KACT,6CAAuF,GAAS,CAChG,KADgG,MAChG,EACA,UACA,CAAa,MACb,EAtBA,IAuBA,EoBpFwB,CACxB,4BACS,EACD,SpBkCD,MoBlCgB,OpBkCW,EAAa,EAC/C,kBACA,YAAY,2CAA+C,EAC3D,OAAW,GAAU,CACrB,EAAkB,GAAI,CADD,KAErB,yBACA,aACA,CAAS,OACD,GAAI,MACZ,6BACA,SACA,CAAS,EACT,WAA+D,UAAI,SACnE,WACA,cACA,+BACA,CAAa,QACb,EAAyB,GAAI,MAC7B,wCACA,SACA,CAAS,OACT,CACA,EoBxDuB,CACvB,yBACA,CAAS,EACD,SlB5JD,QkB4JkB,GlB5JW,EAAW,MAC/C,MAiBA,MAiFA,MA9FA,EAHA,MACA,YAGA,eACA,aACA,UACA,cACA,GACoB,GAAI,UACxB,UACA,iBACA,CAAqB,EACrB,CACA,KACA,eAEA,GACoB,GAAI,UACxB,UACA,iBACA,CAAqB,EACD,GAAI,UACxB,yBACA,qDACA,CAAqB,EACD,GAAI,UACxB,wBACA,oDACA,CAAqB,EACD,GAAI,UACxB,0BACA,sDACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,iBACA,mBACqB,EACD,GAAI,UACxB,kBACA,kBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,cACA,gBACqB,EACrB,CACA,KACA,YACA,GACoB,GAAI,UACxB,UACA,cACA,CAAqB,EACD,GAAI,CACxB,qBACA,eACqB,EACD,GAAI,UACxB,oBACA,sBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,cACA,kBACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,WACA,gBACqB,EACrB,CACA,KACA,eACA,GACoB,GAAI,CACxB,mBACA,iBACA,CAAqB,EACD,GAAI,UACxB,qBACA,oBACqB,EACD,GAAI,UACxB,oBACA,mBACqB,EACD,GAAI,CACxB,4BACA,mBACqB,EACD,GAAI,UACxB,iBACA,iBACqB,EACrB,CACA,KACA,kBAEA,GACoB,GAAI,UACxB,UACA,oBACA,CAAqB,EACD,GAAI,CACxB,0BACA,gDACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,cACA,kBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,iBACA,qBACqB,EACrB,CACA,KACA,mBACA,GACoB,GAAI,UACxB,UACA,qBACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,aACA,iBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,iBACA,qBACqB,EACD,GAAI,CACxB,8BACA,sBACqB,EACrB,CACA,KACA,sBACA,GACoB,GAAI,UACxB,UACA,wBACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,aACA,iBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,gBACA,oBACqB,EACrB,CACA,KACA,2BACA,GACoB,GAAI,UACxB,UACA,6BACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,gBACA,oBACqB,EACrB,CACA,KACA,mBACA,GACoB,GAAI,UACxB,UACA,qBACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,cACA,kBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,iBACA,qBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,eACA,kBACA,CAAqB,EACD,GAAI,UACxB,iBACA,mBACqB,EACD,GAAI,UACxB,qBACA,sBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,YACA,gBACqB,EACrB,CACA,KACA,qBACA,GACoB,GAAI,UACxB,UACA,uBACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,cACA,kBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,iBACA,qBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,eACA,kBACA,CAAqB,EACD,GAAI,UACxB,iBACA,mBACqB,EACD,GAAI,CACxB,8BACA,sBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,YACA,gBACqB,EACD,GAAI,UACxB,eACA,iBACqB,EACrB,CACA,KACA,qBACA,GACoB,GAAI,UACxB,UACA,uBACA,CAAqB,EACrB,CACA,KACA,mBACA,GACoB,GAAI,CACxB,mBACA,qBACA,CAAqB,EACrB,CACA,KACA,SAEA,uCADA,EAC4E,EAC5E,CACA,CACA,OAAW,GAAU,CACb,GAAI,GADS,OAErB,gBACA,oBACA,CAAS,EACD,GAAI,UACZ,WACA,4CACS,EACD,GAAI,UACZ,iBACA,sBACS,EACD,GAAI,UACZ,SACA,2CACA,CAAS,EACD,GAAI,UACZ,eACA,mBACS,EACD,GAAI,UACZ,YACA,iBACS,EACD,GAAI,CACZ,2BACA,sBACS,EACD,GAAI,UACZ,SACA,2CACA,CAAS,EACD,GAAS,CACjB,KADiB,UACjB,WACA,kBACS,EACD,GAAS,CACjB,KADiB,UACjB,WACA,kBACS,EACD,GAAS,CACjB,KADiB,UACjB,WACA,iBACS,EACD,GAAS,CACjB,KADiB,UACjB,WACA,kBACS,EACD,GAAS,CACjB,KADiB,UACjB,kBACA,wBACS,EACD,GAAS,CACjB,KADiB,UACjB,gBACA,sBACS,EACD,GAAS,CACjB,KADiB,UACjB,sBACA,2BACS,KACT,MACA,CACA,EkBnKyB,CACzB,sBACS,ElBmLF,ekBlLgB,GlBkLW,EAAS,EAC3C,MACA,kBACA,IAAY,QAAO,EACnB,OAAW,GAAU,CACb,GAAI,GADS,GAErB,eACA,SACA,CAAS,EACD,GAAI,MACZ,eACA,eACS,EACD,GAAI,MACZ,kBACA,iBACS,EACD,GAAI,MACZ,kBACA,kBACS,EACD,GAAI,MACZ,qBACA,oBACS,EACD,GAAI,CACZ,qBACA,4CACS,EACD,GAAI,MACZ,sBACA,sBACS,EACD,GAAS,CACjB,KADiB,MACjB,gBACA,kBACS,KACT,mCACgB,GAAI,MACpB,iBACA,8BACA,CAAiB,EACD,GAAI,MACpB,wBACA,8BACA,CAAiB,EACD,GAAI,MACpB,uBACA,eACA,CAAiB,EACD,GAAI,MACpB,wBACA,gBACA,CAAiB,EACjB,QACA,WACA,IACA,UACA,aACA,CAAa,EACb,IACA,UACA,WACA,CAAa,EACb,IACA,UACA,iBACA,CAAa,EACb,IACA,CACA,EkBxPuB,CACvB,kBACS,ElBuPF,YkBtPa,OlBsPW,EAAU,SACzC,EACW,GAAU,CACb,GAAS,CACjB,EAFqB,GACJ,UACjB,SACA,eACS,EACD,GAAS,CACjB,KADiB,UACjB,YACA,iBACA,CAAS,EACD,GAAS,CACjB,KADiB,UACjB,UACA,gBACS,EACD,GAAS,CACjB,KADiB,UACjB,aACA,kBACA,CAAS,EACD,GAAS,CACjB,KADiB,UACjB,mBACA,yBACS,EACD,GAAS,CACjB,KADiB,UACjB,aACA,mBACS,EACD,GAAS,CACjB,KADiB,UACjB,uBACA,4BACA,CAAS,EACD,GAAS,CACjB,KADiB,UACjB,SACA,eACS,EACT,EAlCA,IAmCA,EkB1RoB,CACpB,oBACS,EjB5IF,aiB6Ic,GjB7IW,EAAO,EACvC,kBACA,iBACA,SACA,UACA,UACA,OAAW,GAAU,CACrB,MADqB,CACrB,QACA,oBACA,MACA,CAAa,QACb,eACA,WACA,MACA,CAAa,QACb,eACA,uBACA,MACA,CAAa,QACb,eACA,MACA,CAAa,QACb,CACA,EiBsHqB,CACrB,cACS,EACT,CACA,CACA,eACA,OAAW,GAAU,CpBtJd,MoBsJc,GpBtJd,GoBuJa,OpBvJW,EAAU,EACzC,OAAW,GAAU,CACb,GAAI,GADS,GAErB,WACA,QApBA,YACA,WACA,yBAEA,cADA,KACkC,GAElC,GADA,KACA,GACA,EAHkD,EAGlD,IAFA,EAEA,CACA,sCACA,aACA,MAA+B,EAAgB,CAL/C,EAK+C,CAAc,GAAG,EAAM,EAEtE,CAEA,QACA,EAKA,EACA,CAAS,KACT,iCAAuE,GAAI,MAC3E,cACA,gBACA,cACa,MACL,GAAI,MACZ,eACA,qBACA,CAAS,EACT,CACA,EoBuIoB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BAEA,eAEA,UAEA,sBACA,EAAkB,UAClB,YAA4B,wBAAuC,EACnE,GACA,KACA,UACA,iBACA,CACA,CAEA,OACA,KACA,MACA,yBACA,mBACA,UACA,CACA,EACA,6BAYA,GAXA,OACA,MACA,QACA,MACA,iBACA,mCACA,eACA,gBACA,sBACA,CAAyB,EAEzB,wEACA,SAAwE,KAAc,CAAG,KAAc,GACvG,OAAsE,QAAc,EACpF,4BA0DA,OAxBA,uCACA,MACA,MAAmD,GAAM,QACzD,GACA,IAFyD,IAEzD,wCACA,0BACA,gBACA,UAEA,2DACA,GACA,eACA,KAA8C,EAAe,MAC7D,OACA,MAF6D,KAE7D,CACA,CAAqC,EACrC,cACA,aACA,WACA,WACA,MACA,CAAqC,CAErC,CAA6B,qEAC7B,CA1DA,EAGA,4BACA,GACA,gDACA,KAAsC,GAAM,2BAC5C,gBACA,WAiBA,OAbA,eACA,KAAsC,EAAe,MACrD,OACA,MAFqD,KAErD,CACA,CAA6B,EAC7B,cACA,aACA,WACA,WACA,MACA,CAA6B,EAC7B,UAEA,gBACA,kBACA,gBACA,uBACA,CAA6B,CAC7B,CA8BA,CA9B0B,OAiC1B,UACA,CACA,CAAiB,CACjB,EAEA,KACA,KACA,SACA,MAKA,GAJA,8DACA,oCACA,MAEA,OACA,kBACA,iDACA,KAA8B,EAAoB,MAClD,aACA,KAFkD,IAElD,EACA,WACA,OACA,WACA,aACA,CAAqB,EACrB,GAIA,yBACA,MAAkC,IDnblC,yBCmb+D,GAG/D,EACA,UAGA,2CAEA,yCAAuF,EAAe,QAGtG,WAHsG,GAGtG,YACA,MAEA,YACA,0BACA,yBACA,iEACA,0BACA,oCACqC,GAGrC,gBAGA,CACA,MACA,GACA,MACA,QACA,MACA,cACA,0BACA,eACA,qBACA,uCACA,CAAyB,EAEzB,mBAAkD,GAAM,uBACxD,kBACA,gBACqB,EAIrB,OAHA,+BACA,YACqB,EACrB,CACA,CACA,CACA,gDACA,UAAwB,GAAQ,EAGhC,GADiC,eACjC,gBAEA,2BAKA,OAJA,IACA,YACA,QAE+B,GAAkB,0BAEzB,GAAyB,UAFA,UAEA,IAA6C,CAAO,EAAE,QAAgB,EAEvH,CACA,iBACA,MAAwB,MAAY,EACpC,gEACA,qBAEA,2BACA,OAAmC,GAAkB,0BAEzB,GAAyB,UAFA,YAEA,KAAkD,GAAO,EAAE,QAAgB,EAEhI,CACA,iCACA,2BAEA,CACA,iBAKA,UAgDA,cAhDA,EACA,OACA,2BACA,8BACA,MACA,cACA,4BACA,kBACA,gBACA,wBACqB,CACrB,CASA,cACA,mBAKA,gBACA,OACA,2BACA,kBACA,gBACA,wBAEA,CAAiB,eACjB,MAGA,8CAGA,+BACiB,EAKjB,OAFA,cAA2C,EAC3C,0BACA,CACA,CAGA,CAAS,EACT,KACA,IACA,cACA,EAAc,OACd,GACA,WAEA,CAEA,QACA,EASA,OAJA,mBACA,6BACA,uBACA,kBACA,CACA,EAUA,IACA,EIlnBsB,CACtB,gBAAwB,qBACxB,oBAA4B,KACvB,CACL,CCrBA,OACA,CACA,GACA,CACA,yBACA,uBAAqC,EACrC,MAfA,IAAwB,sCAAuF,CAiB/G,qDACA,CACa,EACF,GAAI,EACN,CACT,CACA,QAtBA,IAAsB,sCAAoF,CAsB1G,mDACA,aAtBA,IAAsB,sCAAuF,CAsB7G,sDACA,UACA,sBAAoC,uCAA4O,aAChR,SACA,aACA,WACA,eACA,CACA,EACA,CAEA,MAKO,IACP,QAH6B,EAI7B,UAHA,OADgD,KAChD,SAIA,EAGO,OAAwB,qBAAkB,EACjD,YACA,KAAc,EAAS,SACvB,SADuB,eAEvB,uBAEA,cACA,YACA,YACK,CACL,UACA,aACA,CACA,CAAC,yBC7CD,iCACA,gCAJA,CAEA,CAEA,EAWA,iCACA,yBACA,sCACA,8DACA,kCAEA,iCACA,sDACA,QACI,SAA8B,EAClC,wBACA,2BACA,yBACA,gBAAyB,QAAqB,EAC9C,wBACA,CAAS,CACT,CAAK,EAEL,OAAe,SAAS,KvEvCI,gUAAgT,EAC5U,gBACA,GACA,MACA,gBACA,wBACA,+BACA,WACA,6BACA,yBACA,EAmEA,MAlEuB,GAAS,CAChC,MACA,GAFgC,EAEhC,EACA,eACA,iBACA,OACA,WAAkC,OAA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QACA,eAEA,qBACA,gBACA,sBACA,KAEA,eADA,KAEA,yBAAiC,UAAa,CAG9C,CACA,oBACA,sCACA,CAIA,WACA,yBAEA,UACA,2CACA,0BACA,CACA,aACA,MACA,+BACA,aACA,yBAEA,8DACA,6CACA,CACA,OACA,0BACA,CACA,UACA,+CACA,eAMA,OALA,cAAoB,UAAa,EACjC,kBACA,SACA,yCAA4E,IAE5E,KAKA,UACA,mBACA,qDAKA,OAJA,kBACA,SACA,yCAA0E,IAE1E,CACA,CAIA,QAEA,OADA,6CACA,KAKA,8CACA,wBAA6B,iDAAiD,EAE9E,WACA,2CAAoD,OAAO,GAAG,4BAA4B,WAAW,EACrG,CACA,EAGA,QACA,mBAGA,KADA,sBAEA,gBACA,+FAEA,aADA,mBA3IA,YACA,MACA,SACA,IAEA,EACA,EACA,EACA,EACA,EANA,KACA,IAMA,aACA,yCACA,KAEA,kBAMA,kBAGA,IAFA,IACA,KACA,KAEA,SADA,gBACA,CAKA,IAJA,IACA,KACA,IACA,IACA,YAZA,MADA,iBACA,EAAkC,IAAlC,GAAkC,SAalC,IAEA,gCACA,KACA,IACA,yBACA,KAEA,KAEA,EAAQ,IACR,KAGA,mBACA,+BAEA,CACA,QACA,EAyFA,GACA,CACA,WACA,GACA,0BACA,CACA,CAIA,UACA,2CACA,0BACA,CAIA,aACA,MACA,wCACA,aACA,SAEA,8DACA,8BACA,CACA,OACA,0BACA,CAIA,UACA,sDACA,eAGA,OAFA,iBAyBA,GAAoC,iBAAqB,EAUzD,MATA,4BACA,gCAEA,UACA,8CAEA,kCACA,aAEA,CACA,EApCA,MAAoC,eAAwB,GAC5D,SAiBA,KAEA,cADA,uBACA,IACA,WACA,wBACA,CACA,EAvBA,iBACA,KAKA,aACA,0EACA,sBAAsB,+CAAqE,CAC3F,CACA,8CACA,yBAA8B,iDAAiD,EAE/E,WACA,gDAAmE,EACnE,CACA,kBCpTA,MAAM,aAAa,OAAO,cAAc,sCAAsC,SAAW,EAAE,oBAAoB,aAAe,SAAe,SAAe,YAAkB,iCAAiC,EAAiB,eAAe,qBAAqB,uBAAoB,uBAA8B,eAAsB,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KACA,iBACA,CACA,gBACA,iBACA,OACA,aACA,0BACA,aACA,iBACA,uBACA,KACA,WACA,iBAEA,CACA,gBAEA,OADA,OACA,EACA,CACA,cACA,GACA,KACA,yCACA,OACA,IACA,CACA,sBACA,cACA,kBACA,CACA,cACA,kBACA,CACA,gBACA,2BACA,WACA,SACA,CACA,oBACA,kCACA,SACA,iZAEA,IAAgC,CAChC,KACA,oBACA,gBAEA,cACA,UACA,SACA,QACA,IACA,CACA,cACA,i7BACA,MAGA,WACA,mCACA,kBACA,2BACA,8BACA,iCACA,2CACA,6BACA,mCACA,2BACA,yBACA,yBACA,6CACA,4DACA,iCACA,qCACA,yCACA,yCACA,+BACA,yBACA,6BACA,iCACA,6BACA,yBACA,sCACA,+BACA,2BACA,+BACA,6BACA,2BACA,8DACA,0DACA,4BACA,kCACA,qCACA,mCACA,mCACA,2BACA,2BACA,+BACA,yCACA,2CACA,6BACA,wBACA,mCACA,uCACA,qCACA,2BACA,+BACA,mDACA,qDACA,uCACA,yCACA,mCACA,qCACA,yCACA,mCACA,+BACA,6BACA,qCACA,mCACA,uCACA,2CACA,6CACA,+BACA,iCACA,8BACA,+BACA,yBACA,iCACA,mCACA,iCACA,0BACA,gCACA,gCACA,+BACA,+BACA,6BACA,uBACA,EACA,YACA,cACA,GACA,qBACA,oBACA,mBAEA,WACA,OACA,gBACA,MACA,IACA,EADA,KAEA,IACA,cAA8B,WAAqB,KACnD,wBACA,QACA,SAAyB,EACzB,KACA,SACA,QAAwB,EACxB,KACA,SACA,SAAyB,EACzB,KACA,SACA,OAAuB,EACvB,KACA,SACA,OAAuB,EACvB,KACA,SACA,QACA,CACA,yBACA,MACA,IACA,CACA,wBACA,CACA,QACA,CACA,iBACA,SACA,EACA,2HACA,cACA,oBACA,8FACA,CACA,CACA,MACA,kEACA,EACA,+DACA,IACA,WACA,UACA,YACA,WACA,CAAG,CACH,SACA,GACA,OACA,OACA,EAqyEA,YACA,WACA,MACA,IAMA,IANA,mBACA,gBACA,wBACA,mCACA,uBAIA,GAHA,eAIA,wBAGA,GACA,IACA,eACA,GACA,IAEA,IAAkB,kBAPlB,EAQA,sCACA,EACA,sBACA,qCACA,kBACA,SACA,CAAmC,0BAAiC,EACpE,uBAEA,MAEA,EAAI,WACJ,EAt0EA,EAu0EA,cACA,WACA,MACA,uBACA,gBACA,0BACA,IASA,IATA,EACA,sBACA,cACA,mBACA,YACA,UACA,0CACA,8BAIA,GACA,CAJA,cAIA,yBAEA,EACA,IACA,eACA,GACA,IAEA,IAAgB,gBAChB,oBAKA,OAAkC,eAJlC,eACA,GACA,IAEkC,KAGlC,IADA,EAEA,sCAEA,EACA,6BACA,qCACA,kBACA,CACA,GADA,KACA,CACA,iBACA,OACA,aACA,CAAa,EACb,uBAEA,KACA,CACA,EAAI,aACJ,EA33EA,EA43EA,gBACA,WACA,MACA,uBACA,gBACA,SACA,UACA,YACA,KACA,IAUA,EAVA,gBACA,eACA,kBAEA,QACA,eACA,EACA,4CACA,wBACA,eAGA,uBACA,YACA,aACA,sCACA,sBACA,qBACA,4BACA,wBACA,SAGA,EACA,CAAoB,mCAA2D,CAC/E,IAGA,WACA,2BACA,uBACA,6BACA,KACA,aACA,6CAEA,GADA,KAGA,GAAqB,0BAAoC,KAEzD,oBACA,GACA,iCACA,8BAEA,4BADA,GAEA,gCACA,sBACA,KACA,cACA,8CACA,KACA,4BACA,sBACA,GACA,EACA,GAAqB,0BAAoC,KAEzD,qBACA,GACA,iCACA,8BAEA,4BADA,GAEA,KACA,SACA,wCACA,IACA,0BACA,kBAEA,YAEA,IAA6B,CAC7B,yBACA,QAEA,eACA,uBACA,YACA,aACA,uCAEA,qBACA,gBACA,uBACA,oBAKA,GAFA,KACA,KAA+B,0BAAoC,KADnE,SAGA,GAGA,sBAGA,qBAEA,CACA,KACA,CACA,EAAI,eACJ,EA5+EA,EA6+EA,cACA,WACA,MACA,uBACA,gBACA,MACA,MACA,uCACA,GACA,WADA,GAEA,oDACA,KACA,2BACA,GACA,iCACA,8BAEA,4BADA,GAEA,uCAGA,+CACA,4BACA,6BACA,EAAY,IACZ,IAA2B,CAC3B,8BACA,KACA,QAEA,QAAgC,2BAAkC,KAClE,sBACA,KACA,CACA,EAAI,aACJ,EA/gFA,EAwjFA,cACA,WACA,MACA,uBACA,gBACA,MACA,0CACA,qBACA,MACA,WACA,2BACA,KAA4B,eAAqB,IACjD,GACA,eACA,QACA,8BACA,aACA,KACA,iBACA,QACA,MACA,CACA,EAAI,aACJ,EA9kFA,EA+gFA,gBACA,WACA,MACA,uBACA,gBACA,MACA,eACA,sBACA,qCACA,oBACA,MACA,WACA,0BACA,GACA,IACA,mBACA,SACA,SACA,cACA,CAAW,CACX,mBACA,GACA,QACA,QACA,CAAc,4CAA8D,CAC5E,EAEA,CAAS,CACT,GACA,eACA,cACA,mCACA,WACA,WACA,WACA,kBACA,MACA,CACA,EAAI,eACJ,EArjFA,EA8kFA,cACA,WACA,MACA,uBACA,gBACA,MACA,6CACA,GAEA,2BACA,MACA,WACA,iCACA,KAA4B,6BAAqC,IACjE,GACA,eACA,QACA,oCACA,aACA,KACA,iBACA,QACA,MACA,CACA,EAAI,aACJ,CAtmFA,EACA,UACA,mBACA,qBACA,kBACA,sBACA,oCACA,kBACA,sBACA,wBACA,6BACA,yBACA,qBACA,0CACA,CACA,SACA,6BAEA,kBACA,YACA,EACA,EACA,EACA,EACA,EACA,GAEA,MACA,WACA,GACA,EACA,6BAEA,aACA,KACA,+BACA,qBACA,qBAkEA,GAjEA,YACA,OACA,EACA,EACA,uBAEA,IAEA,KACA,YACA,YACA,OACA,EACA,wCAGA,YACA,IACA,CACA,eACA,gBACA,qBACA,kBACA,4BACA,EACA,KACA,GACA,4BACA,wBACA,yBACA,oBACA,gBACA,gBACA,2BACA,kBACA,kBACA,YACA,UACA,QACA,OAAc,CACd,MAAa,CACb,SAAiB,UAAW,aAAe,gBAAmB,CAC9D,QAAe,CACf,QACA,CAAK,CACL,iBACA,kBACA,mBACA,oBACA,qBACA,0BACA,eACA,yBACA,gBACA,qBACA,UACA,eACA,oBACA,gBACA,qBACA,CAAK,CACL,QACA,oBACA,gBACA,EACA,WACA,QAAwB,WAAqC,KAC7D,WACA,WACA,GACA,cACA,YACA,oBACA,OACA,EACA,mBACA,WACA,gBACA,cACA,6BACA,YACA,OACA,gBACA,wCACA,OACA,kCACA,kBACA,IAEA,OACA,CAFA,MAEA,wBACA,gCAEA,GADA,KACA,GACA,0BACA,OACA,GACA,SAEA,GACA,OACA,GACA,SAEA,oBACA,OACA,GACA,SAEA,oBACA,OACA,GACA,SAEA,UACA,CACA,cACA,IACA,IACA,WACA,IAEA,OACA,WACA,GACA,oBACA,oBACA,OACA,CAAS,CACT,mBACA,WACA,gBACA,cACA,6BACA,YACA,OACA,gBACA,oBACA,oBACA,OACA,kCACA,kBACA,IACA,IACA,IACA,0BACA,gCAEA,GADA,KACA,GACA,0BACA,OACA,GACA,SAEA,GACA,OACA,GACA,SAEA,oBACA,OACA,GACA,SAEA,oBACA,OACA,GACA,SAEA,WACA,QACA,CACA,YACA,EACA,EACA,EACA,EACA,GAEA,OACA,yBACA,aACA,kBACA,yBACA,mBACA,mBACA,eACA,WACA,WACA,mBAAwB,CACxB,eAAoB,CACpB,kBAAwB,UAAW,aAAe,gBAAmB,CACrE,iBAAsB,CACtB,iBAAsB,CACtB,kBAAuB,CACvB,yBAA8B,CAC9B,wBACA,CACA,CACA,mBACA,OACA,gBACA,gBACA,UACA,CACA,CACA,eACA,UACA,iCACA,EACA,yCACA,EACA,EACA,KACA,EAEA,CACA,mBACA,UACA,eACA,8BACA,cACA,UACA,EACA,qCACA,WAEA,WACA,4BACA,eACA,8BACA,YACA,4BACA,qBACA,4BACA,aACA,4BACA,aACA,YACA,YACA,4BACA,gBACA,4BACA,UACA,4BACA,CACA,0BACA,sBACA,oBACA,WACA,sBACA,sBACA,oBACA,sBACA,CACA,CACA,qBACA,2BACA,UACA,cACA,gBACA,GACA,CACA,eACA,iBACA,UACA,OAA8C,GAC9C,iBACA,sBACA,YACA,wGAA8G,8BAA8B,kBAE5I,IACA,EADA,KAEA,WACA,gBACA,WACA,GACA,SACA,qBACA,OACA,CACA,wBACA,cACA,IACA,iBAEA,EAAU,IACV,KACA,IADA,eAEA,KACA,EACA,EACA,iBACA,cACA,oBAGA,aACA,EACA,mBACA,gBACA,QACA,UACA,EACA,iBAEA,GACA,MACA,OACA,GACA,EACA,GACA,EACA,EACA,iBACA,CACA,CACA,aACA,CACA,cACA,WACA,UACA,YACA,mBACA,GACA,sBACA,oBACA,kBACA,CACA,mBACA,sBACA,oBACA,qBACA,OACA,GACA,KACA,GACA,QACA,GAEA,CACA,SACA,EACA,qEAGA,6BACA,iBACA,cACA,MACA,kBACA,mBACA,aACA,CACA,eACA,sBACA,YACA,kGAEA,CACA,iBACA,uCACA,qBACA,eACA,IACA,yBACA,MACA,mBACA,gBACA,CACA,QACA,CAAM,SACN,2DACA,OACA,CACA,CACA,WACA,CACA,YACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEA,WACA,yBACA,aACA,UACA,UACA,eACA,YACA,WACA,WACA,UACA,QACA,GACA,gBACA,GACA,GACA,IAEA,eACA,QACA,CAMA,OALA,wBACA,8BACA,+BACA,8BACA,8BACA,CACA,CACA,mBACA,UACA,gBACA,gBACA,KACA,gBACA,mBACA,KACA,WACA,WACA,cACA,YACA,aACA,UACA,KACA,aACA,QACA,KACA,WACA,WACA,eACA,cACA,iBACA,GACA,SACA,sBACA,oBACA,oBAEA,MACA,UACA,OACA,GACA,KACA,GACA,QACA,IAEA,KACA,oBACA,qBACA,gBACA,qCACA,+BACA,UACA,KACA,iBACA,eACA,YACA,wBACA,KACA,iBACA,GACA,sBACA,oBACA,oBAEA,MACA,UACA,OACA,GACA,gBACA,GACA,QACA,IAEA,KACA,uBACA,iBACA,gBACA,YACA,kBACA,gCACA,gBACA,oBACA,sBACA,oBACA,OACA,GACA,KACA,GACA,QACA,IAEA,KACA,aACA,sBACA,YACA,eACA,eACA,cACA,YACA,eACA,8BACA,4BACA,qBACA,aACA,WACA,eACA,iBACA,WACA,kBACA,eACA,eACA,eACA,aACA,eACA,gBACA,GACA,sBACA,oBACA,OACA,GACA,KACA,IAEA,KACA,eACA,eACA,OACA,OACA,GACA,KACA,IAEA,QACA,sBACA,oBACA,OACA,GACA,KACA,GACA,QACA,IAEA,KACA,YACA,WACA,WACA,WACA,sBACA,oBACA,WACA,MACA,OACA,GACA,KACA,GACA,QACA,IAEA,KACA,eACA,YACA,sBACA,oBACA,UACA,OACA,GACA,KACA,GACA,QACA,IAEA,KACA,oBACA,wBACA,KACA,oBACA,wBACA,KACA,iBACA,qBACA,KACA,iBACA,qBACA,KACA,kBACA,sBACA,KACA,iBACA,qBACA,KACA,eACA,mBACA,KACA,eACA,mBACA,KACA,gBACA,oBACA,KACA,SACA,GACA,gBACA,wBACA,yBAEA,kBACA,iBACA,eACA,aACA,MACA,eACA,iCACA,kCACA,CACA,OACA,GACA,KACA,GACA,QACA,GAEA,CACA,CACA,CACA,cACA,WACA,mBACA,YACA,WACA,YACA,sEAEA,uCACA,YACA,uDAA+D,YAAY,yFAG3E,OADA,cAGA,eACA,CACA,CAQA,yBACA,KACA,uCAA2C,wBAAwB,4CAA4C,MAAM,mCAAmC,sBAAsB,kVAAkV,EAAE,GAElgB,iBACA,wBACA,oBACA,0BACA,oBACA,GACA,GACA,CACA,CACA,sBACA,iBACA,iBAEA,aADA,mBACA,EACA,gBACA,WACA,WACA,UACA,eACA,8BACA,YACA,iGAEA,SACA,SACA,CACA,CAEA,OADA,WACA,IACA,CACA,4BACA,qBACA,sCACA,CACA,mBAEA,aADA,cACA,EACA,gBACA,WACA,WACA,UACA,eACA,8BACA,YACA,EACA,6FAEA,SACA,SACA,CACA,CAEA,OADA,WACA,IACA,CACA,iBACA,oBACA,IAEA,EAFA,OACA,OAEA,WACA,gBACA,WACA,WACA,UACA,eACA,IACA,KACA,+BACA,IACA,KACA,SACA,SACA,CACA,CAcA,OAbA,WAMA,kBALA,oBACA,WACA,KACA,KACA,IAEA,oBAEA,MADA,GAEA,mBACA,UACA,oBACA,IACA,CACA,iBACA,qBACA,IAEA,EAFA,OACA,OAEA,WACA,gBACA,WACA,WACA,UACA,eACA,IACA,KACA,+BACA,IACA,KACA,SACA,SACA,CACA,CAQA,OAPA,WACA,UACA,oBACA,OACA,0BAEA,qBACA,IACA,CACA,mBACA,cACA,IACA,EADA,SAEA,WACA,gBACA,WACA,WACA,UACA,eACA,IACA,KACA,+BACA,IACA,KACA,SACA,SACA,CACA,CAGA,OAFA,WACA,UACA,mBACA,uBACA,CACA,CACA,eACA,iCACA,WACA,eACA,gBACA,eACA,8CACA,WACA,WACA,CACA,QACA,CACA,4BAi/BA,WACA,eACA,gBAIA,OAHA,YACA,iBACA,aACA,CACA,CACA,iBACA,oBACA,YAAkB,aAA4B,IAC9C,UACA,qBACA,QACA,WACA,OAEA,CACA,2BACA,sBACA,iBACA,KACA,2BAEA,sBACA,GACA,eACA,kBACA,kBACA,GACA,OACA,GACA,kBACA,iBACA,kBACA,mBACA,OACA,kBACA,mBAEA,GADA,QACA,SACA,YACA,sEAIA,OAFA,sBACA,uBACA,OACA,CACA,6BACA,WACA,eACA,KACA,qDAEA,WACA,eACA,KACA,sDAEA,WACA,gBACA,2BACA,WACA,iBACA,kCACA,WACA,yBACA,+BACA,WACA,sBACA,KACA,gCAEA,WACA,4BAgFA,KACA,mBAAuB,6BAA6B,6BAA6B,gCAAgC,aAAa,2CAA2C,6BAA6B,QAEtM,cACA,YACA,oBACA,sCACA,kBACA,SACA,qBAAyB,6BAA6B,4BAA4B,iCAAiC,MAAM,oBAAoB,+CAA+C,KAAK,eAAe,gBAAgB,QAAQ,GAAG,sBAAsB,aAAa,2BAA2B,SAAS,qCAAqC,gBAAgB,iBAAiB,IAAI,SAAS,KAAK,aAAa,gCAAgC,WAAW,iCAAiC,QAEne,cACA,KACA,qBAAyB,6BAA6B,4BAA4B,iCAAiC,MAAM,oBAAoB,+CAA+C,KAAK,eAAe,gBAAgB,QAAQ,GAAG,sBAAsB,aAAa,2BAA2B,SAAS,qCAAqC,gBAAgB,iBAAiB,IAAI,SAAS,KAAK,aAAa,gCAAgC,WAAW,iCAAiC,YAAY,sBAAsB,cAAc,aAAa,IAAI,2HAA2H,SAAS,qIAAqI,IAAI,KAAK,QAAQ,UAAU,EAAE,MAAM,aAAa,OAAO,KAAK,IAAI,SAAS,aAAa,aAAa,eAAe,WAAW,KAAK,KAAK,0BAA0B,WAAW,mBAAmB,kCAAkC,SAAS,0BAA0B,iCAAiC,qBAAqB,sBAAsB,EAAE,WAAW,0BAA0B,yCAAyC,cAAc,KAAK,SAAS,YAAY,oCAAoC,2BAA2B,cAAc,aAAa,WAAW,uFAAuF,uFAAuF,QAExgD,KACA,aAAiB,sBAAsB,cAAc,aAAa,IAAI,2HAA2H,SAAS,qIAAqI,IAAI,KAAK,QAAQ,UAAU,EAAE,MAAM,aAAa,OAAO,KAAK,IAAI,SAAS,aAAa,aAAa,eAAe,WAAW,KAAK,KAAK,0BAA0B,WAAW,mBAAmB,kCAAkC,SAAS,0BAA0B,iCAAiC,qBAAqB,sBAAsB,EAAE,WAAW,0BAA0B,yCAAyC,cAAc,KAAK,SAAS,YAAY,oCAAoC,2BAA2B,cAAc,aAAa,WAAW,uFAAuF,uFAAuF,QAE1iC,cACA,YACA,WACA,UACA,mBACA,sCACA,sCACA,kBACA,kBACA,SACA,yBAA6B,iCAAiC,0IAA0I,QAExM,cACA,UACA,UACA,mBACA,sCACA,mBACA,kBACA,mBACA,oBACA,0BAoBA,wBACA,eACA,iCACA,GACA,YACA,UACA,QACA,eACA,SACA,eACA,SACA,eACA,cACA,eACA,cACA,eACA,SACA,YACA,mMAEA,CACA,EAEA,CACA,SACA,4CAEA,sBACA,WACA,iBACA,MACA,MACA,eACA,cACA,UACA,IACA,aAGA,IAFA,WACA,qBACA,WAAsD,aAAsB,IAC5E,wBAGA,IAFA,aACA,WACA,IAAgB,WAAkB,iBAClC,KACA,KACA,IAEA,MACA,WACA,UACA,CACA,CACA,eACA,oBACA,OAEA,CACA,mBAOA,OANA,MACA,MACA,uBACA,0BACA,IACA,qBACA,EACA,CACA,eACA,YAAkB,WAAqB,gBACvC,WACA,CACA,UACA,eACA,eACA,YAAkB,YAAoC,IACtD,aACA,aACA,SACA,CACA,SACA,4BAEA,sBACA,UACA,WACA,iBACA,eACA,sBACA,0BACA,iBACA,cACA,UACA,iBAIA,GAHA,WACA,qBACA,IACA,UACA,IACA,WACA,aACA,IAEA,wBACA,YACA,CAEA,IADA,WACA,IAAyB,WAA2B,IACpD,aACA,WACA,WACA,UACA,CACA,CACA,eACA,gBACA,UACA,cAYA,IAXA,OACA,cACA,WACA,kBACA,0BACA,8BACA,sBACA,cACA,oBACA,gCACK,EAEL,IACA,YACA,IAEA,aACA,YACA,CACA,CACA,eACA,0BACA,gBACA,CACA,cACA,WACA,UACA,UA8GA,cACA,OAAW,mCACX,CA0UA,iBACA,0CACA,qCACA,CACA,mBAUA,aADA,MARA,kBACA,GACA,GACA,EAKA,IAAwB,aAAa,MAJrC,kBACA,GACA,GACA,EACqC,IACrC,EACA,aAEA,gBADA,UAEA,IACA,GAAa,EACb,gBACA,KACA,eACA,GACA,IAEA,KACA,QACA,CACA,mBACA,eACA,UACA,QACA,WACA,SACA,WACA,UACA,WACA,UACA,WACA,SACA,YACA,sMAEA,CACA,CACA,YAAqD,SACrD,eACA,UACA,QACA,WACA,SACA,WACA,OAAW,EACX,WACA,SACA,WACA,UACA,WACA,UACA,WACA,SACA,YACA,wNAEA,CACA,CACA,eACA,kBACA,CACA,eACA,uBACA,CACA,+BACA,wCACA,iCACA,wCACA,eACA,uBACA,wBACA,uBACA,KACA,4BACA,+BACA,UACA,OACA,gBACA,QACA,cACA,QACA,gBACA,QACA,kBACA,QACA,gBACA,QACA,oBACA,CACA,sBACA,mBACA,OACA,4CACA,QACA,qDACA,QACA,eAKA,MAHA,CADA,kBAEA,CACA,OADA,8BACA,kCACA,CACA,QACA,OACA,+BAEA,EACA,kBAEA,QACA,aACA,UACA,IACA,eACA,CAAU,UACV,CACA,WACA,CACA,SAA2B,CAC3B,QACA,iBACA,UACA,sCACA,WACA,eACA,YACA,aACA,YACA,2EACA,KACM,CACN,YACA,YACA,4EAEA,OACA,CACA,gCAEA,CAiCA,eACA,QACA,QACA,UACA,SA/BA,KACA,sBACA,QACA,iCA4BA,GACA,SACA,SAtCA,KACA,sCAEA,OADA,cACA,IACA,EAkCA,GACA,kBACA,QACA,gBA/BA,gBAGA,GAFA,sCAEA,OADA,aAEA,YACA,0FAEA,mBACA,QACA,MACA,EAsBA,KArBA,gBACA,eACA,YACA,YACA,0FAEA,mBACA,QACA,OACA,iCAaA,KACA,KACA,CACA,QACA,qBACA,QACA,CAAK,CACL,8BAEA,QADA,qBACA,sBACA,CAAK,CACL,kCACA,sBACA,WACA,YACK,CACL,+BACA,CAAG,CACH,IAAuB,kBACvB,mBACA,WACA,aACA,iBACA,WACA,KACA,iBACA,SACA,YAOA,OANA,GACA,EACA,UACA,aACA,MACA,KACA,CACA,GACA,cACA,KACA,EACA,YACA,CACA,CACA,OACA,eACA,UACA,CACA,CACA,6BAGA,YAEA,UADA,SACA,oBACA,EALA,YACA,YAKA,SACA,iaAEA,eA0CA,YACA,cACA,aACA,YACA,gFAEA,SAEA,OADA,QACA,CACA,CAIA,8CAHA,cACA,2CACA,EAEA,QACA,QACA,QACA,QACA,QACA,QACA,MACA,MACA,KACA,KACA,MACA,KACA,QACA,QACA,KACA,cACA,aACA,YACA,ibAEA,SACA,CACA,cACA,QACA,mEACA,OAAW,wCACX,CACA,cAUA,OATA,UACA,UACA,OACA,YACA,cACA,eACA,OACA,iBACA,mBACA,EACA,CACA,cACA,SAEA,OADA,QACA,CACA,CACA,cACA,GACA,GACA,GACA,GACA,KACA,MACA,QACA,KACA,UACA,CACA,iBACA,iCACA,CACA,mBAGA,GAFA,QACA,QACA,IACA,eAEA,GADA,aAEA,WACA,uBACA,CACA,aACA,mBACA,kCACA,UAEA,OADA,mBACA,MAEA,2BAiBA,OAfA,EACA,OACA,qBACA,IACA,EACA,WACA,KACA,EACA,mBAEA,GADA,YAAyC,0BACzC,iBACA,KACA,GACA,GAEA,qBAEA,iBAIA,GAHA,QACA,QACA,oBACA,WACA,uBACA,uBACA,WACA,uBACA,CACA,YAAwB,uBAAwC,IAChE,mBACA,KACA,OACA,CACA,IACA,CACA,gBACA,CACA,CAGA,OAFA,MACA,uBACA,CACA,CACA,mBACA,UACA,YACA,wFAEA,WACA,GACA,MACA,GAA6B,mBAA4B,CACzD,wBAEA,SADA,cAGA,gBACA,CACA,QAA2B,eAAqB,QAChD,SACA,EACA,CACA,cACA,wEACA,CACA,cACA,8DACA,CACA,mBACA,KACA,WACA,KACA,uCACA,WACA,KACA,cACA,6BACA,mCACA,WACA,qBASA,IARA,GACA,WACA,MACA,IACA,EACA,2BACA,EACA,GAEA,MACA,OACA,CACA,qBA2BA,OA1BA,cACA,IACA,EACA,oCACA,6BACA,qBACA,YACA,mBACA,aAgBA,OAfA,GACA,WACA,GACA,WACA,MACA,IACA,EACA,gBACA,EACA,KACA,EACA,EACA,EACA,EACA,2BACA,CACA,EAAO,CACP,SAEA,qBACA,OACA,EACA,YACA,IACA,CAAK,CACL,GACA,CAEA,eACA,SAGA,OAFA,MACA,mBACA,SAxQA,OAKA,OAHA,SADA,SAEA,UACA,2BACA,UACA,gBACA,mBACA,WACA,uBAsBA,OApBA,0BACA,cACA,CACA,CADA,KACA,iBACA,OACA,YACA,yBACA,OACA,sBACA,SACA,CACA,CAAa,CACb,YACA,yBACA,OACA,qBACA,UACA,CACA,EACA,EACA,UACA,gBACA,mBACA,WACA,eAGA,MADA,KACA,EACA,CACA,EAgOA,OACA,CACA,cACA,iEACA,CACA,eACA,QACA,wBACA,uBACG,CACH,gBACA,iCACA,0CACA,yCAEA,kEACA,CAAG,CACH,uBAEA,OADA,KACA,gBACG,CACH,WACA,cACA,mBACA,QAEA,OADA,SACA,cACA,gBACA,IAA2B,UAAuB,CAClD,oBACA,CACA,CAAG,CACH,qBACA,eACA,CAAG,CACH,sBACA,mBACA,0BACA,qBACA,QACA,CAAK,GACL,CAAG,CACH,uBACA,aACA,iBACA,+BAEA,OADA,KACA,cACA,CAAG,CACH,yBAEA,OADA,KACA,QACG,CACH,iBACA,qBACA,aAEA,EACA,CACA,CAHA,QAIA,kBACA,eACA,SACA,YACA,YACA,2FAMA,OAJA,OACA,EACA,qBACA,6BACA,KACA,CAAG,CACH,qCACA,cACA,YACA,8GAEA,UACA,CAAG,CACH,2BACA,SACA,CAAG,CACH,yBACA,uBAAwC,IAAU,IAClD,OACA,QACA,CAAG,CACH,mCAEA,OADA,KACA,EACA,CAAG,CACH,0BAEA,OADA,KACA,OAEA,EACA,mBACA,qBACA,IAMA,GACA,GAPA,QACA,IACA,2BACA,+BACA,CACA,CAAG,CAGH,eACA,eACA,IACA,aACA,CAAM,SACN,2CACA,eACA,GACA,+BACA,iBACA,wBACA,eACA,EACA,CACA,kBACA,CACA,UACA,iBACA,mBACA,MACA,8BACA,+BACA,IACA,OACA,uCACA,IACA,MACA,iBACA,aACA,EAMA,GALA,2CACA,eACA,aACA,CACA,CAAa,EACb,6CACA,IACA,uBACA,CAAgB,SAChB,OACA,CACA,yBACA,EAAc,IACd,IACA,QACA,CAAgB,SAChB,GACA,CACA,mBACA,CACA,EAAY,IACZ,IACA,aACA,CAAc,SACd,GACA,CACA,SACA,4BACA,oBAAuC,CACvC,CACA,CAAU,SACV,kCACA,wBAEA,kBAEA,CACA,2CACA,8BACA,sCACA,8BACA,OAEA,IACA,gBACA,sBACA,8BACA,OACA,CAAU,sCAEV,sCACA,OACA,OACA,SACA,oBACA,gBACA,IACA,MACA,YACA,+CAGA,IACA,KAEA,YACA,eACA,gCAIA,IACA,GACA,cACA,aAEA,IACA,aACA,aACA,MACA,MACA,aAGA,IACA,KAEA,WACA,QAEA,gBACA,gBACA,GACA,GACA,IACA,IACA,KACA,OACA,KACA,CACA,MACA,KACA,gCAIA,OAHA,eACA,2BACA,2CACA,CACA,OACA,YAEA,KACA,CACA,CACA,EAAI,OACJ,+BACA,CACA,qCACA,MACA,EACA,CAwCA,eACA,GACA,oBACA,UACA,mCACA,CACA,wBAEA,gBADA,OACA,IACA,SACA,EACA,EACA,oCACA,qBAA+B,gEAAgE,eAAe,oCAAoC,oBAClJ,UACA,IAEA,SACA,EACA,EACA,+BACA,qBAA+B,gEAAgE,eAAe,oCAAoC,oBAClJ,UACA,IAEA,mBACA,+BAEA,EAAI,qBACJ,WACA,CACA,eACA,YACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEA,aACA,uBACA,uBACA,sBACA,mBACA,yBACA,0BACA,mBACA,eACA,qBACA,gEACA,+BACA,sBACA,oBACA,iCACA,4BACA,0BACA,2BACA,6BACA,gCACA,gCACA,kCACA,kCACA,kCACA,gCACA,CACA,YACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GA0CA,MA3BA,MAbA,SACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAIA,EACA,KACA,EACA,GACA,GACA,EACA,iBAiBA,GAhBA,KACA,EACA,KACA,EACA,GACA,KACA,EACA,KACA,iBACA,KACA,EACA,KACA,GACA,KACA,KAGA,sBACA,CACA,CAmCA,YACA,cACA,gBACA,OACA,oBACA,aACA,CACA,WACA,CACA,iBACA,sBACA,0BACA,uCACA,yCACA,aACA,YACA,CAAS,EACT,cACA,YACA,CAAS,IACT,CACA,iBACA,OACA,SACA,iBACA,iBACA,eACA,qBACA,WACA,yBACA,iBACA,kBACA,mBACA,2BACA,wBACA,CACA,CACA,YACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEA,oBACA,SACA,qBACA,iBACA,OACA,YACA,OACA,aACA,gBACA,cACA,CAAK,CACL,kBACA,iBACA,iBACA,WACA,UACA,gBACA,UACA,cACA,iBACA,gBACA,YACA,EAEA,OADA,SACA,CACA,CACA,YACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEA,oBACA,SACA,qBACA,iBACA,iBACA,OACA,SACA,OACA,aACA,gBACA,cACA,CAAK,CACL,kBACA,oBACA,iBACA,WACA,UACA,gBACA,UACA,cACA,iBACA,gBACA,YACA,EAEA,OADA,SACA,CACA,CACA,YACA,EACA,EACA,EACA,EACA,EACA,GAEA,OACA,SACA,MACA,QACA,iBACA,UACA,YACA,sBACA,WACA,iBACA,cACA,CACA,CACA,eACA,YACA,+BACA,aACA,GACA,mBAAgC,qCAEhC,CACA,eACA,SAwBA,OAvBA,GACA,0CACA,gBACA,cACA,eACA,IACA,SACA,IACA,GACA,YA1WA,KACA,mCACA,wBACA,iDACA,WACA,SACA,iCACA,mBACA,OACA,sBACA,QACA,oBACA,QACA,QACA,aACA,UACA,IACA,MACA,CAAU,SACV,iBACA,CACA,WACA,CACA,2BACA,OACA,QACA,GACA,yBAGA,CACA,UACA,OACA,yBACA,QACA,qBACA,CACA,QACA,EAoUA,QACA,iBACA,GACA,OACA,CAAU,SACV,EACA,oDAKA,OAHA,0CACA,OACA,CAAS,EACT,CACA,CACA,CAAK,EACL,CACA,CACA,mBAGA,SADA,GADA,cACA,OACA,2BACA,CACA,iBACA,qBACA,iBACA,KACA,KACA,qBACA,iCACA,4BACA,CACA,yBACA,sBAUA,IATA,qBACA,MACA,KACA,KACA,KACA,QACA,MACA,KACA,KACA,SAA8C,IAC9C,MACA,QACA,MACA,KACA,CAL4E,GAK5E,EACA,QACA,SAEA,OADA,KACA,CACA,CACA,YACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEA,SACA,8BACA,uBACA,aACA,KACA,WACA,YAAsB,IAAsB,IAC5C,MACA,WACA,UACA,CACA,CACA,YACA,YACA,EACA,iBACA,wBACA,aACA,iBACA,EACA,aACA,aACA,WACA,CACA,yBACA,yBACA,8CACA,QACA,aAEA,aADA,KACA,EACA,uBAEA,qBACA,KAEA,aADA,cAAmD,OACnD,EACA,eACA,YAEA,IACA,KAEA,gBADA,mBAEA,UACA,oBAEA,gBADA,cACA,mBAmBA,GAlBA,aACA,UACA,UACA,GAAuB,qBACvB,oBACA,gBACA,UACA,6BACA,gBACA,GAEA,kBADA,gCAEA,GAEA,MAFA,WAGA,EACA,IAAuB,MACvB,WAEA,+CACA,8CACA,iDACA,0CAEA,GACA,UACA,yCACA,uBACA,gDACA,8BACA,aACA,uBACA,EACA,QACA,MAEA,kCAEA,GACA,UACA,YACA,aACA,aACA,gBAEA,iBACA,CAGA,IAFA,iBACA,KACA,QAAoC,WAAmB,IACvD,MACA,GACA,kBAFA,SAGA,qBACA,IAEA,GACA,MACA,MAA+C,OAC/C,OACA,UACA,OACA,aAEA,GADA,aACA,yBACA,YACA,YACA,aACA,WACA,EAAM,IAEN,GADA,uBACA,yBACA,GACA,EACA,EACA,EACA,EACA,OACA,GACA,GAEA,OACA,uBACA,+BACA,aACA,kBACA,YACA,0BACA,YACA,aACA,kBACA,gBACA,CACA,WArkGA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEA,UACA,UACA,WACA,UACA,WAkCA,QACA,QACA,SA61BA,qBACA,oBACA,gBACA,oBACA,oBACA,uBACA,qBACA,oBAv4BA,KACA,SACA,gBACA,IAEA,EAFA,OACA,OAEA,WACA,gBACA,WACA,WACA,UACA,eACA,IACA,KACA,+BACA,IACA,KACA,YACA,OACA,gBACA,UACA,KACA,SACA,SACA,CACA,CAGA,GAFA,WACA,UACA,oBACA,gBACA,UACA,EAAQ,QACR,QAKA,cACA,qBACA,IAEA,EAFA,OACA,OAEA,WACA,gBACA,WACA,WACA,UACA,eACA,IACA,KACA,+BACA,IACA,KACA,oBACA,YACA,KACA,SACA,GACA,EACA,EACA,EAEA,CACA,CAGA,OAFA,WACA,UACA,CACA,cACA,sBACA,qBACA,IAIA,EAJA,OACA,OACA,OACA,OAEA,WACA,gBACA,WACA,WACA,UACA,eACA,IACA,KACA,gBACA,IACA,KACA,+BACA,IACA,KACA,aACA,GACA,SACA,GACA,EACA,EACA,EAEA,CACA,CACA,YACA,IA3RA,EACA,EA0RA,EACA,SACA,MA7RA,EA8RA,EA7RA,KACA,iCACA,eACA,CAAG,EACH,GA0RA,QACA,aAA0B,WAA0B,IACpD,gBACA,WACA,KACA,CACA,KAEA,UACA,UACA,EAAQ,kBAGR,OAFA,WACA,UACA,CACA,gBACA,uBACA,IAGA,EAHA,OACA,OACA,OAEA,WACA,gBACA,WACA,WACA,UACA,eACA,IACA,KACA,aACA,IACA,KACA,oBACA,IACA,KACA,+BACA,YACA,+DAEA,SACA,GACA,EACA,EACA,EAEA,CACA,CAKA,GAJA,UACA,UACA,MACA,WACA,SACA,WACA,YACA,uEAEA,SACA,cACA,2DACA,UAEA,MACA,CAQA,MAPA,oBACA,aACA,WACA,UACA,OACA,YAEA,IACA,aACA,oBACA,IASA,EATA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OAEA,WACA,gBACA,WACA,WACA,UACA,eACA,8BACA,YACA,kGAEA,YACA,IACA,KACA,kBACA,IACA,KACA,mBACA,IACA,KACA,kBACA,IACA,KACA,kBACA,IACA,KACA,sBACA,IACA,KACA,oBACA,IACA,KACA,eACA,IACA,KACA,aACA,IACA,KACA,SACA,GACA,EACA,EACA,EAEA,CACA,CACA,SACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAaA,OAXA,SACA,kBACA,UACA,kBACA,SACA,gBACA,UACA,gBACA,WACA,SACA,gBACA,IACA,cACA,qBACA,IAOA,GAPA,QACA,QACA,QACA,QACA,QACA,QACA,QAEA,YACA,iBACA,aACA,YACA,WACA,eACA,MACA,KACA,+BACA,MACA,KACA,YACA,MACA,KACA,kBACA,MACA,KACA,mBACA,MACA,KACA,kBACA,MACA,KACA,kBACA,MACA,KACA,SACA,GACA,EACA,GACA,GAEA,CACA,CACA,UACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,IAMA,GAJA,WACA,UACA,iBACA,YACA,qBACA,OACA,UAEA,WACA,EAAQ,UACR,SACA,YACA,mBACA,IAMA,GANA,QACA,QACA,QACA,QACA,QACA,QAEA,YACA,iBACA,aACA,YACA,WACA,eACA,MACA,KACA,+BACA,MACA,KACA,cACA,MACA,KACA,eACA,MACA,KACA,cACA,MACA,KACA,cACA,MACA,KACA,SACA,GACA,EACA,GACA,GAEA,CACA,CACA,YACA,QACA,0BACA,UACA,EACA,GAEA,WACA,kBACA,cACA,aACA,aACA,WACA,YACA,QACA,GACA,YACA,GACA,GACA,IAEA,GACA,GACA,GACA,GACA,KACA,QACA,CAiBA,GAhBA,UACA,kBACA,UACA,mBACA,UACA,kBACA,UACA,kBACA,WACA,WACA,YACA,gBACA,WACA,UACA,kBACA,YACA,qBACA,OACA,UAEA,WACA,EAAQ,UACR,SACA,gBAEA,cADA,uBACA,EACA,iBACA,aACA,YACA,WACA,eACA,8BACA,YACA,kEAEA,SACA,GACA,EACA,GACA,GAEA,CACA,CAEA,OADA,WACA,IACA,cACA,qBACA,IAEA,GAFA,QACA,QAEA,YACA,iBACA,aACA,YACA,WACA,eACA,MACA,KACA,+BACA,MACA,KACA,YACA,gBACA,iBACA,OACA,GACA,UACA,GACA,SACA,IAEA,KACA,SACA,GACA,EACA,GACA,GAEA,CACA,CAGA,GAFA,WACA,YACA,qBACA,OACA,UAEA,WACA,EAAQ,UACR,SACA,aACA,GACA,qBACA,cACA,iBAEA,UACA,EACA,QAGA,EACA,QACA,yBACA,WACA,SACA,YACA,aACA,UACA,gBACA,GACA,qBACA,cACA,kBACA,qBACA,qBACA,QACA,CACA,QACA,WACA,EAAQ,6BACR,GACA,qBACA,kBACA,UACA,UAEA,MACA,EACA,OAEA,CACA,wBACA,uCACA,qBACA,OACA,cACA,0BACA,IACA,KACA,oBACA,SACA,SACA,cACA,CAAe,CACf,qBACA,QACA,QACA,UAA8B,IAC9B,+BACA,eACA,CAAe,CACf,EACA,OACA,eACA,gBACA,qCACA,iBACA,YACA,UACA,CACA,qBACA,wBACA,EAAY,WACZ,wBACA,KACA,GACA,qBACA,CACA,cACA,OACA,OAEA,oBACA,MACA,EACA,GAEA,eACA,KACA,KACA,yBACA,SACA,cACA,eACA,GACA,wBACA,QACA,KACA,uBACA,qBACA,UACA,WACA,qBACA,cACA,iBAEA,UACA,EACA,OAEA,CACA,aACA,qBACA,+BACA,iCAEA,qBACA,sBACA,6BACA,OACA,OACA,cACA,YACA,SACA,OACA,eACA,UAAuC,IACvC,IACA,iBACA,kBACA,CACA,UACA,kBACA,SACA,CACA,cACA,OACA,CACA,SACA,aACA,oBACA,UACA,GACA,qBACA,cACA,kBACA,qBACA,qBACA,QACA,CACA,oBACA,IAEA,GAFA,QACA,QAEA,YACA,iBACA,aACA,YACA,WACA,eACA,MACA,KACA,+BACA,MACA,KACA,SACA,GACA,EACA,GACA,GAEA,CACA,CACA,WACA,yBACA,YACA,MACA,KACA,EACA,wBACA,qBAEA,MADA,IAEA,OACA,2BAEA,YACA,oBACA,WACA,EAAQ,IACR,wBACA,GACA,OACA,qCACA,qBACA,QACA,CACA,0BACA,GACA,cACA,UAEA,KACA,aACA,OAEA,SACA,iBACA,cACA,CAAe,CACf,qBACA,IAGA,GAHA,YACA,QACA,QAEA,YACA,iBACA,aACA,YACA,WACA,eACA,MACA,KACA,+BACA,KACA,CACA,CACA,yBACA,YACA,MACA,KACA,EACA,wBACA,qBAEA,MADA,IAEA,QACA,EACA,yBAGA,YACA,CACA,IACA,GACA,iBACA,cACA,SACA,CACA,SACA,YACA,GACA,qBACA,cACA,iBAEA,UACA,EACA,EACA,aAGA,cACA,KACA,KACA,2BACA,6BACA,oBACA,8BACA,+BACA,SACA,eACA,UACA,cACA,IAEA,GAFA,QACA,QAEA,YACA,iBACA,aACA,YACA,WACA,eACA,MACA,KACA,+BACA,MACA,KACA,SACA,GACA,EACA,GACA,GAEA,CACA,CAEA,GADA,WACA,UACA,YACA,YACA,sEAEA,GACA,qBACA,iBAEA,YACA,uDAAmE,YAAY,0FAE/E,uBACA,IAEA,gDACA,iBACA,iBACA,CAIA,MAHA,qBACA,cACA,WACA,EACA,WACA,aACA,YACA,GACA,CACA,qBACA,UACA,+BACA,gCAEA,yBACA,sBACA,sBACA,aACA,0BACA,0BACA,0BACA,2BACA,sBACA,aACA,0BACA,0BACA,0BACA,0BACA,CACA,+CACA,0BACA,qBACA,cACA,MAEA,2BACA,8BAEA,eACA,kCACU,GACV,qCACA,CACA,wBACA,IAQA,GARA,iBACA,GACA,oBACA,uBACA,GACA,GACA,OACA,aAEA,IACA,wBACA,2BACA,kCACA,mBACA,qBACA,mBACA,eACA,sBACA,cACA,YACA,8BACA,+BACW,EACX,wCACA,uBACA,mDACA,0BACA,UACA,CACA,cACA,WACA,kBACA,eACA,cACA,eACA,sBACA,YACA,8BACA,gCACe,EACf,0BACA,4BACA,4BACA,wBACA,eACA,CACA,CACA,oBACA,YACA,WACA,SACA,UACA,YACA,SACA,aACA,YACA,aACA,YACA,UACA,gBAUA,YACA,2CACA,gBACA,UACA,aACA,EACA,OAEA,EAAQ,IACR,MACA,EACA,EACA,QAEA,SACA,YACA,GACA,qBACA,oBACA,CACA,kBACA,UACA,aACA,EACA,OAEA,EAAQ,IACR,MACA,EACA,EACA,QAEA,SACA,SACA,wBACA,cACA,IAEA,GAFA,QACA,QAEA,YACA,iBACA,aACA,aACA,UACA,WACA,eACA,MACA,KACA,+BACA,MACA,KACA,aACA,SACA,KACA,sCACA,+BACA,UACA,KACA,iBACA,UACA,SACA,GACA,OACA,uBACA,qBACA,QACA,CACA,sBACA,gCACA,OACA,GACA,MACA,GACA,SACA,GAEA,CACA,CACA,CACA,CAGA,OAFA,WACA,YACA,EACA,CACA,CACA,gBACA,EAwlEA,SACA,EACA,EACA,iBACA,cACA,iBACA,gBACA,iBACA,cAEA,oBACA,kBACA,YACA,0BACA,YACA,aACA,kBACA,YACA,GAGA,OAFA,WACA,mBACA,GACA,YACA,YACA,aACA,WACA,WACA,SACA,UACA,YACA,SACA,UACA,YACA,aACA,WACA,WACA,YACA,aACA,YACA,UACA,OACA,YACA,uBACA,aACA,OACA,CACA,KACA,YACA,wBACA,aACA,OACA,CACA,CACA,aACA,CACA,mBACA,MACA,CACA,UACA,OACA,OACA,OACA,OACA,OACA,YACA,YACA,sBACA,YACA,MACA,QACA,mBACA,aACA,YACA,sBACA,aACA,MACA,QACA,YACA,YACA,sBACA,YACA,MACA,QACA,oEACA,QACA,sBACA,YACA,YACA,aACA,IACA,YACA,EAAY,OACZ,WACA,CACA,EAAU,IACV,YACA,wBACA,mBACA,mBACA,aACA,aACA,cACA,UACA,2BACA,4BACA,SACA,EACA,gBACA,EACA,gBACA,GACA,IAEA,mBACA,oBACA,SACA,EACA,EACA,KACA,gBACA,GACA,IAGA,GADA,mBACA,2BAEA,GADA,mCACA,kBACA,uCACA,wBACA,mBACA,YACA,WACA,IACA,aACA,kBACA,gBACA,kBACA,UACA,CAAc,SACd,MACA,2BACA,CAEA,EAAc,OACd,8BACA,CAiBA,GAhBA,KACA,EACA,KACA,EACA,GACA,EACA,EACA,eACA,WACA,EACA,gBACA,UACA,cACA,iBACA,eAGA,qBACA,EAAY,IACZ,oBACA,gCACA,mBACA,YACA,WACA,IACA,GACA,aACA,kBACA,gBACA,kBACA,WACA,QACA,iCACA,CACA,WACA,OACA,CACA,CAAc,SACd,WACA,cACA,YACA,gBACA,YACA,KAEA,KACA,EACA,EAHA,wBAMA,gBACA,OACA,EAAc,OACd,oBACA,mBACA,mBACA,WACA,CAiBA,GAhBA,KACA,EACA,KACA,EACA,GACA,EACA,EACA,gBACA,EACA,gCACA,gBACA,UACA,cACA,iBACA,KAGA,qBACA,CACA,CACA,MACA,CACA,gCACA,mBACA,OACA,aACA,aAAmD,GACnD,WACA,iBACA,IACA,KACA,EACA,EACA,EACA,SACA,EACA,GAEA,GACA,EACA,EACA,EACA,EACA,OACA,GACA,IAEA,MACA,QACA,qBACA,MACA,QACA,OAkBA,GAjBA,aACA,YACA,UACA,kBACA,kBAEA,MACA,OAFA,KAGA,2BACA,UACA,cACA,OACA,EACA,YACA,YACA,aAEA,OADA,OAEA,YACA,yEAEA,uCACA,cACA,YACA,YACA,MACA,QAEA,EADA,eACA,0BACA,YACA,YACA,aACA,YACA,MACA,QAGA,GADA,EADA,YACA,YACA,yBACA,gBACA,MACA,CACA,YACA,gIACA,yBAEA,CACA,CACA,uBACA,eACA,oBACA,KACA,EACA,EACA,KACA,gBACA,GACA,GAEA,QACA,mBACA,IACA,cACA,mBACA,YACA,WACA,SACA,yBACA,SACA,iBACA,4BACA,EAAI,OACJ,gCACA,CACA,CACA,qBACA,iDACA,2BACA,UACA,eACA,mBACA,MACA,QACA,mBACA,CACA,iBACA,aACA,eACA,aACA,uBACA,mBACA,OACA,aACA,QACA,UAEA,WADA,UACA,OACA,QACA,EACA,qBAEA,GADA,kBACA,gBACA,GACA,eAEA,QADA,UAC6B,WAA0B,KACvD,WACA,aACA,iBACA,sBACA,YACA,kCACA,KACA,2CACA,EACA,yEAEA,WACA,OACA,SACA,UACA,QACA,QACA,cACA,EACA,IAEA,GADA,gBAEA,2BACA,wBAEA,YACA,sIAEA,wBACA,CAAsB,SACtB,GACA,oBACA,UACA,SACA,2BAEA,MACA,yBACA,CAEA,yBACA,uBACA,oBAEA,OADA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EAEA,CACA,UACA,EAAoB,IACpB,SACA,YACA,kFACA,mBACA,yEAEA,GACA,SACA,OACA,OACA,OACA,EACA,uBACA,EACA,yBACA,gBACA,WACA,oBACA,mBACA,aACA,aACA,cACA,KACA,EACA,EAEA,oBACA,kBACA,oBACA,gCACA,YACA,UACA,QACA,QACA,cACA,EACA,IAEA,GADA,aAEA,2BACA,wBAEA,YACA,uIAGA,GADA,wBAEA,oBACA,aACA,CACA,WACA,8BACA,OACA,CACA,CAAwB,SACxB,WAEA,KACA,EACA,EAHA,wBAMA,gBACA,wBACA,gCACA,EAEA,EAAwB,OACxB,oBACA,mBACA,WACA,WACA,CAqBA,GApBA,KACA,EACA,KACA,CACA,QACA,QACA,cACA,CAAyB,CACzB,EACA,GACA,EACA,gBACA,EACA,gCACA,gBACA,UACA,cACA,iBACA,KAGA,qBACA,CACA,CACA,cACA,OACA,CACA,CACA,MACA,gBACA,MACA,QACA,YACA,uIAEA,QAGA,GADA,GADA,WACA,YACA,yBACA,YACA,MACA,CACA,SACA,YACA,MACA,CAOA,IALA,EADA,6BACA,KAIA,kBAHA,GACA,SACA,iBACA,SACA,eAEA,IADA,aACA,MACA,KACA,oCACA,SACA,WACA,CACA,MACA,CACA,6BACA,OACA,qBACA,gBAEA,kBACA,UACA,EACA,EACA,gBACA,EAGA,aACA,kDACA,qBAHA,sCAIA,mBAAiC,8BAAqC,EACtE,GACA,4EAEA,CACA,mBAEA,OADA,sBAEA,qBACA,SACA,EACA,cACA,iBACA,EACA,0CAEA,OADA,sBAEA,qBACA,SACA,KACA,cACA,iBACA,CACA,CACA,CACA,qBACA,gBACA,GACA,QACA,oCACA,iBACA,CACA,IACA,6BACA,WACA,IACA,CACA,WACA,aACA,OACA,OACA,UAAwB,gCACxB,IAEA,GADA,aACA,mDACA,YACA,sIAEA,wBACA,CAAU,SACV,GACA,oBACA,UACA,oCAEA,OACA,yBACA,uBACA,wBAEA,OADA,EACA,GACA,GACA,EACA,EACA,EACA,EANA,EAQA,EAEA,CACA,WACA,cACA,KACA,CACA,CACA,YACA,MACA,CAGA,GAFA,gBACA,WAEA,iBACA,8CACA,CACA,QAAyB,IAA0B,IACnD,OACA,wBAEA,gBADA,SAEA,eACA,aACA,WACA,iBACA,YACA,MACA,CACA,QAAc,IAAiB,IAC/B,OACA,wBACA,WACA,iBACA,WACA,CACA,iBAEA,OADA,wBAGA,OADA,6BAGA,SADA,yBAEA,8BACA,CACA,mBACA,UACA,EACA,EACA,SACA,OACA,aACA,kBACA,iBACA,WACA,UACA,gBACA,UACA,cACA,iBACA,aAEA,CACA,mBACA,uBACA,KACA,EACA,gBACA,KACA,gBACA,iBACA,IAIA,OAFA,mBACA,oBACA,GACA,EACA,EACA,OACA,aACA,kBACA,EACA,iBACA,WACA,UACA,gBACA,UACA,cACA,iBACA,aAEA,CACA,qBACA,sBACA,YACA,YACA,gBACA,mBACA,mBACA,YACA,IACA,kBACA,CAAM,SACN,GACA,KAKA,gBAJA,GACA,OACA,KACA,IACA,SACA,CACA,8BAEA,SADA,QACA,KACA,YACA,kBACA,YACA,YACA,gBACA,mBACA,MACA,MACA,CACA,mDAEA,SADA,QAEA,sBACA,kBACA,YACA,YACA,gBACA,mBACA,MACA,MACA,CACA,CACA,KACA,CACA,wBACA,kBACA,IACA,kBACA,CAAM,SACN,GACA,KACA,oBACA,kBAKA,gBAJA,GACA,OACA,KACA,IACA,SACA,CACA,8BAEA,SADA,QACA,KACA,YACA,kBACA,YACA,YACA,gBACA,mBACA,MACA,MACA,CACA,mDAEA,SADA,QAEA,sBACA,kBACA,YACA,YACA,gBACA,mBACA,MACA,MACA,CACA,CACA,CACA,CAMA,MALA,kBACA,YACA,YACA,gBACA,MACA,CACA,CACA,eACA,+BACA,sBACA,yBACA,CACA,YACA,EACA,EACA,EACA,EACA,EACA,GAEA,YAAkB,WAAkB,KACpC,WACA,gBACA,GACA,EACA,EACA,KACA,KACA,EACA,OAEA,CACA,OACA,IAEA,KAFA,EAEA,QACA,oBACA,kBACA,WACA,cALA,EAMA,iBAPA,EAQA,gCACA,CACA,CAEA,GADA,WACA,UACA,YACA,YACA,gFAOA,GALA,cACA,YACA,gBACA,iBACA,oCACA,8CAEA,CAiDA,iBACA,IACA,oBACA,cACA,MACA,gBACA,MACA,eACA,oBAOA,GANA,gBACA,cACA,mBACA,qBACA,cACA,wBACA,IACA,wBACA,WACA,OAEA,+BACA,WAEA,IACA,8BACA,WACA,+BACA,WACA,CACA,cACA,UACA,SACA,UACA,qBACA,0BACA,sBACA,cACA,YACA,8BACA,gCACA,cACiB,EACjB,wCACA,qBACA,aACA,KACA,kBACA,gCACA,6BACA,4BACA,QACA,OACA,CACA,CACA,KAAiC,OAAkB,GAAgB,CACnE,CACA,CACA,CAAI,SACJ,SAA0C,CAC1C,CACA,CACA,eACA,oCACA,kBACA,oBAEA,CACA,eACA,GACA,EACA,2BAEA,+BACA,mCAEA,kBAEA,CACA,iBACA,GACA,qBACA,uBACA,+BACA,sBACA,CACA,oBACA,UACA,mBACA,qBACA,EAAI,+BACJ,CACA,mBACA,aACA,8BACA,iCACA,YACA,8DAEA,yBACA,CACA,qBACA,6BACA,EAAI,IACJ,iBACA,cACA,oBACA,4BACA,UACA,iBACA,cACA,QACA,iBACA,8BACA,cACA,wCACA,mCACA,UACA,iBACA,cACA,SACA,gCACA,iBACA,6BACA,qBACA,4BACA,CACA,eACA,iCACA,SACA,KACA,QACA,UACA,OACA,SACA,KACA,SACA,oBACA,IACA,IACA,EADA,gBAEA,QAAkB,WAAwB,KAC1C,WACA,IACA,mBACA,aACA,QACA,8BACA,cACA,IAUA,GATA,gCACA,GACA,EACA,EACA,eACA,OACA,cAEA,QAEA,2BACA,wBAEA,YACA,sIAEA,yBACA,qBACA,4BACA,CAAc,SACd,KACA,MACA,OACA,KACA,EACA,GACA,oBACA,UACA,0BACA,CACA,aACA,YACA,oBACA,EAAgB,IAChB,wBACA,qBACA,2BACA,SACA,QACA,oBACA,EACA,cACA,aACA,EACA,iBACA,iBACA,KACA,EACA,EACA,GAEA,GACA,EACA,EACA,EACA,EACA,EACA,GAEA,qBACA,wBACA,MACA,oBACA,uBACA,KACA,CACA,EAAc,OACd,CACA,CACA,EAAU,OACV,SACA,IACA,aACA,CACA,WACA,cACA,wBACA,kBACA,IACA,QACA,kBACA,gBACA,kBACA,qBACA,WACA,yBACA,CAAY,SACZ,KACA,oBACA,kBACA,MACA,OACA,KACA,cACA,aACA,EACA,GACA,oBACA,UACA,0BACA,CACA,WACA,qBACA,aACA,WACA,EAAc,IACd,2BACA,qBACA,WACA,wBACA,KACA,EACA,EACA,GAEA,SACA,QACA,kBACA,cACA,YACA,gBACA,QACA,iBACA,gCACA,EACA,GACA,oBACA,4BACA,CACA,EAAY,OACZ,CACA,CACA,CACA,cACA,sBACA,mBACA,CAAM,SACN,SAAqD,EACrD,OACA,EAAM,OACN,KACA,MACA,MACA,cACA,IACA,CACA,CACA,CACA,qBAEA,OADA,mBACA,UACA,OACA,sBACA,QACA,OACA,OACA,oBACA,kBACA,gBACA,QACA,yBAEA,IADA,qBAEA,OAEA,QACA,WACA,SACA,WACA,IACA,aACA,YAA6B,WAA2B,KACxD,WAAoC,UAAoB,IACxD,UACA,aACA,CACA,KAAa,aAA8B,IAC3C,UAGA,OAFA,YACA,cACA,CACA,SACA,YACA,sGAEA,CACA,CACA,qBACA,iBACA,YACA,mBAEA,GADA,mBACA,aACA,gBACA,QACA,QACA,GACA,SACA,aACA,EACA,EACA,GACA,EACA,QACA,iBACA,gBACA,kDACA,8BACA,4BACA,GACA,EACA,cACA,iBAEA,GACA,qBACA,qBACA,sBACA,GACA,EACA,EACA,iBACA,qCACA,kCACA,8BACA,GACA,EACA,cACA,iBAEA,gBACA,CAOA,GANA,GACA,oBACA,qBACA,6BACA,QAEA,IADA,wBACA,OACA,YACA,+FAEA,cACA,CACA,cACA,CACA,qBAQA,OAPA,SAlzGA,SACA,wBACA,OACA,OACA,OACA,OACA,QACA,qBACA,uBACA,OAEA,QACA,OACA,QACA,qBACA,uBACA,OAEA,QACA,OACA,QACA,qBACA,uBACA,OAEA,QACA,OACA,QACA,qBACA,uBACA,OAEA,QACA,OACA,QACA,qBACA,uBACA,OAEA,QACA,OACA,QACA,qBACA,uBACA,OAEA,QACA,OACA,QACA,qBACA,uBACA,OAEA,SACA,8DACA,CACA,EA2vGA,EACA,cACA,sBACA,MAEA,YA/vGA,cACA,wBACA,OACA,OACA,OACA,cACA,QACA,cACA,QACA,cACA,QACA,cACA,QACA,cACA,QACA,cACA,QACA,cACA,SACA,8DACA,CACA,EA2uGA,wBACA,CACA,mBACA,IACA,IAliGA,EAEA,EAgiGA,0BACA,WACA,IAEA,GACA,EACA,EACA,EACA,KAEA,YACA,GACA,EACA,eACA,eAEA,mBACA,gBACA,kBACA,iBACA,sBA0BA,OAzBA,mBACA,yBACA,EACA,sBACA,oBACA,SACA,sBACA,mBACA,SACA,QACA,sBACA,mBACA,SACA,QACA,oBACA,sBACA,OACA,QACA,qBACA,OACA,EACA,SA5kGA,EA6kGA,EA5kGA,EA4kGA,EA5kGA,IACA,KACA,kCACA,gBACA,eACA,EAukGA,EAvkGA,GACA,EAskGA,EApkGA,EACA,sBAGA,EAgkGA,EAhkGA,IACA,SACA,CACA,EA6jGA,EA7jGA,GACA,iCACA,UAYA,aAVA,EAyjGA,EAvjGA,KAHA,sBAKA,OACA,EAojGA,EApjGA,IACA,EAmjGA,EAjjGA,UAEA,EACA,GACA,aACA,eAEA,UACA,WACA,UACA,iBACA,sBACA,KACA,gBACA,8BACA,YACA,iGAEA,SACA,UAaA,OACA,sBACA,iBACA,eACA,aACA,MACA,CACA,UACA,gBACA,8BACA,qCACA,+BACA,YACA,UACA,MACA,iBACA,UACA,OACA,KACA,cACA,iBACA,KACA,KACA,WACA,WAEA,KADA,SAEA,KACA,SACA,GACA,YACA,0BACA,0BACA,MAEA,OACA,MACA,CACA,QACA,EACA,EACA,UAEA,QACA,EACA,EACA,UAEA,EAi+FA,EA5hGA,EACA,EAEA,CACA,EAwhGA,EAxhGA,IACA,KACA,SACA,EACA,CAAG,EACH,EAmhGA,EAnhGA,GAmhGA,EACA,QACA,UACA,UACA,CACA,YACA,EACA,EACA,EACA,GAEA,yBACA,qBACA,OACA,WACA,+BACA,YACA,6EAEA,kBACA,QACA,oBACA,aACA,YACA,mBAEA,IADA,kBACA,mBACA,sBACA,mBACA,SACA,QACA,qBAEA,IADA,qBAEA,QACA,yBACA,OACA,UAEA,CACA,iBACA,uBACA,IACA,IACA,4BACA,MACA,yBACA,aACA,uBACA,IAGA,EAHA,gBACA,eACA,eAEA,MACA,QAA+B,WAAgC,IAC/D,UACA,KACA,QAAiC,WAAgC,IACjE,eAEA,gBACA,OACA,EAAU,SACV,QAA+B,WAAgC,IAC/D,UACA,sBACA,QAA6B,WAAmC,IAChE,SACA,YACA,4BACA,sBACA,uBACA,QAA6B,WAAoC,IACjE,SACA,YACA,6BACA,uBACA,kCACA,4BACA,uBACA,wBACA,QAA6B,WAAqC,IAClE,SACA,YACA,iCACA,wBACA,kBACA,6BACA,uBACA,wBACA,QAA6B,WAAqC,IAClE,SACA,YACA,GACA,UACA,gBACA,eACA,4BACA,mBACA,CACA,oBACA,IACA,uBACA,IACA,IACA,WACA,IAEA,SACA,YACA,4BACA,sBACA,6BACA,uBACA,4BACA,GACA,GAEA,4BACA,uBACA,wBACA,kBACA,6BACA,uBACA,wBACA,IACA,IACA,WACA,IAEA,SACA,YACA,iCACA,QAAkB,WAAqC,KACvD,IAv3GA,EAu3GA,OACA,IACA,uBACA,gBACA,kBACA,gBACA,EACA,EACA,qBAEA,sBACA,mBACA,SACA,QACA,sBACA,uBACA,QACA,GACA,GACA,EACA,IAEA,EACA,EACA,GA/4GA,EAg5GA,MA/4GA,0BACA,GACA,YACA,UACA,QACA,eACA,cACA,eACA,cACA,eACA,SACA,YACA,oMAEA,CACA,KAk4GA,EACA,QACA,EACA,IAEA,OACA,mBACA,IACA,cACA,MACA,CACA,CACA,cACA,4BACA,QAAkB,WAAgC,IAClD,GACA,cACA,CACA,mBACA,IACA,cACA,MACA,CACA,cACA,KACA,uBACA,IACA,0BACA,QAAkB,WAA8B,KAChD,WACA,GACA,IACA,IACA,0BACA,IACA,IACA,WACA,IAEA,GACA,IACA,EACA,EACA,EACA,MAEA,CACA,IACA,cACA,SACA,OACA,CACA,cACA,KACA,EACA,eACA,cAEA,CACA,OACA,mBACA,IACA,cACA,MACA,CACA,CACA,cACA,4BACA,QAAkB,WAA4B,IAC9C,kBACA,mBACA,IACA,cACA,MACA,CACA,aACA,CACA,EAAI,OACJ,uBACA,0BACA,uCACA,iCACA,qBAEA,CADA,oBACA,yBACA,2BACA,KACA,YACA,UACA,oBACA,IACA,CACA,CACA,eACA,sCACA,GACA,aACA,qBACA,CAAO,EACP,aACA,YACA,CAAO,EACP,cACA,6BACA,2BACA,IACA,OACA,EACA,GACA,GAEA,MACA,CAAG,GACH,CACA,eACA,4BACA,CACA,eACA,uBACA,0BACA,sBACA,qBACA,cACA,oBACA,EACA,QACA,mBACA,CAAK,IACL,CACA,iBACA,iBACA,mCACA,wCACA,gBACA,IACA,OACA,CAAM,SACN,SAA4C,SAC5C,CACA,CACA,CACA,iBACA,8CACA,IACA,uBACA,aACA,MACA,WACA,gEACA,oBACA,UACA,0BACA,8DACA,CACA,gBACA,sBACA,OA/yBA,kBACA,wBACA,mBACA,aACA,sBACA,WACA,CAEA,GADA,uBACA,SACA,kCAEA,UADA,aACA,CACA,UACA,QACA,MACA,CACA,iBACA,oBACA,kBACA,aACA,GACA,EACA,KACA,QACA,QACA,EACA,EACA,EACA,qBACA,6BACA,OAEA,iBACA,cACA,YACA,YACA,WACA,gBACA,QACA,iBACA,oCACA,6CACA,eACA,CAAO,EACP,gCACA,qBACA,4BACA,EAgwBA,MACA,CAAO,EACP,SACA,CACA,sBACA,mBACA,CAAI,SACJ,SAA6C,SAC7C,CACA,CACA,cACA,gBACA,qCACA,YACA,qIACA,EACA,yGAEA,CACA,KACA,KACA,WAAiB,eACjB,iCACA,IA9jEA,EAEA,EACA,EA4jEA,EADA,sBAEA,IACA,eACA,iBACA,CAAO,EACP,SACA,4BACA,uCACA,kCACA,4BACA,6BAEA,GA3kEA,EA4kEA,EA1kEA,EA4kEA,GACA,EACA,OACA,uCACA,qBACA,EACA,6BAjlEA,EAmlEA,4BA5jEA,CAdA,KACA,EAgkEA,EA9jEA,EACA,EAukEA,gCACA,mBACA,WAgBA,EAfA,CACA,2BACA,CACA,aACA,iBACA,OACA,CAAiB,CACjB,mBACA,mBACA,OACA,CACA,CAAe,CACf,CAAgB,iBAEhB,EAEA,CAAS,CACT,OACA,OACA,EACA,sBAtlEA,OACA,EACA,kBACA,mBACA,aACA,cACA,EACA,GAilEA,gBACA,eACA,gCACA,CACA,iBACA,eACA,gCACA,EACA,6BACA,CACA,CACA,KACA,CAAG,CACH,EACA,wBAA8B,eAC9B,iCACA,MACA,EAMA,EALA,4BACA,IACA,GACA,CAAO,EACP,sBAEA,IACA,eACA,iBACA,EAAO,CACP,SACA,4BACA,uCACA,kCACA,4BACA,6BAEA,KACA,EACA,EACA,GACA,EACA,iBACA,uCACA,qBACA,EACA,6BAEA,4BACA,gCACA,mBACA,EACA,WACA,yBACA,CACA,aACA,iBACA,OACA,CAAe,CACf,mBACA,mBACA,OACA,CACA,CAAa,CACb,CAAc,iBAEd,cACA,IACA,CAAS,CACT,YACA,oBAAuC,EACvC,IACA,CAAS,CACT,EACA,sBACA,sBAEA,gBACA,eACA,gCACA,CACA,iBACA,eACA,gCACA,EACA,6BACA,CACA,CACA,KACA,CAAG,CACH,EAGA,OACA,4CAIA,gDACA,wBACA,UAEA,UAAe,4DCpjMf,MAAY,EAAQ,IAA0B,EAC9C,WADmB,CACnB,EACA,oCACA,uBACA,+CACA,YAAoB,mBAAsB,IAC1C,8CACA,CACA,MACA,yBACA,EACA,GAAO,QACP,EACA,gHAEA,CACA,cACA,OACA,GACA,IACA,aACA,mBACA,CAAO,CACP,IACA,IACA,IACA,IACA,IACA,IACA,GACA,CAAK,CACL,IACA,gBACA,CAAG,CACH,6BAYA,EACA,kEACA,sBACA,cACA,mBACA,iCACA,CACA,8DAAoE,CACpE,EACA,cAAoB,eACpB,MACA,4DACA,GACA,IACA,gBACA,gBACA,gBAEA,oBACA,OA9BA,gBACA,MACA,4DACA,OACA,WACA,sBACA,WACA,gBACA,gBACA,CACA,EAoBA,WACA,EACA,WAAiB,aACjB,UACA,MACA,IACA,8BACA,EAAI,OACJ,MACA,MACA,OACA,CACA,EACA,YAAkB,eAClB,oBACA,CAEA,EAFA,EAGA,gBAFA,kBAGA,sBACA,EACA,GACA,OACA,KACA,WACA,EACA,aAAmB,aACnB,4BACA,EACA,SAAe,eACf,iDACA,WACA,qBACA,EACA,gDACA,EACA,iCACA,gBACA,MACA,aACA,MACA,EACA,kDACA,CACA,cACA,YACA,eACA,GAEA,cACA,SACA,cACA,YACA,gBACA,6CACA,CAAS,CACT,CACA,EACA,eAAqB,eACrB,uBACA,gCACA,iCACA,QACA,KACA,eAEA,SACA,cACA,UACA,gDACA,6CACA,CAAS,CACT,OACM,kBACN,EACA,SAAe,eACf,GACA,oBACA,oBACA,UACA,sBACA,CACA,WACA,qBACA,WACA,cACA,UACA,gDACA,8CACA,2CACA,cACA,iCACA,gBACA,OACA,eACA,kCACA,iBACA,OACA,YACA,oDACA,WACA,kDACA,6CACA,CAAK,CACL,CACA,EACA,eAAqB,eACrB,uBACA,MACA,4BACA,SACA,GACA,uCACA,KACA,OACA,cACA,UACA,+CACA,CAAO,CACP,EAAM,aACN,EACA,kBAAwB,aACxB,QACA,EACA,yBAA+B,eAC/B,WACA,EACA,cAAoB,iBACpB,8BACA,EACA,eAAqB,YACrB,oCACA,EACA,SAAe,4DChLf,SA/BA,IAEA,GACA,oDACA,2DAcA,IAEA,0CACA,CAAI,SAGJ,gBACA,CACA,IAME,iBAAyD,kCChC3D,CAOe,CALf,GAAM,EAAQ,KAA2C,EAK1C,QACf,EANa,EAMI,aACS,kDCA1B,IAAIiP,EAAWC,EAAQ,GAAW,EAChCC,EAAiB,CAAEC,OAAQ,CAAC,CADRF,EA2ClBG,EAAa,IAAI9H,IACrB,SAAS+H,EAAmBC,CAAE,EAC5B,IAAIlD,EAAUmD,WAAWC,gBAAgB,CAACF,SAC1C,YAAmB,OAAOlD,EAAQC,IAAI,EAAI,cAAgBD,EAAQqD,MAAM,CAC/D,CAAP,KACFrD,EAAQC,IAAI,CACV,SAAU5H,CAAK,EACb2H,EAAQqD,MAAM,CAAG,YACjBrD,EAAQ3H,KAAK,CAAGA,CAClB,EACA,SAAUiL,CAAM,EACdtD,EAAQqD,MAAM,CAAG,WACjBrD,EAAQsD,MAAM,CAAGA,CACnB,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AOrS,MAAM,MAClC,CACH,IAAIuS,EAAW,WACbH,EAAMC,EAAOrS,MAAM,EACnBqS,EAAOG,mBAAmB,CAAC,QAASD,EACtC,EACAF,EAAOI,gBAAgB,CAAC,QAASF,EACnC,CACF,CACF,EACF,+BCpwDE,iBAAoF,4BCQtF,+CACA,+BACA,kBACA,WAGA,GAFA,qBACA,6BACA,UAEA,aADA,KACA,EACA,4BACI,IAEJ,OACA,WACA,OACA,MACA,aALA,UAKA,OACA,OACA,CACA,CACA,UAAgB,GAChB,KAAW,GACX,MAAY,6BCtBZ,+CACA,6BACA,+BACA,kCACA,+BACA,+BACA,8BACA,kCACA,+BACA,2BACA,2BACA,kBAQA,GACA,qBACA,QACA,CAAK,CACL,+BAAsC,CACtC,gCAAuC,CACvC,4BACA,CAAG,CACH,gBACA,KACA,kBACA,aACA,eACA,YACA,iBACA,CAgBA,cAEA,kBACA,aACA,eACA,YACA,iBACA,CAtBA,gCACA,mCACA,GACA,oBACA,sBACA,QAEA,YACA,0GAEA,iDACA,EACA,oCACA,qDACA,EAEA,wBAOA,wBACA,gBACA,iBACA,0BACA,oBACA,GAA2B,4BAAoC,CAC/D,kCACA,0BAEA,OACA,WACA,OACA,MACA,aALA,UAKA,OACA,OACA,CACA,CAYA,cACA,MACA,oBACA,UACA,cAEA,CAUA,aACA,oBAVA,EACA,EAUA,iDAXA,EAYA,SAXA,GAAwB,mBAExB,IACA,8BACA,YACK,GAOL,cACA,CACA,cA8IA,kBACA,oBACA,SACA,IAIA,OApHA,sBACA,IAnEA,IA/DA,EAkIA,WACA,2CACA,SACA,sBAEA,UACA,aACA,aACA,aACA,KACA,KACA,cACA,mBACA,OACA,OACA,KACA,KACA,QACA,OACA,cAEA,YACA,EACA,EACA,EACA,EAGA,CACA,CACA,KACA,OACA,OACA,EACA,oBACA,KACA,MACA,SACA,GACA,wBACA,uBACA,QACA,EAAW,EACX,SACA,QA/GA,EAiHA,EAjHA,EAkHA,EACA,cACA,iBACA,GACA,mBACA,EACA,OACA,KACA,EAVA,EA/GA,EACA,OACA,EACA,KACA,OACA,OACA,OACA,UAoHA,WACA,EAEA,IACA,uBACA,QACA,YAAoB,WAAqB,IACzC,EACA,IADA,OACA,GACA,KACA,EACA,EACA,EACA,EACA,QAEA,wBA1MA,QADA,EA2MA,IA1MA,wBAIA,kBAHA,GACA,SACA,iBACA,MAsMA,EACA,IACA,gBACA,oBAGA,EACA,IADA,UACA,KACA,KACA,EACA,EACA,EACA,EACA,QAEA,iBACA,6BACA,SACA,SA5HA,GACA,iBACA,gBACA,mBACA,WACA,uBAEA,OACA,0BACA,YACA,oBACA,OACA,YACA,sBACA,sBACA,UACA,CAAe,CACf,YACA,sBACA,gCACA,EACA,EACA,UAEA,gBACA,mBACA,WACA,eAEA,CACA,OACA,EA6FA,GACA,EACA,EACA,EACA,EAGA,aACA,kDACA,qBAHA,cAIA,mBAA+B,8BAAyC,EACxE,GACA,4EAEA,CACA,QACA,EAKA,sBACA,sBACA,CAAG,EACH,CACA,CACA,cACA,mBACA,gBACA,QACA,KACA,YACA,iCACA,yBACA,CAAO,CACP,YACA,iCACA,yBACA,GAEA,yCACA,CACA,gDACA,UAEA,MACA,+BACA,YACA,YACA,GACA,yBACA,qCACA,CACA,qCACA,WACA,cACA,QACA,oBACA,UACA,2BACA,kBACA,UACA,OACA,CAAW,EACX,kCACA,CAOA,CAPU,OAOV,QACA,EACA,cACA,UAAgB,EAChB,MACA,wBACA,EACA,EACA,WACA,uBACA,CAAO,CACP,EAEA,CAAG,CACH,kBACA,QAIA,OAHA,eACA,GACA,CAAK,EACL,CACA,CAAG,CACH,oBACA,OACA,gBACA,QACA,CAAO,KAEP,CAAG,CACH,iBACA,SACA,YACA,yEAEA,QACA,CACA,EACA,WAAiB,GACjB,UAAgB,GAChB,UAAgB,GAChB,eAAqB,GACrB,YAAkB,GAClB,UAAgB,GAChB,iEAAuE,CACvE,EACA,KAAW,YACX,uEACA,EACA,OAAa,aACb,kBACA,8BACA,CACA,EACA,cAAoB,iBACpB,WACA,YACA,+DAEA,UAAuB,UACvB,QACA,SACA,WACA,oCACA,6BACA,EACA,aACA,WACA,cACA,gBACA,6BACA,YACA,yBACA,2BACA,QACA,uBAAkD,IAAc,IAChE,oBACA,YACA,CACA,yCACA,EACA,eAAqB,aAcrB,MAbA,IACA,WACA,gBACA,iBACA,eACA,cACA,aACA,GACA,WACA,YACA,WACA,UACA,EACA,CACA,EACA,eAAqB,iBACrB,MACA,IAAc,CACd,OACA,WACA,wCACA,aACA,WACA,cACA,gBACA,YACA,yBACA,2BACA,QACA,uBAAwD,IAAoB,IAC5E,oBACA,YACA,CACA,qBACA,0BACA,eACA,YACA,uCACA,EACA,WAAiB,YACjB,OAAW,aACX,EACA,YAAkB,aAClB,OAAW,oBACX,EACA,gBAAsB,GACtB,MAAY,aACZ,OACA,WACA,UAAgB,qBAA4B,CAC5C,OACA,CACA,EACA,MAAY,eACZ,OACA,WACA,OACA,yBACA,CACA,EACA,iBAAuB,aACvB,UACA,IACA,OACA,IACA,UACA,aACA,GACA,OACA,oBACA,UACA,2BACA,WACA,CAAI,SACJ,IACA,EAAI,OACJ,KACA,CACA,EACA,0BAAgC,YAChC,4BACA,EACA,KAAW,aACX,iBACA,EACA,gBAAsB,iBACtB,gCACA,EACA,aAAmB,eACnB,2BACA,EACA,YAAkB,aAClB,wBACA,EACA,eAAqB,cACrB,kBAAwB,eACxB,gCACA,EACA,WAAiB,eACjB,yBACA,EACA,OAAa,YACb,kBACA,EACA,qBAA2B,iBAC3B,qCACA,EACA,oBAA0B,eAC1B,kCACA,EACA,iBAAuB,eACvB,+BACA,EACA,SAAe,eACf,uBACA,EACA,eAAqB,eACrB,6BACA,EACA,YAAkB,iBAClB,4BACA,EACA,QAAc,aACd,oBACA,EACA,UAAgB,aAChB,sBACA,EACA,sBAA4B,UAC5B,EACA,EACA,GAEA,gCACA,EACA,EACA,EAEA,EACA,eAAqB,YACrB,0BACA,EACA,SAAe,2DCvhBb,iBAAqD,8BCArD,iBAAiE,WCHnE,MAAM,aAAa,OAAO,QAA8F,UAAtF,YAAuC,IAAtB,sBAAsB,GAAS,yBAAy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,OACA,EAAM,OASN,KAIM,qBAIN,GAAY,EAAmB,wCAErB,CACV,EAEA,mBAAmC,OAAU,yBAAyB,YAA6C,mDAAmD,MAA+C,mEAGrN,4LAEA,+CACA,MAEA,iBACA,mBACA,8EACA,sCAAuE,KACvE,8BACA,EACA,wBACA,IAKA,OACA,CAAkB,MAElB,CACA,OACA,YACA,oBACA,eAEA,iCACA,qBACA,CAAqB,CACrB,CACA,CACA,OACA,EACA,MA9CA,qEAgDA,8EACA,SACA,oBAAY,GAAqB,EAIjC,oCACA,MACA,MAAgC,QAAyB,QAGzD,KACA,OACA,YACA,gDACA,CAEA,CACA,IAyMA,OAxMA,aACA,WACA,CAAS,WACT,GAEmD,SAAgB,KACnE,WACA,gDAIA,gCAAwB,kDAA0E,EAElG,GADA,MACA,GAEA,iCACA,KACA,eACA,qBACA,CAAyB,MACH,CACtB,mBACA,yBAlGA,GACY,QAAI,IAoGhB,gBACA,UACA,CAEA,MACA,CACA,EAAkB,IAClB,IACA,SACA,CAAsB,SAItB,OAHA,UACA,iBAEA,CACA,gBACA,CACA,CACA,SACA,qBACA,QACA,SAAgC,WAAc,eAC9C,KACA,MAEA,8BACA,CACA,MACA,eA9XA,GACA,6BACA,eACA,iBACA,cAEA,QACA,EAuXA,GACA,eACA,qBACA,CAAyB,CACzB,EAAsB,IACtB,eACA,qBACA,CAAyB,CAEzB,CACA,EAAc,IAoGd,gDAWA,IACA,YACA,CAAc,SAId,OAHA,UACA,iBAEA,CACA,gBACA,CACA,CACA,wCACA,GACA,wBAEA,IACA,YACA,YACA,cACA,CAAiB,EACjB,eACA,gCAEA,oCACA,qBACA,CAAiB,EAEjB,CAAS,EACT,CACA,YACA,SACA,WACA,CACA,CAAM,SACN,GAAY,QAAe,KAC3B,MAAgC,QAAuB,IACvD,EAAiC,QAAwB,IAQzD,GAPA,YACA,YACA,cACA,CAAa,EAGb,aAA6B,IAAkB,UAC/C,EACA,OACA,YACA,kDACA,EAIA,kBAKA,MAJgB,QAAoB,sBACpC,iDAEA,0BACA,CACA,YACA,OAAwB,GAAY,eACpC,CACA,CAAU,GAAS,OAAe,KAMlC,GALA,iBACA,YACA,YACA,cACA,CAAa,EACb,GACA,wBACA,IAKA,OACA,CAAkB,MAElB,CACA,OACA,YACA,oBACA,cACA,eACA,qBACA,CAAqB,CACrB,CACA,CACA,OACA,gBACA,CACA,CACA,MAEA,iBACA,mBACA,8EACA,sCAAmE,KACnE,8BACA,EACA,wBACA,IAKA,OACA,CAAc,MAEd,CACA,OACA,YACA,oBACA,eAEA,oCACA,qBACA,CAAiB,CACjB,CACA,CACA,OACA,CACA,CAKA,iBACA,IACA,MAEA,MACA,wDAEA,gDACA,MACA,0EAEA,QACA,CAAM,SACN,6CAAyD,EAAS,8DAA8D,sCAA0C,UAAY,KAAO,EAC7L,CACA,gBChpBO,SAAS,KAChB,SACA,MACA,SACA,EACA,OACA,OANwC,oBAMxC,WAAsC,EAAU,GACf,SAAI,CAAC,4BAAyB,WAC/D,QACA,UACA,CAAa,EAEb,6BACA,aAAoF,SAAI,CAAC,UAAc,EACvG,YACA,CAAiB,+BAEjB,CACA,CCvBO,SAASE,GAAcC,CAAY,EACxC,OAAOA,EACJj2B,KAAK,CAAC,KACNC,GAAG,CAAC,GAAOwK,mBAAmByrB,IAC9B3pB,IAAI,CAAC,IACV,eCHO,+BACP,MACA,EACA,SACA,GACA,OACA,aACA,EACA,qEAA4L,IAC5L,SADyM,MACzM,CACA,6EAEA,MACA,SAAiC,EAAY,gBAC7C,oBACA,YAAuB,WAAkB,KACzC,SAA2B,EAAY,gBACvC,UACA,WACA,CACA,OAEA,YAA2B,WAAkC,KAC7C,UAAgB,OAChC,YACA,iBACA,cACA,OACA,CAAiB,CAEjB,CACA,EAAM,IACN,SAAiC,EAAY,gBAC7C,YAAuB,WAAkB,KACzC,SAA2B,EAAY,gBACvC,SACA,CACA,OAEA,YAA2B,WAAkC,IAC7C,UAAgB,OAChC,YACA,QACA,aACA,CAAiB,CAEjB,CACA,CACA,OACA,EACA,EACA,2BC7CO,uBAAqC,iFAAsF,EAClI,QAEA,KACA,WAC6B,SAAI,WACjC,KACS,SAET,wBAGA,SACA,kBACA,WAEA,GADA,IACgB,OAAe,IAC/B,OAAiD,SAAI,SACrD,cACA,iBACA,CAAiB,WAGe,CAHE,MAAsC,IAI1D,GAAS,QAAe,EAJmD,CAGzD,CACM,CACtC,MAAoC,QAAa,CAAC,QAAuB,OAEzE,GADmC,OAA8B,MACd,IAAkB,mBACrE,GACA,OAAqD,SAAI,SACzD,0BACA,oBACA,WAAoC,OAAqB,MAAM,EAAY,EACtD,WAErB,CACA,CACA,wBAA6D,UAAY,KAAwB,SAAI,SACrG,OACA,SACA,CAAa,oBAAqB,EAAM,IACxC,MAEA,4EACA,SAEA,YAA6B,6BAAsB,CAAe,UAAK,CAAC,UAAS,EACjF,UACA,SACA,EACA,SACA,EACA,CACS,GAGT,4BACA,CAAS,EAKT,OAJA,KAIe,QAAc,GAC7B,CACA,eCtEW,uBACX,MACA,+BACA,UACA,UACA,qBACA,6CACA,KACA,eACA,WACA,GACA,SAEA,UAIA,KACA,eACA,WACA,GACA,SAEA,UAIA,OACA,WACA,EACA,CACA,YACA,EACA,CAEA,CC/BW,mBACX,UACA,YAEA,+BACA,UACA,KACA,WACA,KAEA,aADA,KACA,GACA,WACA,SACA,iBAIA,OACA,IACA,EACA,QACM,cACN,GAEA,IAEA,CChCO,eACP,gBAA+B,EAAS,UACxC,KAGA,+BACA,CELO,yBAKP,EACA,EACA,EANA,WAAY,wBAA4B,KACxC,aACA,aACA,qBAAkF,IAAmB,CAiBrG,OAbA,GACA,eACA,WACA,QACM,GACN,eACA,SACA,QACM,IACN,eACA,SACA,QAEA,CACA,MACA,UACA,UACA,CACA,CCzBW,eACX,mBACA,CCHO,eACP,aACA,QAAY,GAAS,EACrB,MAAU,GAAO,EAGjB,MAAuB,IAAmB,iBAC1C,mDACA,OACA,OACA,UACA,UACA,mBACA,gBACA,CACA,CCdO,iBACP,SAWA,OAHA,2BACA,OAAiB,KAAwB,2BAA4B,EAErE,CACA,CCTO,mBAAiD,2DAAsD,EAC9G,IAAY,oBAAqC,GAAsB,iCACvE,kBACA,SAA4B,cAAgB,SAAS,GAAa,GAAO,EAAE,GAAmB,MAAY,EAQ1G,MAA6B,EARiE,CAQjE,MAAI,SACjC,iBACA,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UAAc,EAC9C,UACA,EACA,YACA,CACa,CApRb,KAqRA,GACA,GACA,CAcA,6DACA,OACA,GAC0B,UAAK,CAAC,UAAc,EAC9C,UACkC,SAAI,IACtC,4CACA,cACqB,EACrB,EACA,CACa,CAhTb,KAiTA,GACA,GACA,CAEA,OThVO,YACP,KS+U+C,CT/U/C,8BACA,wEACA,ES6U+C,IAK/C,WAGA,EACA,OACA,OACA,cACA,OACA,EAA4C,SAAI,IAChD,UAvMA,GAwMA,eACA,UACA,UACA,EACA,EACA,CACiB,CACjB,EAAc,IACd,EAA4C,SAAI,IAChD,UAjNA,GAkNA,eACA,SACA,CAAiB,MAEP,CAGV,cACA,SACA,EAAwC,SAAI,CA3N5C,GA2N4C,CAC5C,SACA,cACA,CAAa,CACb,CACA,OACA,GAC0B,UAAK,CAAC,UAAc,EAC9C,UACA,EACA,EACkC,SAAI,IACtC,SAAgD,SAAI,KACpD,OACA,CAAyB,CACzB,CAAqB,EACrB,CACa,CAxWb,KAyWA,GACA,GAEA,CAAM,KAGN,EADA,kDAEA,OACA,MACA,OACA,cACA,EAA8C,SAAI,IAClD,UAzPA,GA0PA,SACA,UACA,SACA,CAAiB,CACjB,EAAc,IACd,EAA8C,SAAI,IAClD,UAhQA,GAiQA,SACA,SACA,CAAiB,EAEjB,MAMA,OACA,OACA,SAAgD,UAAK,CAAC,UAAS,EAC/D,UACA,GAC8C,SAAI,MAAa,EAE/D,CAAyB,CACzB,EACA,EAAgE,SAAI,IACpE,UArRA,GAsRA,QACA,SACA,CAAqB,EACrB,EAAgD,UAAK,IACrD,SAAgD,UAAK,CAAC,UAAS,EAC/D,UACA,EACA,EACA,CACyB,EACzB,UACA,EACA,EACA,CACqB,CAharB,IAiaA,EAAkB,IAClB,EAAgD,UAAK,IACrD,UACA,EACA,EACA,CACqB,CAvarB,UA0aA,EAA4C,UAAK,CAAC,UAAc,EAChE,UACA,EACA,EACA,CACiB,CA/ajB,IAibA,EAAU,IACV,cACA,EAA8C,SAAI,CAvTlD,GAuTkD,CAClD,MACA,QACA,CAAa,EAOb,EANA,EAM4C,UAAK,IACjD,YAAuD,UAAK,CAAC,UAAS,EACtE,UACA,EAC0C,UAAK,CArU/C,GAqU+C,CAC/C,SACA,UACA,GACkD,SAAI,MAAa,EACnE,CAC6B,EAC7B,CACqB,SACrB,UACA,EACA,EACA,CACiB,CA9cjB,KAgd4C,UAAK,CAAC,UAAc,EAChE,UACA,EACA,EACA,CACiB,CArdjB,IAudA,CAEA,OACA,GACA,EACA,GACA,GACA,CAEA,CACA,yBAAgC,EAAO,EACvC,UAEA,yBACA,oBACM,wBACN,QAEA,IACA,CC3fW,qCAA+C,4NAAgO,EAC1R,IAAY,6BAAc,iBAAgC,iEAAiE,SAAqB,EAChJ,UACA,iBACA,QAAY,GAAS,EAIrB,EAHA,YAGA,GAGA,OAEA,OACA,EACA,mBACA,KACA,mBACM,EACN,EAA0B,QAA4B,sBAGtD,EACA,IACA,CAAK,QAAY,UACjB,cACA,iBAKA,wCAAmH,GAAyB,GAC5I,UACA,SAAuD,QAAsB,gBAC7E,EAA4B,EAC5B,cACA,EAEA,CACA,CACA,EACA,EACA,KACA,KACA,CACA,CAkBA,CA7BiE,CA+BjE,EACA,EAlBA,MAAmC,GACnC,CACA,MACA,SAHsD,SAGtD,EACA,aACA,eACA,YACA,cACA,aACA,0BAEA,qBACA,mBACA,kBACA,CAAa,EAMb,EACA,CACA,CAMA,0BACA,aACA,aACA,aACA,IACQ,GAAoB,oCACpB,GAAmB,QAE3B,QAF2B,CAI3B,gBACA,WACA,KACA,EACA,EACA,EACA,EACA,CAsBA,YArBA,WACA,MACA,qBACA,MACA,KACA,EACA,EAEA,qBACA,eACA,6BACA,oBACA,WACA,iBACA,cACA,aACA,0BACA,qBACA,mBACA,kBACA,EAAS,EAIT,OAA+B,IAAmB,yCAGlD,QACA,EACA,KACA,EACA,CAEA,CACA,QACA,CD2XA,eAA6B,KAAoB,gBE7f1C,iBACP,kBACA,yBAGA,qBADA,eAGA,SAAc,SAA0B,EAAE,EAAmB,EAAE,kBAAqB,CACpF,EAhBA,YAGA,mBAGA,kBACA,CAAC,UAAoC,ECFrC,mBACA,mBAIW,mBACX,gBACA,KACA,SAYA,MAFQ,oCAAwE,CAEhF,GAC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IACR,EAEA,OAAOvW,CACT,2BC3LW,SAAS,GAAkC,KAEtD,UAAkB,IAAc,uCAFsB,uCAoBtD,CAgOO,SACP,eACA,cACA,CACA,MACA,uBACA,6EAEA,yBAEA,OADA,kBACA,KAEA,UACA,uBACA,iFAEA,mBAEA,OADA,kBACA,CACA,CACA,CACO,qBACP,SACA,CAAY,WAAU,QACtB,gBACA,QACA,SAAgB,WAAc,eAC9B,KACA,iBAEA,SAEA,CACA,CACO,qBACP,SACA,gBACA,QACA,SAAgB,WAAc,eAC9B,KACA,MAEA,SAEA,CACA,gBACA,CACO,SACP,gBACA,uBACA,UAAsB,IAAc,aAAa,EAAW,qEAE5D,mBACA,CACA,iBACA,2BAEA,OADA,eACA,CACA,CACA,UACA,iBACA,CACA,eACA,cACA,CACA,oBAEA,UADA,yCAEA,CACA,2BAEA,UADA,iDAEA,CACA,WAEA,UADA,gCAEA,CACA,kBAEA,UADA,wCAEA,CACA,CACA,eACA,QACA,2BACA,cACA,YACA,iBAKA,CACA,CAAK,CACL,CACA,eACA,QACA,2BACA,cACA,WACA,kBAEA,SAEA,CACA,CAAK,CACL,CCnWO,SAAS,GAAyC,KACzD,MACA,4DAEA,IADA,YACA,0BACA,cACA,kBACA,SACA,qBAAiD,GAAO;AACxD;AACA,kBAAkB,EAAQ,EAC1B,wCACA,iBACA,MACA,CACA,MACM,oBACN,MAEA,MACA,uBAA+B,GAAO;AACtC;AACA,oBAAoB,EAAQ,GAC5B,MACA,CACA,uBAA2B,GAAO,0OAClC,gBAEA,eEvBW,OAAM,GACjB,cACA,OAF4B,GAE5B,GACA,uBACA,kBACA,oBACA,mBACA,CACA,sBACA,mBACA,oBACA,sBAEA,GADA,oBACA,gBACA,YAAmC,6BAAgC,IACnE,wBAEA,6BACA,CACA,CAAa,GAEb,mBACA,oBACA,gBAEA,GADA,oBACA,gBACA,YAAmC,wBAA2B,IAC9D,mBAEA,wBACA,CACA,CAAa,IAEb,CAIA,aACA,uBACA,4BACA,gBACA,0BAEA,CAAS,CACT,CAKA,aACA,uBACA,uBACA,gBACA,0BAEA,CAAS,CAC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AA6B,qDAAmE,EAChG,IACA,MAAqB,KAAS,CAAC,GAAe,QAa9C,EAAwB,EAbsB,CACrB,GAAwB,CACjD,YACA,KAUgD,GAZC,UAEjD,IACA,6BAGA,2BACA,cACA,uBACA,cACA,gBACK,GAEL,MAAyB,SAAI,CAAC,UAAS,EACvC,cACA,kCACA,gBACK,CACL,CACA,2CAiKA,EAkHA,MAvLA,EA3FA,iBACA,GACA,mBAMA,iBACA,CAAY,6GAAyG,EAGrH,mBACA,MAA6B,QAAyB,GAEtD,uCAMA,wCACA,wBAEA,OADA,MACA,CACA,CACA,CAmCA,SACA,0CAEA,4BACA,EAA4B,QAAqB,EACjD,uBACA,CAAK,EACD,SAA8B,EAClC,YACA,0BACA,wBACA,iBACA,CAAK,EACL,eAEA,IAAY,+BAAyC,EACrD,GACA,gGAEA,kBACA,8BAEA,GACA,MAEI,OAAoB,IACxB,IAAY,qFAAgF,EAM5F,sBAMA,mBACA,oBAAY,yBAA0C,EAEtD,EAA4B,OAA8B,mBAC1D,GACA,eACA,aACA,eACA,YACA,uBACA,oCAziBA,GACA,MAA6B,OAAe,IAC5C,MACA,YAEA,cACA,OAQA,GAPA,kBACA,EAyhBA,EAzhBA,aACU,iBACV,kCACU,oBACV,0BAEA,IACA,0BACA,+BACA,SACA,MAAyC,CAAiB,gBAG1D,EACA,CACA,QACA,WACA,OACA,aACA,EACA,GACA,EACA,EAaA,CACA,QACA,MAVA,eACA,SACA,YACA,MAAkC,SAAc,IAGhD,uBACiB,EAIjB,OAEA,aACA,EACA,YACA,EACA,CAEA,CACA,CACA,MAAqB,S1DzJV,GACX,WACA,C0DuJ6C,E1DvJ7C,GACA,0CAEA,QACA,E0DmJ6C,QAC7C,OACA,QAEA,QAEA,aACA,EACA,+BACA,EACA,CACA,MACA,CACA,EAqeA,QACA,aACA,WACA,mBACA,yBACA,oBACA,YACA,WACA,0BACA,cACA,iBACA,QACA,KACA,EAEA,GADI,QAAS,wCACb,GAGA,MAA6C,QAAS,QAAQ,IAAa,gBAC3E,kCAA+C,EAAS,EACxD,YACA,cACA,CACA,CAAS,KACT,uBAIA,oBAAsC,QA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E1D,YACA,OAGA,kBACA,YACA,aAA8B,QAAkB,IAChD,kBAAuC,GAGvC,4BAHsE,MAItE,sBACA,sBAA2C,GAAyB,CACpE,YACA,SAFoE,gBAEpE,EACA,wBACA,oBACA,iBACA,CAAqB,EACrB,4BACA,oBACA,CAAiB,EACjB,mBACA,0CAA2F,IAAc,CACzG,kCAAmF,IAAc,CACjG,gCAAiF,IAAc,CAC/F,kCACA,CACA,CAAU,SAKV,OACA,CACA,CACA,CACA,eACA,MACA,eACA,UACA,eACA,eACA,aACA,cAEA,YAA+B,YAA2B,IAC1D,OAEA,YACA,CAEA,CAAK,CACL,CACO,uBACP,MAKA,EACQ,iCAAwE,GAEhF,CACA,KACA,wBACA,8BACA,6BACA,oBACA,CACA,CAAS,CACT,CAAM,MAIN,CAIA,OADA,GAAsB,SAA6B,IACnD,gBACA,UACA,CAAK,CACL,CACA,wBAEA,EADA,IAAY,SAAW,mBAAsC,GAAiB,GAE9E,MACA,GAH8E,EAG9E,SAAiC,GAA+B,CAChE,MACA,cACA,OAHgE,MAGhE,KACA,oBACA,kBACA,CAAS,EACT,GACA,CACA,QACA,mEC11EA,yFACA,SACA,UACA,OACA,CACA,WAGA,CACA,MACA,OACA,CACA,OACA,OACA,CACA,YACA,OACA,CACA,eACA,QACA,CACA,CACA,mEACO,oBACP,EACA,MAEA,KACA,CACO,qBACP,EACA,UAEA,SACA,CACO,oBACP,EACA,aAEA,iBACA,cACA,CACA,yPCdA,yBAA2B,EAAK,kBACzB,cACP,OACA,yBACA,mBACA,6BACA,8BACA,CACA,CACO,aACP,OACA,uBACA,sBACA,sBACA,wBACA,iBAEA,CACO,cACP,MACA,0DA8CW,gBACX,MAA2B,GAAoB,YAC/C,6BACA,8BACA,CAMW,kBAEX,UAAoB,GAAkB,UAAU,SAAa,oDAAoD,EAAW,+EAI5H,OAHA,eACA,4BACA,4BACA,CACA,CAOW,gBACX,GACA,6CAMA,qDACA,gBAMA,CA4CW,oBACX,uBAaA,OAZA,GACA,qCACA,0BACA,8BACA,mBAGA,0BAIA,SArDA,OAEA,QADA,SAA4B,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C,GAAc,kBACxE,OAGA,UAAgC,IAAqB,QACrD,CACA,iBACS,CACT,mBACA,eACA,CAAS,CACT,qBACA,sBACA,eAzEA,KACA,UAAwB,IAAc,CAAC,GAAc,UACrD,OAAW,IAA4B,UACvC,EAsEA,2BACA,OACA,kBACA,CACA,wBACS,CACT,8BACA,+BACA,MAAgD,QAA0B,qBAC1E,4BACA,CACA,iCACS,CACT,gBAIA,OAHA,aACA,iBAAsC,EAAiB,uCAEvD,YACS,CACT,eACA,kEAEA,CACO,cAEP,UAAoB,IAAqB,MAAM,QAA+B,mBAC9E,qGChH4F,sBAC5F,MACA,WAIA,WACA,IACA,gBACA,EAAM,OAEN,eAiBA,KACA,iCACA,qCACA,OACA,uDACA,wHACA,sEACA,CACA,EAzBA,OACA,aACA,CACA,CACA,cACA,OACA,sCACA,kBACA,IACA,oBACA,wBACS,CACT,sDACA,0BACA,IAEA,CAUA,oCAA+C,iDAA8D,EAC7G,MACA,oBACA,0DACA,oBACA,EACA,CACA,wBCrCO,SACP,uBAAkB,0BAAiC,EACnD,4BACA,iBACA,eACA,mBACA,sBAAiC,MAAY,IAC7C,sBACA,CACA,SACA,GAAY,OAAU,IACtB,gBACA,IAEA,yDACU,wBAEV,yBAEA,2EAEA,CACA,eAKA,GAHA,gBACA,IAEA,cACA,UAAsB,GAAc,qDAEpC,MAA8B,GAAoB,YAClD,MACA,UAAsB,GAAc,sDAEpC,2BAEA,kCACA,2DACA,iDAOA,MAAgC,QAAY,WAC5C,IACA,SACA,CAAc,SACd,uBACA,CACA,CAAS,EACT,yBACA,CACA,4BAEA,OADA,sCACA,mBACA,CACA,qBACA,sCACA,iCACA,gBAEA,MAA0B,kBAAgB,YAC1C,MACA,UAAsB,GAAc,mDAEpC,OAAe,EAAsB,OACrC,aADqC,KACrC,SACA,6BAEA,CACA,mBAIA,GADA,iFACA,iBAEA,IACA,qDACA,CAAc,SACd,kBAAkC,GAAc,qFAChD,OACA,CAAiB,EACjB,CAEA,CACA,CACA,aACA,2HACA,eC/FO,eAAkC,6EAA6E,MAkBtH,OACA,mBAFA,8DAGA,OACA,sBACA,MAAe,OAAgB,IAC/B,iBAEA,kDACA,sCACA,4BACA,4BACA,wBACA,4CACA,0BACA,oBACA,oBACA,kBACA,kEAAqG,CACrG,+CACA,sBAMA,GACA,MAEA,IADA,yDAEA,OAEA,cAAY,gCAAuC,EACnD,WAAe,EAAY,CAC3B,SAD2B,CAC3B,EACA,UACA,aACA,CAAK,CACL,EAlBA,EACA,EAGA,OADA,UACA,YACA,mEClCW,UAAgC,EAYhC,IAZwD,EAYvB,EAMjC,IANyD,EAMvB,MAAwB,kDC3BrE,QACA,IACA,IACO,oBACP,2BAGA,CACA,iBACA,uBACA,QACA,MAEA,IAEA,OADA,KACA,4BACA,EAAc,OACd,sBACA,CACA,CAAS,CACT,mBACA,wBACA,IAEA,OADA,KACA,8BACA,EAAc,OACd,sBACA,CACA,CACA,EAxBA,cAyBA,CACO,eAAqD,EAC5D,oBACA,2BACA,2BACA,0BACA,EAMA,OALA,UACA,IACA,IACA,KAEA,CACA,6DC3CA,OACA,YACA,EAEA,qBAAqB,OAAW,CAAkB,OAAW,MAI7D,EAAuB,KAA6B,GAAG,CAAa,IAqBzD,EArBY,OAqBZ,KACX,sBAkBA,EAjBA,QAmBA,CACA,CAxCA,EACA,IACA,IACA,YACA,EAAM,OACN,cACA,CACA,CAAC,+BCbU,gBACX,0BACA,gCACA,gCAAqD,GAAY,sGAAsG,GAAY,gKACnL,CAAS,EACT,OACA,CAAS,CACT,CAAK,EAKL,OADA,WACA,CACA,CACA,4DCpBO,qBACP,uBACA,YAEA,eACA,cAGA,wECPA,OACA,iBACA,eACA,kCACA,sBACA,mBACI,UAAoB,CACxB,CACA,GACA,gBACA,CACO,cACP,eACA,YAGO,gBACP,yBACA,iBACA,eACA,yBAEA,KACA,eACA,yBAGA,uBACA,iFC3BO,OACP,WACA,MACA,OACA,QACA,CACO,cAEP,gEACA,CACO,cACP,UACA,0BAEA,GADA,6BACA,CACA,mBACA,KACA,CAEA,cACA,2CAAuD,EAAK,oFAI5D,OAFA,EAAwB,OAAgB,IAExC,GACA,UAGA,EADA,QACA,IAAuC,EAAiB,EAExD,QAEA,KACA,YAEA,WACA,2CAA+D,EAAK,+DAEpE,+CACA,KACA,aAEA,QACA,KACA,gBAEA,mBACA,eACA,2CAA+D,EAAK,kEAEpE,oCACA,KACA,SACA,2CACA,CACA,OACA,oBACA,kBACA,CACA,sEC5DO,kBACP,EACA,CACA,+BACA,gBAAmC,IAAa,sBAChD,kCAEA,YAA+B,IAAa,sBAC5C,mCAEA,qEACA,8EACA,wDAEA,OACA,WACA,qBACA,oBACA,gBACA,eANA,WAOA,CACA,CACO,cACP,6DClBA,EAeA,EAKA,EAOA,EAkCA,EAIA,EAQA,EAOA,EAIA,EAIA,EAIA,EAKA,iEAhGA,YACA,2CACA,uBACA,yBACA,2CACA,6BACA,6EACA,iDACA,yCACA,uCACA,2DACA,mDACA,kCACA,CAAC,UAAwC,EAEzC,YACA,yEACA,gDACA,CAAC,UAAgD,EAEjD,YACA,mDACA,mCACA,+DACA,0CACA,CAAC,UAAwC,EAEzC,YACA,2CACA,yCACA,2DACA,iEACA,+DACA,6DACA,iEACA,6DACA,iEACA,qDACA,6CACA,iCACA,iCACA,yCACA,iDACA,2CACA,uDACA,yDACA,mDACA,yEACA,uDACA,6CACA,2CACA,uDACA,uCACA,+CAEA,gBACA,0BACA,4BACA,+BACA,CAAC,UAAgD,EAGjD,CACC,SAA0C,EAD3C,sCAGA,YACA,iDACA,yCACA,yCACA,yCACA,4CACA,CAAC,UAAgC,EAEjC,YACA,4CACA,4DACA,0CACA,yBACA,CAAC,UAAsC,EAGvC,CACC,SAAgC,EADjC,mCAIA,CACC,SAA4B,EAD7B,6BAIA,CACC,SAA8D,EAD/D,8CAGA,YACA,sDACA,qDACA,CAAC,UAAkD,EAGnD,CACC,SAAwC,EADzC,6BAGO,OACP,qBACA,2BACA,4BACA,wBACA,kBACA,0BACA,wBACA,kBACA,mCACA,mCACA,mCACA,qCACA,oCACA,uCACA,+BACA,wCACA,CAGO,GACP,oCACA,qCACA,wCACA,kCClIA,uEAiBA,YAAQ,oEAAsE,EARpE,EAAQ,IAAoB,CAS/B,YATU,KASV,MACP,iBACA,QACA,cACA,aACA,CACA,CACO,oBACP,8BACA,cACA,CACA,cACA,eACA,kCAEA,GACA,qBAEA,aACA,aACA,iCACS,GAET,OACA,EACA,UACA,wCACA,IACA,UACA,GACA,WACA,QACA,MACA,OACA,CAAS,CACT,CACA,CACA,SAKA,oBACA,qCACA,CACA,aACA,QACA,CACA,0BACA,iBACA,KAEA,OADA,gBACA,CACA,CACA,qBACA,2CACA,CACA,6BACA,iBACA,uBAEA,WAEA,uBACA,kBACA,CACA,YACA,MACA,aAEA,IAAgB,aAAc,sBAC9B,KACA,UACA,EAAU,CACV,KACA,SACA,KAEA,EACA,gBACA,IAAa,IAAwB,8DACrC,WAGA,oFACA,KACA,EAGU,mDACV,QAHA,iCACA,MAIA,UAMA,OALA,cACA,mBACA,mBACA,iBAEA,4EACA,8FACA,OACA,YACA,6CAAiF,IAAgB,kBACjG,uBAA+C,yCAAyC,QAAQ,kEAAoF,GACpL,QACA,qBACA,CAAyB,CAEzB,EACA,GACA,+CAAuG,IAEvG,IACA,cACA,sBAEA,WACA,GAAwB,OAAU,IAElC,kBACA,QAGA,IACyB,UAEzB,MADA,OACA,CACA,CAAyB,aAKzB,OAHA,QACA,IAEA,CACA,CAAkB,SAGlB,MAFA,OACA,IACA,CACA,CACA,CAAa,EACb,CACA,WACA,WACA,wBACA,KACA,EAAc,CACd,KACA,QACA,EAAa,EAAwB,kDAGrC,WACA,OACA,6CACA,4BAEA,yBACA,eACA,wBAUA,+CAVA,EACA,wCACA,2BACA,yBAEA,OADA,cACA,uBACA,EACA,yBAEA,CAGA,CAHc,CAlBd,CAsBA,CACA,gBACA,WACA,gFACA,gDACA,CACA,kBAEA,OADA,gCAEA,CACA,wBACA,6BACA,eACA,CACA,0BACA,6BACA,WACA,GACA,UAEA,CACA,CACA,YACA,YACA,YACA,CAAC,+GClNM,cACP,wEAA+F,IAAmB,CAkF3G,wBACP,IAEA,IAAgB,uBAAqB,EACrC,eAGA,MAA2B,QAAqB,IAChD,WAxFA,KACA,SAGA,MAAsB,GAAe,CACrC,aACA,WACA,CACA,gBAGA,oBACA,iBACA,WACA,CAAK,EAGL,UAAyB,GAAe,CAKxC,OAJA,qBACA,WACA,CAAK,EAEL,oBACA,gBAIA,OAEA,GADA,KACA,sEACA,MAAoC,OAA+B,GACnE,GACA,uBAA+C,yCAAyC,iCACxF,iCACA,0DACyB,CAEzB,CACA,iBACgB,QAAS,SAAS,IAAkB,gBACpD,yBACA,CAAiB,YACjB,CACA,IACA,gBAGA,0CACA,UAIA,IACA,gBAEA,MAAkC,GAAe,CAEjD,CAAc,SAEd,MADA,QACA,2CACA,OACA,CAAiB,CACjB,CACA,CAAS,CACT,UACA,oBACA,YACA,CAAS,CACT,gBAMA,GAHA,GACA,SAEA,mBAEA,OADA,QACA,UAEA,CAAK,CACL,EASA,IACA,mBACA,gBACS,CACT,CAAM,SAEN,cACA,wCACA,OACA,CAAS,CACT,CACA,wFCzGe,SAMf,qBACA,gBACA,WACA,CAAS,CACT,CACA,eAA4B,qCAAkC,EAC9D,gBACA,mBACA,gBACA,gBACA,CACA,kBACA,8BACA,CAIA,aACA,2BACA,CAIA,gBACA,qCAEA,wBACA,wBACA,6DAEA,mCACA,MACA,0FAEA,MAAmB,QAAc,eACjC,CACA,OAAe,EAAM,mBACrB,CACA,wBACA,wBACA,6DAEA,mCACA,MACA,0FAEA,MAAmB,QAAc,eACjC,CACA,qBAKA,eACA,wBACA,4DAEA,kCACA,qEAEA,EAAkB,wBACC,QAAgB,gBAGnC,6BACmB,QAAY,mBAE/B,cASA,aAKA,EAJA,wBACA,qEAoBA,CAfA,EADA,+BACA,CACgB,QAAgB,gBAChC,CACU,6BACV,cACmB,EAAM,wBACzB,CACgB,QAAgB,gBAChC,CAEA,CACA,cACA,EAGA,QAEA,eACA,CAOA,gBACA,IACA,8BAKA,eACA,CAAa,EAGb,qCAEA,eACA,CAAU,SAIV,GAAgB,OAAY,KAE5B,iBACA,MACA,CAIA,OACA,CACA,CAMA,4BACA,MAAc,OAAkB,gCAChC,CACA,4ECxJO,4CACA,gBACP,eACA,+BACA,CAOW,gBAEX,OADA,OACA,CACA,CAQW,kBACX,WAEA,OADA,OACA,MACA,CAOW,gBACX,WAEA,OAD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CA,IACA,IACA,IACA,IACA,GACA,CACA,CACA,iMCnEW,gBACX,yBACA,6CAEA,YAAmB,qBAA0B,KAC7C,SAEA,YAAuB,WAAc,IAErC,kBACA,KACA,KACA,CAEA,KACA,QAEA,CACA,SACA,CAGW,gBACX,gCACA,YAAmB,WAAc,IACjC,wBAEA,QACA,CAOW,gBACX,aACA,qCACA,WAMA,QANA,EACA,wCAGA,OAFA,oBACA,6BACA,CACA,CAGA,CAHM,qBCvCN,aAIA,CAIA,sBACO,iBAGP,gBACA,oEAGA,gBACA,YAEA,aAAY,cAAqB,oBAGjC,iBACA,eACA,CAAK,EACL,IACA,KAAU,aAAwB,KAClC,WACA,yBACA,eACA,CAAa,EACb,CAGA,WAKA,MADA,CAHA,2BAGA,SACA,CACA,CACO,cACP,2BACA,SACA,uBACA,SACA,CACA,CAAK,CACL,CACO,cACP,2BACA,SACA,aACA,SACA,CACA,CAAK,CACL,CACO,oBACP,oBACA,KACA,QACA,SAAgB,WAAc,eAC9B,KACA,MAEA,SACA,CACA,OAAW,EAAM,SACjB,CACO,oBACP,+BACA,QACA,CAAK,EACL,KACA,qBACA,eACA,SACA,CAAS,EAGT,OADA,YAEA,CACO,aACP,IAEA,EAFA,KACA,IAEA,MAEA,YACA,UAA6B,GAAe,CAC5C,IACQ,QAAiB,MACzB,IACA,wBACA,IACA,YAA+B,WAA2B,KAC1D,WACA,WACA,gBAIA,WACA,IACA,YACA,CAAc,MAId,EAAc,OACd,SACA,WACA,CACA,CAAS,CACT,EACA,4BACA,eAEA,UACA,gBAEA,IACA,CAAS,CACT,QACA,KACA,gBACA,CACA,CAAK,CACL,CAYO,2BAAqC,4BAAwC,EACpF,MAAW,QAAS,SAAS,IAAa,+DAC1C,CACA,cACA,SACA,KAGA,KACA,4BACA,qBAGA,GAFA,KAEA,GACA,aACA,MACA,CACA,gBACA,MACA,MACA,kBACA,YACA,CACA,aACA,IACA,EAAc,IAEd,MAA8B,EAAiB,EAAQ,GAAY,UAApB,EAAoB,EACnE,WACA,MACA,kBACA,oCACA,oBACA,WACA,6BACA,YACA,EA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AAU,KAE1BgP,CAAAA,EAAAA,CAFejC,CAEfiC,CAAAA,CAAmBA,CAAChP,E2MiB1B,CACA,eACA,yBACA,CACA,cACA,uBAEA,eACA,iBACA,CACA,aACA,yBACA,CACA,cACA,QACA,iHACA,iEAAiF,EAAO,GAExF,iBACA,CACA,oBACA,6BAEA,mBACA,4BAEA,mBACA,gCAEA,WACA,wBAEA,YACA,kBACA,CACA,eACA,4BAEA,gBACA,sBACA,CACA,WACA,wBAEA,YACA,kBACA,CACA,eACA,4BAEA,gBACA,sBACA,CACA,WACA,4BACA,sBACA,SAAkB,cAAc,IAAI,UAAU,EAAE,EAAS,EAAE,EAAO,EAAE,UAAU,EAE9E,YACA,iBACA,cACA,CACA,aACA,0BAEA,eACA,4BAEA,gBACA,sBACA,CACA,WACA,wBAEA,YACA,kBACA,CACA,aACA,0BAEA,cACA,oBACA,CACA,eACA,4BAEA,gBACA,sBACA,CACA,eACA,4BAEA,gBACA,sBACA,CACA,eACA,wBAEA,gBACA,yCAAsE,EAAM,EAE5E,WACA,iBAEA,SACA,iBAEA,8CACA,OACA,eACA,mBACA,uBACA,uBACA,uBACA,eACA,uBACA,eACA,uBACA,mBACA,+BACA,eAEA,CACA,QACA,0CACA,CACA,6DC/KW,uBACX,cACA,2GACA,CACA,kBACA,WACA,CACA,CACO,wBACP,eAGA,QACA,0BACA,WAIA,sBACA,OAA2B,GAAc,YAEzC,sBAIA,8CAEA,cAEA,OAAuB,GAAc,WACrC,CAAa,CACb,aACA,sBACA,OAA2B,GAAc,cAEzC,sBAIA,8CAEA,OAAuB,GAAc,gBACrC,CAAa,CACb,SACA,6BAAqD,GAAc,UACnE,sBAIA,qDAEA,YAEuB,GAAc,SACrC,CAAa,CACb,oBACA,6BAAqD,GAAc,qBACnE,sBAIA,qDAEA,YAEuB,GAAc,oBACrC,CACA,CAAS,CACT,CAIA,eACA,oBACA,WACA,UACA,aACA,aACA,UACA,iBACA,SACA,OAA+B,GAAc,WAC7C,CACA,CACA,CAAS,CACT,CAOA,gBACA,8BACA,CACA,CAMA,sBACA,uBACA,QACA,CACA,YACA,qBACA,oBACA,iBACA,EACA,EACA,CACU,iBACV,UAEA,iBAEA,CACA,UACA,uBAEA,OACA,6BACA,yBACA,IACA,CACA,OACA,gCAEA,SACA,iBACA,CACA,aACA,8BACA,kBAEA,CACA,WACA,wCACA,sBAGA,aACA,OACA,EACA,EACA,CAEA,CACA,QACA,wCACA,qBACA,QACA,CACA,CACA,UACA,wCAGA,iBACA,QACA,CACA,CACA,oBACA,qBACA,CACA,wHCrKO,uBACA,uBACP,kBACA,YACA,WACA,CACA,CAOW,cACX,0BAQA,OAJA,oBACA,oBACA,cACA,CAAK,EACL,CACA,CAQW,cACX,IAAY,uBAAqB,EACjC,QACA,mCAEA,WAAY,GAAS,KACrB,QACA,CACO,QACP,gCACA,GAE+C,QAAgB,IAC/D,8BAMA,uDAEA,CACA,gCAEA,IAKA,EALA,OAMA,GALA,6CAEA,WAGA,yBACA,qBACU,CAEV,MAAyB,QAAc,cAOvC,EANA,wBAMA,iBAFA,yBAIA,CACA,WAAmB,GAAW,IAC9B,gBACA,QAAqB,QAA2B,YAEhD,cACA,SAMA,gBAAmC,CACnC,MACA,EACS,CACT,CACA,6BAEA,WAIA,MAHA,qCACA,WAEA,IAAmB,GAAW,QAC9B,gBACA,QAAqB,QAA2B,YAEhD,cACA,wBAMA,+BAAmD,CACnD,MACA,EACS,CACT,CACA,+CCrHO,SACP,kBACA,+BACA,qBACA,UAEA,CACA,CACA,oBACA,2BACA,CACA,gBACA,uBACA,CACA,2BACA,kCACA,CACA,yICVW,uBACX,cACA,8KACA,CACA,kBACA,WACA,CACA,CACO,QACP,eACA,oBACA,WACA,UACA,YACA,aACA,UACA,0BAEA,OAA+B,GAAc,WAC7C,CACA,CACA,CAAS,CACT,CACA,CACA,yCACO,cACP,kBACA,kCAGA,EAFA,GAIO,gBACP,WACA,gBACA,SAKA,UAA2B,IAAe,IAC1C,aAEA,eACA,SAGA,eACA,SAEA,QACA,CACO,QACP,iBACA,UAAoC,IAAe,cACnD,wBACA,SAEA,SACA,UACA,OAEA,MAA8B,kBAAgB,YAM9C,GALA,GACA,0BAGA,EADA,WACA,yBACA,GACA,SACA,gBACA,UAA4C,IAAe,cAC3D,SACA,oBACA,CACA,IACA,CACA,EACA,eACA,WACA,UAEA,OACA,QAGA,cACA,sBACA,4CACA,IAEA,OADA,eACA,CACA,EAA8B,OAC9B,GACA,CACA,CACA,WACA,sBACA,4CACA,IAEA,OADA,YACA,CACA,EAA8B,OAC9B,GACA,CACA,CACA,SACA,OAA+B,GAAc,WAC7C,CACA,CACA,CAAS,EACT,QACA,CACA,CACO,cACP,mBACA,WACA,UACA,aACA,sBAGA,OAFA,sBACA,eACA,CACA,CACA,WACA,sBAGA,OAFA,mBACA,YACA,CACA,CACA,SACA,OAA2B,GAAc,WACzC,CACA,CACA,CAAK,EACL,QACA,CAUA,cAEA,cADyB,OAAuB,IAThD,MAYA,WAEA,CACO,cACP,UAA+B,IAAc,cAC7C,wBACA,SAEA,QACA,0NElKO,gCAKI,yBACX,kBAAgC,EAChC,oDACQ,QAAW,IACnB,gCACA,WACA,UAA4B,GAAO,IACnC,QAAqB,QAAyB,eAC9C,wBACS,CACT,UACA,YAAyB,IAAc,eACvC,UACA,IAAqE,CAApD,CAAoD,KAAN,GAAG,CAAG,CACrE,CACA,CACA,8CACA,OACA,qBACA,qBACA,aAEA,uBACA,iBACA,6BACA,6BACA,yCACA,yBACA,yBACA,mBACA,eACA,uBACA,uBACA,mCACA,mBAEA,CACA,cACA,uBAEA,cACA,sBACA,CAKA,WACA,UAAkB,IAAgB,CAMlC,SACA,UAAkB,IAAc,CAEhC,UACA,mBAEA,mGC5DW,cACX,kBACA,iCAIA,aAHA,oBACA,EACA,CAEA,aACA,oBACA,iBAEA,eAGA,QACA,CAUU,cACV,IAEA,EACA,EACA,EACA,EACA,EANA,KACA,IAMA,aACA,yCACA,KAEA,kBAMA,kBAGA,IAFA,IACA,KACA,KAEA,SADA,gBACA,CAMA,IAJA,IACA,KACA,IACA,IACA,YAbA,MADA,iBACA,EAAsC,IAAtC,GAAsC,SActC,IAGA,gCAEA,KAEA,IACA,yBACA,KAIA,KAEA,EAAc,IACd,K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CACF,+BCrbA,qCAA6C,CAC7C,QACA,CAAC,EAAC,SAKF,KACA,0CACA,cACA,QACA,CAAK,CACL,EACA,GACA,0BACA,QACA,CAAK,CACL,uBACA,QACA,CACA,CAAC,EAED,UADyB,EAAQ,KAAkB,EACnD,UADgC,OAChC,CACA,gBACA,yCACA,KAMA,OACA,IAJA,SAKA,UAJA,UAKA,SAJA,gCAKA,CACA,CACA,kBACA,oBACA,EAGA,WAFA,GAGA,CACA,uBACA,eAIA,KACA,cAGA,oDCrDA,qCAA6C,CAC7C,QACA,CAAC,EAAC,SAMF,KACA,0CACA,cACA,SACK,CACL,EACA,GACA,uBACA,QACA,CAAK,CACL,0BACA,QACA,CAAK,CACL,kBACA,QACA,CACA,CAAC,EACD,MAAiB,EAAQ,IAAW,EACpC,GACA,OACA,CAHwB,CAGxB,IAEA,cACA,gBAEA,EAkBA,sBACA,QAAY,6GAAsG,EAClH,OACA,WACA,YACA,SACA,MACA,SACA,YACA,cACA,CACA,kBA5BA,WACA,sCAEA,YAAmB,WAAkB,IACrC,kBACA,aACA,KACA,CAQA,MADA,IAFA,GAFA,2CAEA,YAEA,2DACA,YACA,IAcA,CACA,CACA,OAAyB,EAAM,oDAC/B,QACA,cACA,YACA,OACA,WACA,WACA,gBACA,CACA,CACA,CAQA,sBACA,gCACA,MAEA,YAEA,aAAY,eAAsB,EAClC,eACA,8BAAyD,EAAU,GACnE,cACA,uBACA,MAEA,WACA,CACA,CAAK,EACL,SACA,qCAAiD,SAAY,GAE7D,qBACA,CAAY,OAAM,EAClB,UACA,eACA,WACA,aACA,gBACA,sCAAsD,UAAgB,EAAE,MAAY,GAGpF,CACA,OArCA,YACA,WAAY,oBAAwB,WACpC,sBAA+B,EAAM,uBACrC,SACA,sBACA,CAAK,CACL,EA+BA,EACA,CACA,cAUA,OATI,GAAM,qBACV,YAGA,oDACA,OAEA,qBACA,EACA,KACQ,GAAM,QACd,CACA,+BCjIA,qCAA6C,CAC7C,QACA,CAAC,EAWD,SANA,KACA,0CACA,cACA,SACK,CACL,EACA,GACA,6BACA,QACA,CAAK,CACL,8BACA,QACA,CACA,CAAC,EACD,MAAiB,EAAQ,IAAW,EACpC,EAAe,EAAQ,IAAS,EAChC,CAFwB,QAExB,EADsB,EAEtB,2BAAsC,GAAM,OAC5C,CACA,cACA,qDACA,yBC5BA,4BACA,kCACA,6BACA,kCAgBA,KAWA,cACA,MACA,OACA,4BAAqC,OAAO,EAC5C,sDAAmE,yEAAgF,EACnJ,oDAAgE,SAAS,EACzE,kCAA2C,SAAS,EACpD,iCACA,uCACA,wCAAiD,WAAW,EAC5D,gDACA,wCAAiD,WAAW,EAC5D,iBACA,KAAyB,OAAO,GAAG,2CAAqD,EACxF,yBAA+C,IAAc,EAAE,UAAc,GAAG,EAEhF,cACA,cACA,wBAAqC,KACrC,MACA,SACA,qBACA,WACA,gBACA,QACA,CACA,qCACA,IACA,6CACA,CAAM,MACN,CACA,CACA,QACA,CACA,kBA2CA,EAKA,EA/CA,MACA,OAEA,qBACA,CACA,SACA,UACA,WACA,SACA,OACA,WACA,SACA,cACA,WACA,CAAI,mBACJ,qCAeA,gBAEA,GACA,SACA,eACA,MACA,YAGA,QACA,EAvBA,CACA,OACA,4BACA,SACA,OAAoB,oBAA4B,CAChD,OAAqB,YAAgB,CACrC,wBAAuC,iBAAwB,CAC/D,OACA,OAAqB,SAmBrB,WADA,GADA,EAjBqB,GAkBrB,eACA,QAnBqB,CAAmC,CACxD,OAAmB,UAAc,CACjC,OAAqB,SAsBrB,WADA,GADA,EApBqB,GAqBrB,eACA,QAtBqB,CAAmC,CACxD,OAAwB,iBAGxB,CA5FA,SACA,eACA,OAA8B,uBAAkC,EAChE,EAaA,GACA,qBACA,sBACA,kBACA,qBACA,qBACA,CAAC,EACD,UAnBA,aACA,+CACA,kBACA,oBACA,OAA6B,kDAA4F,EAEzH,SACA,EACA,IAAoD,eAAkB,SAAa,EAWnF,GA+EA,8BAKA,0BA0DA,QACA,eAEA,qBACA,gBACA,sBACA,KAEA,eADA,KAEA,yBAAiC,UAAa,CAG9C,CACA,oBACA,sCACA,CAIA,WACA,wBACA,CACA,UACA,2CACA,0BACA,CACA,aACA,MACA,+BACA,aACA,yBAEA,8DACA,6C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B,EAAoB,OAAR,EAAQ,CAAR,IAAQ,QAAR,EAAkD,OAAlD,EAAkD,iBAAiD,YAAiB,gCCWrjE,MAAY,EAAQ,IAA0B,EAC9C,WADmB,EACnB,CACA,OACA,GACA,IACA,aACA,YACA,2FAEA,CAAK,CACL,IACA,IACA,IACA,IACA,IACA,IACA,GACA,CAAG,CACH,IACA,gBACA,EACA,sEACA,YACA,2KAEA,sBACA,cACA,mBACA,iCACA,CACA,8DAAoE,CACpE,EACA,YAAkB,eAClB,oBACA,KAGA,gBAFA,kBAGA,sBACA,EACA,GACA,OACA,KACA,WACA,EACA,aAAmB,aACnB,4BACA,EACA,SAAe,eACf,iDACA,WACA,qBACA,EACA,gDACA,EACA,iCACA,gBACA,MACA,aACA,MACA,EACA,kDACA,CACA,cACA,YACA,eACA,GAEA,cACA,SACA,cACA,YACA,gBACA,6CACA,CAAS,CACT,CACA,EACA,eAAqB,eACrB,uBACA,gCACA,iCACA,QACA,KACA,eAEA,SACA,cACA,UACA,gDACA,6CACA,CAAS,CACT,OACM,kBACN,EACA,SAAe,eACf,GACA,oBACA,oBACA,UACA,sBACA,CACA,WACA,qBACA,WACA,cACA,UACA,gDACA,8CACA,2CACA,cACA,iCACA,gBACA,OACA,eACA,kCACA,iBACA,OACA,YACA,oDACA,WACA,kDACA,6CACA,CAAK,CACL,CACA,EACA,eAAqB,eACrB,uBACA,MACA,4BACA,SACA,GACA,uCACA,KACA,OACA,cACA,UACA,+CACA,CAAO,CACP,EAAM,aACN,EACA,SAAe,2DCpJb,iBAAsE,8BCQxE,IAAI0D,EAAWC,EAAQ,GAAW,EAChC+W,EAAQ/W,EAAQ,IAAO,EACzB,EAFsBA,OAEbwyB,EAAsBl1B,CAAK,EAClCm1B,GAAsB,WACpB,MAAMn1B,CACR,EACF,CACA,IAAIo1B,EAAevxB,QACjBwxB,EACE,YAAe,OAAOC,eAClBA,eACA,SAAUb,CAAQ,EAChBW,EAAazxB,OAAO,CAAC,MAClB7D,IAAI,CAAC20B,GACLtf,KAAK,CAAC+f,EACX,EACNK,EAAc,K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EA,CAUA,aACA,oBAVA,EACA,EAUA,iDAXA,EAYA,SAXA,GAAwB,mBAExB,IACA,8BACA,YACK,GAOL,cACA,CACA,cA+IA,kBACA,oBACA,SACA,IAIA,OArHA,sBACA,IAnEA,IAnBA,EAsFA,WACA,2CACA,SACA,sBAEA,UACA,aACA,aACA,aACA,KACA,KACA,cACA,mBACA,OACA,OACA,KACA,KACA,QACA,OACA,EAEA,CAFA,WAEA,YACA,EACA,EACA,EACA,EAGA,CACA,CACA,KACA,OACA,OACA,EACA,oBACA,KACA,MACA,SACA,GACA,wBACA,uBACA,QACA,EAAW,EACX,SACA,QA/GA,EAiHA,EAjHA,EAkHA,EACA,cACA,iBACA,GACA,mBACA,EACA,OACA,KACA,EAVA,EA/GA,EACA,OACA,EACA,KACA,OACA,OACA,OACA,UAoHA,WACA,EAEA,IACA,uBACA,QACA,YAAoB,WAAqB,IACzC,EACA,IADA,OACA,GACA,KACA,EACA,EACA,EACA,EACA,QAEA,wBA9JA,QADA,EA+JA,IA9JA,wBAIA,kBAHA,GACA,SACA,iBACA,MA0JA,EACA,IACA,gBACA,oBAGA,EACA,IADA,UACA,KACA,KACA,EACA,EACA,EACA,EACA,QAEA,iBACA,6BACA,SA3HA,YACA,iBACA,gBACA,mBACA,WACA,uBAEA,OACA,0BACA,YACA,oBACA,OACA,YACA,sBACA,sBACA,UACA,CAAe,CACf,YACA,sBACA,gCACA,EACA,EACA,UAEA,gBACA,cACA,gBACA,eAEA,CACA,OACA,EA6FA,GACA,EACA,EACA,EACA,EAGA,aACA,EACA,GACA,oBAJA,cAKA,mBAA+B,8BAAyC,EACxE,GAGA,CACA,QACA,EAKA,sBACA,sBACA,CAAG,EACH,CACA,CACA,cACA,mBACA,gBACA,QACA,KACA,YACA,iCACA,yBACA,CAAO,CACP,YACA,iCACA,yBACA,GAEA,yCACA,CACA,yCACA,iBAEA,aACA,kBACA,CACA,aACA,OAAW,2BACX,CACA,UAAgB,EAChB,MACA,wBACA,EACA,EACA,WACA,uBACA,CAAO,CACP,EAEA,CAAG,CACH,kBACA,QAIA,OAHA,eACA,GACA,CAAK,EACL,CACA,CAAG,CACH,oBACA,OACA,gBACA,QACA,CAAO,MAEJ,CACH,iBACA,6BACA,QACA,CACA,EACA,UAAgB,GAChB,UAAgB,GAChB,YAAkB,GAClB,UAAgB,GAChB,iEAAuE,CACvE,EACA,OAAa,aACb,kBACA,UACA,qCACA,0BAEA,UADA,cAEA,mBACA,IACA,2BAAmC,IAAW,KAC9C,mBACA,GACA,sBACA,6BACA,CACA,iBACA,uBAEA,SADA,cAEA,kBACA,EAAQ,IAER,OADA,SACA,gBAEA,SADA,cAEA,OACA,WACA,CACA,sBACA,qBACA,IACA,8BAGA,MAFA,MACA,IACA,KACA,CAAM,SACN,sBACA,CACA,CACA,EACA,cAAoB,iBACpB,WACA,sBACA,UAAuB,UACvB,QACA,SACA,WACA,oCACA,6BACA,EACA,aACA,WACA,cACA,gBACA,6BACA,YACA,yBACA,2BACA,QACA,uBAAkD,IAAc,IAChE,oBACA,YACA,CACA,yCACA,EACA,eAAqB,iBACrB,MACA,IAAc,CACd,OACA,WACA,wCACA,aACA,WACA,cACA,gBACA,YACA,yBACA,2BACA,QACA,uBAAwD,IAAoB,IAC5E,oBACA,YACA,CACA,qBACA,0BACA,eACA,YACA,uCACA,EACA,WAAiB,YACjB,OAAW,aACX,EACA,YAAkB,aAClB,OAAW,oBACX,EACA,gBAAsB,GACtB,MAAY,aACZ,OACA,WACA,UAAgB,qBAA4B,CAC5C,OACA,CACA,EACA,MAAY,eACZ,OACA,WACA,OACA,yBACA,CACA,EACA,KAAW,aACX,iBACA,EACA,aAAmB,eACnB,2BACA,EACA,eAAqB,cACrB,OAAa,YACb,kBACA,EACA,SAAe,eACf,uBACA,EACA,SAAe,4DCvab,iBAA8E,6BCA9E,kBAAkE,mrLCH7D,aACA,SAkBA,KACA,MAIA,UAIA,aA6CP,GAGA,gBAIA,4BAGA,0BAGA,+BAGA,UAGA,wBAGA,wBAGA,uBAGA,oCAGA,qCACA,EACA,EACA,KACA,OACA,cACA,wBACA,g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","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./node_modules/next/font/local/target.css?449f","webpack://_N_E/./node_modules/next/font/local/target.css","webpack://_N_E/./node_modules/next/dist/esm/server/web/globals.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/response.js","webpack://_N_E/../../../../src/shared/lib/router/utils/relativize-url.ts","webpack://_N_E/./node_modules/next/dist/esm/server/web/web-on-close.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/get-edge-preview-props.js","webpack://_N_E/./node_modules/next/dist/esm/server/after/builtin-request-context.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/adapter.js","webpack://_N_E/./node_modules/next/dist/esm/server/api-utils/web.js","webpack://_N_E/../../../../src/shared/lib/router/utils/route-matcher.ts","webpack://_N_E/./node_modules/next/dist/esm/server/request/fallback-params.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/is-ipv6.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/format-hostname.js","webpack://_N_E/./node_modules/next/dist/esm/lib/redirect-status.js","webpack://_N_E/./node_modules/next/dist/esm/lib/is-edge-runtime.js","webpack://_N_E/../../../src/shared/lib/constants.ts","webpack://_N_E/../../../../src/shared/lib/router/utils/is-dynamic.ts","webpack://_N_E/../../../src/shared/lib/runtime-config.external.ts","webpack://_N_E/./node_modules/next/dist/esm/server/lib/revalidate.js","webpack://_N_E/./node_modules/next/dist/esm/server/utils.js","webpack://_N_E/../../../../src/shared/lib/page-path/normalize-path-sep.ts","webpack://_N_E/../../../../src/shared/lib/page-path/denormalize-page-path.ts","webpack://_N_E/../../../../src/shared/lib/router/utils/escape-path-delimiters.ts","webpack://_N_E/../../../../src/shared/lib/router/utils/path-match.ts","webpack://_N_E/../../../../src/shared/lib/router/utils/parse-url.ts","webpack://_N_E/./node_modules/next/dist/esm/server/api-utils/get-cookie-parser.js?8292","webpack://_N_E/../../../../src/shared/lib/router/utils/prepare-destination.ts","webpack://_N_E/./node_modules/next/dist/esm/server/server-utils.js?e724","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/locale-route-normalizer.js","webpack://_N_E/../../../../src/shared/lib/router/utils/sorted-routes.ts","webpack://_N_E/./node_modules/next/dist/esm/server/route-matchers/route-matcher.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matchers/locale-route-matcher.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matcher-managers/default-route-matcher-manager.js","webpack://_N_E/./node_modules/next/dist/esm/lib/is-app-page-route.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/normalizers.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/prefixing-normalizer.js","webpack://_N_E/../../../../src/shared/lib/page-path/normalize-page-path.ts","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/built/app/app-bundle-path-normalizer.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/built/app/app-filename-normalizer.js","webpack://_N_E/./node_modules/next/dist/esm/lib/page-types.js","webpack://_N_E/../../../../src/shared/lib/page-path/remove-page-path-tail.ts","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/is-metadata-route.js?861e","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/get-metadata-route.js?0612","webpack://_N_E/../../../../src/shared/lib/page-path/absolute-path-to-page.ts","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/absolute-filename-normalizer.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/built/app/app-page-normalizer.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/wrap-normalizer-fn.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/underscore-normalizer.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/built/app/app-pathname-normalizer.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/built/app/index.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matchers/app-page-route-matcher.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matcher-providers/helpers/cached-route-matcher-provider.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matcher-providers/manifest-route-matcher-provider.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matcher-providers/app-page-route-matcher-provider.js","webpack://_N_E/./node_modules/next/dist/esm/lib/is-app-route-route.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matchers/app-route-route-matcher.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matcher-providers/app-route-route-matcher-provider.js","webpack://_N_E/./node_modules/next/dist/esm/lib/is-api-route.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matchers/pages-api-route-matcher.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/built/pages/pages-bundle-path-normalizer.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/built/pages/pages-filename-normalizer.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/built/pages/pages-page-normalizer.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/built/pages/pages-pathname-normalizer.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/built/pages/index.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matcher-providers/pages-api-route-matcher-provider.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matchers/pages-route-matcher.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matcher-providers/pages-route-matcher-provider.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matcher-providers/helpers/manifest-loaders/server-manifest-loader.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/i18n-provider.js","webpack://_N_E/./node_modules/next/dist/esm/server/send-response.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/match-next-data-pathname.js","webpack://_N_E/../../../../src/shared/lib/router/utils/get-route-from-asset-path.ts","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/request/suffix.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/request/rsc.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/request/prefix.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/request/postponed.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/strip-flight-headers.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-modules/checks.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/request/prefetch-rsc.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/request/next-data.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/to-route.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/patch-set-header.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/experimental/ppr.js","webpack://_N_E/./node_modules/next/dist/esm/lib/fallback.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/prefetch-cache-scopes.js","webpack://_N_E/./node_modules/next/dist/esm/server/async-storage/cache-scope-instance.js","webpack://_N_E/./node_modules/next/dist/esm/server/async-storage/cache-scope.external.js","webpack://_N_E/./node_modules/next/dist/esm/server/base-server.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/etag.js","webpack://_N_E/./node_modules/next/dist/esm/server/response-cache/web.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/lru-cache.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/incremental-cache/fetch-cache.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/incremental-cache/tags-manifest.external.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/incremental-cache/file-system-cache.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/incremental-cache/shared-revalidate-timings.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/incremental-cache/index.js","webpack://_N_E/./node_modules/next/dist/esm/lib/try-to-parse-path.js","webpack://_N_E/./node_modules/next/dist/esm/lib/url.js?fac8","webpack://_N_E/./node_modules/next/dist/esm/lib/load-custom-routes.js","webpack://_N_E/./node_modules/next/dist/esm/lib/build-custom-route.js","webpack://_N_E/./node_modules/next/dist/esm/api/constants.js","webpack://_N_E/./node_modules/next/dist/esm/server/web-server.js","webpack://_N_E/./node_modules/next/dist/esm/server/base-http/index.js","webpack://_N_E/./node_modules/next/dist/esm/server/base-http/web.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/internal-edge-wait-until.js","webpack://_N_E/./node_modules/next/dist/esm/build/webpack/loaders/next-edge-ssr-loader/render.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-kind.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js","webpack://_N_E/../../../src/client/components/hooks-server-context.ts","webpack://_N_E/../../../src/client/components/static-generation-bailout.ts","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/metadata-constants.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/dynamic-rendering.js","webpack://_N_E/../../../src/shared/lib/invariant-error.ts","webpack://_N_E/./node_modules/next/dist/esm/server/dynamic-rendering-utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/create-deduped-by-callsite-server-error-logger.js","webpack://_N_E/./node_modules/next/dist/esm/server/request/utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/request/search-params.js","webpack://_N_E/./node_modules/next/dist/esm/server/request/params.js","webpack://_N_E/./node_modules/next/dist/esm/lib/non-nullable.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/generate/meta.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/constants.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/generate/utils.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/generate/basic.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/generate/alternate.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/generate/opengraph.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/generate/icons.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/default-metadata.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/resolvers/resolve-url.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/resolvers/resolve-title.js","webpack://_N_E/./node_modules/next/dist/esm/lib/url.js","webpack://_N_E/./node_modules/next/dist/esm/lib/picocolors.js","webpack://_N_E/./node_modules/next/dist/esm/build/output/log.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/resolvers/resolve-opengraph.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/app-dir-module.js","webpack://_N_E/./node_modules/next/dist/esm/lib/interop-default.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/resolvers/resolve-basics.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/resolvers/resolve-icons.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/trace/constants.js","webpack://_N_E/../../../src/shared/lib/is-thenable.ts","webpack://_N_E/./node_modules/next/dist/esm/server/lib/trace/tracer.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/resolve-metadata.js","webpack://_N_E/../../../src/client/components/not-found.ts","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/metadata.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/dedupe-fetch.js","webpack://_N_E/./node_modules/next/dist/esm/server/response-cache/types.js","webpack://_N_E/./node_modules/next/dist/esm/server/stream-utils/encodedTags.js","webpack://_N_E/./node_modules/next/dist/esm/server/stream-utils/node-web-streams-helper.js","webpack://_N_E/./node_modules/next/dist/esm/server/request-meta.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/utils.js","webpack://_N_E/../../../../src/shared/lib/i18n/detect-domain-locale.ts","webpack://_N_E/../../../../src/shared/lib/router/utils/parse-path.ts","webpack://_N_E/../../../../src/shared/lib/router/utils/add-path-prefix.ts","webpack://_N_E/../../../../src/shared/lib/router/utils/add-path-suffix.ts","webpack://_N_E/../../../../src/shared/lib/router/utils/path-has-prefix.ts","webpack://_N_E/../../../../src/shared/lib/router/utils/add-locale.ts","webpack://_N_E/../../../../src/shared/lib/router/utils/format-next-pathname-info.ts","webpack://_N_E/../../../src/shared/lib/get-hostname.ts","webpack://_N_E/../../../../src/shared/lib/i18n/normalize-locale-path.ts","webpack://_N_E/../../../../src/shared/lib/router/utils/remove-path-prefix.ts","webpack://_N_E/../../../../src/shared/lib/router/utils/get-next-pathname-info.ts","webpack://_N_E/./node_modules/next/dist/esm/server/web/next-url.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/error.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/request.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/adapters/next-request.js","webpack://_N_E/./node_modules/next/dist/esm/server/pipe-readable.js","webpack://_N_E/./node_modules/next/dist/esm/server/render-result.js","webpack://_N_E/./node_modules/next/dist/esm/server/response-cache/utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/response-cache/index.js","webpack://_N_E/./node_modules/next/dist/esm/lib/scheduler.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/patch-fetch.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/rsc/preloads.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/rsc/postpone.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/rsc/taint.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/entry-base.js","webpack://_N_E/./src/app/not-found.tsx?3cbf","webpack://_N_E/?beb6","webpack://_N_E/?fa13","webpack://_N_E/?f191","webpack://_N_E/?d635","webpack://_N_E/?748d","webpack://_N_E/","webpack://_N_E/?e096","webpack://_N_E/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js?89b4","webpack://_N_E/./node_modules/next/dist/compiled/@opentelemetry/api/index.js?c3bd","webpack://_N_E/./node_modules/next/dist/compiled/cookie/index.js?d940","webpack://_N_E/./node_modules/next/dist/compiled/native-url/index.js?6cb7","webpack://_N_E/./node_modules/next/dist/compiled/p-queue/index.js","webpack://_N_E/./node_modules/next/dist/compiled/path-browserify/index.js?2a69","webpack://_N_E/./node_modules/next/dist/compiled/path-to-regexp/index.js?0df9","webpack://_N_E/./node_modules/next/dist/compiled/querystring-es3/index.js?bb96","webpack://_N_E/./node_modules/next/dist/compiled/react-dom/cjs/react-dom-server.edge.production.js","webpack://_N_E/./node_modules/next/dist/compiled/react-dom/cjs/react-dom.production.js","webpack://_N_E/./node_modules/next/dist/compiled/react-dom/index.js","webpack://_N_E/./node_modules/next/dist/compiled/react-dom/static.edge.js","webpack://_N_E/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.production.js","webpack://_N_E/./node_modules/next/dist/compiled/react-server-dom-webpack/client.edge.js","webpack://_N_E/./node_modules/next/dist/compiled/react/cjs/react-jsx-runtime.production.js","webpack://_N_E/./node_modules/next/dist/compiled/react/cjs/react.production.js","webpack://_N_E/./node_modules/next/dist/compiled/react/index.js","webpack://_N_E/./node_modules/next/dist/compiled/react/jsx-runtime.js","webpack://_N_E/./node_modules/next/dist/compiled/string-hash/index.js","webpack://_N_E/./node_modules/next/dist/esm/build/output/log.js?fec4","webpack://_N_E/./node_modules/next/dist/esm/build/webpack/alias/react-dom-server-edge.js","webpack://_N_E/../../src/client/app-call-server.ts","webpack://_N_E/../../src/client/app-find-source-map-url.ts","webpack://_N_E/../../../src/client/components/app-router-headers.ts","webpack://_N_E/../../../src/client/components/use-reducer.ts","webpack://_N_E/../../src/client/normalize-trailing-slash.ts","webpack://_N_E/../../src/client/add-base-path.ts","webpack://_N_E/../../../src/client/components/app-router-announcer.tsx","webpack://_N_E/../../../../src/client/components/router-reducer/reducers/find-head-in-cache.ts","webpack://_N_E/../../src/client/remove-base-path.ts","webpack://_N_E/../../src/client/has-base-path.ts","webpack://_N_E/../../../src/client/components/app-router.tsx","webpack://_N_E/../../../src/client/components/bailout-to-client-rendering.ts","webpack://_N_E/../../../src/client/components/client-page.tsx","webpack://_N_E/../../../src/client/components/client-segment.tsx","webpack://_N_E/../../../src/client/components/error-boundary.tsx","webpack://_N_E/../../../src/client/components/is-next-router-error.ts","webpack://_N_E/../../../../src/shared/lib/router/utils/handle-smooth-scroll.ts","webpack://_N_E/../../../../src/client/components/router-reducer/reducers/get-segment-value.ts","webpack://_N_E/../../../../src/client/components/router-reducer/reducers/has-interception-route-in-current-tree.ts","webpack://_N_E/../../../src/client/components/layout-router.tsx","webpack://_N_E/../../../src/client/components/match-segments.ts","webpack://_N_E/../../../src/client/components/nav-failure-handler.ts","webpack://_N_E/../../../src/client/components/navigation-untracked.ts","webpack://_N_E/../../../src/client/components/not-found-boundary.tsx","webpack://_N_E/./node_modules/next/dist/esm/export/helpers/is-dynamic-usage-error.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/router-utils/is-postpone.js","webpack://_N_E/../../../src/client/components/unstable-rethrow.ts","webpack://_N_E/../../../src/client/components/navigation.react-server.ts","webpack://_N_E/../../../src/client/components/navigation.ts","webpack://_N_E/../../../src/client/components/redirect-boundary.tsx","webpack://_N_E/../../../src/client/components/redirect-status-code.ts","webpack://_N_E/../../../src/client/components/redirect.ts","webpack://_N_E/../../../src/client/components/render-from-template-context.tsx","webpack://_N_E/../../../../src/client/components/router-reducer/compute-changed-path.ts","webpack://_N_E/../../../../src/client/components/router-reducer/create-href-from-url.ts","webpack://_N_E/../../../../src/client/components/router-reducer/create-router-cache-key.ts","webpack://_N_E/../../../../src/client/components/router-reducer/fetch-server-response.ts","webpack://_N_E/../../../../src/client/components/router-reducer/router-reducer-types.ts","webpack://_N_E/../../../src/client/components/unresolved-thenable.ts","webpack://_N_E/../../src/client/flight-data-helpers.ts","webpack://_N_E/./node_modules/next/dist/esm/lib/constants.js?db86","webpack://_N_E/./node_modules/next/dist/esm/lib/detached-promise.js","webpack://_N_E/../../../src/shared/lib/is-plain-object.ts","webpack://_N_E/./node_modules/next/dist/esm/lib/is-error.js","webpack://_N_E/../../../src/lib/metadata/metadata-boundary.tsx","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/metadata-constants.js?7e8e","webpack://_N_E/./node_modules/next/dist/esm/lib/picocolors.js?7fbc","webpack://_N_E/./node_modules/next/dist/esm/lib/scheduler.js?772f","webpack://_N_E/./node_modules/next/dist/esm/server/api-utils/index.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/action-utils.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/metadata-context.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/implicit-tags.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/flight-render-result.js","webpack://_N_E/../../src/lib/format-server-error.ts","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/create-error-handler.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/get-short-dynamic-param-type.js","webpack://_N_E/./node_modules/next/dist/esm/server/htmlescape.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/get-script-nonce-from-header.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/types.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/parse-and-validate-flight-router-state.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/create-flight-router-state-from-loader-tree.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/server-ipc/utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/csrf-protection.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/action-handler.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/server-inserted-html.js","webpack://_N_E/../../../src/shared/lib/encode-uri-path.ts","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/required-scripts.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/make-get-server-inserted-html.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/get-css-inlined-link-tags.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/get-preloadable-fonts.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/has-loading-component-in-tree.js","webpack://_N_E/./node_modules/next/dist/esm/lib/client-reference.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/app-dir-module.js?566f","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/interop-default.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/parse-loader-tree.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/get-asset-query-string.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/create-component-styles-and-scripts.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/get-layer-assets.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/dedupe-fetch.js?5e19","webpack://_N_E/./node_modules/next/dist/esm/server/lib/patch-fetch.js?2d6a","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/create-component-tree.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/walk-tree-with-flight-router-state.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/postponed-state.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/use-flight-response.js","webpack://_N_E/../../../../src/client/components/router-reducer/fill-lazy-items-till-leaf-with-head.ts","webpack://_N_E/./node_modules/@swc/helpers/esm/_class_private_field_loose_base.js","webpack://_N_E/./node_modules/@swc/helpers/esm/_class_private_field_loose_key.js","webpack://_N_E/../../../src/client/components/promise-queue.ts","webpack://_N_E/../../../../src/client/components/router-reducer/reducers/prefetch-reducer.ts","webpack://_N_E/../../../../src/client/components/router-reducer/prefetch-cache-utils.ts","webpack://_N_E/../../../../src/client/components/router-reducer/fill-cache-with-new-subtree-data.ts","webpack://_N_E/../../../../src/client/components/router-reducer/apply-flight-data.ts","webpack://_N_E/../../../../src/client/components/router-reducer/refetch-inactive-parallel-segments.ts","webpack://_N_E/../../../../src/client/components/router-reducer/create-initial-router-state.ts","webpack://_N_E/../../../../src/client/components/router-reducer/apply-router-state-patch-to-tree.ts","webpack://_N_E/../../../../src/client/components/router-reducer/ppr-navigations.ts","webpack://_N_E/../../../../src/client/components/router-reducer/aliased-prefetch-navigations.ts","webpack://_N_E/../../../../src/client/components/router-reducer/reducers/navigate-reducer.ts","webpack://_N_E/../../../../src/client/components/router-reducer/handle-segment-mismatch.ts","webpack://_N_E/../../../../src/client/components/router-reducer/reducers/server-patch-reducer.ts","webpack://_N_E/../../../../src/client/components/router-reducer/reducers/restore-reducer.ts","webpack://_N_E/../../../../src/client/components/router-reducer/reducers/refresh-reducer.ts","webpack://_N_E/../../../../src/client/components/router-reducer/reducers/hmr-refresh-reducer.ts","webpack://_N_E/../../../../src/client/components/router-reducer/reducers/server-action-reducer.ts","webpack://_N_E/../../../../src/client/components/router-reducer/router-reducer.ts","webpack://_N_E/../../../../src/shared/lib/router/action-queue.ts","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/app-render-prerender-utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/prospective-render-utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/app-render-render-utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/cache-signal.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/trace/utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/clean-async-snapshot-instance.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/clean-async-snapshot.external.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/app-render.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/async-local-storage.js?94c3","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/dynamic-rendering.js?d7eb","webpack://_N_E/../../../src/server/app-render/encryption-utils.ts","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/get-segment-param.js","webpack://_N_E/./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js","webpack://_N_E/./node_modules/next/dist/esm/server/async-storage/request-store.js","webpack://_N_E/./node_modules/next/dist/esm/server/after/revalidation-utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/after/after-context.js","webpack://_N_E/./node_modules/next/dist/esm/server/async-storage/with-work-store.js","webpack://_N_E/./node_modules/next/dist/esm/server/base-http/helpers.js","webpack://_N_E/./node_modules/next/dist/esm/server/client-component-renderer-logger.js","webpack://_N_E/./node_modules/next/dist/esm/server/create-deduped-by-callsite-server-error-logger.js?78a2","webpack://_N_E/./node_modules/next/dist/esm/server/dynamic-rendering-utils.js?f150","webpack://_N_E/./node_modules/next/dist/esm/server/instrumentation/utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/internal-utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/interception-routes.js?aa13","webpack://_N_E/./node_modules/next/dist/esm/server/lib/server-action-request-meta.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/trace/constants.js?3450","webpack://_N_E/./node_modules/next/dist/esm/server/lib/trace/tracer.js?04ea","webpack://_N_E/./node_modules/next/dist/esm/server/pipe-readable.js?fa3c","webpack://_N_E/./node_modules/next/dist/esm/server/render-result.js?60f7","webpack://_N_E/./node_modules/next/dist/esm/server/request-meta.js?d0f1","webpack://_N_E/./node_modules/next/dist/esm/server/request/params.js?750c","webpack://_N_E/./node_modules/next/dist/esm/server/request/search-params.js?ba9c","webpack://_N_E/./node_modules/next/dist/esm/server/request/utils.js?adf9","webpack://_N_E/./node_modules/next/dist/esm/server/response-cache/index.js?9e2f","webpack://_N_E/./node_modules/next/dist/esm/server/response-cache/types.js?158f","webpack://_N_E/./node_modules/next/dist/esm/server/response-cache/utils.js?d385","webpack://_N_E/./node_modules/next/dist/esm/server/route-kind.js?6d2c","webpack://_N_E/./node_modules/next/dist/esm/server/route-modules/route-module.js","webpack://_N_E/../../../src/shared/lib/router-context.shared-runtime.ts","webpack://_N_E/../../../src/shared/lib/amp-context.shared-runtime.ts","webpack://_N_E/../../../src/shared/lib/image-config.ts","webpack://_N_E/../../../src/shared/lib/image-config-context.shared-runtime.ts","webpack://_N_E/./node_modules/next/dist/esm/server/route-modules/app-page/vendored/contexts/entrypoints.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-modules/app-page/module.js","webpack://_N_E/./node_modules/next/dist/esm/server/stream-utils/encodedTags.js?f58f","webpack://_N_E/./node_modules/next/dist/esm/server/stream-utils/uint8array-helpers.js","webpack://_N_E/./node_modules/next/dist/esm/server/stream-utils/node-web-streams-helper.js?dadb","webpack://_N_E/./node_modules/next/dist/esm/server/web/error.js?5d6b","webpack://_N_E/./node_modules/next/dist/esm/server/web/next-url.js?9a28","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/adapters/next-request.js?2af8","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js?53f0","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js?b03a","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/request.js?9747","webpack://_N_E/./node_modules/next/dist/esm/server/web/utils.js?7ae2","webpack://_N_E/../../../src/shared/lib/app-router-context.shared-runtime.ts","webpack://_N_E/../../../src/shared/lib/escape-regexp.ts","webpack://_N_E/../../../src/shared/lib/hash.ts","webpack://_N_E/../../../src/shared/lib/head-manager-context.shared-runtime.ts","webpack://_N_E/../../../src/shared/lib/hooks-client-context.shared-runtime.ts","webpack://_N_E/../../../../src/shared/lib/isomorphic/path.js","webpack://_N_E/../../../../src/shared/lib/lazy-dynamic/bailout-to-csr.ts","webpack://_N_E/../../../src/shared/lib/modern-browserslist-target.js","webpack://_N_E/../../../../src/shared/lib/page-path/ensure-leading-slash.ts","webpack://_N_E/../../../../src/shared/lib/router/utils/app-paths.ts","webpack://_N_E/../../../../src/shared/lib/router/utils/is-bot.ts","webpack://_N_E/../../../../src/shared/lib/router/utils/parse-relative-url.ts","webpack://_N_E/../../../../src/shared/lib/router/utils/querystring.ts","webpack://_N_E/../../../../src/shared/lib/router/utils/remove-trailing-slash.ts","webpack://_N_E/../../../../src/shared/lib/router/utils/route-regex.ts","webpack://_N_E/../../../src/shared/lib/segment.ts","webpack://_N_E/../../../src/shared/lib/server-inserted-html.shared-runtime.tsx","webpack://_N_E/../../../src/shared/lib/utils.ts","webpack://_N_E/./node_modules/next/dist/experimental/testmode/context.js","webpack://_N_E/./node_modules/next/dist/experimental/testmode/fetch.js","webpack://_N_E/./node_modules/next/dist/experimental/testmode/server-edge.js","webpack://_N_E/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js","webpack://_N_E/./node_modules/next/dist/compiled/@opentelemetry/api/index.js","webpack://_N_E/./node_modules/next/dist/compiled/cookie/index.js","webpack://_N_E/./node_modules/next/dist/compiled/native-url/index.js","webpack://_N_E/./node_modules/next/dist/compiled/path-browserify/index.js","webpack://_N_E/./node_modules/next/dist/compiled/path-to-regexp/index.js","webpack://_N_E/./node_modules/next/dist/compiled/querystring-es3/index.js","webpack://_N_E/./node_modules/next/dist/compiled/react-dom/cjs/react-dom.react-server.production.js","webpack://_N_E/./node_modules/next/dist/compiled/react-dom/react-dom.react-server.js","webpack://_N_E/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.js","webpack://_N_E/./node_modules/next/dist/compiled/react-server-dom-webpack/server.edge.js","webpack://_N_E/./node_modules/next/dist/compiled/react-server-dom-webpack/static.edge.js","webpack://_N_E/./node_modules/next/dist/compiled/react/cjs/react-jsx-runtime.react-server.production.js","webpack://_N_E/./node_modules/next/dist/compiled/react/cjs/react.react-server.production.js","webpack://_N_E/./node_modules/next/dist/compiled/react/jsx-runtime.react-server.js","webpack://_N_E/./node_modules/next/dist/compiled/react/react.react-server.js","webpack://_N_E/./node_modules/next/dist/esm/lib/constants.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-modules/app-page/module.compiled.js","webpack://_N_E/./src/app/layout.tsx","webpack://_N_E/./src/app/not-found.tsx","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/is-metadata-route.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/interception-routes.js","webpack://_N_E/./node_modules/next/dist/esm/server/api-utils/get-cookie-parser.js","webpack://_N_E/./node_modules/next/dist/esm/server/server-utils.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/get-metadata-route.js","webpack://_N_E/./src/app/favicon.ico","webpack://_N_E/./src/app/globals.css","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/action-async-storage-instance.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/action-async-storage.external.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/async-local-storage.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/work-async-storage-instance.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/work-async-storage.external.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/work-unit-async-storage-instance.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/work-unit-async-storage.external.js","webpack://_N_E/./node_modules/next/dist/compiled/superstruct/index.cjs"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","// Exports\nmodule.exports = {\n\t\"style\": {\"fontFamily\":\"'geistMono', 'geistMono Fallback'\"},\n\t\"className\": \"__className_c3aa02\",\n\t\"variable\": \"__variable_c3aa02\"\n};\n","// Exports\nmodule.exports = {\n\t\"style\": {\"fontFamily\":\"'geistSans', 'geistSans Fallback'\"},\n\t\"className\": \"__className_1e4310\",\n\t\"variable\": \"__variable_1e4310\"\n};\n","export async function getEdgeInstrumentationModule() {\n    const instrumentation = '_ENTRIES' in globalThis && _ENTRIES.middleware_instrumentation && await _ENTRIES.middleware_instrumentation;\n    return instrumentation;\n}\nlet instrumentationModulePromise = null;\nasync function registerInstrumentation() {\n    // Ensure registerInstrumentation is not called in production build\n    if (process.env.NEXT_PHASE === 'phase-production-build') return;\n    if (!instrumentationModulePromise) {\n        instrumentationModulePromise = getEdgeInstrumentationModule();\n    }\n    const instrumentation = await instrumentationModulePromise;\n    if (instrumentation == null ? void 0 : instrumentation.register) {\n        try {\n            await instrumentation.register();\n        } catch (err) {\n            err.message = `An error occurred while loading instrumentation hook: ${err.message}`;\n            throw err;\n        }\n    }\n}\nexport async function edgeInstrumentationOnRequestError(...args) {\n    const instrumentation = await getEdgeInstrumentationModule();\n    try {\n        var _instrumentation_onRequestError;\n        await (instrumentation == null ? void 0 : (_instrumentation_onRequestError = instrumentation.onRequestError) == null ? void 0 : _instrumentation_onRequestError.call(instrumentation, ...args));\n    } catch (err) {\n        // Log the soft error and continue, since the original error has already been thrown\n        console.error('Error in instrumentation.onRequestError:', err);\n    }\n}\nlet registerInstrumentationPromise = null;\nexport function ensureInstrumentationRegistered() {\n    if (!registerInstrumentationPromise) {\n        registerInstrumentationPromise = registerInstrumentation();\n    }\n    return registerInstrumentationPromise;\n}\nfunction getUnsupportedModuleErrorMessage(module) {\n    // warning: if you change these messages, you must adjust how react-dev-overlay's middleware detects modules not found\n    return `The edge runtime does not support Node.js '${module}' module.\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;\n}\nfunction __import_unsupported(moduleName) {\n    const proxy = new Proxy(function() {}, {\n        get (_obj, prop) {\n            if (prop === 'then') {\n                return {};\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        construct () {\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        apply (_target, _this, args) {\n            if (typeof args[0] === 'function') {\n                return args[0](proxy);\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        }\n    });\n    return new Proxy({}, {\n        get: ()=>proxy\n    });\n}\nfunction enhanceGlobals() {\n    // The condition is true when the \"process\" module is provided\n    if (process !== global.process) {\n        // prefer local process but global.process has correct \"env\"\n        process.env = global.process.env;\n        global.process = process;\n    }\n    // to allow building code that import but does not use node.js modules,\n    // webpack will expect this function to exist in global scope\n    Object.defineProperty(globalThis, '__import_unsupported', {\n        value: __import_unsupported,\n        enumerable: false,\n        configurable: false\n    });\n    // Eagerly fire instrumentation hook to make the startup faster.\n    void ensureInstrumentationRegistered();\n}\nenhanceGlobals();\n\n//# sourceMappingURL=globals.js.map","import { PageSignatureError } from '../error';\nconst responseSymbol = Symbol('response');\nconst passThroughSymbol = Symbol('passThrough');\nconst waitUntilSymbol = Symbol('waitUntil');\nclass FetchEvent {\n    constructor(_request, waitUntil){\n        this[passThroughSymbol] = false;\n        this[waitUntilSymbol] = waitUntil ? {\n            kind: 'external',\n            function: waitUntil\n        } : {\n            kind: 'internal',\n            promises: []\n        };\n    }\n    // TODO: is this dead code? NextFetchEvent never lets this get called\n    respondWith(response) {\n        if (!this[responseSymbol]) {\n            this[responseSymbol] = Promise.resolve(response);\n        }\n    }\n    // TODO: is this dead code? passThroughSymbol is unused\n    passThroughOnException() {\n        this[passThroughSymbol] = true;\n    }\n    waitUntil(promise) {\n        if (this[waitUntilSymbol].kind === 'external') {\n            // if we received an external waitUntil, we delegate to it\n            // TODO(after): this will make us not go through `getServerError(error, 'edge-server')` in `sandbox`\n            const waitUntil = this[waitUntilSymbol].function;\n            return waitUntil(promise);\n        } else {\n            // if we didn't receive an external waitUntil, we make it work on our own\n            // (and expect the caller to do something with the promises)\n            this[waitUntilSymbol].promises.push(promise);\n        }\n    }\n}\nexport function getWaitUntilPromiseFromEvent(event) {\n    return event[waitUntilSymbol].kind === 'internal' ? Promise.all(event[waitUntilSymbol].promises).then(()=>{}) : undefined;\n}\nexport class NextFetchEvent extends FetchEvent {\n    constructor(params){\n        var _params_context;\n        super(params.request, (_params_context = params.context) == null ? void 0 : _params_context.waitUntil);\n        this.sourcePage = params.page;\n    }\n    /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\n\n//# sourceMappingURL=fetch-event.js.map","import { stringifyCookie } from '../../web/spec-extension/cookies';\nimport { NextURL } from '../next-url';\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils';\nimport { ReflectAdapter } from './adapters/reflect';\nimport { ResponseCookies } from './cookies';\nconst INTERNALS = Symbol('internal response');\nconst REDIRECTS = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nfunction handleMiddlewareField(init, headers) {\n    var _init_request;\n    if (init == null ? void 0 : (_init_request = init.request) == null ? void 0 : _init_request.headers) {\n        if (!(init.request.headers instanceof Headers)) {\n            throw new Error('request.headers must be an instance of Headers');\n        }\n        const keys = [];\n        for (const [key, value] of init.request.headers){\n            headers.set('x-middleware-request-' + key, value);\n            keys.push(key);\n        }\n        headers.set('x-middleware-override-headers', keys.join(','));\n    }\n}\n/**\n * This class extends the [Web `Response` API](https://developer.mozilla.org/docs/Web/API/Response) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextResponse`](https://nextjs.org/docs/app/api-reference/functions/next-response)\n */ export class NextResponse extends Response {\n    constructor(body, init = {}){\n        super(body, init);\n        const headers = this.headers;\n        const cookies = new ResponseCookies(headers);\n        const cookiesProxy = new Proxy(cookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case 'delete':\n                    case 'set':\n                        {\n                            return (...args)=>{\n                                const result = Reflect.apply(target[prop], target, args);\n                                const newHeaders = new Headers(headers);\n                                if (result instanceof ResponseCookies) {\n                                    headers.set('x-middleware-set-cookie', result.getAll().map((cookie)=>stringifyCookie(cookie)).join(','));\n                                }\n                                handleMiddlewareField(init, newHeaders);\n                                return result;\n                            };\n                        }\n                    default:\n                        return ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n        this[INTERNALS] = {\n            cookies: cookiesProxy,\n            url: init.url ? new NextURL(init.url, {\n                headers: toNodeOutgoingHttpHeaders(headers),\n                nextConfig: init.nextConfig\n            }) : undefined\n        };\n    }\n    [Symbol.for('edge-runtime.inspect.custom')]() {\n        return {\n            cookies: this.cookies,\n            url: this.url,\n            // rest of props come from Response\n            body: this.body,\n            bodyUsed: this.bodyUsed,\n            headers: Object.fromEntries(this.headers),\n            ok: this.ok,\n            redirected: this.redirected,\n            status: this.status,\n            statusText: this.statusText,\n            type: this.type\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    static json(body, init) {\n        const response = Response.json(body, init);\n        return new NextResponse(response.body, response);\n    }\n    static redirect(url, init) {\n        const status = typeof init === 'number' ? init : (init == null ? void 0 : init.status) ?? 307;\n        if (!REDIRECTS.has(status)) {\n            throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n        }\n        const initObj = typeof init === 'object' ? init : {};\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\n        headers.set('Location', validateURL(url));\n        return new NextResponse(null, {\n            ...initObj,\n            headers,\n            status\n        });\n    }\n    static rewrite(destination, init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set('x-middleware-rewrite', validateURL(destination));\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n    static next(init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set('x-middleware-next', '1');\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n}\n\n//# sourceMappingURL=response.js.map","/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */\nexport function relativizeURL(url: string | string, base: string | URL) {\n  const baseURL = typeof base === 'string' ? new URL(base) : base\n  const relative = new URL(url, base)\n  const origin = `${baseURL.protocol}//${baseURL.host}`\n  return `${relative.protocol}//${relative.host}` === origin\n    ? relative.toString().replace(origin, '')\n    : relative.toString()\n}\n","/** Monitor when the consumer finishes reading the response body.\nthat's as close as we can get to `res.on('close')` using web APIs.\n*/ export function trackBodyConsumed(body, onEnd) {\n    if (typeof body === 'string') {\n        const generator = async function* generate() {\n            const encoder = new TextEncoder();\n            yield encoder.encode(body);\n            onEnd();\n        };\n        // @ts-expect-error BodyInit typings doesn't seem to include AsyncIterables even though it's supported in practice\n        return generator();\n    } else {\n        return trackStreamConsumed(body, onEnd);\n    }\n}\nexport function trackStreamConsumed(stream, onEnd) {\n    const closePassThrough = new TransformStream({\n        flush: ()=>{\n            return onEnd();\n        }\n    });\n    return stream.pipeThrough(closePassThrough);\n}\nexport class CloseController {\n    onClose(callback) {\n        if (this.isClosed) {\n            throw new Error('Cannot subscribe to a closed CloseController');\n        }\n        this.target.addEventListener('close', callback);\n        this.listeners++;\n    }\n    dispatchClose() {\n        if (this.isClosed) {\n            throw new Error('Cannot close a CloseController multiple times');\n        }\n        if (this.listeners > 0) {\n            this.target.dispatchEvent(new Event('close'));\n        }\n        this.isClosed = true;\n    }\n    constructor(){\n        this.target = new EventTarget();\n        this.listeners = 0;\n        this.isClosed = false;\n    }\n}\n\n//# sourceMappingURL=web-on-close.js.map","/**\n * In edge runtime, these props directly accessed from environment variables.\n *   - local: env vars will be injected through edge-runtime as runtime env vars\n *   - deployment: env vars will be replaced by edge build pipeline\n */ export function getEdgePreviewProps() {\n    return {\n        previewModeId: process.env.NODE_ENV === 'production' ? process.env.__NEXT_PREVIEW_MODE_ID : 'development-id',\n        previewModeSigningKey: process.env.__NEXT_PREVIEW_MODE_SIGNING_KEY || '',\n        previewModeEncryptionKey: process.env.__NEXT_PREVIEW_MODE_ENCRYPTION_KEY || ''\n    };\n}\n\n//# sourceMappingURL=get-edge-preview-props.js.map","import { createAsyncLocalStorage } from '../app-render/async-local-storage';\nexport function getBuiltinRequestContext() {\n    const _globalThis = globalThis;\n    const ctx = _globalThis[NEXT_REQUEST_CONTEXT_SYMBOL] ?? _globalThis[VERCEL_REQUEST_CONTEXT_SYMBOL];\n    return ctx == null ? void 0 : ctx.get();\n}\n/** This should be considered unstable until `unstable_after` is stablized. */ const NEXT_REQUEST_CONTEXT_SYMBOL = Symbol.for('@next/request-context');\n// TODO(after): this is a temporary workaround.\n// Remove this when vercel builder is updated to provide '@next/request-context'.\nconst VERCEL_REQUEST_CONTEXT_SYMBOL = Symbol.for('@vercel/request-context');\n/** \"@next/request-context\" has a different signature from AsyncLocalStorage,\n * matching [AsyncContext.Variable](https://github.com/tc39/proposal-async-context).\n * We don't need a full AsyncContext adapter here, just having `.get()` is enough\n */ export function createLocalRequestContext() {\n    const storage = createAsyncLocalStorage();\n    return {\n        get: ()=>storage.getStore(),\n        run: (value, callback)=>storage.run(value, callback)\n    };\n}\n\n//# sourceMappingURL=builtin-request-context.js.map","import { PageSignatureError } from './error';\nimport { fromNodeOutgoingHttpHeaders, normalizeNextQueryParam } from './utils';\nimport { NextFetchEvent, getWaitUntilPromiseFromEvent } from './spec-extension/fetch-event';\nimport { NextRequest } from './spec-extension/request';\nimport { NextResponse } from './spec-extension/response';\nimport { relativizeURL } from '../../shared/lib/router/utils/relativize-url';\nimport { NextURL } from './next-url';\nimport { stripInternalSearchParams } from '../internal-utils';\nimport { normalizeRscURL } from '../../shared/lib/router/utils/app-paths';\nimport { FLIGHT_HEADERS } from '../../client/components/app-router-headers';\nimport { ensureInstrumentationRegistered } from './globals';\nimport { createRequestStoreForAPI } from '../async-storage/request-store';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { withWorkStore } from '../async-storage/with-work-store';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { NEXT_ROUTER_PREFETCH_HEADER } from '../../client/components/app-router-headers';\nimport { getTracer } from '../lib/trace/tracer';\nimport { MiddlewareSpan } from '../lib/trace/constants';\nimport { CloseController } from './web-on-close';\nimport { getEdgePreviewProps } from './get-edge-preview-props';\nimport { getBuiltinRequestContext } from '../after/builtin-request-context';\nexport class NextRequestHint extends NextRequest {\n    constructor(params){\n        super(params.input, params.init);\n        this.sourcePage = params.page;\n    }\n    get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    waitUntil() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\nconst headersGetter = {\n    keys: (headers)=>Array.from(headers.keys()),\n    get: (headers, key)=>headers.get(key) ?? undefined\n};\nlet propagator = (request, fn)=>{\n    const tracer = getTracer();\n    return tracer.withPropagatedContext(request.headers, fn, headersGetter);\n};\nlet testApisIntercepted = false;\nfunction ensureTestApisIntercepted() {\n    if (!testApisIntercepted) {\n        testApisIntercepted = true;\n        if (process.env.NEXT_PRIVATE_TEST_PROXY === 'true') {\n            const { interceptTestApis, wrapRequestHandler } = require('next/dist/experimental/testmode/server-edge');\n            interceptTestApis();\n            propagator = wrapRequestHandler(propagator);\n        }\n    }\n}\nexport async function adapter(params) {\n    var _getBuiltinRequestContext;\n    ensureTestApisIntercepted();\n    await ensureInstrumentationRegistered();\n    // TODO-APP: use explicit marker for this\n    const isEdgeRendering = typeof self.__BUILD_MANIFEST !== 'undefined';\n    params.request.url = normalizeRscURL(params.request.url);\n    const requestUrl = new NextURL(params.request.url, {\n        headers: params.request.headers,\n        nextConfig: params.request.nextConfig\n    });\n    // Iterator uses an index to keep track of the current iteration. Because of deleting and appending below we can't just use the iterator.\n    // Instead we use the keys before iteration.\n    const keys = [\n        ...requestUrl.searchParams.keys()\n    ];\n    for (const key of keys){\n        const value = requestUrl.searchParams.getAll(key);\n        normalizeNextQueryParam(key, (normalizedKey)=>{\n            requestUrl.searchParams.delete(normalizedKey);\n            for (const val of value){\n                requestUrl.searchParams.append(normalizedKey, val);\n            }\n            requestUrl.searchParams.delete(key);\n        });\n    }\n    // Ensure users only see page requests, never data requests.\n    const buildId = requestUrl.buildId;\n    requestUrl.buildId = '';\n    const isNextDataRequest = params.request.headers['x-nextjs-data'];\n    if (isNextDataRequest && requestUrl.pathname === '/index') {\n        requestUrl.pathname = '/';\n    }\n    const requestHeaders = fromNodeOutgoingHttpHeaders(params.request.headers);\n    const flightHeaders = new Map();\n    // Headers should only be stripped for middleware\n    if (!isEdgeRendering) {\n        for (const header of FLIGHT_HEADERS){\n            const key = header.toLowerCase();\n            const value = requestHeaders.get(key);\n            if (value) {\n                flightHeaders.set(key, value);\n                requestHeaders.delete(key);\n            }\n        }\n    }\n    const normalizeUrl = process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE ? new URL(params.request.url) : requestUrl;\n    const request = new NextRequestHint({\n        page: params.page,\n        // Strip internal query parameters off the request.\n        input: stripInternalSearchParams(normalizeUrl, true).toString(),\n        init: {\n            body: params.request.body,\n            headers: requestHeaders,\n            method: params.request.method,\n            nextConfig: params.request.nextConfig,\n            signal: params.request.signal\n        }\n    });\n    /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */ if (isNextDataRequest) {\n        Object.defineProperty(request, '__isData', {\n            enumerable: false,\n            value: true\n        });\n    }\n    if (!globalThis.__incrementalCache && params.IncrementalCache) {\n        globalThis.__incrementalCache = new params.IncrementalCache({\n            appDir: true,\n            fetchCache: true,\n            minimalMode: process.env.NODE_ENV !== 'development',\n            fetchCacheKeyPrefix: process.env.__NEXT_FETCH_CACHE_KEY_PREFIX,\n            dev: process.env.NODE_ENV === 'development',\n            requestHeaders: params.request.headers,\n            requestProtocol: 'https',\n            getPrerenderManifest: ()=>{\n                return {\n                    version: -1,\n                    routes: {},\n                    dynamicRoutes: {},\n                    notFoundRoutes: [],\n                    preview: getEdgePreviewProps()\n                };\n            }\n        });\n    }\n    // if we're in an edge runtime sandbox, we should use the waitUntil\n    // that we receive from the enclosing NextServer\n    const outerWaitUntil = params.request.waitUntil ?? ((_getBuiltinRequestContext = getBuiltinRequestContext()) == null ? void 0 : _getBuiltinRequestContext.waitUntil);\n    const event = new NextFetchEvent({\n        request,\n        page: params.page,\n        context: outerWaitUntil ? {\n            waitUntil: outerWaitUntil\n        } : undefined\n    });\n    let response;\n    let cookiesFromResponse;\n    response = await propagator(request, ()=>{\n        // we only care to make async storage available for middleware\n        const isMiddleware = params.page === '/middleware' || params.page === '/src/middleware';\n        if (isMiddleware) {\n            var _params_request_nextConfig_experimental, _params_request_nextConfig;\n            // if we're in an edge function, we only get a subset of `nextConfig` (no `experimental`),\n            // so we have to inject it via DefinePlugin.\n            // in `next start` this will be passed normally (see `NextNodeServer.runMiddleware`).\n            const isAfterEnabled = ((_params_request_nextConfig = params.request.nextConfig) == null ? void 0 : (_params_request_nextConfig_experimental = _params_request_nextConfig.experimental) == null ? void 0 : _params_request_nextConfig_experimental.after) ?? !!process.env.__NEXT_AFTER;\n            let waitUntil = undefined;\n            let closeController = undefined;\n            if (isAfterEnabled) {\n                waitUntil = event.waitUntil.bind(event);\n                closeController = new CloseController();\n            }\n            return getTracer().trace(MiddlewareSpan.execute, {\n                spanName: `middleware ${request.method} ${request.nextUrl.pathname}`,\n                attributes: {\n                    'http.target': request.nextUrl.pathname,\n                    'http.method': request.method\n                }\n            }, async ()=>{\n                try {\n                    var _params_request_nextConfig_experimental, _params_request_nextConfig;\n                    const onUpdateCookies = (cookies)=>{\n                        cookiesFromResponse = cookies;\n                    };\n                    const previewProps = getEdgePreviewProps();\n                    const requestStore = createRequestStoreForAPI(request, request.nextUrl, undefined, onUpdateCookies, previewProps);\n                    return await withWorkStore(workAsyncStorage, {\n                        page: '/',\n                        fallbackRouteParams: null,\n                        renderOpts: {\n                            cacheLifeProfiles: (_params_request_nextConfig = params.request.nextConfig) == null ? void 0 : (_params_request_nextConfig_experimental = _params_request_nextConfig.experimental) == null ? void 0 : _params_request_nextConfig_experimental.cacheLife,\n                            experimental: {\n                                after: isAfterEnabled,\n                                isRoutePPREnabled: false,\n                                dynamicIO: false\n                            },\n                            buildId: buildId ?? '',\n                            supportsDynamicResponse: true,\n                            waitUntil,\n                            onClose: closeController ? closeController.onClose.bind(closeController) : undefined\n                        },\n                        requestEndedState: {\n                            ended: false\n                        },\n                        isPrefetchRequest: request.headers.has(NEXT_ROUTER_PREFETCH_HEADER)\n                    }, ()=>workUnitAsyncStorage.run(requestStore, params.handler, request, event));\n                } finally{\n                    // middleware cannot stream, so we can consider the response closed\n                    // as soon as the handler returns.\n                    if (closeController) {\n                        // we can delay running it until a bit later --\n                        // if it's needed, we'll have a `waitUntil` lock anyway.\n                        setTimeout(()=>{\n                            closeController.dispatchClose();\n                        }, 0);\n                    }\n                }\n            });\n        }\n        return params.handler(request, event);\n    });\n    // check if response is a Response object\n    if (response && !(response instanceof Response)) {\n        throw new TypeError('Expected an instance of Response to be returned');\n    }\n    if (response && cookiesFromResponse) {\n        response.headers.set('set-cookie', cookiesFromResponse);\n    }\n    /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */ const rewrite = response == null ? void 0 : response.headers.get('x-middleware-rewrite');\n    if (response && rewrite && !isEdgeRendering) {\n        const rewriteUrl = new NextURL(rewrite, {\n            forceLocale: true,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (rewriteUrl.host === request.nextUrl.host) {\n                rewriteUrl.buildId = buildId || rewriteUrl.buildId;\n                response.headers.set('x-middleware-rewrite', String(rewriteUrl));\n            }\n        }\n        /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */ const relativizedRewrite = relativizeURL(String(rewriteUrl), String(requestUrl));\n        if (isNextDataRequest && // if the rewrite is external and external rewrite\n        // resolving config is enabled don't add this header\n        // so the upstream app can set it instead\n        !(process.env.__NEXT_EXTERNAL_MIDDLEWARE_REWRITE_RESOLVE && relativizedRewrite.match(/http(s)?:\\/\\//))) {\n            response.headers.set('x-nextjs-rewrite', relativizedRewrite);\n        }\n    }\n    /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */ const redirect = response == null ? void 0 : response.headers.get('Location');\n    if (response && redirect && !isEdgeRendering) {\n        const redirectURL = new NextURL(redirect, {\n            forceLocale: false,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */ response = new Response(response.body, response);\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (redirectURL.host === request.nextUrl.host) {\n                redirectURL.buildId = buildId || redirectURL.buildId;\n                response.headers.set('Location', String(redirectURL));\n            }\n        }\n        /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */ if (isNextDataRequest) {\n            response.headers.delete('Location');\n            response.headers.set('x-nextjs-redirect', relativizeURL(String(redirectURL), String(requestUrl)));\n        }\n    }\n    const finalResponse = response ? response : NextResponse.next();\n    // Flight headers are not overridable / removable so they are applied at the end.\n    const middlewareOverrideHeaders = finalResponse.headers.get('x-middleware-override-headers');\n    const overwrittenHeaders = [];\n    if (middlewareOverrideHeaders) {\n        for (const [key, value] of flightHeaders){\n            finalResponse.headers.set(`x-middleware-request-${key}`, value);\n            overwrittenHeaders.push(key);\n        }\n        if (overwrittenHeaders.length > 0) {\n            finalResponse.headers.set('x-middleware-override-headers', middlewareOverrideHeaders + ',' + overwrittenHeaders.join(','));\n        }\n    }\n    return {\n        response: finalResponse,\n        waitUntil: getWaitUntilPromiseFromEvent(event) ?? Promise.resolve(),\n        fetchMetrics: request.fetchMetrics\n    };\n}\n\n//# sourceMappingURL=adapter.js.map","// Buffer.byteLength polyfill in the Edge runtime, with only utf8 strings\n// supported at the moment.\nexport function byteLength(payload) {\n    return new TextEncoder().encode(payload).buffer.byteLength;\n}\n\n//# sourceMappingURL=web.js.map","import type { RouteRegex } from './route-regex'\nimport { DecodeError } from '../../utils'\nimport type { Params } from '../../../../server/request/params'\n\nexport interface RouteMatchFn {\n  (pathname: string | null | undefined): false | Params\n}\n\nexport function getRouteMatcher({ re, groups }: RouteRegex): RouteMatchFn {\n  return (pathname: string | null | undefined) => {\n    const routeMatch = re.exec(pathname!)\n    if (!routeMatch) {\n      return false\n    }\n\n    const decode = (param: string) => {\n      try {\n        return decodeURIComponent(param)\n      } catch (_) {\n        throw new DecodeError('failed to decode param')\n      }\n    }\n    const params: { [paramName: string]: string | string[] } = {}\n\n    Object.keys(groups).forEach((slugName: string) => {\n      const g = groups[slugName]\n      const m = routeMatch[g.pos]\n      if (m !== undefined) {\n        params[slugName] = ~m.indexOf('/')\n          ? m.split('/').map((entry) => decode(entry))\n          : g.repeat\n            ? [decode(m)]\n            : decode(m)\n      }\n    })\n    return params\n  }\n}\n","import { getRouteMatcher } from '../../shared/lib/router/utils/route-matcher';\nimport { getRouteRegex } from '../../shared/lib/router/utils/route-regex';\nexport function getParamKeys(page) {\n    const pattern = getRouteRegex(page);\n    const matcher = getRouteMatcher(pattern);\n    // Get the default list of allowed params.\n    return Object.keys(matcher(page));\n}\nexport function getFallbackRouteParams(pageOrKeys) {\n    let keys;\n    if (typeof pageOrKeys === 'string') {\n        keys = getParamKeys(pageOrKeys);\n    } else {\n        keys = pageOrKeys;\n    }\n    // If there are no keys, we can return early.\n    if (keys.length === 0) return null;\n    const params = new Map();\n    // As we're creating unique keys for each of the dynamic route params, we only\n    // need to generate a unique ID once per request because each of the keys will\n    // be also be unique.\n    const uniqueID = Math.random().toString(16).slice(2);\n    for (const key of keys){\n        params.set(key, `%%drp:${key}:${uniqueID}%%`);\n    }\n    return params;\n}\n\n//# sourceMappingURL=fallback-params.js.map","// Regex from `node/lib/internal/net.js`: https://github.com/nodejs/node/blob/9fc57006c27564ed7f75eee090eca86786508f51/lib/internal/net.js#L19-L29\n// License included below:\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\nconst v6Seg = '(?:[0-9a-fA-F]{1,4})';\nconst IPv6Reg = new RegExp('^(' + `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` + `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` + `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1,2}|:)|` + `(?:${v6Seg}:){4}(?:(:${v6Seg}){0,1}:${v4Str}|(:${v6Seg}){1,3}|:)|` + `(?:${v6Seg}:){3}(?:(:${v6Seg}){0,2}:${v4Str}|(:${v6Seg}){1,4}|:)|` + `(?:${v6Seg}:){2}(?:(:${v6Seg}){0,3}:${v4Str}|(:${v6Seg}){1,5}|:)|` + `(?:${v6Seg}:){1}(?:(:${v6Seg}){0,4}:${v4Str}|(:${v6Seg}){1,6}|:)|` + `(?::((?::${v6Seg}){0,5}:${v4Str}|(?::${v6Seg}){1,7}|:))` + ')(%[0-9a-zA-Z-.:]{1,})?$');\nexport function isIPv6(s) {\n    return IPv6Reg.test(s);\n}\n\n//# sourceMappingURL=is-ipv6.js.map","import { isIPv6 } from './is-ipv6';\n/**\n * Formats a hostname so that it is a valid host that can be fetched by wrapping\n * IPv6 hosts with brackets.\n * @param hostname\n * @returns\n */ export function formatHostname(hostname) {\n    return isIPv6(hostname) ? `[${hostname}]` : hostname;\n}\n\n//# sourceMappingURL=format-hostname.js.map","import { RedirectStatusCode } from '../client/components/redirect-status-code';\nexport const allowedStatusCodes = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nexport function getRedirectStatus(route) {\n    return route.statusCode || (route.permanent ? RedirectStatusCode.PermanentRedirect : RedirectStatusCode.TemporaryRedirect);\n}\n// for redirects we restrict matching /_next and for all routes\n// we add an optional trailing slash at the end for easier\n// configuring between trailingSlash: true/false\nexport function modifyRouteRegex(regex, restrictedPaths) {\n    if (restrictedPaths) {\n        regex = regex.replace(/\\^/, `^(?!${restrictedPaths.map((path)=>path.replace(/\\//g, '\\\\/')).join('|')})`);\n    }\n    regex = regex.replace(/\\$$/, '(?:\\\\/)?$');\n    return regex;\n}\n\n//# sourceMappingURL=redirect-status.js.map","import { SERVER_RUNTIME } from './constants';\nexport function isEdgeRuntime(value) {\n    return value === SERVER_RUNTIME.experimentalEdge || value === SERVER_RUNTIME.edge;\n}\n\n//# sourceMappingURL=is-edge-runtime.js.map","import MODERN_BROWSERSLIST_TARGET from './modern-browserslist-target'\n\nexport { MODERN_BROWSERSLIST_TARGET }\n\nexport type ValueOf<T> = Required<T>[keyof T]\n\nexport const COMPILER_NAMES = {\n  client: 'client',\n  server: 'server',\n  edgeServer: 'edge-server',\n} as const\n\nexport type CompilerNameValues = ValueOf<typeof COMPILER_NAMES>\n\nexport const COMPILER_INDEXES: {\n  [compilerKey in CompilerNameValues]: number\n} = {\n  [COMPILER_NAMES.client]: 0,\n  [COMPILER_NAMES.server]: 1,\n  [COMPILER_NAMES.edgeServer]: 2,\n} as const\n\nexport const UNDERSCORE_NOT_FOUND_ROUTE = '/_not-found'\nexport const UNDERSCORE_NOT_FOUND_ROUTE_ENTRY = `${UNDERSCORE_NOT_FOUND_ROUTE}/page`\nexport const PHASE_EXPORT = 'phase-export'\nexport const PHASE_PRODUCTION_BUILD = 'phase-production-build'\nexport const PHASE_PRODUCTION_SERVER = 'phase-production-server'\nexport const PHASE_DEVELOPMENT_SERVER = 'phase-development-server'\nexport const PHASE_TEST = 'phase-test'\nexport const PHASE_INFO = 'phase-info'\nexport const PAGES_MANIFEST = 'pages-manifest.json'\nexport const WEBPACK_STATS = 'webpack-stats.json'\nexport const APP_PATHS_MANIFEST = 'app-paths-manifest.json'\nexport const APP_PATH_ROUTES_MANIFEST = 'app-path-routes-manifest.json'\nexport const BUILD_MANIFEST = 'build-manifest.json'\nexport const APP_BUILD_MANIFEST = 'app-build-manifest.json'\nexport const FUNCTIONS_CONFIG_MANIFEST = 'functions-config-manifest.json'\nexport const SUBRESOURCE_INTEGRITY_MANIFEST = 'subresource-integrity-manifest'\nexport const NEXT_FONT_MANIFEST = 'next-font-manifest'\nexport const EXPORT_MARKER = 'export-marker.json'\nexport const EXPORT_DETAIL = 'export-detail.json'\nexport const PRERENDER_MANIFEST = 'prerender-manifest.json'\nexport const ROUTES_MANIFEST = 'routes-manifest.json'\nexport const IMAGES_MANIFEST = 'images-manifest.json'\nexport const SERVER_FILES_MANIFEST = 'required-server-files.json'\nexport const DEV_CLIENT_PAGES_MANIFEST = '_devPagesManifest.json'\nexport const MIDDLEWARE_MANIFEST = 'middleware-manifest.json'\nexport const TURBOPACK_CLIENT_MIDDLEWARE_MANIFEST =\n  '_clientMiddlewareManifest.json'\nexport const DEV_CLIENT_MIDDLEWARE_MANIFEST = '_devMiddlewareManifest.json'\nexport const REACT_LOADABLE_MANIFEST = 'react-loadable-manifest.json'\nexport const SERVER_DIRECTORY = 'server'\nexport const CONFIG_FILES = [\n  'next.config.js',\n  'next.config.mjs',\n  'next.config.ts',\n]\nexport const BUILD_ID_FILE = 'BUILD_ID'\nexport const BLOCKED_PAGES = ['/_document', '/_app', '/_error']\nexport const CLIENT_PUBLIC_FILES_PATH = 'public'\nexport const CLIENT_STATIC_FILES_PATH = 'static'\nexport const STRING_LITERAL_DROP_BUNDLE = '__NEXT_DROP_CLIENT_FILE__'\nexport const NEXT_BUILTIN_DOCUMENT = '__NEXT_BUILTIN_DOCUMENT__'\nexport const BARREL_OPTIMIZATION_PREFIX = '__barrel_optimize__'\n\n// server/[entry]/page_client-reference-manifest.js\nexport const CLIENT_REFERENCE_MANIFEST = 'client-reference-manifest'\n// server/server-reference-manifest\nexport const SERVER_REFERENCE_MANIFEST = 'server-reference-manifest'\n// server/middleware-build-manifest.js\nexport const MIDDLEWARE_BUILD_MANIFEST = 'middleware-build-manifest'\n// server/middleware-react-loadable-manifest.js\nexport const MIDDLEWARE_REACT_LOADABLE_MANIFEST =\n  'middleware-react-loadable-manifest'\n// server/interception-route-rewrite-manifest.js\nexport const INTERCEPTION_ROUTE_REWRITE_MANIFEST =\n  'interception-route-rewrite-manifest'\n\n// static/runtime/main.js\nexport const CLIENT_STATIC_FILES_RUNTIME_MAIN = `main`\nexport const CLIENT_STATIC_FILES_RUNTIME_MAIN_APP = `${CLIENT_STATIC_FILES_RUNTIME_MAIN}-app`\n// next internal client components chunk for layouts\nexport const APP_CLIENT_INTERNALS = 'app-pages-internals'\n// static/runtime/react-refresh.js\nexport const CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH = `react-refresh`\n// static/runtime/amp.js\nexport const CLIENT_STATIC_FILES_RUNTIME_AMP = `amp`\n// static/runtime/webpack.js\nexport const CLIENT_STATIC_FILES_RUNTIME_WEBPACK = `webpack`\n// static/runtime/polyfills.js\nexport const CLIENT_STATIC_FILES_RUNTIME_POLYFILLS = 'polyfills'\nexport const CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL = Symbol(\n  CLIENT_STATIC_FILES_RUNTIME_POLYFILLS\n)\nexport const DEFAULT_RUNTIME_WEBPACK = 'webpack-runtime'\nexport const EDGE_RUNTIME_WEBPACK = 'edge-runtime-webpack'\nexport const STATIC_PROPS_ID = '__N_SSG'\nexport const SERVER_PROPS_ID = '__N_SSP'\nexport const DEFAULT_SERIF_FONT = {\n  name: 'Times New Roman',\n  xAvgCharWidth: 821,\n  azAvgWidth: 854.3953488372093,\n  unitsPerEm: 2048,\n}\nexport const DEFAULT_SANS_SERIF_FONT = {\n  name: 'Arial',\n  xAvgCharWidth: 904,\n  azAvgWidth: 934.5116279069767,\n  unitsPerEm: 2048,\n}\nexport const STATIC_STATUS_PAGES = ['/500']\nexport const TRACE_OUTPUT_VERSION = 1\n// in `MB`\nexport const TURBO_TRACE_DEFAULT_MEMORY_LIMIT = 6000\n\nexport const RSC_MODULE_TYPES = {\n  client: 'client',\n  server: 'server',\n} as const\n\n// comparing\n// https://nextjs.org/docs/api-reference/edge-runtime\n// with\n// https://nodejs.org/docs/latest/api/globals.html\nexport const EDGE_UNSUPPORTED_NODE_APIS = [\n  'clearImmediate',\n  'setImmediate',\n  'BroadcastChannel',\n  'ByteLengthQueuingStrategy',\n  'CompressionStream',\n  'CountQueuingStrategy',\n  'DecompressionStream',\n  'DomException',\n  'MessageChannel',\n  'MessageEvent',\n  'MessagePort',\n  'ReadableByteStreamController',\n  'ReadableStreamBYOBRequest',\n  'ReadableStreamDefaultController',\n  'TransformStreamDefaultController',\n  'WritableStreamDefaultController',\n]\n\nexport const SYSTEM_ENTRYPOINTS = new Set<string>([\n  CLIENT_STATIC_FILES_RUNTIME_MAIN,\n  CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH,\n  CLIENT_STATIC_FILES_RUNTIME_AMP,\n  CLIENT_STATIC_FILES_RUNTIME_MAIN_APP,\n])\n","import {\n  extractInterceptionRouteInformation,\n  isInterceptionRouteAppPath,\n} from '../../../../server/lib/interception-routes'\n\n// Identify /[param]/ in route string\nconst TEST_ROUTE = /\\/\\[[^/]+?\\](?=\\/|$)/\n\nexport function isDynamicRoute(route: string): boolean {\n  if (isInterceptionRouteAppPath(route)) {\n    route = extractInterceptionRouteInformation(route).interceptedRoute\n  }\n\n  return TEST_ROUTE.test(route)\n}\n","let runtimeConfig: any\n\nexport default () => {\n  return runtimeConfig\n}\n\nexport function setConfig(configValue: any): void {\n  runtimeConfig = configValue\n}\n","import { CACHE_ONE_YEAR } from '../../lib/constants';\nexport function formatRevalidate({ revalidate, expireTime }) {\n    const swrHeader = typeof revalidate === 'number' && expireTime !== undefined ? revalidate >= expireTime ? '' : `stale-while-revalidate=${expireTime - revalidate}` : 'stale-while-revalidate';\n    if (revalidate === 0) {\n        return 'private, no-cache, no-store, max-age=0, must-revalidate';\n    } else if (typeof revalidate === 'number') {\n        return `s-maxage=${revalidate}, ${swrHeader}`;\n    }\n    return `s-maxage=${CACHE_ONE_YEAR}, ${swrHeader}`;\n}\n\n//# sourceMappingURL=revalidate.js.map","import { BLOCKED_PAGES } from '../shared/lib/constants';\nexport function isBlockedPage(page) {\n    return BLOCKED_PAGES.includes(page);\n}\nexport function cleanAmpPath(pathname) {\n    if (pathname.match(/\\?amp=(y|yes|true|1)/)) {\n        pathname = pathname.replace(/\\?amp=(y|yes|true|1)&?/, '?');\n    }\n    if (pathname.match(/&amp=(y|yes|true|1)/)) {\n        pathname = pathname.replace(/&amp=(y|yes|true|1)/, '');\n    }\n    pathname = pathname.replace(/\\?$/, '');\n    return pathname;\n}\nexport function debounce(fn, ms, maxWait = Infinity) {\n    let timeoutId;\n    // The time the debouncing function was first called during this debounce queue.\n    let startTime = 0;\n    // The time the debouncing function was last called.\n    let lastCall = 0;\n    // The arguments and this context of the last call to the debouncing function.\n    let args, context;\n    // A helper used to that either invokes the debounced function, or\n    // reschedules the timer if a more recent call was made.\n    function run() {\n        const now = Date.now();\n        const diff = lastCall + ms - now;\n        // If the diff is non-positive, then we've waited at least `ms`\n        // milliseconds since the last call. Or if we've waited for longer than the\n        // max wait time, we must call the debounced function.\n        if (diff <= 0 || startTime + maxWait >= now) {\n            // It's important to clear the timeout id before invoking the debounced\n            // function, in case the function calls the debouncing function again.\n            timeoutId = undefined;\n            fn.apply(context, args);\n        } else {\n            // Else, a new call was made after the original timer was scheduled. We\n            // didn't clear the timeout (doing so is very slow), so now we need to\n            // reschedule the timer for the time difference.\n            timeoutId = setTimeout(run, diff);\n        }\n    }\n    return function(...passedArgs) {\n        // The arguments and this context of the most recent call are saved so the\n        // debounced function can be invoked with them later.\n        args = passedArgs;\n        context = this;\n        // Instead of constantly clearing and scheduling a timer, we record the\n        // time of the last call. If a second call comes in before the timer fires,\n        // then we'll reschedule in the run function. Doing this is considerably\n        // faster.\n        lastCall = Date.now();\n        // Only schedule a new timer if we're not currently waiting.\n        if (timeoutId === undefined) {\n            startTime = lastCall;\n            timeoutId = setTimeout(run, ms);\n        }\n    };\n}\n\n//# sourceMappingURL=utils.js.map","/**\n * For a given page path, this function ensures that there is no backslash\n * escaping slashes in the path. Example:\n *  - `foo\\/bar\\/baz` -> `foo/bar/baz`\n */\nexport function normalizePathSep(path: string): string {\n  return path.replace(/\\\\/g, '/')\n}\n","import { isDynamicRoute } from '../router/utils'\nimport { normalizePathSep } from './normalize-path-sep'\n\n/**\n * Performs the opposite transformation of `normalizePagePath`. Note that\n * this function is not idempotent either in cases where there are multiple\n * leading `/index` for the page. Examples:\n *  - `/index` -> `/`\n *  - `/index/foo` -> `/foo`\n *  - `/index/index` -> `/index`\n */\nexport function denormalizePagePath(page: string) {\n  let _page = normalizePathSep(page)\n  return _page.startsWith('/index/') && !isDynamicRoute(_page)\n    ? _page.slice(6)\n    : _page !== '/index'\n      ? _page\n      : '/'\n}\n","// escape delimiters used by path-to-regexp\nexport default function escapePathDelimiters(\n  segment: string,\n  escapeEncoded?: boolean\n): string {\n  return segment.replace(\n    new RegExp(`([/#?]${escapeEncoded ? '|%(2f|23|3f|5c)' : ''})`, 'gi'),\n    (char: string) => encodeURIComponent(char)\n  )\n}\n","import type { Key } from 'next/dist/compiled/path-to-regexp'\nimport { pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport { regexpToFunction } from 'next/dist/compiled/path-to-regexp'\n\ninterface Options {\n  /**\n   * A transformer function that will be applied to the regexp generated\n   * from the provided path and path-to-regexp.\n   */\n  regexModifier?: (regex: string) => string\n  /**\n   * When true the function will remove all unnamed parameters\n   * from the matched parameters.\n   */\n  removeUnnamedParams?: boolean\n  /**\n   * When true the regexp won't allow an optional trailing delimiter\n   * to match.\n   */\n  strict?: boolean\n\n  /**\n   * When true the matcher will be case-sensitive, defaults to false\n   */\n  sensitive?: boolean\n}\n\nexport type PatchMatcher = (\n  pathname?: string | null,\n  params?: Record<string, any>\n) => Record<string, any> | false\n\n/**\n * Generates a path matcher function for a given path and options based on\n * path-to-regexp. By default the match will be case insensitive, non strict\n * and delimited by `/`.\n */\nexport function getPathMatch(path: string, options?: Options): PatchMatcher {\n  const keys: Key[] = []\n  const regexp = pathToRegexp(path, keys, {\n    delimiter: '/',\n    sensitive:\n      typeof options?.sensitive === 'boolean' ? options.sensitive : false,\n    strict: options?.strict,\n  })\n\n  const matcher = regexpToFunction<Record<string, any>>(\n    options?.regexModifier\n      ? new RegExp(options.regexModifier(regexp.source), regexp.flags)\n      : regexp,\n    keys\n  )\n\n  /**\n   * A matcher function that will check if a given pathname matches the path\n   * given in the builder function. When the path does not match it will return\n   * `false` but if it does it will return an object with the matched params\n   * merged with the params provided in the second argument.\n   */\n  return (pathname, params) => {\n    // If no pathname is provided it's not a match.\n    if (typeof pathname !== 'string') return false\n\n    const match = matcher(pathname)\n\n    // If the path did not match `false` will be returned.\n    if (!match) return false\n\n    /**\n     * If unnamed params are not allowed they must be removed from\n     * the matched parameters. path-to-regexp uses \"string\" for named and\n     * \"number\" for unnamed parameters.\n     */\n    if (options?.removeUnnamedParams) {\n      for (const key of keys) {\n        if (typeof key.name === 'number') {\n          delete match.params[key.name]\n        }\n      }\n    }\n\n    return { ...params, ...match.params }\n  }\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nimport { searchParamsToUrlQuery } from './querystring'\nimport { parseRelativeUrl } from './parse-relative-url'\n\nexport interface ParsedUrl {\n  hash: string\n  hostname?: string | null\n  href: string\n  pathname: string\n  port?: string | null\n  protocol?: string | null\n  query: ParsedUrlQuery\n  search: string\n}\n\nexport function parseUrl(url: string): ParsedUrl {\n  if (url.startsWith('/')) {\n    return parseRelativeUrl(url)\n  }\n\n  const parsedURL = new URL(url)\n  return {\n    hash: parsedURL.hash,\n    hostname: parsedURL.hostname,\n    href: parsedURL.href,\n    pathname: parsedURL.pathname,\n    port: parsedURL.port,\n    protocol: parsedURL.protocol,\n    query: searchParamsToUrlQuery(parsedURL.searchParams),\n    search: parsedURL.search,\n  }\n}\n","/**\n * Parse cookies from the `headers` of request\n * @param req request object\n */ export function getCookieParser(headers) {\n    return function parseCookie() {\n        const { cookie } = headers;\n        if (!cookie) {\n            return {};\n        }\n        const { parse: parseCookieFn } = require('next/dist/compiled/cookie');\n        return parseCookieFn(Array.isArray(cookie) ? cookie.join('; ') : cookie);\n    };\n}\n\n//# sourceMappingURL=get-cookie-parser.js.map","import type { IncomingMessage } from 'http'\nimport type { Key } from 'next/dist/compiled/path-to-regexp'\nimport type { NextParsedUrlQuery } from '../../../../server/request-meta'\nimport type { RouteHas } from '../../../../lib/load-custom-routes'\nimport type { BaseNextRequest } from '../../../../server/base-http'\n\nimport { compile, pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { parseUrl } from './parse-url'\nimport {\n  INTERCEPTION_ROUTE_MARKERS,\n  isInterceptionRouteAppPath,\n} from '../../../../server/lib/interception-routes'\nimport { NEXT_RSC_UNION_QUERY } from '../../../../client/components/app-router-headers'\nimport { getCookieParser } from '../../../../server/api-utils/get-cookie-parser'\nimport type { Params } from '../../../../server/request/params'\n\n/**\n * Ensure only a-zA-Z are used for param names for proper interpolating\n * with path-to-regexp\n */\nfunction getSafeParamName(paramName: string) {\n  let newParamName = ''\n\n  for (let i = 0; i < paramName.length; i++) {\n    const charCode = paramName.charCodeAt(i)\n\n    if (\n      (charCode > 64 && charCode < 91) || // A-Z\n      (charCode > 96 && charCode < 123) // a-z\n    ) {\n      newParamName += paramName[i]\n    }\n  }\n  return newParamName\n}\n\nfunction escapeSegment(str: string, segmentName: string) {\n  return str.replace(\n    new RegExp(`:${escapeStringRegexp(segmentName)}`, 'g'),\n    `__ESC_COLON_${segmentName}`\n  )\n}\n\nfunction unescapeSegments(str: string) {\n  return str.replace(/__ESC_COLON_/gi, ':')\n}\n\nexport function matchHas(\n  req: BaseNextRequest | IncomingMessage,\n  query: Params,\n  has: RouteHas[] = [],\n  missing: RouteHas[] = []\n): false | Params {\n  const params: Params = {}\n\n  const hasMatch = (hasItem: RouteHas) => {\n    let value\n    let key = hasItem.key\n\n    switch (hasItem.type) {\n      case 'header': {\n        key = key!.toLowerCase()\n        value = req.headers[key] as string\n        break\n      }\n      case 'cookie': {\n        if ('cookies' in req) {\n          value = req.cookies[hasItem.key]\n        } else {\n          const cookies = getCookieParser(req.headers)()\n          value = cookies[hasItem.key]\n        }\n\n        break\n      }\n      case 'query': {\n        value = query[key!]\n        break\n      }\n      case 'host': {\n        const { host } = req?.headers || {}\n        // remove port from host if present\n        const hostname = host?.split(':', 1)[0].toLowerCase()\n        value = hostname\n        break\n      }\n      default: {\n        break\n      }\n    }\n\n    if (!hasItem.value && value) {\n      params[getSafeParamName(key!)] = value\n      return true\n    } else if (value) {\n      const matcher = new RegExp(`^${hasItem.value}$`)\n      const matches = Array.isArray(value)\n        ? value.slice(-1)[0].match(matcher)\n        : value.match(matcher)\n\n      if (matches) {\n        if (Array.isArray(matches)) {\n          if (matches.groups) {\n            Object.keys(matches.groups).forEach((groupKey) => {\n              params[groupKey] = matches.groups![groupKey]\n            })\n          } else if (hasItem.type === 'host' && matches[0]) {\n            params.host = matches[0]\n          }\n        }\n        return true\n      }\n    }\n    return false\n  }\n\n  const allMatch =\n    has.every((item) => hasMatch(item)) &&\n    !missing.some((item) => hasMatch(item))\n\n  if (allMatch) {\n    return params\n  }\n  return false\n}\n\nexport function compileNonPath(value: string, params: Params): string {\n  if (!value.includes(':')) {\n    return value\n  }\n\n  for (const key of Object.keys(params)) {\n    if (value.includes(`:${key}`)) {\n      value = value\n        .replace(\n          new RegExp(`:${key}\\\\*`, 'g'),\n          `:${key}--ESCAPED_PARAM_ASTERISKS`\n        )\n        .replace(\n          new RegExp(`:${key}\\\\?`, 'g'),\n          `:${key}--ESCAPED_PARAM_QUESTION`\n        )\n        .replace(new RegExp(`:${key}\\\\+`, 'g'), `:${key}--ESCAPED_PARAM_PLUS`)\n        .replace(\n          new RegExp(`:${key}(?!\\\\w)`, 'g'),\n          `--ESCAPED_PARAM_COLON${key}`\n        )\n    }\n  }\n  value = value\n    .replace(/(:|\\*|\\?|\\+|\\(|\\)|\\{|\\})/g, '\\\\$1')\n    .replace(/--ESCAPED_PARAM_PLUS/g, '+')\n    .replace(/--ESCAPED_PARAM_COLON/g, ':')\n    .replace(/--ESCAPED_PARAM_QUESTION/g, '?')\n    .replace(/--ESCAPED_PARAM_ASTERISKS/g, '*')\n\n  // the value needs to start with a forward-slash to be compiled\n  // correctly\n  return compile(`/${value}`, { validate: false })(params).slice(1)\n}\n\nexport function prepareDestination(args: {\n  appendParamsToQuery: boolean\n  destination: string\n  params: Params\n  query: NextParsedUrlQuery\n}) {\n  const query = Object.assign({}, args.query)\n  delete query.__nextLocale\n  delete query.__nextDefaultLocale\n  delete query.__nextDataReq\n  delete query.__nextInferredLocaleFromDefault\n  delete query[NEXT_RSC_UNION_QUERY]\n\n  let escapedDestination = args.destination\n\n  for (const param of Object.keys({ ...args.params, ...query })) {\n    escapedDestination = param\n      ? escapeSegment(escapedDestination, param)\n      : escapedDestination\n  }\n\n  const parsedDestination = parseUrl(escapedDestination)\n  const destQuery = parsedDestination.query\n  const destPath = unescapeSegments(\n    `${parsedDestination.pathname!}${parsedDestination.hash || ''}`\n  )\n  const destHostname = unescapeSegments(parsedDestination.hostname || '')\n  const destPathParamKeys: Key[] = []\n  const destHostnameParamKeys: Key[] = []\n  pathToRegexp(destPath, destPathParamKeys)\n  pathToRegexp(destHostname, destHostnameParamKeys)\n\n  const destParams: (string | number)[] = []\n\n  destPathParamKeys.forEach((key) => destParams.push(key.name))\n  destHostnameParamKeys.forEach((key) => destParams.push(key.name))\n\n  const destPathCompiler = compile(\n    destPath,\n    // we don't validate while compiling the destination since we should\n    // have already validated before we got to this point and validating\n    // breaks compiling destinations with named pattern params from the source\n    // e.g. /something:hello(.*) -> /another/:hello is broken with validation\n    // since compile validation is meant for reversing and not for inserting\n    // params from a separate path-regex into another\n    { validate: false }\n  )\n\n  const destHostnameCompiler = compile(destHostname, { validate: false })\n\n  // update any params in query values\n  for (const [key, strOrArray] of Object.entries(destQuery)) {\n    // the value needs to start with a forward-slash to be compiled\n    // correctly\n    if (Array.isArray(strOrArray)) {\n      destQuery[key] = strOrArray.map((value) =>\n        compileNonPath(unescapeSegments(value), args.params)\n      )\n    } else if (typeof strOrArray === 'string') {\n      destQuery[key] = compileNonPath(unescapeSegments(strOrArray), args.params)\n    }\n  }\n\n  // add path params to query if it's not a redirect and not\n  // already defined in destination query or path\n  let paramKeys = Object.keys(args.params).filter(\n    (name) => name !== 'nextInternalLocale'\n  )\n\n  if (\n    args.appendParamsToQuery &&\n    !paramKeys.some((key) => destParams.includes(key))\n  ) {\n    for (const key of paramKeys) {\n      if (!(key in destQuery)) {\n        destQuery[key] = args.params[key]\n      }\n    }\n  }\n\n  let newUrl\n\n  // The compiler also that the interception route marker is an unnamed param, hence '0',\n  // so we need to add it to the params object.\n  if (isInterceptionRouteAppPath(destPath)) {\n    for (const segment of destPath.split('/')) {\n      const marker = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n        segment.startsWith(m)\n      )\n      if (marker) {\n        if (marker === '(..)(..)') {\n          args.params['0'] = '(..)'\n          args.params['1'] = '(..)'\n        } else {\n          args.params['0'] = marker\n        }\n        break\n      }\n    }\n  }\n\n  try {\n    newUrl = destPathCompiler(args.params)\n\n    const [pathname, hash] = newUrl.split('#', 2)\n    parsedDestination.hostname = destHostnameCompiler(args.params)\n    parsedDestination.pathname = pathname\n    parsedDestination.hash = `${hash ? '#' : ''}${hash || ''}`\n    delete (parsedDestination as any).search\n  } catch (err: any) {\n    if (err.message.match(/Expected .*? to not repeat, but got an array/)) {\n      throw new Error(\n        `To use a multi-match in the destination you must add \\`*\\` at the end of the param name to signify it should repeat. https://nextjs.org/docs/messages/invalid-multi-match`\n      )\n    }\n    throw err\n  }\n\n  // Query merge order lowest priority to highest\n  // 1. initial URL query values\n  // 2. path segment values\n  // 3. destination specified query values\n  parsedDestination.query = {\n    ...query,\n    ...parsedDestination.query,\n  }\n\n  return {\n    newUrl,\n    destQuery,\n    parsedDestination,\n  }\n}\n","import { format as formatUrl, parse as parseUrl } from 'url';\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path';\nimport { getPathMatch } from '../shared/lib/router/utils/path-match';\nimport { getNamedRouteRegex } from '../shared/lib/router/utils/route-regex';\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher';\nimport { matchHas, prepareDestination } from '../shared/lib/router/utils/prepare-destination';\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash';\nimport { normalizeRscURL } from '../shared/lib/router/utils/app-paths';\nimport { NEXT_INTERCEPTION_MARKER_PREFIX, NEXT_QUERY_PARAM_PREFIX } from '../lib/constants';\nexport function normalizeVercelUrl(req, trustQuery, paramKeys, pageIsDynamic, defaultRouteRegex) {\n    // make sure to normalize req.url on Vercel to strip dynamic params\n    // from the query which are added during routing\n    if (pageIsDynamic && trustQuery && defaultRouteRegex) {\n        const _parsedUrl = parseUrl(req.url, true);\n        delete _parsedUrl.search;\n        for (const key of Object.keys(_parsedUrl.query)){\n            const isNextQueryPrefix = key !== NEXT_QUERY_PARAM_PREFIX && key.startsWith(NEXT_QUERY_PARAM_PREFIX);\n            const isNextInterceptionMarkerPrefix = key !== NEXT_INTERCEPTION_MARKER_PREFIX && key.startsWith(NEXT_INTERCEPTION_MARKER_PREFIX);\n            if (isNextQueryPrefix || isNextInterceptionMarkerPrefix || (paramKeys || Object.keys(defaultRouteRegex.groups)).includes(key)) {\n                delete _parsedUrl.query[key];\n            }\n        }\n        req.url = formatUrl(_parsedUrl);\n    }\n}\nexport function interpolateDynamicPath(pathname, params, defaultRouteRegex) {\n    if (!defaultRouteRegex) return pathname;\n    for (const param of Object.keys(defaultRouteRegex.groups)){\n        const { optional, repeat } = defaultRouteRegex.groups[param];\n        let builtParam = `[${repeat ? '...' : ''}${param}]`;\n        if (optional) {\n            builtParam = `[${builtParam}]`;\n        }\n        let paramValue;\n        const value = params[param];\n        if (Array.isArray(value)) {\n            paramValue = value.map((v)=>v && encodeURIComponent(v)).join('/');\n        } else if (value) {\n            paramValue = encodeURIComponent(value);\n        } else {\n            paramValue = '';\n        }\n        pathname = pathname.replaceAll(builtParam, paramValue);\n    }\n    return pathname;\n}\nexport function normalizeDynamicRouteParams(params, ignoreOptional, defaultRouteRegex, defaultRouteMatches) {\n    let hasValidParams = true;\n    if (!defaultRouteRegex) return {\n        params,\n        hasValidParams: false\n    };\n    params = Object.keys(defaultRouteRegex.groups).reduce((prev, key)=>{\n        let value = params[key];\n        if (typeof value === 'string') {\n            value = normalizeRscURL(value);\n        }\n        if (Array.isArray(value)) {\n            value = value.map((val)=>{\n                if (typeof val === 'string') {\n                    val = normalizeRscURL(val);\n                }\n                return val;\n            });\n        }\n        // if the value matches the default value we can't rely\n        // on the parsed params, this is used to signal if we need\n        // to parse x-now-route-matches or not\n        const defaultValue = defaultRouteMatches[key];\n        const isOptional = defaultRouteRegex.groups[key].optional;\n        const isDefaultValue = Array.isArray(defaultValue) ? defaultValue.some((defaultVal)=>{\n            return Array.isArray(value) ? value.some((val)=>val.includes(defaultVal)) : value == null ? void 0 : value.includes(defaultVal);\n        }) : value == null ? void 0 : value.includes(defaultValue);\n        if (isDefaultValue || typeof value === 'undefined' && !(isOptional && ignoreOptional)) {\n            hasValidParams = false;\n        }\n        // non-provided optional values should be undefined so normalize\n        // them to undefined\n        if (isOptional && (!value || Array.isArray(value) && value.length === 1 && // fallback optional catch-all SSG pages have\n        // [[...paramName]] for the root path on Vercel\n        (value[0] === 'index' || value[0] === `[[...${key}]]`))) {\n            value = undefined;\n            delete params[key];\n        }\n        // query values from the proxy aren't already split into arrays\n        // so make sure to normalize catch-all values\n        if (value && typeof value === 'string' && defaultRouteRegex.groups[key].repeat) {\n            value = value.split('/');\n        }\n        if (value) {\n            prev[key] = value;\n        }\n        return prev;\n    }, {});\n    return {\n        params,\n        hasValidParams\n    };\n}\nexport function getUtils({ page, i18n, basePath, rewrites, pageIsDynamic, trailingSlash, caseSensitive }) {\n    let defaultRouteRegex;\n    let dynamicRouteMatcher;\n    let defaultRouteMatches;\n    if (pageIsDynamic) {\n        defaultRouteRegex = getNamedRouteRegex(page, false);\n        dynamicRouteMatcher = getRouteMatcher(defaultRouteRegex);\n        defaultRouteMatches = dynamicRouteMatcher(page);\n    }\n    function handleRewrites(req, parsedUrl) {\n        const rewriteParams = {};\n        let fsPathname = parsedUrl.pathname;\n        const matchesPage = ()=>{\n            const fsPathnameNoSlash = removeTrailingSlash(fsPathname || '');\n            return fsPathnameNoSlash === removeTrailingSlash(page) || (dynamicRouteMatcher == null ? void 0 : dynamicRouteMatcher(fsPathnameNoSlash));\n        };\n        const checkRewrite = (rewrite)=>{\n            const matcher = getPathMatch(rewrite.source + (trailingSlash ? '(/)?' : ''), {\n                removeUnnamedParams: true,\n                strict: true,\n                sensitive: !!caseSensitive\n            });\n            let params = matcher(parsedUrl.pathname);\n            if ((rewrite.has || rewrite.missing) && params) {\n                const hasParams = matchHas(req, parsedUrl.query, rewrite.has, rewrite.missing);\n                if (hasParams) {\n                    Object.assign(params, hasParams);\n                } else {\n                    params = false;\n                }\n            }\n            if (params) {\n                const { parsedDestination, destQuery } = prepareDestination({\n                    appendParamsToQuery: true,\n                    destination: rewrite.destination,\n                    params: params,\n                    query: parsedUrl.query\n                });\n                // if the rewrite destination is external break rewrite chain\n                if (parsedDestination.protocol) {\n                    return true;\n                }\n                Object.assign(rewriteParams, destQuery, params);\n                Object.assign(parsedUrl.query, parsedDestination.query);\n                delete parsedDestination.query;\n                Object.assign(parsedUrl, parsedDestination);\n                fsPathname = parsedUrl.pathname;\n                if (basePath) {\n                    fsPathname = fsPathname.replace(new RegExp(`^${basePath}`), '') || '/';\n                }\n                if (i18n) {\n                    const destLocalePathResult = normalizeLocalePath(fsPathname, i18n.locales);\n                    fsPathname = destLocalePathResult.pathname;\n                    parsedUrl.query.nextInternalLocale = destLocalePathResult.detectedLocale || params.nextInternalLocale;\n                }\n                if (fsPathname === page) {\n                    return true;\n                }\n                if (pageIsDynamic && dynamicRouteMatcher) {\n                    const dynamicParams = dynamicRouteMatcher(fsPathname);\n                    if (dynamicParams) {\n                        parsedUrl.query = {\n                            ...parsedUrl.query,\n                            ...dynamicParams\n                        };\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n        for (const rewrite of rewrites.beforeFiles || []){\n            checkRewrite(rewrite);\n        }\n        if (fsPathname !== page) {\n            let finished = false;\n            for (const rewrite of rewrites.afterFiles || []){\n                finished = checkRewrite(rewrite);\n                if (finished) break;\n            }\n            if (!finished && !matchesPage()) {\n                for (const rewrite of rewrites.fallback || []){\n                    finished = checkRewrite(rewrite);\n                    if (finished) break;\n                }\n            }\n        }\n        return rewriteParams;\n    }\n    function getParamsFromRouteMatches(req, renderOpts, detectedLocale) {\n        return getRouteMatcher(function() {\n            const { groups, routeKeys } = defaultRouteRegex;\n            return {\n                re: {\n                    // Simulate a RegExp match from the \\`req.url\\` input\n                    exec: (str)=>{\n                        const obj = Object.fromEntries(new URLSearchParams(str));\n                        const matchesHasLocale = i18n && detectedLocale && obj['1'] === detectedLocale;\n                        for (const key of Object.keys(obj)){\n                            const value = obj[key];\n                            if (key !== NEXT_QUERY_PARAM_PREFIX && key.startsWith(NEXT_QUERY_PARAM_PREFIX)) {\n                                const normalizedKey = key.substring(NEXT_QUERY_PARAM_PREFIX.length);\n                                obj[normalizedKey] = value;\n                                delete obj[key];\n                            }\n                        }\n                        // favor named matches if available\n                        const routeKeyNames = Object.keys(routeKeys || {});\n                        const filterLocaleItem = (val)=>{\n                            if (i18n) {\n                                // locale items can be included in route-matches\n                                // for fallback SSG pages so ensure they are\n                                // filtered\n                                const isCatchAll = Array.isArray(val);\n                                const _val = isCatchAll ? val[0] : val;\n                                if (typeof _val === 'string' && i18n.locales.some((item)=>{\n                                    if (item.toLowerCase() === _val.toLowerCase()) {\n                                        detectedLocale = item;\n                                        renderOpts.locale = detectedLocale;\n                                        return true;\n                                    }\n                                    return false;\n                                })) {\n                                    // remove the locale item from the match\n                                    if (isCatchAll) {\n                                        val.splice(0, 1);\n                                    }\n                                    // the value is only a locale item and\n                                    // shouldn't be added\n                                    return isCatchAll ? val.length === 0 : true;\n                                }\n                            }\n                            return false;\n                        };\n                        if (routeKeyNames.every((name)=>obj[name])) {\n                            return routeKeyNames.reduce((prev, keyName)=>{\n                                const paramName = routeKeys == null ? void 0 : routeKeys[keyName];\n                                if (paramName && !filterLocaleItem(obj[keyName])) {\n                                    prev[groups[paramName].pos] = obj[keyName];\n                                }\n                                return prev;\n                            }, {});\n                        }\n                        return Object.keys(obj).reduce((prev, key)=>{\n                            if (!filterLocaleItem(obj[key])) {\n                                let normalizedKey = key;\n                                if (matchesHasLocale) {\n                                    normalizedKey = parseInt(key, 10) - 1 + '';\n                                }\n                                return Object.assign(prev, {\n                                    [normalizedKey]: obj[key]\n                                });\n                            }\n                            return prev;\n                        }, {});\n                    }\n                },\n                groups\n            };\n        }())(req.headers['x-now-route-matches']);\n    }\n    return {\n        handleRewrites,\n        defaultRouteRegex,\n        dynamicRouteMatcher,\n        defaultRouteMatches,\n        getParamsFromRouteMatches,\n        normalizeDynamicRouteParams: (params, ignoreOptional)=>normalizeDynamicRouteParams(params, ignoreOptional, defaultRouteRegex, defaultRouteMatches),\n        normalizeVercelUrl: (req, trustQuery, paramKeys)=>normalizeVercelUrl(req, trustQuery, paramKeys, pageIsDynamic, defaultRouteRegex),\n        interpolateDynamicPath: (pathname, params)=>interpolateDynamicPath(pathname, params, defaultRouteRegex)\n    };\n}\n\n//# sourceMappingURL=server-utils.js.map","/**\n * Normalizes the pathname by removing the locale prefix if any.\n */ export class LocaleRouteNormalizer {\n    constructor(provider){\n        this.provider = provider;\n    }\n    /**\n   * Normalizes the pathname by removing the locale prefix if any.\n   *\n   * @param pathname The pathname to normalize.\n   * @returns The pathname without the locale prefix (if any).\n   */ normalize(pathname) {\n        const match = this.provider.analyze(pathname);\n        return match.pathname;\n    }\n}\n\n//# sourceMappingURL=locale-route-normalizer.js.map","class UrlNode {\n  placeholder: boolean = true\n  children: Map<string, UrlNode> = new Map()\n  slugName: string | null = null\n  restSlugName: string | null = null\n  optionalRestSlugName: string | null = null\n\n  insert(urlPath: string): void {\n    this._insert(urlPath.split('/').filter(Boolean), [], false)\n  }\n\n  smoosh(): string[] {\n    return this._smoosh()\n  }\n\n  private _smoosh(prefix: string = '/'): string[] {\n    const childrenPaths = [...this.children.keys()].sort()\n    if (this.slugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[]'), 1)\n    }\n    if (this.restSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[...]'), 1)\n    }\n    if (this.optionalRestSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[[...]]'), 1)\n    }\n\n    const routes = childrenPaths\n      .map((c) => this.children.get(c)!._smoosh(`${prefix}${c}/`))\n      .reduce((prev, curr) => [...prev, ...curr], [])\n\n    if (this.slugName !== null) {\n      routes.push(\n        ...this.children.get('[]')!._smoosh(`${prefix}[${this.slugName}]/`)\n      )\n    }\n\n    if (!this.placeholder) {\n      const r = prefix === '/' ? '/' : prefix.slice(0, -1)\n      if (this.optionalRestSlugName != null) {\n        throw new Error(\n          `You cannot define a route with the same specificity as a optional catch-all route (\"${r}\" and \"${r}[[...${this.optionalRestSlugName}]]\").`\n        )\n      }\n\n      routes.unshift(r)\n    }\n\n    if (this.restSlugName !== null) {\n      routes.push(\n        ...this.children\n          .get('[...]')!\n          ._smoosh(`${prefix}[...${this.restSlugName}]/`)\n      )\n    }\n\n    if (this.optionalRestSlugName !== null) {\n      routes.push(\n        ...this.children\n          .get('[[...]]')!\n          ._smoosh(`${prefix}[[...${this.optionalRestSlugName}]]/`)\n      )\n    }\n\n    return routes\n  }\n\n  private _insert(\n    urlPaths: string[],\n    slugNames: string[],\n    isCatchAll: boolean\n  ): void {\n    if (urlPaths.length === 0) {\n      this.placeholder = false\n      return\n    }\n\n    if (isCatchAll) {\n      throw new Error(`Catch-all must be the last part of the URL.`)\n    }\n\n    // The next segment in the urlPaths list\n    let nextSegment = urlPaths[0]\n\n    // Check if the segment matches `[something]`\n    if (nextSegment.startsWith('[') && nextSegment.endsWith(']')) {\n      // Strip `[` and `]`, leaving only `something`\n      let segmentName = nextSegment.slice(1, -1)\n\n      let isOptional = false\n      if (segmentName.startsWith('[') && segmentName.endsWith(']')) {\n        // Strip optional `[` and `]`, leaving only `something`\n        segmentName = segmentName.slice(1, -1)\n        isOptional = true\n      }\n\n      if (segmentName.startsWith('…')) {\n        throw new Error(\n          `Detected a three-dot character ('…') at ('${segmentName}'). Did you mean ('...')?`\n        )\n      }\n\n      if (segmentName.startsWith('...')) {\n        // Strip `...`, leaving only `something`\n        segmentName = segmentName.substring(3)\n        isCatchAll = true\n      }\n\n      if (segmentName.startsWith('[') || segmentName.endsWith(']')) {\n        throw new Error(\n          `Segment names may not start or end with extra brackets ('${segmentName}').`\n        )\n      }\n\n      if (segmentName.startsWith('.')) {\n        throw new Error(\n          `Segment names may not start with erroneous periods ('${segmentName}').`\n        )\n      }\n\n      function handleSlug(previousSlug: string | null, nextSlug: string) {\n        if (previousSlug !== null) {\n          // If the specific segment already has a slug but the slug is not `something`\n          // This prevents collisions like:\n          // pages/[post]/index.js\n          // pages/[id]/index.js\n          // Because currently multiple dynamic params on the same segment level are not supported\n          if (previousSlug !== nextSlug) {\n            // TODO: This error seems to be confusing for users, needs an error link, the description can be based on above comment.\n            throw new Error(\n              `You cannot use different slug names for the same dynamic path ('${previousSlug}' !== '${nextSlug}').`\n            )\n          }\n        }\n\n        slugNames.forEach((slug) => {\n          if (slug === nextSlug) {\n            throw new Error(\n              `You cannot have the same slug name \"${nextSlug}\" repeat within a single dynamic path`\n            )\n          }\n\n          if (slug.replace(/\\W/g, '') === nextSegment.replace(/\\W/g, '')) {\n            throw new Error(\n              `You cannot have the slug names \"${slug}\" and \"${nextSlug}\" differ only by non-word symbols within a single dynamic path`\n            )\n          }\n        })\n\n        slugNames.push(nextSlug)\n      }\n\n      if (isCatchAll) {\n        if (isOptional) {\n          if (this.restSlugName != null) {\n            throw new Error(\n              `You cannot use both an required and optional catch-all route at the same level (\"[...${this.restSlugName}]\" and \"${urlPaths[0]}\" ).`\n            )\n          }\n\n          handleSlug(this.optionalRestSlugName, segmentName)\n          // slugName is kept as it can only be one particular slugName\n          this.optionalRestSlugName = segmentName\n          // nextSegment is overwritten to [[...]] so that it can later be sorted specifically\n          nextSegment = '[[...]]'\n        } else {\n          if (this.optionalRestSlugName != null) {\n            throw new Error(\n              `You cannot use both an optional and required catch-all route at the same level (\"[[...${this.optionalRestSlugName}]]\" and \"${urlPaths[0]}\").`\n            )\n          }\n\n          handleSlug(this.restSlugName, segmentName)\n          // slugName is kept as it can only be one particular slugName\n          this.restSlugName = segmentName\n          // nextSegment is overwritten to [...] so that it can later be sorted specifically\n          nextSegment = '[...]'\n        }\n      } else {\n        if (isOptional) {\n          throw new Error(\n            `Optional route parameters are not yet supported (\"${urlPaths[0]}\").`\n          )\n        }\n        handleSlug(this.slugName, segmentName)\n        // slugName is kept as it can only be one particular slugName\n        this.slugName = segmentName\n        // nextSegment is overwritten to [] so that it can later be sorted specifically\n        nextSegment = '[]'\n      }\n    }\n\n    // If this UrlNode doesn't have the nextSegment yet we create a new child UrlNode\n    if (!this.children.has(nextSegment)) {\n      this.children.set(nextSegment, new UrlNode())\n    }\n\n    this.children\n      .get(nextSegment)!\n      ._insert(urlPaths.slice(1), slugNames, isCatchAll)\n  }\n}\n\nexport function getSortedRoutes(\n  normalizedPages: ReadonlyArray<string>\n): string[] {\n  // First the UrlNode is created, and every UrlNode can have only 1 dynamic segment\n  // Eg you can't have pages/[post]/abc.js and pages/[hello]/something-else.js\n  // Only 1 dynamic segment per nesting level\n\n  // So in the case that is test/integration/dynamic-routing it'll be this:\n  // pages/[post]/comments.js\n  // pages/blog/[post]/comment/[id].js\n  // Both are fine because `pages/[post]` and `pages/blog` are on the same level\n  // So in this case `UrlNode` created here has `this.slugName === 'post'`\n  // And since your PR passed through `slugName` as an array basically it'd including it in too many possibilities\n  // Instead what has to be passed through is the upwards path's dynamic names\n  const root = new UrlNode()\n\n  // Here the `root` gets injected multiple paths, and insert will break them up into sublevels\n  normalizedPages.forEach((pagePath) => root.insert(pagePath))\n  // Smoosh will then sort those sublevels up to the point where you get the correct route definition priority\n  return root.smoosh()\n}\n\nexport function getSortedRouteObjects<T>(\n  objects: T[],\n  getter: (obj: T) => string\n): T[] {\n  // We're assuming here that all the pathnames are unique, that way we can\n  // sort the list and use the index as the key.\n  const indexes: Record<string, number> = {}\n  const pathnames: string[] = []\n  for (let i = 0; i < objects.length; i++) {\n    const pathname = getter(objects[i])\n    indexes[pathname] = i\n    pathnames[i] = pathname\n  }\n\n  // Sort the pathnames.\n  const sorted = getSortedRoutes(pathnames)\n\n  // Map the sorted pathnames back to the original objects using the new sorted\n  // index.\n  return sorted.map((pathname) => objects[indexes[pathname]])\n}\n","import { isDynamicRoute } from '../../shared/lib/router/utils';\nimport { getRouteMatcher } from '../../shared/lib/router/utils/route-matcher';\nimport { getRouteRegex } from '../../shared/lib/router/utils/route-regex';\nexport class RouteMatcher {\n    constructor(definition){\n        this.definition = definition;\n        if (isDynamicRoute(definition.pathname)) {\n            this.dynamic = getRouteMatcher(getRouteRegex(definition.pathname));\n        }\n    }\n    /**\n   * Identity returns the identity part of the matcher. This is used to compare\n   * a unique matcher to another. This is also used when sorting dynamic routes,\n   * so it must contain the pathname part.\n   */ get identity() {\n        return this.definition.pathname;\n    }\n    get isDynamic() {\n        return this.dynamic !== undefined;\n    }\n    match(pathname) {\n        const result = this.test(pathname);\n        if (!result) return null;\n        return {\n            definition: this.definition,\n            params: result.params\n        };\n    }\n    test(pathname) {\n        if (this.dynamic) {\n            const params = this.dynamic(pathname);\n            if (!params) return null;\n            return {\n                params\n            };\n        }\n        if (pathname === this.definition.pathname) {\n            return {};\n        }\n        return null;\n    }\n}\n\n//# sourceMappingURL=route-matcher.js.map","import { RouteMatcher } from './route-matcher';\nexport class LocaleRouteMatcher extends RouteMatcher {\n    /**\n   * Identity returns the identity part of the matcher. This is used to compare\n   * a unique matcher to another. This is also used when sorting dynamic routes,\n   * so it must contain the pathname part as well.\n   */ get identity() {\n        var _this_definition_i18n;\n        return `${this.definition.pathname}?__nextLocale=${(_this_definition_i18n = this.definition.i18n) == null ? void 0 : _this_definition_i18n.locale}`;\n    }\n    /**\n   * Match will attempt to match the given pathname against this route while\n   * also taking into account the locale information.\n   *\n   * @param pathname The pathname to match against.\n   * @param options The options to use when matching.\n   * @returns The match result, or `null` if there was no match.\n   */ match(pathname, options) {\n        var // If the options have a detected locale, then use that, otherwise use\n        // the route's locale.\n        _options_i18n, _this_definition_i18n;\n        // This is like the parent `match` method but instead this injects the\n        // additional `options` into the\n        const result = this.test(pathname, options);\n        if (!result) return null;\n        return {\n            definition: this.definition,\n            params: result.params,\n            detectedLocale: (options == null ? void 0 : (_options_i18n = options.i18n) == null ? void 0 : _options_i18n.detectedLocale) ?? ((_this_definition_i18n = this.definition.i18n) == null ? void 0 : _this_definition_i18n.locale)\n        };\n    }\n    /**\n   * Test will attempt to match the given pathname against this route while\n   * also taking into account the locale information.\n   *\n   * @param pathname The pathname to match against.\n   * @param options The options to use when matching.\n   * @returns The match result, or `null` if there was no match.\n   */ test(pathname, options) {\n        // If this route has locale information and we have detected a locale, then\n        // we need to compare the detected locale to the route's locale.\n        if (this.definition.i18n && (options == null ? void 0 : options.i18n)) {\n            // If we have detected a locale and it does not match this route's locale,\n            // then this isn't a match!\n            if (this.definition.i18n.locale && options.i18n.detectedLocale && this.definition.i18n.locale !== options.i18n.detectedLocale) {\n                return null;\n            }\n            // Perform regular matching against the locale stripped pathname now, the\n            // locale information matches!\n            return super.test(options.i18n.pathname);\n        }\n        // If we don't have locale information, then we can just perform regular\n        // matching.\n        return super.test(pathname);\n    }\n}\n\n//# sourceMappingURL=locale-route-matcher.js.map","import { isDynamicRoute } from '../../shared/lib/router/utils';\nimport { getSortedRoutes } from '../../shared/lib/router/utils';\nimport { LocaleRouteMatcher } from '../route-matchers/locale-route-matcher';\nimport { ensureLeadingSlash } from '../../shared/lib/page-path/ensure-leading-slash';\nimport { DetachedPromise } from '../../lib/detached-promise';\nexport class DefaultRouteMatcherManager {\n    /**\n   * When this value changes, it indicates that a change has been introduced\n   * that requires recompilation.\n   */ get compilationID() {\n        return this.providers.length;\n    }\n    async waitTillReady() {\n        if (this.waitTillReadyPromise) {\n            await this.waitTillReadyPromise;\n            delete this.waitTillReadyPromise;\n        }\n    }\n    async reload() {\n        const { promise, resolve, reject } = new DetachedPromise();\n        this.waitTillReadyPromise = promise;\n        // Grab the compilation ID for this run, we'll verify it at the end to\n        // ensure that if any routes were added before reloading is finished that\n        // we error out.\n        const compilationID = this.compilationID;\n        try {\n            // Collect all the matchers from each provider.\n            const matchers = [];\n            // Get all the providers matchers.\n            const providersMatchers = await Promise.all(this.providers.map((provider)=>provider.matchers()));\n            // Use this to detect duplicate pathnames.\n            const all = new Map();\n            const duplicates = {};\n            for (const providerMatchers of providersMatchers){\n                for (const matcher of providerMatchers){\n                    // Reset duplicated matches when reloading from pages conflicting state.\n                    if (matcher.duplicated) delete matcher.duplicated;\n                    // Test to see if the matcher being added is a duplicate.\n                    const duplicate = all.get(matcher.definition.pathname);\n                    if (duplicate) {\n                        // This looks a little weird, but essentially if the pathname\n                        // already exists in the duplicates map, then we got that array\n                        // reference. Otherwise, we create a new array with the original\n                        // duplicate first. Then we push the new matcher into the duplicate\n                        // array, and reset it to the duplicates object (which may be a\n                        // no-op if the pathname already existed in the duplicates object).\n                        // Then we set the array of duplicates on both the original\n                        // duplicate object and the new one, so we can keep them in sync.\n                        // If a new duplicate is found, and it matches an existing pathname,\n                        // the retrieval of the `other` will actually return the array\n                        // reference used by all other duplicates. This is why ReadonlyArray\n                        // is so important! Array's are always references!\n                        const others = duplicates[matcher.definition.pathname] ?? [\n                            duplicate\n                        ];\n                        others.push(matcher);\n                        duplicates[matcher.definition.pathname] = others;\n                        // Add duplicated details to each route.\n                        duplicate.duplicated = others;\n                        matcher.duplicated = others;\n                    // TODO: see if we should error for duplicates in production?\n                    }\n                    matchers.push(matcher);\n                    // Add the matcher's pathname to the set.\n                    all.set(matcher.definition.pathname, matcher);\n                }\n            }\n            // Update the duplicate matchers. This is used in the development manager\n            // to warn about duplicates.\n            this.matchers.duplicates = duplicates;\n            // If the cache is the same as what we just parsed, we can exit now. We\n            // can tell by using the `===` which compares object identity, which for\n            // the manifest matchers, will return the same matcher each time.\n            if (this.previousMatchers.length === matchers.length && this.previousMatchers.every((cachedMatcher, index)=>cachedMatcher === matchers[index])) {\n                return;\n            }\n            this.previousMatchers = matchers;\n            // For matchers that are for static routes, filter them now.\n            this.matchers.static = matchers.filter((matcher)=>!matcher.isDynamic);\n            // For matchers that are for dynamic routes, filter them and sort them now.\n            const dynamic = matchers.filter((matcher)=>matcher.isDynamic);\n            // As `getSortedRoutes` only takes an array of strings, we need to create\n            // a map of the pathnames (used for sorting) and the matchers. When we\n            // have locales, there may be multiple matches for the same pathname. To\n            // handle this, we keep a map of all the indexes (in `reference`) and\n            // merge them in later.\n            const reference = new Map();\n            const pathnames = new Array();\n            for(let index = 0; index < dynamic.length; index++){\n                // Grab the pathname from the definition.\n                const pathname = dynamic[index].definition.pathname;\n                // Grab the index in the dynamic array, push it into the reference.\n                const indexes = reference.get(pathname) ?? [];\n                indexes.push(index);\n                // If this is the first one set it. If it isn't, we don't need to\n                // because pushing above on the array will mutate the array already\n                // stored there because array's are always a reference!\n                if (indexes.length === 1) reference.set(pathname, indexes);\n                else continue;\n                pathnames.push(pathname);\n            }\n            // Sort the array of pathnames.\n            const sorted = getSortedRoutes(pathnames);\n            // For each of the sorted pathnames, iterate over them, grabbing the list\n            // of indexes and merging them back into the new `sortedDynamicMatchers`\n            // array. The order of the same matching pathname doesn't matter because\n            // they will have other matching characteristics (like the locale) that\n            // is considered.\n            const sortedDynamicMatchers = [];\n            for (const pathname of sorted){\n                const indexes = reference.get(pathname);\n                if (!Array.isArray(indexes)) {\n                    throw new Error('Invariant: expected to find identity in indexes map');\n                }\n                const dynamicMatches = indexes.map((index)=>dynamic[index]);\n                sortedDynamicMatchers.push(...dynamicMatches);\n            }\n            this.matchers.dynamic = sortedDynamicMatchers;\n            // This means that there was a new matcher pushed while we were waiting\n            if (this.compilationID !== compilationID) {\n                throw new Error('Invariant: expected compilation to finish before new matchers were added, possible missing await');\n            }\n        } catch (err) {\n            reject(err);\n        } finally{\n            // The compilation ID matched, so mark the complication as finished.\n            this.lastCompilationID = compilationID;\n            resolve();\n        }\n    }\n    push(provider) {\n        this.providers.push(provider);\n    }\n    async test(pathname, options) {\n        // See if there's a match for the pathname...\n        const match = await this.match(pathname, options);\n        // This default implementation only needs to check to see if there _was_ a\n        // match. The development matcher actually changes it's behavior by not\n        // recompiling the routes.\n        return match !== null;\n    }\n    async match(pathname, options) {\n        // \"Iterate\" over the match options. Once we found a single match, exit with\n        // it, otherwise return null below. If no match is found, the inner block\n        // won't be called.\n        for await (const match of this.matchAll(pathname, options)){\n            return match;\n        }\n        return null;\n    }\n    /**\n   * This is a point for other managers to override to inject other checking\n   * behavior like duplicate route checking on a per-request basis.\n   *\n   * @param pathname the pathname to validate against\n   * @param matcher the matcher to validate/test with\n   * @returns the match if found\n   */ validate(pathname, matcher, options) {\n        var _options_i18n;\n        if (matcher instanceof LocaleRouteMatcher) {\n            return matcher.match(pathname, options);\n        }\n        // If the locale was inferred from the default locale, then it will have\n        // already added a locale to the pathname. We need to remove it before\n        // matching because this matcher is not locale aware.\n        if ((_options_i18n = options.i18n) == null ? void 0 : _options_i18n.inferredFromDefault) {\n            return matcher.match(options.i18n.pathname);\n        }\n        return matcher.match(pathname);\n    }\n    async *matchAll(pathname, options) {\n        // Guard against the matcher manager from being run before it needs to be\n        // recompiled. This was preferred to re-running the compilation here because\n        // it should be re-ran only when it changes. If a match is attempted before\n        // this is done, it indicates that there is a case where a provider is added\n        // before it was recompiled (an error). We also don't want to affect request\n        // times.\n        if (this.lastCompilationID !== this.compilationID) {\n            throw new Error('Invariant: expected routes to have been loaded before match');\n        }\n        // Ensure that path matching is done with a leading slash.\n        pathname = ensureLeadingSlash(pathname);\n        // If this pathname doesn't look like a dynamic route, and this pathname is\n        // listed in the normalized list of routes, then return it. This ensures\n        // that when a route like `/user/[id]` is encountered, it doesn't just match\n        // with the list of normalized routes.\n        if (!isDynamicRoute(pathname)) {\n            for (const matcher of this.matchers.static){\n                const match = this.validate(pathname, matcher, options);\n                if (!match) continue;\n                yield match;\n            }\n        }\n        // If we should skip handling dynamic routes, exit now.\n        if (options == null ? void 0 : options.skipDynamic) return null;\n        // Loop over the dynamic matchers, yielding each match.\n        for (const matcher of this.matchers.dynamic){\n            const match = this.validate(pathname, matcher, options);\n            if (!match) continue;\n            yield match;\n        }\n        // We tried direct matching against the pathname and against all the dynamic\n        // paths, so there was no match.\n        return null;\n    }\n    constructor(){\n        this.providers = [];\n        this.matchers = {\n            static: [],\n            dynamic: [],\n            duplicates: {}\n        };\n        this.lastCompilationID = this.compilationID;\n        this.previousMatchers = [];\n    }\n}\n\n//# sourceMappingURL=default-route-matcher-manager.js.map","export function isAppPageRoute(route) {\n    return route.endsWith('/page');\n}\n\n//# sourceMappingURL=is-app-page-route.js.map","/**\n * Normalizers combines many normalizers into a single normalizer interface that\n * will normalize the inputted pathname with each normalizer in order.\n */ export class Normalizers {\n    constructor(normalizers = []){\n        this.normalizers = normalizers;\n    }\n    push(normalizer) {\n        this.normalizers.push(normalizer);\n    }\n    normalize(pathname) {\n        return this.normalizers.reduce((normalized, normalizer)=>normalizer.normalize(normalized), pathname);\n    }\n}\n\n//# sourceMappingURL=normalizers.js.map","import path from '../../shared/lib/isomorphic/path';\nexport class PrefixingNormalizer {\n    constructor(...prefixes){\n        this.prefix = path.posix.join(...prefixes);\n    }\n    normalize(pathname) {\n        return path.posix.join(this.prefix, pathname);\n    }\n}\n\n//# sourceMappingURL=prefixing-normalizer.js.map","import { ensureLeadingSlash } from './ensure-leading-slash'\nimport { isDynamicRoute } from '../router/utils'\nimport { NormalizeError } from '../utils'\n\n/**\n * Takes a page and transforms it into its file counterpart ensuring that the\n * output is normalized. Note this function is not idempotent because a page\n * `/index` can be referencing `/index/index.js` and `/index/index` could be\n * referencing `/index/index/index.js`. Examples:\n *  - `/` -> `/index`\n *  - `/index/foo` -> `/index/index/foo`\n *  - `/index` -> `/index/index`\n */\nexport function normalizePagePath(page: string): string {\n  const normalized =\n    /^\\/index(\\/|$)/.test(page) && !isDynamicRoute(page)\n      ? `/index${page}`\n      : page === '/'\n        ? '/index'\n        : ensureLeadingSlash(page)\n\n  if (process.env.NEXT_RUNTIME !== 'edge') {\n    const { posix } = require('path')\n    const resolvedPage = posix.normalize(normalized)\n    if (resolvedPage !== normalized) {\n      throw new NormalizeError(\n        `Requested and resolved page mismatch: ${normalized} ${resolvedPage}`\n      )\n    }\n  }\n\n  return normalized\n}\n","import { Normalizers } from '../../normalizers';\nimport { PrefixingNormalizer } from '../../prefixing-normalizer';\nimport { normalizePagePath } from '../../../../shared/lib/page-path/normalize-page-path';\nexport class AppBundlePathNormalizer extends PrefixingNormalizer {\n    constructor(){\n        super('app');\n    }\n    normalize(page) {\n        return super.normalize(normalizePagePath(page));\n    }\n}\nexport class DevAppBundlePathNormalizer extends Normalizers {\n    constructor(pageNormalizer){\n        super([\n            // This should normalize the filename to a page.\n            pageNormalizer,\n            // Normalize the app page to a pathname.\n            new AppBundlePathNormalizer()\n        ]);\n    }\n    normalize(filename) {\n        return super.normalize(filename);\n    }\n}\n\n//# sourceMappingURL=app-bundle-path-normalizer.js.map","import { SERVER_DIRECTORY } from '../../../../shared/lib/constants';\nimport { PrefixingNormalizer } from '../../prefixing-normalizer';\nexport class AppFilenameNormalizer extends PrefixingNormalizer {\n    constructor(distDir){\n        super(distDir, SERVER_DIRECTORY);\n    }\n    normalize(manifestFilename) {\n        return super.normalize(manifestFilename);\n    }\n}\n\n//# sourceMappingURL=app-filename-normalizer.js.map","export var PAGE_TYPES;\n(function(PAGE_TYPES) {\n    PAGE_TYPES[\"PAGES\"] = \"pages\";\n    PAGE_TYPES[\"ROOT\"] = \"root\";\n    PAGE_TYPES[\"APP\"] = \"app\";\n})(PAGE_TYPES || (PAGE_TYPES = {}));\n\n//# sourceMappingURL=page-types.js.map","import { normalizePathSep } from './normalize-path-sep'\n\n/**\n * Removes the file extension for a page and the trailing `index` if it exists\n * making sure to not return an empty string. The page head is not touched\n * and returned as it is passed. Examples:\n *   - `/foo/bar/baz/index.js` -> `/foo/bar/baz`\n *   - `/foo/bar/baz.js` -> `/foo/bar/baz`\n *\n * @param pagePath A page to a page file (absolute or relative)\n * @param options.extensions Extensions allowed for the page.\n * @param options.keepIndex When true the trailing `index` is _not_ removed.\n */\nexport function removePagePathTail(\n  pagePath: string,\n  options: {\n    extensions: ReadonlyArray<string>\n    keepIndex?: boolean\n  }\n) {\n  pagePath = normalizePathSep(pagePath).replace(\n    new RegExp(`\\\\.+(?:${options.extensions.join('|')})$`),\n    ''\n  )\n\n  if (options.keepIndex !== true) {\n    pagePath = pagePath.replace(/\\/index$/, '') || '/'\n  }\n\n  return pagePath\n}\n","import { normalizePathSep } from '../../shared/lib/page-path/normalize-path-sep';\nexport const STATIC_METADATA_IMAGES = {\n    icon: {\n        filename: 'icon',\n        extensions: [\n            'ico',\n            'jpg',\n            'jpeg',\n            'png',\n            'svg'\n        ]\n    },\n    apple: {\n        filename: 'apple-icon',\n        extensions: [\n            'jpg',\n            'jpeg',\n            'png'\n        ]\n    },\n    favicon: {\n        filename: 'favicon',\n        extensions: [\n            'ico'\n        ]\n    },\n    openGraph: {\n        filename: 'opengraph-image',\n        extensions: [\n            'jpg',\n            'jpeg',\n            'png',\n            'gif'\n        ]\n    },\n    twitter: {\n        filename: 'twitter-image',\n        extensions: [\n            'jpg',\n            'jpeg',\n            'png',\n            'gif'\n        ]\n    }\n};\n// Match routes that are metadata routes, e.g. /sitemap.xml, /favicon.<ext>, /<icon>.<ext>, etc.\n// TODO-METADATA: support more metadata routes with more extensions\nconst defaultExtensions = [\n    'js',\n    'jsx',\n    'ts',\n    'tsx'\n];\n// Match the file extension with the dynamic multi-routes extensions\n// e.g. ([xml, js], null) -> can match `/sitemap.xml/route`, `sitemap.js/route`\n// e.g. ([png], [ts]) -> can match `/opengrapg-image.png/route`, `/opengraph-image.ts[]/route`\nexport const getExtensionRegexString = (staticExtensions, dynamicExtensions)=>{\n    // If there's no possible multi dynamic routes, will not match any <name>[].<ext> files\n    if (!dynamicExtensions) {\n        return `\\\\.(?:${staticExtensions.join('|')})`;\n    }\n    return `(?:\\\\.(${staticExtensions.join('|')})|((\\\\[\\\\])?\\\\.(${dynamicExtensions.join('|')})))`;\n};\n// When you only pass the file extension as `[]`, it will only match the static convention files\n// e.g. /robots.txt, /sitemap.xml, /favicon.ico, /manifest.json\n// When you pass the file extension as `['js', 'jsx', 'ts', 'tsx']`, it will also match the dynamic convention files\n// e.g. /robots.js, /sitemap.tsx, /favicon.jsx, /manifest.ts\n// When `withExtension` is false, it will match the static convention files without the extension, by default it's true\n// e.g. /robots, /sitemap, /favicon, /manifest, use to match dynamic API routes like app/robots.ts\nexport function isMetadataRouteFile(appDirRelativePath, pageExtensions, withExtension) {\n    const metadataRouteFilesRegex = [\n        new RegExp(`^[\\\\\\\\/]robots${withExtension ? `${getExtensionRegexString(pageExtensions.concat('txt'), null)}$` : ''}`),\n        new RegExp(`^[\\\\\\\\/]manifest${withExtension ? `${getExtensionRegexString(pageExtensions.concat('webmanifest', 'json'), null)}$` : ''}`),\n        new RegExp(`^[\\\\\\\\/]favicon\\\\.ico$`),\n        new RegExp(`[\\\\\\\\/]sitemap${withExtension ? `${getExtensionRegexString([\n            'xml'\n        ], pageExtensions)}$` : ''}`),\n        new RegExp(`[\\\\\\\\/]${STATIC_METADATA_IMAGES.icon.filename}\\\\d?${withExtension ? `${getExtensionRegexString(STATIC_METADATA_IMAGES.icon.extensions, pageExtensions)}$` : ''}`),\n        new RegExp(`[\\\\\\\\/]${STATIC_METADATA_IMAGES.apple.filename}\\\\d?${withExtension ? `${getExtensionRegexString(STATIC_METADATA_IMAGES.apple.extensions, pageExtensions)}$` : ''}`),\n        new RegExp(`[\\\\\\\\/]${STATIC_METADATA_IMAGES.openGraph.filename}\\\\d?${withExtension ? `${getExtensionRegexString(STATIC_METADATA_IMAGES.openGraph.extensions, pageExtensions)}$` : ''}`),\n        new RegExp(`[\\\\\\\\/]${STATIC_METADATA_IMAGES.twitter.filename}\\\\d?${withExtension ? `${getExtensionRegexString(STATIC_METADATA_IMAGES.twitter.extensions, pageExtensions)}$` : ''}`)\n    ];\n    const normalizedAppDirRelativePath = normalizePathSep(appDirRelativePath);\n    return metadataRouteFilesRegex.some((r)=>r.test(normalizedAppDirRelativePath));\n}\nexport function isStaticMetadataRouteFile(appDirRelativePath) {\n    return isMetadataRouteFile(appDirRelativePath, [], true);\n}\nexport function isStaticMetadataRoute(page) {\n    return page === '/robots' || page === '/manifest' || isStaticMetadataRouteFile(page);\n}\n/*\n * Remove the 'app' prefix or '/route' suffix, only check the route name since they're only allowed in root app directory\n * e.g.\n * /app/robots -> /robots\n * app/robots -> /robots\n * /robots -> /robots\n */ export function isMetadataRoute(route) {\n    let page = route.replace(/^\\/?app\\//, '').replace(/\\/route$/, '');\n    if (page[0] !== '/') page = '/' + page;\n    return !page.endsWith('/page') && isMetadataRouteFile(page, defaultExtensions, false);\n}\n\n//# sourceMappingURL=is-metadata-route.js.map","import { isMetadataRoute } from './is-metadata-route';\nimport path from '../../shared/lib/isomorphic/path';\nimport { interpolateDynamicPath } from '../../server/server-utils';\nimport { getNamedRouteRegex } from '../../shared/lib/router/utils/route-regex';\nimport { djb2Hash } from '../../shared/lib/hash';\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths';\nimport { normalizePathSep } from '../../shared/lib/page-path/normalize-path-sep';\n/*\n * If there's special convention like (...) or @ in the page path,\n * Give it a unique hash suffix to avoid conflicts\n *\n * e.g.\n * /app/opengraph-image.tsx -> /opengraph-image\n * /app/(post)/opengraph-image.tsx -> /opengraph-image-[0-9a-z]{6}\n */ function getMetadataRouteSuffix(page) {\n    let suffix = '';\n    if (page.includes('(') && page.includes(')') || page.includes('@')) {\n        suffix = djb2Hash(page).toString(36).slice(0, 6);\n    }\n    return suffix;\n}\n/**\n * Fill the dynamic segment in the metadata route\n *\n * Example:\n * fillMetadataSegment('/a/[slug]', { params: { slug: 'b' } }, 'open-graph') -> '/a/b/open-graph'\n *\n */ export function fillMetadataSegment(segment, params, imageSegment) {\n    const pathname = normalizeAppPath(segment);\n    const routeRegex = getNamedRouteRegex(pathname, false);\n    const route = interpolateDynamicPath(pathname, params, routeRegex);\n    const suffix = getMetadataRouteSuffix(segment);\n    const routeSuffix = suffix ? `-${suffix}` : '';\n    const { name, ext } = path.parse(imageSegment);\n    return normalizePathSep(path.join(route, `${name}${routeSuffix}${ext}`));\n}\n/**\n * Map metadata page key to the corresponding route\n *\n * static file page key:    /app/robots.txt -> /robots.xml -> /robots.txt/route\n * dynamic route page key:  /app/robots.tsx -> /robots -> /robots.txt/route\n *\n * @param page\n * @returns\n */ export function normalizeMetadataRoute(page) {\n    if (!isMetadataRoute(page)) {\n        return page;\n    }\n    let route = page;\n    let suffix = '';\n    if (page === '/robots') {\n        route += '.txt';\n    } else if (page === '/manifest') {\n        route += '.webmanifest';\n    } else {\n        // Remove the file extension,\n        // e.g. /path/robots.txt -> /route-path\n        // e.g. /path/opengraph-image.tsx -> /path/opengraph-image\n        const pathnamePrefix = page.slice(0, -(path.basename(page).length + 1));\n        suffix = getMetadataRouteSuffix(pathnamePrefix);\n    }\n    // Support both /<metadata-route.ext> and custom routes /<metadata-route>/route.ts.\n    // If it's a metadata file route, we need to append /[id]/route to the page.\n    if (!route.endsWith('/route')) {\n        const { dir, name: baseName, ext } = path.parse(route);\n        route = path.posix.join(dir, `${baseName}${suffix ? `-${suffix}` : ''}${ext}`, 'route');\n    }\n    return route;\n}\n// Normalize metadata route page to either a single route or a dynamic route.\n// e.g. Input: /sitemap/route\n// when isDynamic is false, single route -> /sitemap.xml/route\n// when isDynamic is false, dynamic route -> /sitemap/[__metadata_id__]/route\n// also works for pathname such as /sitemap -> /sitemap.xml, but will not append /route suffix\nexport function normalizeMetadataPageToRoute(page, isDynamic) {\n    const isRoute = page.endsWith('/route');\n    const routePagePath = isRoute ? page.slice(0, -'/route'.length) : page;\n    const metadataRouteExtension = routePagePath.endsWith('/sitemap') ? '.xml' : '';\n    const mapped = isDynamic ? `${routePagePath}/[__metadata_id__]` : `${routePagePath}${metadataRouteExtension}`;\n    return mapped + (isRoute ? '/route' : '');\n}\n\n//# sourceMappingURL=get-metadata-route.js.map","import { ensureLeadingSlash } from './ensure-leading-slash'\nimport { normalizePathSep } from './normalize-path-sep'\nimport path from '../isomorphic/path'\nimport { removePagePathTail } from './remove-page-path-tail'\nimport { normalizeMetadataRoute } from '../../../lib/metadata/get-metadata-route'\nimport type { PAGE_TYPES } from '../../../lib/page-types'\n\n/**\n * Given the absolute path to the pages folder, an absolute file path for a\n * page and the page extensions, this function will return the page path\n * relative to the pages folder. It doesn't consider index tail. Example:\n *  - `/Users/rick/my-project/pages/foo/bar/baz.js` -> `/foo/bar/baz`\n *\n * It also handles special metadata routes mapping. Example:\n * - `/Users/rick/my-project/app/sitemap.js` -> `/sitemap/route`\n *\n * @param filepath Absolute path to the page.\n * @param opts.dir Absolute path to the pages/app folder.\n * @param opts.extensions Extensions allowed for the page.\n * @param opts.keepIndex When true the trailing `index` kept in the path.\n * @param opts.pagesType Whether the page is in the pages or app directory.\n */\nexport function absolutePathToPage(\n  pagePath: string,\n  options: {\n    extensions: string[] | readonly string[]\n    keepIndex: boolean\n    dir: string\n    pagesType: PAGE_TYPES\n  }\n) {\n  const isAppDir = options.pagesType === 'app'\n  const page = removePagePathTail(\n    normalizePathSep(ensureLeadingSlash(path.relative(options.dir, pagePath))),\n    {\n      extensions: options.extensions,\n      keepIndex: options.keepIndex,\n    }\n  )\n  return isAppDir ? normalizeMetadataRoute(page) : page\n}\n","import { absolutePathToPage } from '../../shared/lib/page-path/absolute-path-to-page';\n/**\n * Normalizes a given filename so that it's relative to the provided directory.\n * It will also strip the extension (if provided) and the trailing `/index`.\n */ export class AbsoluteFilenameNormalizer {\n    /**\n   *\n   * @param dir the directory for which the files should be made relative to\n   * @param extensions the extensions the file could have\n   * @param keepIndex when `true` the trailing `/index` is _not_ removed\n   */ constructor(dir, extensions, pagesType){\n        this.dir = dir;\n        this.extensions = extensions;\n        this.pagesType = pagesType;\n    }\n    normalize(filename) {\n        return absolutePathToPage(filename, {\n            extensions: this.extensions,\n            keepIndex: false,\n            dir: this.dir,\n            pagesType: this.pagesType\n        });\n    }\n}\n\n//# sourceMappingURL=absolute-filename-normalizer.js.map","import { PAGE_TYPES } from '../../../../lib/page-types';\nimport { AbsoluteFilenameNormalizer } from '../../absolute-filename-normalizer';\n/**\n * DevAppPageNormalizer is a normalizer that is used to normalize a pathname\n * to a page in the `app` directory.\n */ export class DevAppPageNormalizer extends AbsoluteFilenameNormalizer {\n    constructor(appDir, extensions){\n        super(appDir, extensions, PAGE_TYPES.APP);\n    }\n}\n\n//# sourceMappingURL=app-page-normalizer.js.map","export function wrapNormalizerFn(fn) {\n    return {\n        normalize: fn\n    };\n}\n\n//# sourceMappingURL=wrap-normalizer-fn.js.map","/**\n * UnderscoreNormalizer replaces all instances of %5F with _.\n */ export class UnderscoreNormalizer {\n    normalize(pathname) {\n        return pathname.replace(/%5F/g, '_');\n    }\n}\n\n//# sourceMappingURL=underscore-normalizer.js.map","import { normalizeAppPath } from '../../../../shared/lib/router/utils/app-paths';\nimport { Normalizers } from '../../normalizers';\nimport { wrapNormalizerFn } from '../../wrap-normalizer-fn';\nimport { UnderscoreNormalizer } from '../../underscore-normalizer';\nexport class AppPathnameNormalizer extends Normalizers {\n    constructor(){\n        super([\n            // The pathname to match should have the trailing `/page` and other route\n            // group information stripped from it.\n            wrapNormalizerFn(normalizeAppPath),\n            // The page should have the `%5F` characters replaced with `_` characters.\n            new UnderscoreNormalizer()\n        ]);\n    }\n    normalize(page) {\n        return super.normalize(page);\n    }\n}\nexport class DevAppPathnameNormalizer extends Normalizers {\n    constructor(pageNormalizer){\n        super([\n            // This should normalize the filename to a page.\n            pageNormalizer,\n            // Normalize the app page to a pathname.\n            new AppPathnameNormalizer()\n        ]);\n    }\n    normalize(filename) {\n        return super.normalize(filename);\n    }\n}\n\n//# sourceMappingURL=app-pathname-normalizer.js.map","import { AppBundlePathNormalizer, DevAppBundlePathNormalizer } from './app-bundle-path-normalizer';\nimport { AppFilenameNormalizer } from './app-filename-normalizer';\nimport { DevAppPageNormalizer } from './app-page-normalizer';\nimport { AppPathnameNormalizer, DevAppPathnameNormalizer } from './app-pathname-normalizer';\nexport class AppNormalizers {\n    constructor(distDir){\n        this.filename = new AppFilenameNormalizer(distDir);\n        this.pathname = new AppPathnameNormalizer();\n        this.bundlePath = new AppBundlePathNormalizer();\n    }\n}\nexport class DevAppNormalizers {\n    constructor(appDir, extensions){\n        this.page = new DevAppPageNormalizer(appDir, extensions);\n        this.pathname = new DevAppPathnameNormalizer(this.page);\n        this.bundlePath = new DevAppBundlePathNormalizer(this.page);\n    }\n}\n\n//# sourceMappingURL=index.js.map","import { RouteMatcher } from './route-matcher';\nexport class AppPageRouteMatcher extends RouteMatcher {\n    get identity() {\n        return `${this.definition.pathname}?__nextPage=${this.definition.page}`;\n    }\n}\n\n//# sourceMappingURL=app-page-route-matcher.js.map","/**\n * This will memoize the matchers if the loaded data is comparable.\n */ export class CachedRouteMatcherProvider {\n    constructor(loader){\n        this.loader = loader;\n        this.cached = [];\n    }\n    async matchers() {\n        const data = await this.loader.load();\n        if (!data) return [];\n        // Return the cached matchers if the data has not changed.\n        if (this.data && this.loader.compare(this.data, data)) return this.cached;\n        this.data = data;\n        // Transform the manifest into matchers.\n        const matchers = await this.transform(data);\n        // Cache the matchers.\n        this.cached = matchers;\n        return matchers;\n    }\n}\n\n//# sourceMappingURL=cached-route-matcher-provider.js.map","import { CachedRouteMatcherProvider } from './helpers/cached-route-matcher-provider';\nexport class ManifestRouteMatcherProvider extends CachedRouteMatcherProvider {\n    constructor(manifestName, manifestLoader){\n        super({\n            load: async ()=>manifestLoader.load(manifestName),\n            compare: (left, right)=>left === right\n        });\n    }\n}\n\n//# sourceMappingURL=manifest-route-matcher-provider.js.map","import { isAppPageRoute } from '../../lib/is-app-page-route';\nimport { APP_PATHS_MANIFEST } from '../../shared/lib/constants';\nimport { AppNormalizers } from '../normalizers/built/app';\nimport { RouteKind } from '../route-kind';\nimport { AppPageRouteMatcher } from '../route-matchers/app-page-route-matcher';\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider';\nexport class AppPageRouteMatcherProvider extends ManifestRouteMatcherProvider {\n    constructor(distDir, manifestLoader){\n        super(APP_PATHS_MANIFEST, manifestLoader);\n        this.normalizers = new AppNormalizers(distDir);\n    }\n    async transform(manifest) {\n        // This matcher only matches app pages.\n        const pages = Object.keys(manifest).filter((page)=>isAppPageRoute(page));\n        // Collect all the app paths for each page. This could include any parallel\n        // routes.\n        const allAppPaths = {};\n        for (const page of pages){\n            const pathname = this.normalizers.pathname.normalize(page);\n            if (pathname in allAppPaths) allAppPaths[pathname].push(page);\n            else allAppPaths[pathname] = [\n                page\n            ];\n        }\n        // Format the routes.\n        const matchers = [];\n        for (const [pathname, appPaths] of Object.entries(allAppPaths)){\n            // TODO-APP: (wyattjoh) this is a hack right now, should be more deterministic\n            const page = appPaths[0];\n            const filename = this.normalizers.filename.normalize(manifest[page]);\n            const bundlePath = this.normalizers.bundlePath.normalize(page);\n            matchers.push(new AppPageRouteMatcher({\n                kind: RouteKind.APP_PAGE,\n                pathname,\n                page,\n                bundlePath,\n                filename,\n                appPaths\n            }));\n        }\n        return matchers;\n    }\n}\n\n//# sourceMappingURL=app-page-route-matcher-provider.js.map","export function isAppRouteRoute(route) {\n    return route.endsWith('/route');\n}\n\n//# sourceMappingURL=is-app-route-route.js.map","import { RouteMatcher } from './route-matcher';\nexport class AppRouteRouteMatcher extends RouteMatcher {\n}\n\n//# sourceMappingURL=app-route-route-matcher.js.map","import { isAppRouteRoute } from '../../lib/is-app-route-route';\nimport { APP_PATHS_MANIFEST } from '../../shared/lib/constants';\nimport { RouteKind } from '../route-kind';\nimport { AppRouteRouteMatcher } from '../route-matchers/app-route-route-matcher';\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider';\nimport { AppNormalizers } from '../normalizers/built/app';\nexport class AppRouteRouteMatcherProvider extends ManifestRouteMatcherProvider {\n    constructor(distDir, manifestLoader){\n        super(APP_PATHS_MANIFEST, manifestLoader);\n        this.normalizers = new AppNormalizers(distDir);\n    }\n    async transform(manifest) {\n        // This matcher only matches app routes.\n        const pages = Object.keys(manifest).filter((page)=>isAppRouteRoute(page));\n        // Format the routes.\n        const matchers = [];\n        for (const page of pages){\n            const filename = this.normalizers.filename.normalize(manifest[page]);\n            const pathname = this.normalizers.pathname.normalize(page);\n            const bundlePath = this.normalizers.bundlePath.normalize(page);\n            matchers.push(new AppRouteRouteMatcher({\n                kind: RouteKind.APP_ROUTE,\n                pathname,\n                page,\n                bundlePath,\n                filename\n            }));\n        }\n        return matchers;\n    }\n}\n\n//# sourceMappingURL=app-route-route-matcher-provider.js.map","export function isAPIRoute(value) {\n    return value === '/api' || Boolean(value == null ? void 0 : value.startsWith('/api/'));\n}\n\n//# sourceMappingURL=is-api-route.js.map","import { LocaleRouteMatcher } from './locale-route-matcher';\nimport { RouteMatcher } from './route-matcher';\nexport class PagesAPIRouteMatcher extends RouteMatcher {\n}\nexport class PagesAPILocaleRouteMatcher extends LocaleRouteMatcher {\n}\n\n//# sourceMappingURL=pages-api-route-matcher.js.map","import { normalizePagePath } from '../../../../shared/lib/page-path/normalize-page-path';\nimport { Normalizers } from '../../normalizers';\nimport { PrefixingNormalizer } from '../../prefixing-normalizer';\nimport { wrapNormalizerFn } from '../../wrap-normalizer-fn';\nexport class PagesBundlePathNormalizer extends Normalizers {\n    constructor(){\n        super([\n            // The bundle path should have the trailing `/index` stripped from\n            // it.\n            wrapNormalizerFn(normalizePagePath),\n            // The page should prefixed with `pages/`.\n            new PrefixingNormalizer('pages')\n        ]);\n    }\n    normalize(page) {\n        return super.normalize(page);\n    }\n}\nexport class DevPagesBundlePathNormalizer extends Normalizers {\n    constructor(pagesNormalizer){\n        super([\n            // This should normalize the filename to a page.\n            pagesNormalizer,\n            // Normalize the app page to a pathname.\n            new PagesBundlePathNormalizer()\n        ]);\n    }\n    normalize(filename) {\n        return super.normalize(filename);\n    }\n}\n\n//# sourceMappingURL=pages-bundle-path-normalizer.js.map","import { SERVER_DIRECTORY } from '../../../../shared/lib/constants';\nimport { PrefixingNormalizer } from '../../prefixing-normalizer';\nexport class PagesFilenameNormalizer extends PrefixingNormalizer {\n    constructor(distDir){\n        super(distDir, SERVER_DIRECTORY);\n    }\n    normalize(manifestFilename) {\n        return super.normalize(manifestFilename);\n    }\n}\n\n//# sourceMappingURL=pages-filename-normalizer.js.map","import { PAGE_TYPES } from '../../../../lib/page-types';\nimport { AbsoluteFilenameNormalizer } from '../../absolute-filename-normalizer';\nexport class DevPagesPageNormalizer extends AbsoluteFilenameNormalizer {\n    constructor(pagesDir, extensions){\n        super(pagesDir, extensions, PAGE_TYPES.PAGES);\n    }\n}\n\n//# sourceMappingURL=pages-page-normalizer.js.map","import { PAGE_TYPES } from '../../../../lib/page-types';\nimport { AbsoluteFilenameNormalizer } from '../../absolute-filename-normalizer';\nexport class DevPagesPathnameNormalizer extends AbsoluteFilenameNormalizer {\n    constructor(pagesDir, extensions){\n        super(pagesDir, extensions, PAGE_TYPES.PAGES);\n    }\n}\n\n//# sourceMappingURL=pages-pathname-normalizer.js.map","import { DevPagesBundlePathNormalizer, PagesBundlePathNormalizer } from './pages-bundle-path-normalizer';\nimport { PagesFilenameNormalizer } from './pages-filename-normalizer';\nimport { DevPagesPageNormalizer } from './pages-page-normalizer';\nimport { DevPagesPathnameNormalizer } from './pages-pathname-normalizer';\nexport class PagesNormalizers {\n    constructor(distDir){\n        this.filename = new PagesFilenameNormalizer(distDir);\n        this.bundlePath = new PagesBundlePathNormalizer();\n    // You'd think that we'd require a `pathname` normalizer here, but for\n    // `/pages` we have to handle i18n routes, which means that we need to\n    // analyze the page path to determine the locale prefix and it's locale.\n    }\n}\nexport class DevPagesNormalizers {\n    constructor(pagesDir, extensions){\n        this.page = new DevPagesPageNormalizer(pagesDir, extensions);\n        this.pathname = new DevPagesPathnameNormalizer(pagesDir, extensions);\n        this.bundlePath = new DevPagesBundlePathNormalizer(this.page);\n    }\n}\n\n//# sourceMappingURL=index.js.map","import { isAPIRoute } from '../../lib/is-api-route';\nimport { PAGES_MANIFEST } from '../../shared/lib/constants';\nimport { RouteKind } from '../route-kind';\nimport { PagesAPILocaleRouteMatcher, PagesAPIRouteMatcher } from '../route-matchers/pages-api-route-matcher';\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider';\nimport { PagesNormalizers } from '../normalizers/built/pages';\nexport class PagesAPIRouteMatcherProvider extends ManifestRouteMatcherProvider {\n    constructor(distDir, manifestLoader, i18nProvider){\n        super(PAGES_MANIFEST, manifestLoader);\n        this.i18nProvider = i18nProvider;\n        this.normalizers = new PagesNormalizers(distDir);\n    }\n    async transform(manifest) {\n        // This matcher is only for Pages API routes.\n        const pathnames = Object.keys(manifest).filter((pathname)=>isAPIRoute(pathname));\n        const matchers = [];\n        for (const page of pathnames){\n            if (this.i18nProvider) {\n                // Match the locale on the page name, or default to the default locale.\n                const { detectedLocale, pathname } = this.i18nProvider.analyze(page);\n                matchers.push(new PagesAPILocaleRouteMatcher({\n                    kind: RouteKind.PAGES_API,\n                    pathname,\n                    page,\n                    bundlePath: this.normalizers.bundlePath.normalize(page),\n                    filename: this.normalizers.filename.normalize(manifest[page]),\n                    i18n: {\n                        locale: detectedLocale\n                    }\n                }));\n            } else {\n                matchers.push(new PagesAPIRouteMatcher({\n                    kind: RouteKind.PAGES_API,\n                    // In `pages/`, the page is the same as the pathname.\n                    pathname: page,\n                    page,\n                    bundlePath: this.normalizers.bundlePath.normalize(page),\n                    filename: this.normalizers.filename.normalize(manifest[page])\n                }));\n            }\n        }\n        return matchers;\n    }\n}\n\n//# sourceMappingURL=pages-api-route-matcher-provider.js.map","import { LocaleRouteMatcher } from './locale-route-matcher';\nimport { RouteMatcher } from './route-matcher';\nexport class PagesRouteMatcher extends RouteMatcher {\n}\nexport class PagesLocaleRouteMatcher extends LocaleRouteMatcher {\n}\n\n//# sourceMappingURL=pages-route-matcher.js.map","import { isAPIRoute } from '../../lib/is-api-route';\nimport { BLOCKED_PAGES, PAGES_MANIFEST } from '../../shared/lib/constants';\nimport { RouteKind } from '../route-kind';\nimport { PagesLocaleRouteMatcher, PagesRouteMatcher } from '../route-matchers/pages-route-matcher';\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider';\nimport { PagesNormalizers } from '../normalizers/built/pages';\nexport class PagesRouteMatcherProvider extends ManifestRouteMatcherProvider {\n    constructor(distDir, manifestLoader, i18nProvider){\n        super(PAGES_MANIFEST, manifestLoader);\n        this.i18nProvider = i18nProvider;\n        this.normalizers = new PagesNormalizers(distDir);\n    }\n    async transform(manifest) {\n        // This matcher is only for Pages routes, not Pages API routes which are\n        // included in this manifest.\n        const pathnames = Object.keys(manifest).filter((pathname)=>!isAPIRoute(pathname))// Remove any blocked pages (page that can't be routed to, like error or\n        // internal pages).\n        .filter((pathname)=>{\n            var _this_i18nProvider;\n            const normalized = ((_this_i18nProvider = this.i18nProvider) == null ? void 0 : _this_i18nProvider.analyze(pathname).pathname) ?? pathname;\n            // Skip any blocked pages.\n            if (BLOCKED_PAGES.includes(normalized)) return false;\n            return true;\n        });\n        const matchers = [];\n        for (const page of pathnames){\n            if (this.i18nProvider) {\n                // Match the locale on the page name, or default to the default locale.\n                const { detectedLocale, pathname } = this.i18nProvider.analyze(page);\n                matchers.push(new PagesLocaleRouteMatcher({\n                    kind: RouteKind.PAGES,\n                    pathname,\n                    page,\n                    bundlePath: this.normalizers.bundlePath.normalize(page),\n                    filename: this.normalizers.filename.normalize(manifest[page]),\n                    i18n: {\n                        locale: detectedLocale\n                    }\n                }));\n            } else {\n                matchers.push(new PagesRouteMatcher({\n                    kind: RouteKind.PAGES,\n                    // In `pages/`, the page is the same as the pathname.\n                    pathname: page,\n                    page,\n                    bundlePath: this.normalizers.bundlePath.normalize(page),\n                    filename: this.normalizers.filename.normalize(manifest[page])\n                }));\n            }\n        }\n        return matchers;\n    }\n}\n\n//# sourceMappingURL=pages-route-matcher-provider.js.map","export class ServerManifestLoader {\n    constructor(getter){\n        this.getter = getter;\n    }\n    load(name) {\n        return this.getter(name);\n    }\n}\n\n//# sourceMappingURL=server-manifest-loader.js.map","/**\n * The I18NProvider is used to match locale aware routes, detect the locale from\n * the pathname and hostname and normalize the pathname by removing the locale\n * prefix.\n */ export class I18NProvider {\n    constructor(config){\n        var _config_domains;\n        this.config = config;\n        if (!config.locales.length) {\n            throw new Error('Invariant: No locales provided');\n        }\n        this.lowerCaseLocales = config.locales.map((locale)=>locale.toLowerCase());\n        this.lowerCaseDomains = (_config_domains = config.domains) == null ? void 0 : _config_domains.map((domainLocale)=>{\n            var _domainLocale_locales;\n            const domain = domainLocale.domain.toLowerCase();\n            return {\n                defaultLocale: domainLocale.defaultLocale.toLowerCase(),\n                hostname: domain.split(':', 1)[0],\n                domain,\n                locales: (_domainLocale_locales = domainLocale.locales) == null ? void 0 : _domainLocale_locales.map((locale)=>locale.toLowerCase()),\n                http: domainLocale.http\n            };\n        });\n    }\n    /**\n   * Detects the domain locale from the hostname and the detected locale if\n   * provided.\n   *\n   * @param hostname The hostname to detect the domain locale from, this must be lowercased.\n   * @param detectedLocale The detected locale to use if the hostname does not match.\n   * @returns The domain locale if found, `undefined` otherwise.\n   */ detectDomainLocale(hostname, detectedLocale) {\n        if (!hostname || !this.lowerCaseDomains || !this.config.domains) return;\n        if (detectedLocale) detectedLocale = detectedLocale.toLowerCase();\n        for(let i = 0; i < this.lowerCaseDomains.length; i++){\n            var // Configuration validation ensures that the locale is not repeated in\n            // other domains locales.\n            _domainLocale_locales;\n            const domainLocale = this.lowerCaseDomains[i];\n            if (// We assume that the hostname is already lowercased.\n            domainLocale.hostname === hostname || ((_domainLocale_locales = domainLocale.locales) == null ? void 0 : _domainLocale_locales.some((locale)=>locale === detectedLocale))) {\n                return this.config.domains[i];\n            }\n        }\n        return;\n    }\n    /**\n   * Pulls the pre-computed locale and inference results from the query\n   * object.\n   *\n   * @param pathname the pathname that could contain a locale prefix\n   * @param query the query object\n   * @returns the locale analysis result\n   */ fromQuery(pathname, query) {\n        const detectedLocale = query.__nextLocale;\n        // If a locale was detected on the query, analyze the pathname to ensure\n        // that the locale matches.\n        if (detectedLocale) {\n            const analysis = this.analyze(pathname);\n            // If the analysis contained a locale we should validate it against the\n            // query and strip it from the pathname.\n            if (analysis.detectedLocale) {\n                if (analysis.detectedLocale !== detectedLocale) {\n                    throw new Error(`Invariant: The detected locale does not match the locale in the query. Expected to find '${detectedLocale}' in '${pathname}' but found '${analysis.detectedLocale}'}`);\n                }\n                pathname = analysis.pathname;\n            }\n        }\n        return {\n            pathname,\n            detectedLocale,\n            inferredFromDefault: query.__nextInferredLocaleFromDefault === '1'\n        };\n    }\n    /**\n   * Validates that the locale is valid.\n   *\n   * @param locale The locale to validate.\n   * @returns `true` if the locale is valid, `false` otherwise.\n   */ validate(locale) {\n        return this.lowerCaseLocales.includes(locale.toLowerCase());\n    }\n    /**\n   * Validates that the locales in the query object are valid.\n   *\n   * @param query The query object to validate.\n   * @returns `true` if the locale is valid, `false` otherwise.\n   */ validateQuery(query) {\n        if (query.__nextLocale && !this.validate(query.__nextLocale)) {\n            return false;\n        }\n        if (query.__nextDefaultLocale && !this.validate(query.__nextDefaultLocale)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n   * Analyzes the pathname for a locale and returns the pathname without it.\n   *\n   * @param pathname The pathname that could contain a locale prefix.\n   * @param options The options to use when matching the locale.\n   * @returns The matched locale and the pathname without the locale prefix\n   *          (if any).\n   */ analyze(pathname, options = {}) {\n        let detectedLocale = options.defaultLocale;\n        // By default, we assume that the default locale was inferred if there was\n        // no detected locale.\n        let inferredFromDefault = typeof detectedLocale === 'string';\n        // The first segment will be empty, because it has a leading `/`. If\n        // there is no further segment, there is no locale (or it's the default).\n        const segments = pathname.split('/', 2);\n        if (!segments[1]) return {\n            detectedLocale,\n            pathname,\n            inferredFromDefault\n        };\n        // The second segment will contain the locale part if any.\n        const segment = segments[1].toLowerCase();\n        // See if the segment matches one of the locales. If it doesn't, there is\n        // no locale (or it's the default).\n        const index = this.lowerCaseLocales.indexOf(segment);\n        if (index < 0) return {\n            detectedLocale,\n            pathname,\n            inferredFromDefault\n        };\n        // Return the case-sensitive locale.\n        detectedLocale = this.config.locales[index];\n        inferredFromDefault = false;\n        // Remove the `/${locale}` part of the pathname.\n        pathname = pathname.slice(detectedLocale.length + 1) || '/';\n        return {\n            detectedLocale,\n            pathname,\n            inferredFromDefault\n        };\n    }\n}\n\n//# sourceMappingURL=i18n-provider.js.map","import { isNodeNextResponse } from './base-http/helpers';\nimport { pipeToNodeResponse } from './pipe-readable';\nimport { splitCookiesString } from './web/utils';\n/**\n * Sends the response on the underlying next response object.\n *\n * @param req the underlying request object\n * @param res the underlying response object\n * @param response the response to send\n */ export async function sendResponse(req, res, response, waitUntil) {\n    if (// The type check here ensures that `req` is correctly typed, and the\n    // environment variable check provides dead code elimination.\n    process.env.NEXT_RUNTIME !== 'edge' && isNodeNextResponse(res)) {\n        var // Copy over the response headers.\n        _response_headers;\n        // Copy over the response status.\n        res.statusCode = response.status;\n        res.statusMessage = response.statusText;\n        // can add more headers to this list if needed\n        const headersWithMultipleValuesAllowed = [\n            'set-cookie',\n            'www-authenticate',\n            'proxy-authenticate'\n        ];\n        (_response_headers = response.headers) == null ? void 0 : _response_headers.forEach((value, name)=>{\n            // The append handling is special cased for `set-cookie`.\n            if (name.toLowerCase() === 'set-cookie') {\n                // TODO: (wyattjoh) replace with native response iteration when we can upgrade undici\n                for (const cookie of splitCookiesString(value)){\n                    res.appendHeader(name, cookie);\n                }\n            } else {\n                // only append the header if it is either not present in the outbound response\n                // or if the header supports multiple values\n                const isHeaderPresent = typeof res.getHeader(name) !== 'undefined';\n                if (headersWithMultipleValuesAllowed.includes(name.toLowerCase()) || !isHeaderPresent) {\n                    res.appendHeader(name, value);\n                }\n            }\n        });\n        /**\n     * The response can't be directly piped to the underlying response. The\n     * following is duplicated from the edge runtime handler.\n     *\n     * See packages/next/server/next-server.ts\n     */ const { originalResponse } = res;\n        // A response body must not be sent for HEAD requests. See https://httpwg.org/specs/rfc9110.html#HEAD\n        if (response.body && req.method !== 'HEAD') {\n            await pipeToNodeResponse(response.body, originalResponse, waitUntil);\n        } else {\n            originalResponse.end();\n        }\n    }\n}\n\n//# sourceMappingURL=send-response.js.map","import { getPathMatch } from '../../shared/lib/router/utils/path-match';\nconst matcher = getPathMatch('/_next/data/:path*');\nexport function matchNextDataPathname(pathname) {\n    if (typeof pathname !== 'string') return false;\n    return matcher(pathname);\n}\n\n//# sourceMappingURL=match-next-data-pathname.js.map","// Translate a pages asset path (relative from a common prefix) back into its logical route\n\nimport { isDynamicRoute } from './is-dynamic'\n\n// \"asset path\" being its javascript file, data file, prerendered html,...\nexport default function getRouteFromAssetPath(\n  assetPath: string,\n  ext: string = ''\n): string {\n  assetPath = assetPath.replace(/\\\\/g, '/')\n  assetPath =\n    ext && assetPath.endsWith(ext) ? assetPath.slice(0, -ext.length) : assetPath\n  if (assetPath.startsWith('/index/') && !isDynamicRoute(assetPath)) {\n    assetPath = assetPath.slice(6)\n  } else if (assetPath === '/index') {\n    assetPath = '/'\n  }\n  return assetPath\n}\n","export class SuffixPathnameNormalizer {\n    constructor(suffix){\n        this.suffix = suffix;\n    }\n    match(pathname) {\n        // If the pathname doesn't end in the suffix, we don't match.\n        if (!pathname.endsWith(this.suffix)) return false;\n        return true;\n    }\n    normalize(pathname, matched) {\n        // If we're not matched and we don't match, we don't need to normalize.\n        if (!matched && !this.match(pathname)) return pathname;\n        return pathname.substring(0, pathname.length - this.suffix.length);\n    }\n}\n\n//# sourceMappingURL=suffix.js.map","import { RSC_SUFFIX } from '../../../lib/constants';\nimport { SuffixPathnameNormalizer } from './suffix';\nexport class RSCPathnameNormalizer extends SuffixPathnameNormalizer {\n    constructor(){\n        super(RSC_SUFFIX);\n    }\n}\n\n//# sourceMappingURL=rsc.js.map","export class PrefixPathnameNormalizer {\n    constructor(prefix){\n        this.prefix = prefix;\n        if (prefix.endsWith('/')) {\n            throw new Error(`PrefixPathnameNormalizer: prefix \"${prefix}\" should not end with a slash`);\n        }\n    }\n    match(pathname) {\n        // If the pathname doesn't start with the prefix, we don't match.\n        if (pathname !== this.prefix && !pathname.startsWith(this.prefix + '/')) {\n            return false;\n        }\n        return true;\n    }\n    normalize(pathname, matched) {\n        // If we're not matched and we don't match, we don't need to normalize.\n        if (!matched && !this.match(pathname)) return pathname;\n        if (pathname.length === this.prefix.length) {\n            return '/';\n        }\n        return pathname.substring(this.prefix.length);\n    }\n}\n\n//# sourceMappingURL=prefix.js.map","import { denormalizePagePath } from '../../../shared/lib/page-path/denormalize-page-path';\nimport { PrefixPathnameNormalizer } from './prefix';\nconst prefix = '/_next/postponed/resume';\nexport class PostponedPathnameNormalizer extends PrefixPathnameNormalizer {\n    constructor(){\n        super(prefix);\n    }\n    normalize(pathname, matched) {\n        // If we're not matched and we don't match, we don't need to normalize.\n        if (!matched && !this.match(pathname)) return pathname;\n        // Remove the prefix.\n        pathname = super.normalize(pathname, true);\n        return denormalizePagePath(pathname);\n    }\n}\n\n//# sourceMappingURL=postponed.js.map","import { FLIGHT_HEADERS } from '../../client/components/app-router-headers';\n/**\n * Removes the flight headers from the request.\n *\n * @param req the request to strip the headers from\n */ export function stripFlightHeaders(headers) {\n    for (const header of FLIGHT_HEADERS){\n        delete headers[header.toLowerCase()];\n    }\n}\n\n//# sourceMappingURL=strip-flight-headers.js.map","import { RouteKind } from '../route-kind';\nexport function isAppRouteRouteModule(routeModule) {\n    return routeModule.definition.kind === RouteKind.APP_ROUTE;\n}\nexport function isAppPageRouteModule(routeModule) {\n    return routeModule.definition.kind === RouteKind.APP_PAGE;\n}\nexport function isPagesRouteModule(routeModule) {\n    return routeModule.definition.kind === RouteKind.PAGES;\n}\nexport function isPagesAPIRouteModule(routeModule) {\n    return routeModule.definition.kind === RouteKind.PAGES_API;\n}\n\n//# sourceMappingURL=checks.js.map","import { RSC_PREFETCH_SUFFIX } from '../../../lib/constants';\nimport { SuffixPathnameNormalizer } from './suffix';\nexport class PrefetchRSCPathnameNormalizer extends SuffixPathnameNormalizer {\n    constructor(){\n        super(RSC_PREFETCH_SUFFIX);\n    }\n    match(pathname) {\n        if (pathname === '/__index' + RSC_PREFETCH_SUFFIX) {\n            return true;\n        }\n        return super.match(pathname);\n    }\n    normalize(pathname, matched) {\n        if (pathname === '/__index' + RSC_PREFETCH_SUFFIX) {\n            return '/';\n        }\n        return super.normalize(pathname, matched);\n    }\n}\n\n//# sourceMappingURL=prefetch-rsc.js.map","import { denormalizePagePath } from '../../../shared/lib/page-path/denormalize-page-path';\nimport { PrefixPathnameNormalizer } from './prefix';\nimport { SuffixPathnameNormalizer } from './suffix';\nexport class NextDataPathnameNormalizer {\n    constructor(buildID){\n        this.suffix = new SuffixPathnameNormalizer('.json');\n        if (!buildID) {\n            throw new Error('Invariant: buildID is required');\n        }\n        this.prefix = new PrefixPathnameNormalizer(`/_next/data/${buildID}`);\n    }\n    match(pathname) {\n        return this.prefix.match(pathname) && this.suffix.match(pathname);\n    }\n    normalize(pathname, matched) {\n        // If we're not matched and we don't match, we don't need to normalize.\n        if (!matched && !this.match(pathname)) return pathname;\n        pathname = this.prefix.normalize(pathname, true);\n        pathname = this.suffix.normalize(pathname, true);\n        return denormalizePagePath(pathname);\n    }\n}\n\n//# sourceMappingURL=next-data.js.map","/**\n * This transforms a URL pathname into a route. It removes any trailing slashes\n * and the `/index` suffix.\n *\n * @param {string} pathname - The URL path that needs to be optimized.\n * @returns {string} - The route\n *\n * @example\n * // returns '/example'\n * toRoute('/example/index/');\n *\n * @example\n * // returns '/example'\n * toRoute('/example/');\n *\n * @example\n * // returns '/'\n * toRoute('/index/');\n *\n * @example\n * // returns '/'\n * toRoute('/');\n */ export function toRoute(pathname) {\n    return pathname.replace(/(?:\\/index)?\\/?$/, '') || '/';\n}\n\n//# sourceMappingURL=to-route.js.map","import { getRequestMeta } from '../request-meta';\n/**\n * Ensure cookies set in middleware are merged and not overridden by API\n * routes/getServerSideProps.\n *\n * @param req Incoming request\n * @param res Outgoing response\n */ export function patchSetHeaderWithCookieSupport(req, res) {\n    const setHeader = res.setHeader.bind(res);\n    res.setHeader = (name, value)=>{\n        // When renders /_error after page is failed, it could attempt to set\n        // headers after headers.\n        if ('headersSent' in res && res.headersSent) {\n            return res;\n        }\n        if (name.toLowerCase() === 'set-cookie') {\n            const middlewareValue = getRequestMeta(req, 'middlewareCookie');\n            if (!middlewareValue || !Array.isArray(value) || !value.every((item, idx)=>item === middlewareValue[idx])) {\n                value = [\n                    // TODO: (wyattjoh) find out why this is called multiple times resulting in duplicate cookies being added\n                    ...new Set([\n                        ...middlewareValue || [],\n                        ...typeof value === 'string' ? [\n                            value\n                        ] : Array.isArray(value) ? value : []\n                    ])\n                ];\n            }\n        }\n        return setHeader(name, value);\n    };\n}\n\n//# sourceMappingURL=patch-set-header.js.map","/**\n * If set to `incremental`, only those leaf pages that export\n * `experimental_ppr = true` will have partial prerendering enabled. If any\n * page exports this value as `false` or does not export it at all will not\n * have partial prerendering enabled. If set to a boolean, it the options for\n * `experimental_ppr` will be ignored.\n */ /**\n * Returns true if partial prerendering is enabled for the application. It does\n * not tell you if a given route has PPR enabled, as that requires analysis of\n * the route's configuration.\n *\n * @see {@link checkIsRoutePPREnabled} - for checking if a specific route has PPR enabled.\n */ export function checkIsAppPPREnabled(config) {\n    // If the config is undefined, partial prerendering is disabled.\n    if (typeof config === 'undefined') return false;\n    // If the config is a boolean, use it directly.\n    if (typeof config === 'boolean') return config;\n    // If the config is a string, it must be 'incremental' to enable partial\n    // prerendering.\n    if (config === 'incremental') return true;\n    return false;\n}\n/**\n * Returns true if partial prerendering is supported for the current page with\n * the provided app configuration. If the application doesn't have partial\n * prerendering enabled, this function will always return false. If you want to\n * check if the application has partial prerendering enabled\n *\n * @see {@link checkIsAppPPREnabled} for checking if the application has PPR enabled.\n */ export function checkIsRoutePPREnabled(config, appConfig) {\n    // If the config is undefined, partial prerendering is disabled.\n    if (typeof config === 'undefined') return false;\n    // If the config is a boolean, use it directly.\n    if (typeof config === 'boolean') return config;\n    // If the config is a string, it must be 'incremental' to enable partial\n    // prerendering.\n    if (config === 'incremental' && appConfig.experimental_ppr === true) {\n        return true;\n    }\n    return false;\n}\n\n//# sourceMappingURL=ppr.js.map","/**\n * Describes the different fallback modes that a given page can have.\n */ export var FallbackMode;\n(function(FallbackMode) {\n    /**\n   * A BLOCKING_STATIC_RENDER fallback will block the request until the page is\n   * generated. No fallback page will be rendered, and users will have to wait\n   * to render the page.\n   */ FallbackMode[\"BLOCKING_STATIC_RENDER\"] = \"BLOCKING_STATIC_RENDER\";\n    /**\n   * When set to PRERENDER, a fallback page will be sent to users in place of\n   * forcing them to wait for the page to be generated. This allows the user to\n   * see a rendered page earlier.\n   */ FallbackMode[\"PRERENDER\"] = \"PRERENDER\";\n    /**\n   * When set to NOT_FOUND, pages that are not already prerendered will result\n   * in a not found response.\n   */ FallbackMode[\"NOT_FOUND\"] = \"NOT_FOUND\";\n})(FallbackMode || (FallbackMode = {}));\n/**\n * Parses the fallback field from the prerender manifest.\n *\n * @param fallbackField The fallback field from the prerender manifest.\n * @returns The fallback mode.\n */ export function parseFallbackField(fallbackField) {\n    if (typeof fallbackField === 'string') {\n        return \"PRERENDER\";\n    } else if (fallbackField === null) {\n        return \"BLOCKING_STATIC_RENDER\";\n    } else if (fallbackField === false) {\n        return \"NOT_FOUND\";\n    } else if (fallbackField === undefined) {\n        return undefined;\n    } else {\n        throw new Error(`Invalid fallback option: ${fallbackField}. Fallback option must be a string, null, undefined, or false.`);\n    }\n}\nexport function fallbackModeToFallbackField(fallback, page) {\n    switch(fallback){\n        case \"BLOCKING_STATIC_RENDER\":\n            return null;\n        case \"NOT_FOUND\":\n            return false;\n        case \"PRERENDER\":\n            if (!page) {\n                throw new Error(`Invariant: expected a page to be provided when fallback mode is \"${fallback}\"`);\n            }\n            return page;\n        default:\n            throw new Error(`Invalid fallback mode: ${fallback}`);\n    }\n}\n/**\n * Parses the fallback from the static paths result.\n *\n * @param result The result from the static paths function.\n * @returns The fallback mode.\n */ export function parseStaticPathsResult(result) {\n    if (result === true) {\n        return \"PRERENDER\";\n    } else if (result === 'blocking') {\n        return \"BLOCKING_STATIC_RENDER\";\n    } else {\n        return \"NOT_FOUND\";\n    }\n}\n/**\n * Converts the fallback mode to a static paths result.\n *\n * @param fallback The fallback mode.\n * @returns The static paths fallback result.\n */ export function fallbackModeToStaticPathsResult(fallback) {\n    switch(fallback){\n        case \"PRERENDER\":\n            return true;\n        case \"BLOCKING_STATIC_RENDER\":\n            return 'blocking';\n        case \"NOT_FOUND\":\n        default:\n            return false;\n    }\n}\n\n//# sourceMappingURL=fallback.js.map","export class PrefetchCacheScopes {\n    evict() {\n        for (const [key, value] of this.cacheScopes){\n            if (value.timestamp < Date.now() - 5000) {\n                this.cacheScopes.delete(key);\n            }\n        }\n    }\n    // TODO: should this key include query params if so we need to\n    // filter _rsc query\n    get(url) {\n        setImmediate(()=>this.evict());\n        const currentScope = this.cacheScopes.get(url);\n        if (currentScope) {\n            if (currentScope.timestamp < Date.now() - 5000) {\n                return undefined;\n            }\n            return currentScope.cache;\n        }\n        return undefined;\n    }\n    set(url, cache) {\n        setImmediate(()=>this.evict());\n        return this.cacheScopes.set(url, {\n            cache,\n            timestamp: Date.now()\n        });\n    }\n    del(url) {\n        this.cacheScopes.delete(url);\n    }\n    constructor(){\n        this.cacheScopes = new Map();\n    }\n}\n\n//# sourceMappingURL=prefetch-cache-scopes.js.map","import { createAsyncLocalStorage } from '../app-render/async-local-storage';\nexport const cacheScopeAsyncLocalStorage = createAsyncLocalStorage();\n\n//# sourceMappingURL=cache-scope-instance.js.map","import { cacheScopeAsyncLocalStorage } from './cache-scope-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nexport { cacheScopeAsyncLocalStorage };\n/**\n * For dynamic IO handling we want to have a scoped memory\n * cache which can live either the lifetime of a build worker,\n * the lifetime of a specific request, or from a prefetch request\n * to the request for non-prefetch version of a page (with\n * drop-off after so long to prevent memory inflating)\n */ export function runWithCacheScope(store, fn) {\n    return cacheScopeAsyncLocalStorage.run({\n        cache: store.cache || new Map()\n    }, fn);\n}\n\n//# sourceMappingURL=cache-scope.external.js.map","import { getFallbackRouteParams } from './request/fallback-params';\nimport { CachedRouteKind } from './response-cache';\nimport { NormalizeError, DecodeError, normalizeRepeatedSlashes, MissingStaticPage } from '../shared/lib/utils';\nimport { format as formatUrl, parse as parseUrl } from 'url';\nimport { formatHostname } from './lib/format-hostname';\nimport { getRedirectStatus } from '../lib/redirect-status';\nimport { isEdgeRuntime } from '../lib/is-edge-runtime';\nimport { APP_PATHS_MANIFEST, NEXT_BUILTIN_DOCUMENT, PAGES_MANIFEST, STATIC_STATUS_PAGES, UNDERSCORE_NOT_FOUND_ROUTE, UNDERSCORE_NOT_FOUND_ROUTE_ENTRY } from '../shared/lib/constants';\nimport { isDynamicRoute } from '../shared/lib/router/utils';\nimport { checkIsOnDemandRevalidate } from './api-utils';\nimport { setConfig } from '../shared/lib/runtime-config.external';\nimport { formatRevalidate } from './lib/revalidate';\nimport { execOnce } from '../shared/lib/utils';\nimport { isBlockedPage } from './utils';\nimport { isBot } from '../shared/lib/router/utils/is-bot';\nimport RenderResult from './render-result';\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash';\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path';\nimport * as Log from '../build/output/log';\nimport escapePathDelimiters from '../shared/lib/router/utils/escape-path-delimiters';\nimport { getUtils } from './server-utils';\nimport isError, { getProperError } from '../lib/is-error';\nimport { addRequestMeta, getRequestMeta, removeRequestMeta, setRequestMeta } from './request-meta';\nimport { removePathPrefix } from '../shared/lib/router/utils/remove-path-prefix';\nimport { normalizeAppPath } from '../shared/lib/router/utils/app-paths';\nimport { getHostname } from '../shared/lib/get-hostname';\nimport { parseUrl as parseUrlUtil } from '../shared/lib/router/utils/parse-url';\nimport { getNextPathnameInfo } from '../shared/lib/router/utils/get-next-pathname-info';\nimport { RSC_HEADER, NEXT_RSC_UNION_QUERY, NEXT_ROUTER_PREFETCH_HEADER, NEXT_ROUTER_SEGMENT_PREFETCH_HEADER, NEXT_DID_POSTPONE_HEADER, NEXT_URL, NEXT_ROUTER_STATE_TREE_HEADER, NEXT_IS_PRERENDER_HEADER } from '../client/components/app-router-headers';\nimport { LocaleRouteNormalizer } from './normalizers/locale-route-normalizer';\nimport { DefaultRouteMatcherManager } from './route-matcher-managers/default-route-matcher-manager';\nimport { AppPageRouteMatcherProvider } from './route-matcher-providers/app-page-route-matcher-provider';\nimport { AppRouteRouteMatcherProvider } from './route-matcher-providers/app-route-route-matcher-provider';\nimport { PagesAPIRouteMatcherProvider } from './route-matcher-providers/pages-api-route-matcher-provider';\nimport { PagesRouteMatcherProvider } from './route-matcher-providers/pages-route-matcher-provider';\nimport { ServerManifestLoader } from './route-matcher-providers/helpers/manifest-loaders/server-manifest-loader';\nimport { getTracer, isBubbledError, SpanKind } from './lib/trace/tracer';\nimport { BaseServerSpan } from './lib/trace/constants';\nimport { I18NProvider } from './lib/i18n-provider';\nimport { sendResponse } from './send-response';\nimport { fromNodeOutgoingHttpHeaders, normalizeNextQueryParam, toNodeOutgoingHttpHeaders } from './web/utils';\nimport { CACHE_ONE_YEAR, INFINITE_CACHE, NEXT_CACHE_REVALIDATED_TAGS_HEADER, NEXT_CACHE_TAGS_HEADER, NEXT_RESUME_HEADER } from '../lib/constants';\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path';\nimport { NextRequestAdapter, signalFromNodeResponse } from './web/spec-extension/adapters/next-request';\nimport { matchNextDataPathname } from './lib/match-next-data-pathname';\nimport getRouteFromAssetPath from '../shared/lib/router/utils/get-route-from-asset-path';\nimport { RSCPathnameNormalizer } from './normalizers/request/rsc';\nimport { PostponedPathnameNormalizer } from './normalizers/request/postponed';\nimport { stripFlightHeaders } from './app-render/strip-flight-headers';\nimport { isAppPageRouteModule, isAppRouteRouteModule, isPagesRouteModule } from './route-modules/checks';\nimport { PrefetchRSCPathnameNormalizer } from './normalizers/request/prefetch-rsc';\nimport { NextDataPathnameNormalizer } from './normalizers/request/next-data';\nimport { getIsServerAction } from './lib/server-action-request-meta';\nimport { isInterceptionRouteAppPath } from './lib/interception-routes';\nimport { toRoute } from './lib/to-route';\nimport { isNodeNextRequest, isNodeNextResponse } from './base-http/helpers';\nimport { patchSetHeaderWithCookieSupport } from './lib/patch-set-header';\nimport { checkIsAppPPREnabled } from './lib/experimental/ppr';\nimport { getBuiltinRequestContext } from './after/builtin-request-context';\nimport { ENCODED_TAGS } from './stream-utils/encodedTags';\nimport { NextRequestHint } from './web/adapter';\nimport { getRevalidateReason } from './instrumentation/utils';\nimport { RouteKind } from './route-kind';\nimport { FallbackMode, parseFallbackField } from '../lib/fallback';\nimport { toResponseCacheEntry } from './response-cache/utils';\nimport { scheduleOnNextTick } from '../lib/scheduler';\nimport { PrefetchCacheScopes } from './lib/prefetch-cache-scopes';\nimport { runWithCacheScope } from './async-storage/cache-scope.external';\nexport class NoFallbackError extends Error {\n}\n// Internal wrapper around build errors at development\n// time, to prevent us from propagating or logging them\nexport class WrappedBuildError extends Error {\n    constructor(innerError){\n        super();\n        this.innerError = innerError;\n    }\n}\nexport default class Server {\n    getServerComponentsHmrCache() {\n        return this.nextConfig.experimental.serverComponentsHmrCache ? globalThis.__serverComponentsHmrCache : undefined;\n    }\n    /**\n   * This is used to persist cache scopes across\n   * prefetch -> full route requests for dynamic IO\n   * it's only fully used in dev\n   */ constructor(options){\n        var _this_nextConfig_i18n, _this_nextConfig_experimental_amp, _this_nextConfig_i18n1;\n        this.prefetchCacheScopesDev = new PrefetchCacheScopes();\n        this.handleRSCRequest = (req, _res, parsedUrl)=>{\n            var _this_normalizers_prefetchRSC, _this_normalizers_rsc;\n            if (!parsedUrl.pathname) return false;\n            if ((_this_normalizers_prefetchRSC = this.normalizers.prefetchRSC) == null ? void 0 : _this_normalizers_prefetchRSC.match(parsedUrl.pathname)) {\n                parsedUrl.pathname = this.normalizers.prefetchRSC.normalize(parsedUrl.pathname, true);\n                // Mark the request as a router prefetch request.\n                req.headers[RSC_HEADER.toLowerCase()] = '1';\n                req.headers[NEXT_ROUTER_PREFETCH_HEADER.toLowerCase()] = '1';\n                addRequestMeta(req, 'isRSCRequest', true);\n                addRequestMeta(req, 'isPrefetchRSCRequest', true);\n            } else if ((_this_normalizers_rsc = this.normalizers.rsc) == null ? void 0 : _this_normalizers_rsc.match(parsedUrl.pathname)) {\n                parsedUrl.pathname = this.normalizers.rsc.normalize(parsedUrl.pathname, true);\n                // Mark the request as a RSC request.\n                req.headers[RSC_HEADER.toLowerCase()] = '1';\n                addRequestMeta(req, 'isRSCRequest', true);\n            } else if (req.headers['x-now-route-matches']) {\n                // If we didn't match, return with the flight headers stripped. If in\n                // minimal mode we didn't match based on the path, this can't be a RSC\n                // request. This is because Vercel only sends this header during\n                // revalidation requests and we want the cache to instead depend on the\n                // request path for flight information.\n                stripFlightHeaders(req.headers);\n                return false;\n            } else if (req.headers[RSC_HEADER.toLowerCase()] === '1') {\n                addRequestMeta(req, 'isRSCRequest', true);\n                if (req.headers[NEXT_ROUTER_PREFETCH_HEADER.toLowerCase()] === '1') {\n                    addRequestMeta(req, 'isPrefetchRSCRequest', true);\n                }\n            } else {\n                // Otherwise just return without doing anything.\n                return false;\n            }\n            if (req.url) {\n                const parsed = parseUrl(req.url);\n                parsed.pathname = parsedUrl.pathname;\n                req.url = formatUrl(parsed);\n            }\n            return false;\n        };\n        this.handleNextDataRequest = async (req, res, parsedUrl)=>{\n            const middleware = this.getMiddleware();\n            const params = matchNextDataPathname(parsedUrl.pathname);\n            // ignore for non-next data URLs\n            if (!params || !params.path) {\n                return false;\n            }\n            if (params.path[0] !== this.buildId) {\n                // Ignore if its a middleware request when we aren't on edge.\n                if (process.env.NEXT_RUNTIME !== 'edge' && getRequestMeta(req, 'middlewareInvoke')) {\n                    return false;\n                }\n                // Make sure to 404 if the buildId isn't correct\n                await this.render404(req, res, parsedUrl);\n                return true;\n            }\n            // remove buildId from URL\n            params.path.shift();\n            const lastParam = params.path[params.path.length - 1];\n            // show 404 if it doesn't end with .json\n            if (typeof lastParam !== 'string' || !lastParam.endsWith('.json')) {\n                await this.render404(req, res, parsedUrl);\n                return true;\n            }\n            // re-create page's pathname\n            let pathname = `/${params.path.join('/')}`;\n            pathname = getRouteFromAssetPath(pathname, '.json');\n            // ensure trailing slash is normalized per config\n            if (middleware) {\n                if (this.nextConfig.trailingSlash && !pathname.endsWith('/')) {\n                    pathname += '/';\n                }\n                if (!this.nextConfig.trailingSlash && pathname.length > 1 && pathname.endsWith('/')) {\n                    pathname = pathname.substring(0, pathname.length - 1);\n                }\n            }\n            if (this.i18nProvider) {\n                var _req_headers_host;\n                // Remove the port from the hostname if present.\n                const hostname = req == null ? void 0 : (_req_headers_host = req.headers.host) == null ? void 0 : _req_headers_host.split(':', 1)[0].toLowerCase();\n                const domainLocale = this.i18nProvider.detectDomainLocale(hostname);\n                const defaultLocale = (domainLocale == null ? void 0 : domainLocale.defaultLocale) ?? this.i18nProvider.config.defaultLocale;\n                const localePathResult = this.i18nProvider.analyze(pathname);\n                // If the locale is detected from the path, we need to remove it\n                // from the pathname.\n                if (localePathResult.detectedLocale) {\n                    pathname = localePathResult.pathname;\n                }\n                // Update the query with the detected locale and default locale.\n                parsedUrl.query.__nextLocale = localePathResult.detectedLocale;\n                parsedUrl.query.__nextDefaultLocale = defaultLocale;\n                // If the locale is not detected from the path, we need to mark that\n                // it was not inferred from default.\n                if (!localePathResult.detectedLocale) {\n                    delete parsedUrl.query.__nextInferredLocaleFromDefault;\n                }\n                // If no locale was detected and we don't have middleware, we need\n                // to render a 404 page.\n                if (!localePathResult.detectedLocale && !middleware) {\n                    parsedUrl.query.__nextLocale = defaultLocale;\n                    await this.render404(req, res, parsedUrl);\n                    return true;\n                }\n            }\n            parsedUrl.pathname = pathname;\n            parsedUrl.query.__nextDataReq = '1';\n            return false;\n        };\n        this.handleNextImageRequest = ()=>false;\n        this.handleCatchallRenderRequest = ()=>false;\n        this.handleCatchallMiddlewareRequest = ()=>false;\n        /**\n   * Normalizes a pathname without attaching any metadata from any matched\n   * normalizer.\n   *\n   * @param pathname the pathname to normalize\n   * @returns the normalized pathname\n   */ this.normalize = (pathname)=>{\n            const normalizers = [];\n            if (this.normalizers.data) {\n                normalizers.push(this.normalizers.data);\n            }\n            if (this.normalizers.postponed) {\n                normalizers.push(this.normalizers.postponed);\n            }\n            // We have to put the prefetch normalizer before the RSC normalizer\n            // because the RSC normalizer will match the prefetch RSC routes too.\n            if (this.normalizers.prefetchRSC) {\n                normalizers.push(this.normalizers.prefetchRSC);\n            }\n            if (this.normalizers.rsc) {\n                normalizers.push(this.normalizers.rsc);\n            }\n            for (const normalizer of normalizers){\n                if (!normalizer.match(pathname)) continue;\n                return normalizer.normalize(pathname, true);\n            }\n            return pathname;\n        };\n        this.normalizeAndAttachMetadata = async (req, res, url)=>{\n            let finished = await this.handleNextImageRequest(req, res, url);\n            if (finished) return true;\n            if (this.enabledDirectories.pages) {\n                finished = await this.handleNextDataRequest(req, res, url);\n                if (finished) return true;\n            }\n            return false;\n        };\n        this.prepared = false;\n        this.preparedPromise = null;\n        this.customErrorNo404Warn = execOnce(()=>{\n            Log.warn(`You have added a custom /_error page without a custom /404 page. This prevents the 404 page from being auto statically optimized.\\nSee here for info: https://nextjs.org/docs/messages/custom-error-no-custom-404`);\n        });\n        const { dir = '.', quiet = false, conf, dev = false, minimalMode = false, customServer = true, hostname, port, experimentalTestProxy } = options;\n        this.experimentalTestProxy = experimentalTestProxy;\n        this.serverOptions = options;\n        this.dir = process.env.NEXT_RUNTIME === 'edge' ? dir : require('path').resolve(dir);\n        this.quiet = quiet;\n        this.loadEnvConfig({\n            dev\n        });\n        // TODO: should conf be normalized to prevent missing\n        // values from causing issues as this can be user provided\n        this.nextConfig = conf;\n        this.hostname = hostname;\n        if (this.hostname) {\n            // we format the hostname so that it can be fetched\n            this.fetchHostname = formatHostname(this.hostname);\n        }\n        this.port = port;\n        this.distDir = process.env.NEXT_RUNTIME === 'edge' ? this.nextConfig.distDir : require('path').join(this.dir, this.nextConfig.distDir);\n        this.publicDir = this.getPublicDir();\n        this.hasStaticDir = !minimalMode && this.getHasStaticDir();\n        this.i18nProvider = ((_this_nextConfig_i18n = this.nextConfig.i18n) == null ? void 0 : _this_nextConfig_i18n.locales) ? new I18NProvider(this.nextConfig.i18n) : undefined;\n        // Configure the locale normalizer, it's used for routes inside `pages/`.\n        this.localeNormalizer = this.i18nProvider ? new LocaleRouteNormalizer(this.i18nProvider) : undefined;\n        // Only serverRuntimeConfig needs the default\n        // publicRuntimeConfig gets it's default in client/index.js\n        const { serverRuntimeConfig = {}, publicRuntimeConfig, assetPrefix, generateEtags } = this.nextConfig;\n        this.buildId = this.getBuildId();\n        // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n        // because we replace this.minimalMode to true in production bundles.\n        const minimalModeKey = 'minimalMode';\n        this[minimalModeKey] = minimalMode || !!process.env.NEXT_PRIVATE_MINIMAL_MODE;\n        this.enabledDirectories = this.getEnabledDirectories(dev);\n        this.isAppPPREnabled = this.enabledDirectories.app && checkIsAppPPREnabled(this.nextConfig.experimental.ppr);\n        this.normalizers = {\n            // We should normalize the pathname from the RSC prefix only in minimal\n            // mode as otherwise that route is not exposed external to the server as\n            // we instead only rely on the headers.\n            postponed: this.isAppPPREnabled && this.minimalMode ? new PostponedPathnameNormalizer() : undefined,\n            rsc: this.enabledDirectories.app && this.minimalMode ? new RSCPathnameNormalizer() : undefined,\n            prefetchRSC: this.isAppPPREnabled && this.minimalMode ? new PrefetchRSCPathnameNormalizer() : undefined,\n            data: this.enabledDirectories.pages ? new NextDataPathnameNormalizer(this.buildId) : undefined\n        };\n        this.nextFontManifest = this.getNextFontManifest();\n        if (process.env.NEXT_RUNTIME !== 'edge') {\n            process.env.NEXT_DEPLOYMENT_ID = this.nextConfig.deploymentId || '';\n        }\n        this.renderOpts = {\n            supportsDynamicResponse: true,\n            trailingSlash: this.nextConfig.trailingSlash,\n            deploymentId: this.nextConfig.deploymentId,\n            strictNextHead: this.nextConfig.experimental.strictNextHead ?? true,\n            poweredByHeader: this.nextConfig.poweredByHeader,\n            canonicalBase: this.nextConfig.amp.canonicalBase || '',\n            buildId: this.buildId,\n            generateEtags,\n            previewProps: this.getPrerenderManifest().preview,\n            customServer: customServer === true ? true : undefined,\n            ampOptimizerConfig: (_this_nextConfig_experimental_amp = this.nextConfig.experimental.amp) == null ? void 0 : _this_nextConfig_experimental_amp.optimizer,\n            basePath: this.nextConfig.basePath,\n            images: this.nextConfig.images,\n            optimizeCss: this.nextConfig.experimental.optimizeCss,\n            nextConfigOutput: this.nextConfig.output,\n            nextScriptWorkers: this.nextConfig.experimental.nextScriptWorkers,\n            disableOptimizedLoading: this.nextConfig.experimental.disableOptimizedLoading,\n            domainLocales: (_this_nextConfig_i18n1 = this.nextConfig.i18n) == null ? void 0 : _this_nextConfig_i18n1.domains,\n            distDir: this.distDir,\n            serverComponents: this.enabledDirectories.app,\n            cacheLifeProfiles: this.nextConfig.experimental.cacheLife,\n            enableTainting: this.nextConfig.experimental.taint,\n            crossOrigin: this.nextConfig.crossOrigin ? this.nextConfig.crossOrigin : undefined,\n            largePageDataBytes: this.nextConfig.experimental.largePageDataBytes,\n            // Only the `publicRuntimeConfig` key is exposed to the client side\n            // It'll be rendered as part of __NEXT_DATA__ on the client side\n            runtimeConfig: Object.keys(publicRuntimeConfig).length > 0 ? publicRuntimeConfig : undefined,\n            // @ts-expect-error internal field not publicly exposed\n            isExperimentalCompile: this.nextConfig.experimental.isExperimentalCompile,\n            experimental: {\n                expireTime: this.nextConfig.expireTime,\n                clientTraceMetadata: this.nextConfig.experimental.clientTraceMetadata,\n                after: this.nextConfig.experimental.after ?? false,\n                dynamicIO: this.nextConfig.experimental.dynamicIO ?? false\n            },\n            onInstrumentationRequestError: this.instrumentationOnRequestError.bind(this),\n            reactMaxHeadersLength: this.nextConfig.reactMaxHeadersLength\n        };\n        // Initialize next/config with the environment configuration\n        setConfig({\n            serverRuntimeConfig,\n            publicRuntimeConfig\n        });\n        this.pagesManifest = this.getPagesManifest();\n        this.appPathsManifest = this.getAppPathsManifest();\n        this.appPathRoutes = this.getAppPathRoutes();\n        this.interceptionRoutePatterns = this.getinterceptionRoutePatterns();\n        // Configure the routes.\n        this.matchers = this.getRouteMatchers();\n        // Start route compilation. We don't wait for the routes to finish loading\n        // because we use the `waitTillReady` promise below in `handleRequest` to\n        // wait. Also we can't `await` in the constructor.\n        void this.matchers.reload();\n        this.setAssetPrefix(assetPrefix);\n        this.responseCache = this.getResponseCache({\n            dev\n        });\n    }\n    reloadMatchers() {\n        return this.matchers.reload();\n    }\n    getRouteMatchers() {\n        // Create a new manifest loader that get's the manifests from the server.\n        const manifestLoader = new ServerManifestLoader((name)=>{\n            switch(name){\n                case PAGES_MANIFEST:\n                    return this.getPagesManifest() ?? null;\n                case APP_PATHS_MANIFEST:\n                    return this.getAppPathsManifest() ?? null;\n                default:\n                    return null;\n            }\n        });\n        // Configure the matchers and handlers.\n        const matchers = new DefaultRouteMatcherManager();\n        // Match pages under `pages/`.\n        matchers.push(new PagesRouteMatcherProvider(this.distDir, manifestLoader, this.i18nProvider));\n        // Match api routes under `pages/api/`.\n        matchers.push(new PagesAPIRouteMatcherProvider(this.distDir, manifestLoader, this.i18nProvider));\n        // If the app directory is enabled, then add the app matchers and handlers.\n        if (this.enabledDirectories.app) {\n            // Match app pages under `app/`.\n            matchers.push(new AppPageRouteMatcherProvider(this.distDir, manifestLoader));\n            matchers.push(new AppRouteRouteMatcherProvider(this.distDir, manifestLoader));\n        }\n        return matchers;\n    }\n    async instrumentationOnRequestError(...args) {\n        const [err, req, ctx] = args;\n        if (this.instrumentation) {\n            try {\n                await (this.instrumentation.onRequestError == null ? void 0 : this.instrumentation.onRequestError.call(this.instrumentation, err, {\n                    path: req.url || '',\n                    method: req.method || 'GET',\n                    // Normalize middleware headers and other server request headers\n                    headers: req instanceof NextRequestHint ? Object.fromEntries(req.headers.entries()) : req.headers\n                }, ctx));\n            } catch (handlerErr) {\n                // Log the soft error and continue, since errors can thrown from react stream handler\n                console.error('Error in instrumentation.onRequestError:', handlerErr);\n            }\n        }\n    }\n    logError(err) {\n        if (this.quiet) return;\n        Log.error(err);\n    }\n    async handleRequest(req, res, parsedUrl) {\n        await this.prepare();\n        const method = req.method.toUpperCase();\n        const tracer = getTracer();\n        return tracer.withPropagatedContext(req.headers, ()=>{\n            return tracer.trace(BaseServerSpan.handleRequest, {\n                spanName: `${method} ${req.url}`,\n                kind: SpanKind.SERVER,\n                attributes: {\n                    'http.method': method,\n                    'http.target': req.url\n                }\n            }, async (span)=>this.handleRequestImpl(req, res, parsedUrl).finally(()=>{\n                    if (!span) return;\n                    const isRSCRequest = getRequestMeta(req, 'isRSCRequest') ?? false;\n                    span.setAttributes({\n                        'http.status_code': res.statusCode,\n                        'next.rsc': isRSCRequest\n                    });\n                    const rootSpanAttributes = tracer.getRootSpanAttributes();\n                    // We were unable to get attributes, probably OTEL is not enabled\n                    if (!rootSpanAttributes) return;\n                    if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                        console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                        return;\n                    }\n                    const route = rootSpanAttributes.get('next.route');\n                    if (route) {\n                        const name = isRSCRequest ? `RSC ${method} ${route}` : `${method} ${route}`;\n                        span.setAttributes({\n                            'next.route': route,\n                            'http.route': route,\n                            'next.span_name': name\n                        });\n                        span.updateName(name);\n                    } else {\n                        span.updateName(isRSCRequest ? `RSC ${method} ${req.url}` : `${method} ${req.url}`);\n                    }\n                }));\n        });\n    }\n    async handleRequestImpl(req, res, parsedUrl) {\n        try {\n            var _originalRequest_socket, _originalRequest_socket1, _this_i18nProvider, _this_i18nProvider1, _this_nextConfig_i18n;\n            // Wait for the matchers to be ready.\n            await this.matchers.waitTillReady();\n            // ensure cookies set in middleware are merged and\n            // not overridden by API routes/getServerSideProps\n            patchSetHeaderWithCookieSupport(req, isNodeNextResponse(res) ? res.originalResponse : res);\n            const urlParts = (req.url || '').split('?', 1);\n            const urlNoQuery = urlParts[0];\n            // this normalizes repeated slashes in the path e.g. hello//world ->\n            // hello/world or backslashes to forward slashes, this does not\n            // handle trailing slash as that is handled the same as a next.config.js\n            // redirect\n            if (urlNoQuery == null ? void 0 : urlNoQuery.match(/(\\\\|\\/\\/)/)) {\n                const cleanUrl = normalizeRepeatedSlashes(req.url);\n                res.redirect(cleanUrl, 308).body(cleanUrl).send();\n                return;\n            }\n            // Parse url if parsedUrl not provided\n            if (!parsedUrl || typeof parsedUrl !== 'object') {\n                if (!req.url) {\n                    throw new Error('Invariant: url can not be undefined');\n                }\n                parsedUrl = parseUrl(req.url, true);\n            }\n            if (!parsedUrl.pathname) {\n                throw new Error(\"Invariant: pathname can't be empty\");\n            }\n            // Parse the querystring ourselves if the user doesn't handle querystring parsing\n            if (typeof parsedUrl.query === 'string') {\n                parsedUrl.query = Object.fromEntries(new URLSearchParams(parsedUrl.query));\n            }\n            // Update the `x-forwarded-*` headers.\n            const { originalRequest = null } = isNodeNextRequest(req) ? req : {};\n            const xForwardedProto = originalRequest == null ? void 0 : originalRequest.headers['x-forwarded-proto'];\n            const isHttps = xForwardedProto ? xForwardedProto === 'https' : !!(originalRequest == null ? void 0 : (_originalRequest_socket = originalRequest.socket) == null ? void 0 : _originalRequest_socket.encrypted);\n            req.headers['x-forwarded-host'] ??= req.headers['host'] ?? this.hostname;\n            req.headers['x-forwarded-port'] ??= this.port ? this.port.toString() : isHttps ? '443' : '80';\n            req.headers['x-forwarded-proto'] ??= isHttps ? 'https' : 'http';\n            req.headers['x-forwarded-for'] ??= originalRequest == null ? void 0 : (_originalRequest_socket1 = originalRequest.socket) == null ? void 0 : _originalRequest_socket1.remoteAddress;\n            // Validate that if i18n isn't configured or the passed parameters are not\n            // valid it should be removed from the query.\n            if (!((_this_i18nProvider = this.i18nProvider) == null ? void 0 : _this_i18nProvider.validateQuery(parsedUrl.query))) {\n                delete parsedUrl.query.__nextLocale;\n                delete parsedUrl.query.__nextDefaultLocale;\n                delete parsedUrl.query.__nextInferredLocaleFromDefault;\n            }\n            // This should be done before any normalization of the pathname happens as\n            // it captures the initial URL.\n            this.attachRequestMeta(req, parsedUrl);\n            let finished = await this.handleRSCRequest(req, res, parsedUrl);\n            if (finished) return;\n            const domainLocale = (_this_i18nProvider1 = this.i18nProvider) == null ? void 0 : _this_i18nProvider1.detectDomainLocale(getHostname(parsedUrl, req.headers));\n            const defaultLocale = (domainLocale == null ? void 0 : domainLocale.defaultLocale) || ((_this_nextConfig_i18n = this.nextConfig.i18n) == null ? void 0 : _this_nextConfig_i18n.defaultLocale);\n            parsedUrl.query.__nextDefaultLocale = defaultLocale;\n            const url = parseUrlUtil(req.url.replace(/^\\/+/, '/'));\n            const pathnameInfo = getNextPathnameInfo(url.pathname, {\n                nextConfig: this.nextConfig,\n                i18nProvider: this.i18nProvider\n            });\n            url.pathname = pathnameInfo.pathname;\n            if (pathnameInfo.basePath) {\n                req.url = removePathPrefix(req.url, this.nextConfig.basePath);\n            }\n            const useMatchedPathHeader = this.minimalMode && typeof req.headers['x-matched-path'] === 'string';\n            // TODO: merge handling with invokePath\n            if (useMatchedPathHeader) {\n                try {\n                    var _this_normalizers_data, _this_normalizers_postponed, _this_i18nProvider2, _this_getRoutesManifest;\n                    if (this.enabledDirectories.app) {\n                        // ensure /index path is normalized for prerender\n                        // in minimal mode\n                        if (req.url.match(/^\\/index($|\\?)/)) {\n                            req.url = req.url.replace(/^\\/index/, '/');\n                        }\n                        parsedUrl.pathname = parsedUrl.pathname === '/index' ? '/' : parsedUrl.pathname;\n                    }\n                    // x-matched-path is the source of truth, it tells what page\n                    // should be rendered because we don't process rewrites in minimalMode\n                    let { pathname: matchedPath } = new URL(req.headers['x-matched-path'], 'http://localhost');\n                    let { pathname: urlPathname } = new URL(req.url, 'http://localhost');\n                    // For ISR the URL is normalized to the prerenderPath so if\n                    // it's a data request the URL path will be the data URL,\n                    // basePath is already stripped by this point\n                    if ((_this_normalizers_data = this.normalizers.data) == null ? void 0 : _this_normalizers_data.match(urlPathname)) {\n                        parsedUrl.query.__nextDataReq = '1';\n                    } else if (((_this_normalizers_postponed = this.normalizers.postponed) == null ? void 0 : _this_normalizers_postponed.match(matchedPath)) && req.method === 'POST') {\n                        // Decode the postponed state from the request body, it will come as\n                        // an array of buffers, so collect them and then concat them to form\n                        // the string.\n                        const body = [];\n                        for await (const chunk of req.body){\n                            body.push(chunk);\n                        }\n                        const postponed = Buffer.concat(body).toString('utf8');\n                        addRequestMeta(req, 'postponed', postponed);\n                        // If the request does not have the `x-now-route-matches` header,\n                        // it means that the request has it's exact path specified in the\n                        // `x-matched-path` header. In this case, we should update the\n                        // pathname to the matched path.\n                        if (!req.headers['x-now-route-matches']) {\n                            urlPathname = this.normalizers.postponed.normalize(matchedPath, true);\n                        }\n                    } else if (this.isAppPPREnabled && this.minimalMode && req.headers[NEXT_RESUME_HEADER] === '1' && req.method === 'POST') {\n                        // Decode the postponed state from the request body, it will come as\n                        // an array of buffers, so collect them and then concat them to form\n                        // the string.\n                        const body = [];\n                        for await (const chunk of req.body){\n                            body.push(chunk);\n                        }\n                        const postponed = Buffer.concat(body).toString('utf8');\n                        addRequestMeta(req, 'postponed', postponed);\n                    }\n                    matchedPath = this.normalize(matchedPath);\n                    const normalizedUrlPath = this.stripNextDataPath(urlPathname);\n                    // Perform locale detection and normalization.\n                    const localeAnalysisResult = (_this_i18nProvider2 = this.i18nProvider) == null ? void 0 : _this_i18nProvider2.analyze(matchedPath, {\n                        defaultLocale\n                    });\n                    // The locale result will be defined even if the locale was not\n                    // detected for the request because it will be inferred from the\n                    // default locale.\n                    if (localeAnalysisResult) {\n                        parsedUrl.query.__nextLocale = localeAnalysisResult.detectedLocale;\n                        // If the detected locale was inferred from the default locale, we\n                        // need to modify the metadata on the request to indicate that.\n                        if (localeAnalysisResult.inferredFromDefault) {\n                            parsedUrl.query.__nextInferredLocaleFromDefault = '1';\n                        } else {\n                            delete parsedUrl.query.__nextInferredLocaleFromDefault;\n                        }\n                    }\n                    // TODO: check if this is needed any more?\n                    matchedPath = denormalizePagePath(matchedPath);\n                    let srcPathname = matchedPath;\n                    let pageIsDynamic = isDynamicRoute(srcPathname);\n                    if (!pageIsDynamic) {\n                        const match = await this.matchers.match(srcPathname, {\n                            i18n: localeAnalysisResult\n                        });\n                        // Update the source pathname to the matched page's pathname.\n                        if (match) {\n                            srcPathname = match.definition.pathname;\n                            // The page is dynamic if the params are defined.\n                            pageIsDynamic = typeof match.params !== 'undefined';\n                        }\n                    }\n                    // The rest of this function can't handle i18n properly, so ensure we\n                    // restore the pathname with the locale information stripped from it\n                    // now that we're done matching if we're using i18n.\n                    if (localeAnalysisResult) {\n                        matchedPath = localeAnalysisResult.pathname;\n                    }\n                    const utils = getUtils({\n                        pageIsDynamic,\n                        page: srcPathname,\n                        i18n: this.nextConfig.i18n,\n                        basePath: this.nextConfig.basePath,\n                        rewrites: ((_this_getRoutesManifest = this.getRoutesManifest()) == null ? void 0 : _this_getRoutesManifest.rewrites) || {\n                            beforeFiles: [],\n                            afterFiles: [],\n                            fallback: []\n                        },\n                        caseSensitive: !!this.nextConfig.experimental.caseSensitiveRoutes\n                    });\n                    // Ensure parsedUrl.pathname includes locale before processing\n                    // rewrites or they won't match correctly.\n                    if (defaultLocale && !pathnameInfo.locale) {\n                        parsedUrl.pathname = `/${defaultLocale}${parsedUrl.pathname}`;\n                    }\n                    const pathnameBeforeRewrite = parsedUrl.pathname;\n                    const rewriteParams = utils.handleRewrites(req, parsedUrl);\n                    const rewriteParamKeys = Object.keys(rewriteParams);\n                    const didRewrite = pathnameBeforeRewrite !== parsedUrl.pathname;\n                    if (didRewrite && parsedUrl.pathname) {\n                        addRequestMeta(req, 'rewroteURL', parsedUrl.pathname);\n                    }\n                    const routeParamKeys = new Set();\n                    for (const key of Object.keys(parsedUrl.query)){\n                        const value = parsedUrl.query[key];\n                        normalizeNextQueryParam(key, (normalizedKey)=>{\n                            if (!parsedUrl) return; // typeguard\n                            parsedUrl.query[normalizedKey] = value;\n                            routeParamKeys.add(normalizedKey);\n                            delete parsedUrl.query[key];\n                        });\n                    }\n                    // interpolate dynamic params and normalize URL if needed\n                    if (pageIsDynamic) {\n                        let params = {};\n                        let paramsResult = utils.normalizeDynamicRouteParams(parsedUrl.query);\n                        // for prerendered ISR paths we attempt parsing the route\n                        // params from the URL directly as route-matches may not\n                        // contain the correct values due to the filesystem path\n                        // matching before the dynamic route has been matched\n                        if (!paramsResult.hasValidParams && !isDynamicRoute(normalizedUrlPath)) {\n                            let matcherParams = utils.dynamicRouteMatcher == null ? void 0 : utils.dynamicRouteMatcher.call(utils, normalizedUrlPath);\n                            if (matcherParams) {\n                                utils.normalizeDynamicRouteParams(matcherParams);\n                                Object.assign(paramsResult.params, matcherParams);\n                                paramsResult.hasValidParams = true;\n                            }\n                        }\n                        // if an action request is bypassing a prerender and we\n                        // don't have the params in the URL since it was prerendered\n                        // and matched during handle: 'filesystem' rather than dynamic route\n                        // resolving we need to parse the params from the matched-path.\n                        // Note: this is similar to above case but from match-path instead\n                        // of from the request URL since a rewrite could cause that to not\n                        // match the src pathname\n                        if (// we can have a collision with /index and a top-level /[slug]\n                        matchedPath !== '/index' && !paramsResult.hasValidParams && !isDynamicRoute(matchedPath)) {\n                            let matcherParams = utils.dynamicRouteMatcher == null ? void 0 : utils.dynamicRouteMatcher.call(utils, matchedPath);\n                            if (matcherParams) {\n                                const curParamsResult = utils.normalizeDynamicRouteParams(matcherParams);\n                                if (curParamsResult.hasValidParams) {\n                                    Object.assign(params, matcherParams);\n                                    paramsResult = curParamsResult;\n                                }\n                            }\n                        }\n                        if (paramsResult.hasValidParams) {\n                            params = paramsResult.params;\n                        }\n                        if (req.headers['x-now-route-matches'] && isDynamicRoute(matchedPath) && !paramsResult.hasValidParams) {\n                            const opts = {};\n                            const routeParams = utils.getParamsFromRouteMatches(req, opts, parsedUrl.query.__nextLocale || '');\n                            // If this returns a locale, it means that the locale was detected\n                            // from the pathname.\n                            if (opts.locale) {\n                                parsedUrl.query.__nextLocale = opts.locale;\n                                // As the locale was parsed from the pathname, we should mark\n                                // that the locale was not inferred as the default.\n                                delete parsedUrl.query.__nextInferredLocaleFromDefault;\n                            }\n                            paramsResult = utils.normalizeDynamicRouteParams(routeParams, true);\n                            if (paramsResult.hasValidParams) {\n                                params = paramsResult.params;\n                            }\n                        }\n                        // handle the actual dynamic route name being requested\n                        if (utils.defaultRouteMatches && normalizedUrlPath === srcPathname && !paramsResult.hasValidParams && !utils.normalizeDynamicRouteParams({\n                            ...params\n                        }, true).hasValidParams) {\n                            params = utils.defaultRouteMatches;\n                            // Mark that the default route matches were set on the request\n                            // during routing.\n                            addRequestMeta(req, 'didSetDefaultRouteMatches', true);\n                        }\n                        if (params) {\n                            matchedPath = utils.interpolateDynamicPath(srcPathname, params);\n                            req.url = utils.interpolateDynamicPath(req.url, params);\n                        }\n                    }\n                    if (pageIsDynamic || didRewrite) {\n                        var _utils_defaultRouteRegex;\n                        utils.normalizeVercelUrl(req, true, [\n                            ...rewriteParamKeys,\n                            ...Object.keys(((_utils_defaultRouteRegex = utils.defaultRouteRegex) == null ? void 0 : _utils_defaultRouteRegex.groups) || {})\n                        ]);\n                    }\n                    for (const key of routeParamKeys){\n                        delete parsedUrl.query[key];\n                    }\n                    parsedUrl.pathname = matchedPath;\n                    url.pathname = parsedUrl.pathname;\n                    finished = await this.normalizeAndAttachMetadata(req, res, parsedUrl);\n                    if (finished) return;\n                } catch (err) {\n                    if (err instanceof DecodeError || err instanceof NormalizeError) {\n                        res.statusCode = 400;\n                        return this.renderError(null, req, res, '/_error', {});\n                    }\n                    throw err;\n                }\n            }\n            addRequestMeta(req, 'isLocaleDomain', Boolean(domainLocale));\n            if (pathnameInfo.locale) {\n                req.url = formatUrl(url);\n                addRequestMeta(req, 'didStripLocale', true);\n            }\n            // If we aren't in minimal mode or there is no locale in the query\n            // string, add the locale to the query string.\n            if (!this.minimalMode || !parsedUrl.query.__nextLocale) {\n                // If the locale is in the pathname, add it to the query string.\n                if (pathnameInfo.locale) {\n                    parsedUrl.query.__nextLocale = pathnameInfo.locale;\n                } else if (defaultLocale) {\n                    parsedUrl.query.__nextLocale = defaultLocale;\n                    parsedUrl.query.__nextInferredLocaleFromDefault = '1';\n                }\n            }\n            // set incremental cache to request meta so it can\n            // be passed down for edge functions and the fetch disk\n            // cache can be leveraged locally\n            if (!this.serverOptions.webServerConfig && !getRequestMeta(req, 'incrementalCache')) {\n                let protocol = 'https:';\n                try {\n                    const parsedFullUrl = new URL(getRequestMeta(req, 'initURL') || '/', 'http://n');\n                    protocol = parsedFullUrl.protocol;\n                } catch  {}\n                const incrementalCache = await this.getIncrementalCache({\n                    requestHeaders: Object.assign({}, req.headers),\n                    requestProtocol: protocol.substring(0, protocol.length - 1)\n                });\n                const _globalThis = globalThis;\n                if (_globalThis.__nextCacheHandlers) {\n                    var _req_headers_NEXT_CACHE_REVALIDATED_TAGS_HEADER;\n                    const expiredTags = ((_req_headers_NEXT_CACHE_REVALIDATED_TAGS_HEADER = req.headers[NEXT_CACHE_REVALIDATED_TAGS_HEADER]) == null ? void 0 : _req_headers_NEXT_CACHE_REVALIDATED_TAGS_HEADER.split(',')) || [];\n                    for (const handler of Object.values(_globalThis.__nextCacheHandlers)){\n                        if (typeof handler.receiveExpiredTags === 'function') {\n                            await handler.receiveExpiredTags(...expiredTags);\n                        }\n                    }\n                }\n                incrementalCache.resetRequestCache();\n                addRequestMeta(req, 'incrementalCache', incrementalCache);\n                globalThis.__incrementalCache = incrementalCache;\n            }\n            // set server components HMR cache to request meta so it can be passed\n            // down for edge functions\n            if (!getRequestMeta(req, 'serverComponentsHmrCache')) {\n                addRequestMeta(req, 'serverComponentsHmrCache', this.getServerComponentsHmrCache());\n            }\n            // when invokePath is specified we can short short circuit resolving\n            // we only honor this header if we are inside of a render worker to\n            // prevent external users coercing the routing path\n            const invokePath = getRequestMeta(req, 'invokePath');\n            const useInvokePath = !useMatchedPathHeader && process.env.NEXT_RUNTIME !== 'edge' && invokePath;\n            if (useInvokePath) {\n                var _this_nextConfig_i18n1;\n                const invokeStatus = getRequestMeta(req, 'invokeStatus');\n                if (invokeStatus) {\n                    const invokeQuery = getRequestMeta(req, 'invokeQuery');\n                    if (invokeQuery) {\n                        Object.assign(parsedUrl.query, invokeQuery);\n                    }\n                    res.statusCode = invokeStatus;\n                    let err = getRequestMeta(req, 'invokeError') || null;\n                    return this.renderError(err, req, res, '/_error', parsedUrl.query);\n                }\n                const parsedMatchedPath = new URL(invokePath || '/', 'http://n');\n                const invokePathnameInfo = getNextPathnameInfo(parsedMatchedPath.pathname, {\n                    nextConfig: this.nextConfig,\n                    parseData: false\n                });\n                if (invokePathnameInfo.locale) {\n                    parsedUrl.query.__nextLocale = invokePathnameInfo.locale;\n                }\n                if (parsedUrl.pathname !== parsedMatchedPath.pathname) {\n                    parsedUrl.pathname = parsedMatchedPath.pathname;\n                    addRequestMeta(req, 'rewroteURL', invokePathnameInfo.pathname);\n                }\n                const normalizeResult = normalizeLocalePath(removePathPrefix(parsedUrl.pathname, this.nextConfig.basePath || ''), ((_this_nextConfig_i18n1 = this.nextConfig.i18n) == null ? void 0 : _this_nextConfig_i18n1.locales) || []);\n                if (normalizeResult.detectedLocale) {\n                    parsedUrl.query.__nextLocale = normalizeResult.detectedLocale;\n                }\n                parsedUrl.pathname = normalizeResult.pathname;\n                for (const key of Object.keys(parsedUrl.query)){\n                    if (!key.startsWith('__next') && !key.startsWith('_next')) {\n                        delete parsedUrl.query[key];\n                    }\n                }\n                const invokeQuery = getRequestMeta(req, 'invokeQuery');\n                if (invokeQuery) {\n                    Object.assign(parsedUrl.query, invokeQuery);\n                }\n                finished = await this.normalizeAndAttachMetadata(req, res, parsedUrl);\n                if (finished) return;\n                await this.handleCatchallRenderRequest(req, res, parsedUrl);\n                return;\n            }\n            if (process.env.NEXT_RUNTIME !== 'edge' && getRequestMeta(req, 'middlewareInvoke')) {\n                finished = await this.normalizeAndAttachMetadata(req, res, parsedUrl);\n                if (finished) return;\n                finished = await this.handleCatchallMiddlewareRequest(req, res, parsedUrl);\n                if (finished) return;\n                const err = new Error();\n                err.result = {\n                    response: new Response(null, {\n                        headers: {\n                            'x-middleware-next': '1'\n                        }\n                    })\n                };\n                err.bubble = true;\n                throw err;\n            }\n            // This wasn't a request via the matched path or the invoke path, so\n            // prepare for a legacy run by removing the base path.\n            // ensure we strip the basePath when not using an invoke header\n            if (!useMatchedPathHeader && pathnameInfo.basePath) {\n                parsedUrl.pathname = removePathPrefix(parsedUrl.pathname, pathnameInfo.basePath);\n            }\n            res.statusCode = 200;\n            return await this.run(req, res, parsedUrl);\n        } catch (err) {\n            if (err instanceof NoFallbackError) {\n                throw err;\n            }\n            if (err && typeof err === 'object' && err.code === 'ERR_INVALID_URL' || err instanceof DecodeError || err instanceof NormalizeError) {\n                res.statusCode = 400;\n                return this.renderError(null, req, res, '/_error', {});\n            }\n            if (this.minimalMode || this.renderOpts.dev || isBubbledError(err) && err.bubble) {\n                throw err;\n            }\n            this.logError(getProperError(err));\n            res.statusCode = 500;\n            res.body('Internal Server Error').send();\n        }\n    }\n    /**\n   * @internal - this method is internal to Next.js and should not be used directly by end-users\n   */ getRequestHandlerWithMetadata(meta) {\n        const handler = this.getRequestHandler();\n        return (req, res, parsedUrl)=>{\n            setRequestMeta(req, meta);\n            return handler(req, res, parsedUrl);\n        };\n    }\n    getRequestHandler() {\n        return this.handleRequest.bind(this);\n    }\n    setAssetPrefix(prefix) {\n        this.renderOpts.assetPrefix = prefix ? prefix.replace(/\\/$/, '') : '';\n    }\n    /**\n   * Runs async initialization of server.\n   * It is idempotent, won't fire underlying initialization more than once.\n   */ async prepare() {\n        if (this.prepared) return;\n        if (this.preparedPromise === null) {\n            // Get instrumentation module\n            this.instrumentation = await this.loadInstrumentationModule();\n            this.preparedPromise = this.prepareImpl().then(()=>{\n                this.prepared = true;\n                this.preparedPromise = null;\n            });\n        }\n        return this.preparedPromise;\n    }\n    async prepareImpl() {}\n    async loadInstrumentationModule() {}\n    // Backwards compatibility\n    async close() {}\n    getAppPathRoutes() {\n        const appPathRoutes = {};\n        Object.keys(this.appPathsManifest || {}).forEach((entry)=>{\n            const normalizedPath = normalizeAppPath(entry);\n            if (!appPathRoutes[normalizedPath]) {\n                appPathRoutes[normalizedPath] = [];\n            }\n            appPathRoutes[normalizedPath].push(entry);\n        });\n        return appPathRoutes;\n    }\n    async run(req, res, parsedUrl) {\n        return getTracer().trace(BaseServerSpan.run, async ()=>this.runImpl(req, res, parsedUrl));\n    }\n    async runImpl(req, res, parsedUrl) {\n        await this.handleCatchallRenderRequest(req, res, parsedUrl);\n    }\n    async pipe(fn, partialContext) {\n        return getTracer().trace(BaseServerSpan.pipe, async ()=>this.pipeImpl(fn, partialContext));\n    }\n    async pipeImpl(fn, partialContext) {\n        const isBotRequest = isBot(partialContext.req.headers['user-agent'] || '');\n        const ctx = {\n            ...partialContext,\n            renderOpts: {\n                ...this.renderOpts,\n                supportsDynamicResponse: !isBotRequest,\n                isBot: !!isBotRequest\n            }\n        };\n        const payload = await fn(ctx);\n        if (payload === null) {\n            return;\n        }\n        const { req, res } = ctx;\n        const originalStatus = res.statusCode;\n        const { body, type } = payload;\n        let { revalidate } = payload;\n        if (!res.sent) {\n            const { generateEtags, poweredByHeader, dev } = this.renderOpts;\n            // In dev, we should not cache pages for any reason.\n            if (dev) {\n                res.setHeader('Cache-Control', 'no-store, must-revalidate');\n                revalidate = undefined;\n            }\n            await this.sendRenderResult(req, res, {\n                result: body,\n                type,\n                generateEtags,\n                poweredByHeader,\n                revalidate,\n                expireTime: this.nextConfig.expireTime\n            });\n            res.statusCode = originalStatus;\n        }\n    }\n    async getStaticHTML(fn, partialContext) {\n        const ctx = {\n            ...partialContext,\n            renderOpts: {\n                ...this.renderOpts,\n                supportsDynamicResponse: false\n            }\n        };\n        const payload = await fn(ctx);\n        if (payload === null) {\n            return null;\n        }\n        return payload.body.toUnchunkedString();\n    }\n    async render(req, res, pathname, query = {}, parsedUrl, internalRender = false) {\n        return getTracer().trace(BaseServerSpan.render, async ()=>this.renderImpl(req, res, pathname, query, parsedUrl, internalRender));\n    }\n    getWaitUntil() {\n        const builtinRequestContext = getBuiltinRequestContext();\n        if (builtinRequestContext) {\n            // the platform provided a request context.\n            // use the `waitUntil` from there, whether actually present or not --\n            // if not present, `unstable_after` will error.\n            // NOTE: if we're in an edge runtime sandbox, this context will be used to forward the outer waitUntil.\n            return builtinRequestContext.waitUntil;\n        }\n        if (this.minimalMode) {\n            // we're built for a serverless environment, and `waitUntil` is not available,\n            // but using a noop would likely lead to incorrect behavior,\n            // because we have no way of keeping the invocation alive.\n            // return nothing, and `unstable_after` will error if used.\n            //\n            // NOTE: for edge functions, `NextWebServer` always runs in minimal mode.\n            //\n            // NOTE: if we're in an edge runtime sandbox, waitUntil will be passed in using \"@next/request-context\",\n            // so we won't get here.\n            return undefined;\n        }\n        // we're in `next start` or `next dev`. noop is fine for both.\n        return Server.noopWaitUntil;\n    }\n    static noopWaitUntil(promise) {\n        promise.catch((err)=>{\n            console.error(err);\n        });\n    }\n    async renderImpl(req, res, pathname, query = {}, parsedUrl, internalRender = false) {\n        var _req_url;\n        if (!pathname.startsWith('/')) {\n            console.warn(`Cannot render page with path \"${pathname}\", did you mean \"/${pathname}\"?. See more info here: https://nextjs.org/docs/messages/render-no-starting-slash`);\n        }\n        if (this.renderOpts.customServer && pathname === '/index' && !await this.hasPage('/index')) {\n            // maintain backwards compatibility for custom server\n            // (see custom-server integration tests)\n            pathname = '/';\n        }\n        // we allow custom servers to call render for all URLs\n        // so check if we need to serve a static _next file or not.\n        // we don't modify the URL for _next/data request but still\n        // call render so we special case this to prevent an infinite loop\n        if (!internalRender && !this.minimalMode && !query.__nextDataReq && (((_req_url = req.url) == null ? void 0 : _req_url.match(/^\\/_next\\//)) || this.hasStaticDir && req.url.match(/^\\/static\\//))) {\n            return this.handleRequest(req, res, parsedUrl);\n        }\n        if (isBlockedPage(pathname)) {\n            return this.render404(req, res, parsedUrl);\n        }\n        return this.pipe((ctx)=>this.renderToResponse(ctx), {\n            req,\n            res,\n            pathname,\n            query\n        });\n    }\n    async getStaticPaths({ pathname }) {\n        var _this_getPrerenderManifest_dynamicRoutes_pathname;\n        // Read whether or not fallback should exist from the manifest.\n        const fallbackField = (_this_getPrerenderManifest_dynamicRoutes_pathname = this.getPrerenderManifest().dynamicRoutes[pathname]) == null ? void 0 : _this_getPrerenderManifest_dynamicRoutes_pathname.fallback;\n        return {\n            // `staticPaths` is intentionally set to `undefined` as it should've\n            // been caught when checking disk data.\n            staticPaths: undefined,\n            fallbackMode: parseFallbackField(fallbackField)\n        };\n    }\n    async renderToResponseWithComponents(requestContext, findComponentsResult) {\n        return getTracer().trace(BaseServerSpan.renderToResponseWithComponents, async ()=>this.renderToResponseWithComponentsImpl(requestContext, findComponentsResult));\n    }\n    pathCouldBeIntercepted(resolvedPathname) {\n        return isInterceptionRouteAppPath(resolvedPathname) || this.interceptionRoutePatterns.some((regexp)=>{\n            return regexp.test(resolvedPathname);\n        });\n    }\n    setVaryHeader(req, res, isAppPath, resolvedPathname) {\n        const baseVaryHeader = `${RSC_HEADER}, ${NEXT_ROUTER_STATE_TREE_HEADER}, ${NEXT_ROUTER_PREFETCH_HEADER}, ${NEXT_ROUTER_SEGMENT_PREFETCH_HEADER}`;\n        const isRSCRequest = getRequestMeta(req, 'isRSCRequest') ?? false;\n        let addedNextUrlToVary = false;\n        if (isAppPath && this.pathCouldBeIntercepted(resolvedPathname)) {\n            // Interception route responses can vary based on the `Next-URL` header.\n            // We use the Vary header to signal this behavior to the client to properly cache the response.\n            res.setHeader('vary', `${baseVaryHeader}, ${NEXT_URL}`);\n            addedNextUrlToVary = true;\n        } else if (isAppPath || isRSCRequest) {\n            // We don't need to include `Next-URL` in the Vary header for non-interception routes since it won't affect the response.\n            // We also set this header for pages to avoid caching issues when navigating between pages and app.\n            res.setHeader('vary', baseVaryHeader);\n        }\n        if (!addedNextUrlToVary) {\n            // Remove `Next-URL` from the request headers we determined it wasn't necessary to include in the Vary header.\n            // This is to avoid any dependency on the `Next-URL` header being present when preparing the response.\n            delete req.headers[NEXT_URL];\n        }\n    }\n    async renderToResponseWithComponentsImpl({ req, res, pathname, renderOpts: opts }, { components, query }) {\n        var _components_Component, _this, _this_nextConfig_i18n, _this_nextConfig_i18n1, _cacheEntry_value, _cacheEntry_value1;\n        if (pathname === UNDERSCORE_NOT_FOUND_ROUTE) {\n            pathname = '/404';\n        }\n        const is404Page = pathname === '/404';\n        const is500Page = pathname === '/500';\n        const isAppPath = components.isAppPath === true;\n        const hasServerProps = !!components.getServerSideProps;\n        let hasGetStaticPaths = !!components.getStaticPaths;\n        const isServerAction = getIsServerAction(req);\n        const hasGetInitialProps = !!((_components_Component = components.Component) == null ? void 0 : _components_Component.getInitialProps);\n        let isSSG = !!components.getStaticProps;\n        // Compute the iSSG cache key. We use the rewroteUrl since\n        // pages with fallback: false are allowed to be rewritten to\n        // and we need to look up the path by the rewritten path\n        let urlPathname = parseUrl(req.url || '').pathname || '/';\n        let resolvedUrlPathname = getRequestMeta(req, 'rewroteURL') || urlPathname;\n        this.setVaryHeader(req, res, isAppPath, resolvedUrlPathname);\n        let staticPaths;\n        let fallbackMode;\n        let hasFallback = false;\n        const isDynamic = isDynamicRoute(components.page);\n        const prerenderManifest = this.getPrerenderManifest();\n        if (isAppPath && isDynamic) {\n            const pathsResult = await this.getStaticPaths({\n                pathname,\n                page: components.page,\n                isAppPath,\n                requestHeaders: req.headers\n            });\n            staticPaths = pathsResult.staticPaths;\n            fallbackMode = pathsResult.fallbackMode;\n            hasFallback = typeof fallbackMode !== 'undefined';\n            if (this.nextConfig.output === 'export') {\n                const page = components.page;\n                if (!staticPaths) {\n                    throw new Error(`Page \"${page}\" is missing exported function \"generateStaticParams()\", which is required with \"output: export\" config.`);\n                }\n                const resolvedWithoutSlash = removeTrailingSlash(resolvedUrlPathname);\n                if (!staticPaths.includes(resolvedWithoutSlash)) {\n                    throw new Error(`Page \"${page}\" is missing param \"${resolvedWithoutSlash}\" in \"generateStaticParams()\", which is required with \"output: export\" config.`);\n                }\n            }\n            if (hasFallback) {\n                hasGetStaticPaths = true;\n            }\n        }\n        if (hasFallback || (staticPaths == null ? void 0 : staticPaths.includes(resolvedUrlPathname)) || // this signals revalidation in deploy environments\n        // TODO: make this more generic\n        req.headers['x-now-route-matches']) {\n            isSSG = true;\n        } else if (!this.renderOpts.dev) {\n            isSSG ||= !!prerenderManifest.routes[toRoute(pathname)];\n        }\n        // Toggle whether or not this is a Data request\n        const isNextDataRequest = !!(query.__nextDataReq || req.headers['x-nextjs-data'] && this.serverOptions.webServerConfig) && (isSSG || hasServerProps);\n        /**\n     * If true, this indicates that the request being made is for an app\n     * prefetch request.\n     */ const isPrefetchRSCRequest = getRequestMeta(req, 'isPrefetchRSCRequest') ?? false;\n        // NOTE: Don't delete headers[RSC] yet, it still needs to be used in renderToHTML later\n        const isRSCRequest = getRequestMeta(req, 'isRSCRequest') ?? false;\n        // when we are handling a middleware prefetch and it doesn't\n        // resolve to a static data route we bail early to avoid\n        // unexpected SSR invocations\n        if (!isSSG && req.headers['x-middleware-prefetch'] && !(is404Page || pathname === '/_error')) {\n            res.setHeader('x-matched-path', pathname);\n            res.setHeader('x-middleware-skip', '1');\n            res.setHeader('cache-control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            res.body('{}').send();\n            return null;\n        }\n        delete query.__nextDataReq;\n        // normalize req.url for SSG paths as it is not exposed\n        // to getStaticProps and the asPath should not expose /_next/data\n        if (isSSG && this.minimalMode && req.headers['x-matched-path'] && req.url.startsWith('/_next/data')) {\n            req.url = this.stripNextDataPath(req.url);\n        }\n        if (!!req.headers['x-nextjs-data'] && (!res.statusCode || res.statusCode === 200)) {\n            res.setHeader('x-nextjs-matched-path', `${query.__nextLocale ? `/${query.__nextLocale}` : ''}${pathname}`);\n        }\n        let routeModule;\n        if (components.routeModule) {\n            routeModule = components.routeModule;\n        }\n        /**\n     * If the route being rendered is an app page, and the ppr feature has been\n     * enabled, then the given route _could_ support PPR.\n     */ const couldSupportPPR = this.isAppPPREnabled && typeof routeModule !== 'undefined' && isAppPageRouteModule(routeModule);\n        // When enabled, this will allow the use of the `?__nextppronly` query to\n        // enable debugging of the static shell.\n        const hasDebugStaticShellQuery = process.env.__NEXT_EXPERIMENTAL_STATIC_SHELL_DEBUGGING === '1' && typeof query.__nextppronly !== 'undefined' && couldSupportPPR;\n        // When enabled, this will allow the use of the `?__nextppronly` query\n        // to enable debugging of the fallback shell.\n        const hasDebugFallbackShellQuery = hasDebugStaticShellQuery && query.__nextppronly === 'fallback';\n        // This page supports PPR if it is marked as being `PARTIALLY_STATIC` in the\n        // prerender manifest and this is an app page.\n        const isRoutePPREnabled = couldSupportPPR && (((_this = prerenderManifest.routes[pathname] ?? prerenderManifest.dynamicRoutes[pathname]) == null ? void 0 : _this.renderingMode) === 'PARTIALLY_STATIC' || // Ideally we'd want to check the appConfig to see if this page has PPR\n        // enabled or not, but that would require plumbing the appConfig through\n        // to the server during development. We assume that the page supports it\n        // but only during development.\n        hasDebugStaticShellQuery && (this.renderOpts.dev === true || this.experimentalTestProxy === true));\n        const isDebugStaticShell = hasDebugStaticShellQuery && isRoutePPREnabled;\n        // We should enable debugging dynamic accesses when the static shell\n        // debugging has been enabled and we're also in development mode.\n        const isDebugDynamicAccesses = isDebugStaticShell && this.renderOpts.dev === true;\n        const isDebugFallbackShell = hasDebugFallbackShellQuery && isRoutePPREnabled;\n        // If we're in minimal mode, then try to get the postponed information from\n        // the request metadata. If available, use it for resuming the postponed\n        // render.\n        const minimalPostponed = isRoutePPREnabled ? getRequestMeta(req, 'postponed') : undefined;\n        // If PPR is enabled, and this is a RSC request (but not a prefetch), then\n        // we can use this fact to only generate the flight data for the request\n        // because we can't cache the HTML (as it's also dynamic).\n        const isDynamicRSCRequest = isRoutePPREnabled && isRSCRequest && !isPrefetchRSCRequest;\n        // Need to read this before it's stripped by stripFlightHeaders. We don't\n        // need to transfer it to the request meta because it's only read\n        // within this function; the static segment data should have already been\n        // generated, so we will always either return a static response or a 404.\n        const segmentPrefetchHeader = req.headers[NEXT_ROUTER_SEGMENT_PREFETCH_HEADER.toLowerCase()];\n        // we need to ensure the status code if /404 is visited directly\n        if (is404Page && !isNextDataRequest && !isRSCRequest) {\n            res.statusCode = 404;\n        }\n        // ensure correct status is set when visiting a status page\n        // directly e.g. /500\n        if (STATIC_STATUS_PAGES.includes(pathname)) {\n            res.statusCode = parseInt(pathname.slice(1), 10);\n        }\n        if (// Server actions can use non-GET/HEAD methods.\n        !isServerAction && // Resume can use non-GET/HEAD methods.\n        !minimalPostponed && !is404Page && !is500Page && pathname !== '/_error' && req.method !== 'HEAD' && req.method !== 'GET' && (typeof components.Component === 'string' || isSSG)) {\n            res.statusCode = 405;\n            res.setHeader('Allow', [\n                'GET',\n                'HEAD'\n            ]);\n            await this.renderError(null, req, res, pathname);\n            return null;\n        }\n        // handle static page\n        if (typeof components.Component === 'string') {\n            return {\n                type: 'html',\n                // TODO: Static pages should be serialized as RenderResult\n                body: RenderResult.fromStatic(components.Component)\n            };\n        }\n        // Ensure that if the `amp` query parameter is falsy that we remove it from\n        // the query object. This ensures it won't be found by the `in` operator.\n        if ('amp' in query && !query.amp) delete query.amp;\n        if (opts.supportsDynamicResponse === true) {\n            var _components_Document;\n            const isBotRequest = isBot(req.headers['user-agent'] || '');\n            const isSupportedDocument = typeof ((_components_Document = components.Document) == null ? void 0 : _components_Document.getInitialProps) !== 'function' || // The built-in `Document` component also supports dynamic HTML for concurrent mode.\n            NEXT_BUILTIN_DOCUMENT in components.Document;\n            // Disable dynamic HTML in cases that we know it won't be generated,\n            // so that we can continue generating a cache key when possible.\n            // TODO-APP: should the first render for a dynamic app path\n            // be static so we can collect revalidate and populate the\n            // cache if there are no dynamic data requirements\n            opts.supportsDynamicResponse = !isSSG && !isBotRequest && !query.amp && isSupportedDocument;\n            opts.isBot = isBotRequest;\n        }\n        // In development, we always want to generate dynamic HTML.\n        if (!isNextDataRequest && isAppPath && opts.dev) {\n            opts.supportsDynamicResponse = true;\n        }\n        const defaultLocale = isSSG ? (_this_nextConfig_i18n = this.nextConfig.i18n) == null ? void 0 : _this_nextConfig_i18n.defaultLocale : query.__nextDefaultLocale;\n        const locale = query.__nextLocale;\n        const locales = (_this_nextConfig_i18n1 = this.nextConfig.i18n) == null ? void 0 : _this_nextConfig_i18n1.locales;\n        let previewData;\n        let isPreviewMode = false;\n        if (hasServerProps || isSSG || isAppPath) {\n            // For the edge runtime, we don't support preview mode in SSG.\n            if (process.env.NEXT_RUNTIME !== 'edge') {\n                const { tryGetPreviewData } = require('./api-utils/node/try-get-preview-data');\n                previewData = tryGetPreviewData(req, res, this.renderOpts.previewProps, !!this.nextConfig.experimental.multiZoneDraftMode);\n                isPreviewMode = previewData !== false;\n            }\n        }\n        // If this is a request for an app path that should be statically generated\n        // and we aren't in the edge runtime, strip the flight headers so it will\n        // generate the static response.\n        if (isAppPath && !opts.dev && !isPreviewMode && isSSG && isRSCRequest && !isDynamicRSCRequest && (!isEdgeRuntime(opts.runtime) || this.serverOptions.webServerConfig)) {\n            stripFlightHeaders(req.headers);\n        }\n        let isOnDemandRevalidate = false;\n        let revalidateOnlyGenerated = false;\n        if (isSSG) {\n            ({ isOnDemandRevalidate, revalidateOnlyGenerated } = checkIsOnDemandRevalidate(req, this.renderOpts.previewProps));\n        }\n        if (isSSG && this.minimalMode && req.headers['x-matched-path']) {\n            // the url value is already correct when the matched-path header is set\n            resolvedUrlPathname = urlPathname;\n        }\n        urlPathname = removeTrailingSlash(urlPathname);\n        resolvedUrlPathname = removeTrailingSlash(resolvedUrlPathname);\n        if (this.localeNormalizer) {\n            resolvedUrlPathname = this.localeNormalizer.normalize(resolvedUrlPathname);\n        }\n        const handleRedirect = (pageData)=>{\n            const redirect = {\n                destination: pageData.pageProps.__N_REDIRECT,\n                statusCode: pageData.pageProps.__N_REDIRECT_STATUS,\n                basePath: pageData.pageProps.__N_REDIRECT_BASE_PATH\n            };\n            const statusCode = getRedirectStatus(redirect);\n            const { basePath } = this.nextConfig;\n            if (basePath && redirect.basePath !== false && redirect.destination.startsWith('/')) {\n                redirect.destination = `${basePath}${redirect.destination}`;\n            }\n            if (redirect.destination.startsWith('/')) {\n                redirect.destination = normalizeRepeatedSlashes(redirect.destination);\n            }\n            res.redirect(redirect.destination, statusCode).body(redirect.destination).send();\n        };\n        // remove /_next/data prefix from urlPathname so it matches\n        // for direct page visit and /_next/data visit\n        if (isNextDataRequest) {\n            resolvedUrlPathname = this.stripNextDataPath(resolvedUrlPathname);\n            urlPathname = this.stripNextDataPath(urlPathname);\n        }\n        let ssgCacheKey = null;\n        if (!isPreviewMode && isSSG && !opts.supportsDynamicResponse && !isServerAction && !minimalPostponed && !isDynamicRSCRequest) {\n            ssgCacheKey = `${locale ? `/${locale}` : ''}${(pathname === '/' || resolvedUrlPathname === '/') && locale ? '' : resolvedUrlPathname}${query.amp ? '.amp' : ''}`;\n        }\n        if ((is404Page || is500Page) && isSSG) {\n            ssgCacheKey = `${locale ? `/${locale}` : ''}${pathname}${query.amp ? '.amp' : ''}`;\n        }\n        if (ssgCacheKey) {\n            // we only encode path delimiters for path segments from\n            // getStaticPaths so we need to attempt decoding the URL\n            // to match against and only escape the path delimiters\n            // this allows non-ascii values to be handled e.g. Japanese characters\n            // TODO: investigate adding this handling for non-SSG pages so\n            // non-ascii names work there also\n            ssgCacheKey = ssgCacheKey.split('/').map((seg)=>{\n                try {\n                    seg = escapePathDelimiters(decodeURIComponent(seg), true);\n                } catch (_) {\n                    // An improperly encoded URL was provided\n                    throw new DecodeError('failed to decode param');\n                }\n                return seg;\n            }).join('/');\n            // ensure /index and / is normalized to one key\n            ssgCacheKey = ssgCacheKey === '/index' && pathname === '/' ? '/' : ssgCacheKey;\n        }\n        let protocol = 'https:';\n        try {\n            const parsedFullUrl = new URL(getRequestMeta(req, 'initURL') || '/', 'http://n');\n            protocol = parsedFullUrl.protocol;\n        } catch  {}\n        // use existing incrementalCache instance if available\n        const incrementalCache = globalThis.__incrementalCache || await this.getIncrementalCache({\n            requestHeaders: Object.assign({}, req.headers),\n            requestProtocol: protocol.substring(0, protocol.length - 1)\n        });\n        // TODO: investigate, this is not safe across multiple concurrent requests\n        incrementalCache.resetRequestCache();\n        const doRender = async ({ postponed, fallbackRouteParams, isDevWarmup })=>{\n            // In development, we always want to generate dynamic HTML.\n            let supportsDynamicResponse = // If we're in development, we always support dynamic HTML, unless it's\n            // a data request, in which case we only produce static HTML.\n            !isNextDataRequest && opts.dev === true || // If this is not SSG or does not have static paths, then it supports\n            // dynamic HTML.\n            !isSSG && !hasGetStaticPaths || // If this request has provided postponed data, it supports dynamic\n            // HTML.\n            typeof postponed === 'string' || // If this is a dynamic RSC request, then this render supports dynamic\n            // HTML (it's dynamic).\n            isDynamicRSCRequest;\n            const origQuery = parseUrl(req.url || '', true).query;\n            // clear any dynamic route params so they aren't in\n            // the resolvedUrl\n            if (opts.params) {\n                Object.keys(opts.params).forEach((key)=>{\n                    delete origQuery[key];\n                });\n            }\n            const hadTrailingSlash = urlPathname !== '/' && this.nextConfig.trailingSlash;\n            const resolvedUrl = formatUrl({\n                pathname: `${resolvedUrlPathname}${hadTrailingSlash ? '/' : ''}`,\n                // make sure to only add query values from original URL\n                query: origQuery\n            });\n            const renderOpts = {\n                ...components,\n                ...opts,\n                ...isAppPath ? {\n                    incrementalCache,\n                    // This is a revalidation request if the request is for a static\n                    // page and it is not being resumed from a postponed render and\n                    // it is not a dynamic RSC request then it is a revalidation\n                    // request.\n                    isRevalidate: isSSG && !postponed && !isDynamicRSCRequest,\n                    serverActions: this.nextConfig.experimental.serverActions\n                } : {},\n                isNextDataRequest,\n                resolvedUrl,\n                locale,\n                locales,\n                defaultLocale,\n                multiZoneDraftMode: this.nextConfig.experimental.multiZoneDraftMode,\n                // For getServerSideProps and getInitialProps we need to ensure we use the original URL\n                // and not the resolved URL to prevent a hydration mismatch on\n                // asPath\n                resolvedAsPath: hasServerProps || hasGetInitialProps ? formatUrl({\n                    // we use the original URL pathname less the _next/data prefix if\n                    // present\n                    pathname: `${urlPathname}${hadTrailingSlash ? '/' : ''}`,\n                    query: origQuery\n                }) : resolvedUrl,\n                experimental: {\n                    ...opts.experimental,\n                    isRoutePPREnabled\n                },\n                supportsDynamicResponse,\n                isOnDemandRevalidate,\n                isDraftMode: isPreviewMode,\n                isServerAction,\n                isDevWarmup,\n                postponed,\n                waitUntil: this.getWaitUntil(),\n                onClose: res.onClose.bind(res),\n                onAfterTaskError: undefined,\n                // only available in dev\n                setAppIsrStatus: this.setAppIsrStatus\n            };\n            if (isDebugStaticShell || isDebugDynamicAccesses) {\n                supportsDynamicResponse = false;\n                renderOpts.nextExport = true;\n                renderOpts.supportsDynamicResponse = false;\n                renderOpts.isStaticGeneration = true;\n                renderOpts.isRevalidate = true;\n                renderOpts.isDebugStaticShell = isDebugStaticShell;\n                renderOpts.isDebugDynamicAccesses = isDebugDynamicAccesses;\n            }\n            // Legacy render methods will return a render result that needs to be\n            // served by the server.\n            let result;\n            if (routeModule) {\n                if (isAppRouteRouteModule(routeModule)) {\n                    var _this_nextConfig_experimental;\n                    if (// The type check here ensures that `req` is correctly typed, and the\n                    // environment variable check provides dead code elimination.\n                    process.env.NEXT_RUNTIME === 'edge' || !isNodeNextRequest(req) || !isNodeNextResponse(res)) {\n                        throw new Error('Invariant: App Route Route Modules cannot be used in the edge runtime');\n                    }\n                    const context = {\n                        params: opts.params,\n                        prerenderManifest,\n                        renderOpts: {\n                            experimental: {\n                                after: renderOpts.experimental.after,\n                                dynamicIO: renderOpts.experimental.dynamicIO\n                            },\n                            supportsDynamicResponse,\n                            incrementalCache,\n                            cacheLifeProfiles: (_this_nextConfig_experimental = this.nextConfig.experimental) == null ? void 0 : _this_nextConfig_experimental.cacheLife,\n                            isRevalidate: isSSG,\n                            waitUntil: this.getWaitUntil(),\n                            onClose: res.onClose.bind(res),\n                            onAfterTaskError: undefined,\n                            onInstrumentationRequestError: this.renderOpts.onInstrumentationRequestError,\n                            buildId: this.renderOpts.buildId\n                        }\n                    };\n                    try {\n                        const request = NextRequestAdapter.fromNodeNextRequest(req, signalFromNodeResponse(res.originalResponse));\n                        const response = await routeModule.handle(request, context);\n                        req.fetchMetrics = context.renderOpts.fetchMetrics;\n                        const cacheTags = context.renderOpts.collectedTags;\n                        // If the request is for a static response, we can cache it so long\n                        // as it's not edge.\n                        if (isSSG) {\n                            const blob = await response.blob();\n                            // Copy the headers from the response.\n                            const headers = toNodeOutgoingHttpHeaders(response.headers);\n                            if (cacheTags) {\n                                headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                            }\n                            if (!headers['content-type'] && blob.type) {\n                                headers['content-type'] = blob.type;\n                            }\n                            const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                            // Create the cache entry for the response.\n                            const cacheEntry = {\n                                value: {\n                                    kind: CachedRouteKind.APP_ROUTE,\n                                    status: response.status,\n                                    body: Buffer.from(await blob.arrayBuffer()),\n                                    headers\n                                },\n                                revalidate,\n                                isFallback: false\n                            };\n                            return cacheEntry;\n                        }\n                        // Send the response now that we have copied it into the cache.\n                        await sendResponse(req, res, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    } catch (err) {\n                        await this.instrumentationOnRequestError(err, req, {\n                            routerKind: 'App Router',\n                            routePath: pathname,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason(renderOpts)\n                        });\n                        // If this is during static generation, throw the error again.\n                        if (isSSG) throw err;\n                        Log.error(err);\n                        // Otherwise, send a 500 response.\n                        await sendResponse(req, res, new Response(null, {\n                            status: 500\n                        }));\n                        return null;\n                    }\n                } else if (isPagesRouteModule(routeModule) || isAppPageRouteModule(routeModule)) {\n                    // An OPTIONS request to a page handler is invalid.\n                    if (req.method === 'OPTIONS' && !is404Page) {\n                        await sendResponse(req, res, new Response(null, {\n                            status: 400\n                        }));\n                        return null;\n                    }\n                    if (isPagesRouteModule(routeModule)) {\n                        // Due to the way we pass data by mutating `renderOpts`, we can't extend\n                        // the object here but only updating its `clientReferenceManifest` and\n                        // `nextFontManifest` properties.\n                        // https://github.com/vercel/next.js/blob/df7cbd904c3bd85f399d1ce90680c0ecf92d2752/packages/next/server/render.tsx#L947-L952\n                        renderOpts.nextFontManifest = this.nextFontManifest;\n                        renderOpts.clientReferenceManifest = components.clientReferenceManifest;\n                        const request = isNodeNextRequest(req) ? req.originalRequest : req;\n                        const response = isNodeNextResponse(res) ? res.originalResponse : res;\n                        // Call the built-in render method on the module.\n                        try {\n                            result = await routeModule.render(// TODO: fix this type\n                            // @ts-expect-error - preexisting accepted this\n                            request, response, {\n                                page: pathname,\n                                params: opts.params,\n                                query,\n                                renderOpts\n                            });\n                        } catch (err) {\n                            await this.instrumentationOnRequestError(err, req, {\n                                routerKind: 'Pages Router',\n                                routePath: pathname,\n                                routeType: 'render',\n                                revalidateReason: getRevalidateReason({\n                                    isRevalidate: isSSG,\n                                    isOnDemandRevalidate: renderOpts.isOnDemandRevalidate\n                                })\n                            });\n                            throw err;\n                        }\n                    } else {\n                        const module = components.routeModule;\n                        // Due to the way we pass data by mutating `renderOpts`, we can't extend the\n                        // object here but only updating its `nextFontManifest` field.\n                        // https://github.com/vercel/next.js/blob/df7cbd904c3bd85f399d1ce90680c0ecf92d2752/packages/next/server/render.tsx#L947-L952\n                        renderOpts.nextFontManifest = this.nextFontManifest;\n                        // Call the built-in render method on the module.\n                        result = await module.render(req, res, {\n                            page: is404Page ? '/404' : pathname,\n                            params: opts.params,\n                            query,\n                            fallbackRouteParams,\n                            renderOpts,\n                            serverComponentsHmrCache: this.getServerComponentsHmrCache()\n                        });\n                    }\n                } else {\n                    throw new Error('Invariant: Unknown route module type');\n                }\n            } else {\n                // If we didn't match a page, we should fallback to using the legacy\n                // render method.\n                result = await this.renderHTML(req, res, pathname, query, renderOpts);\n            }\n            const { metadata } = result;\n            const { headers = {}, // Add any fetch tags that were on the page to the response headers.\n            fetchTags: cacheTags } = metadata;\n            if (cacheTags) {\n                headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n            }\n            req.fetchMetrics = metadata.fetchMetrics;\n            // we don't throw static to dynamic errors in dev as isSSG\n            // is a best guess in dev since we don't have the prerender pass\n            // to know whether the path is actually static or not\n            if (isAppPath && isSSG && metadata.revalidate === 0 && !this.renderOpts.dev && !isRoutePPREnabled) {\n                const staticBailoutInfo = metadata.staticBailoutInfo;\n                const err = new Error(`Page changed from static to dynamic at runtime ${urlPathname}${(staticBailoutInfo == null ? void 0 : staticBailoutInfo.description) ? `, reason: ${staticBailoutInfo.description}` : ``}` + `\\nsee more here https://nextjs.org/docs/messages/app-static-to-dynamic-error`);\n                if (staticBailoutInfo == null ? void 0 : staticBailoutInfo.stack) {\n                    const stack = staticBailoutInfo.stack;\n                    err.stack = err.message + stack.substring(stack.indexOf('\\n'));\n                }\n                throw err;\n            }\n            // Based on the metadata, we can determine what kind of cache result we\n            // should return.\n            // Handle `isNotFound`.\n            if ('isNotFound' in metadata && metadata.isNotFound) {\n                return {\n                    value: null,\n                    revalidate: metadata.revalidate,\n                    isFallback: false\n                };\n            }\n            // Handle `isRedirect`.\n            if (metadata.isRedirect) {\n                return {\n                    value: {\n                        kind: CachedRouteKind.REDIRECT,\n                        props: metadata.pageData ?? metadata.flightData\n                    },\n                    revalidate: metadata.revalidate,\n                    isFallback: false\n                };\n            }\n            // Handle `isNull`.\n            if (result.isNull) {\n                return null;\n            }\n            // We now have a valid HTML result that we can return to the user.\n            if (isAppPath) {\n                return {\n                    value: {\n                        kind: CachedRouteKind.APP_PAGE,\n                        html: result,\n                        headers,\n                        rscData: metadata.flightData,\n                        postponed: metadata.postponed,\n                        status: res.statusCode,\n                        segmentData: undefined\n                    },\n                    revalidate: metadata.revalidate,\n                    isFallback: !!fallbackRouteParams\n                };\n            }\n            return {\n                value: {\n                    kind: CachedRouteKind.PAGES,\n                    html: result,\n                    pageData: metadata.pageData ?? metadata.flightData,\n                    headers,\n                    status: isAppPath ? res.statusCode : undefined\n                },\n                revalidate: metadata.revalidate,\n                isFallback: query.__nextFallback === 'true'\n            };\n        };\n        let responseGenerator = async ({ hasResolved, previousCacheEntry, isRevalidating, isDevWarmup })=>{\n            const isProduction = !this.renderOpts.dev;\n            const didRespond = hasResolved || res.sent;\n            // If we haven't found the static paths for the route, then do it now.\n            if (!staticPaths && isDynamic) {\n                if (hasGetStaticPaths) {\n                    const pathsResult = await this.getStaticPaths({\n                        pathname,\n                        requestHeaders: req.headers,\n                        isAppPath,\n                        page: components.page\n                    });\n                    staticPaths = pathsResult.staticPaths;\n                    fallbackMode = pathsResult.fallbackMode;\n                } else {\n                    staticPaths = undefined;\n                    fallbackMode = FallbackMode.NOT_FOUND;\n                }\n            }\n            // When serving a bot request, we want to serve a blocking render and not\n            // the prerendered page. This ensures that the correct content is served\n            // to the bot in the head.\n            if (fallbackMode === FallbackMode.PRERENDER && isBot(req.headers['user-agent'] || '')) {\n                fallbackMode = FallbackMode.BLOCKING_STATIC_RENDER;\n            }\n            // skip on-demand revalidate if cache is not present and\n            // revalidate-if-generated is set\n            if (isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry && !this.minimalMode) {\n                await this.render404(req, res);\n                return null;\n            }\n            if ((previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) === -1) {\n                isOnDemandRevalidate = true;\n            }\n            // TODO: adapt for PPR\n            // only allow on-demand revalidate for fallback: true/blocking\n            // or for prerendered fallback: false paths\n            if (isOnDemandRevalidate && (fallbackMode !== FallbackMode.NOT_FOUND || previousCacheEntry)) {\n                fallbackMode = FallbackMode.BLOCKING_STATIC_RENDER;\n            }\n            // We use `ssgCacheKey` here as it is normalized to match the encoding\n            // from getStaticPaths along with including the locale.\n            //\n            // We use the `resolvedUrlPathname` for the development case when this\n            // is an app path since it doesn't include locale information.\n            let staticPathKey = ssgCacheKey ?? (opts.dev && isAppPath ? resolvedUrlPathname : null);\n            if (staticPathKey && query.amp) {\n                staticPathKey = staticPathKey.replace(/\\.amp$/, '');\n            }\n            const isPageIncludedInStaticPaths = staticPathKey && (staticPaths == null ? void 0 : staticPaths.includes(staticPathKey));\n            // When experimental compile is used, no pages have been prerendered,\n            // so they should all be blocking.\n            // @ts-expect-error internal field\n            if (this.nextConfig.experimental.isExperimentalCompile) {\n                fallbackMode = FallbackMode.BLOCKING_STATIC_RENDER;\n            }\n            // When we did not respond from cache, we need to choose to block on\n            // rendering or return a skeleton.\n            //\n            // - Data requests always block.\n            // - Blocking mode fallback always blocks.\n            // - Preview mode toggles all pages to be resolved in a blocking manner.\n            // - Non-dynamic pages should block (though this is an impossible\n            //   case in production).\n            // - Dynamic pages should return their skeleton if not defined in\n            //   getStaticPaths, then finish the data request on the client-side.\n            //\n            if (process.env.NEXT_RUNTIME !== 'edge' && !this.minimalMode && fallbackMode !== FallbackMode.BLOCKING_STATIC_RENDER && staticPathKey && !didRespond && !isPreviewMode && isDynamic && (isProduction || !staticPaths || !isPageIncludedInStaticPaths)) {\n                if (// In development, fall through to render to handle missing\n                // getStaticPaths.\n                (isProduction || staticPaths && (staticPaths == null ? void 0 : staticPaths.length) > 0) && // When fallback isn't present, abort this render so we 404\n                fallbackMode === FallbackMode.NOT_FOUND) {\n                    throw new NoFallbackError();\n                }\n                let fallbackResponse;\n                // If this is a pages router page.\n                if (isPagesRouteModule(components.routeModule) && !isNextDataRequest) {\n                    // We use the response cache here to handle the revalidation and\n                    // management of the fallback shell.\n                    fallbackResponse = await this.responseCache.get(isProduction ? locale ? `/${locale}${pathname}` : pathname : null, // This is the response generator for the fallback shell.\n                    async ({ previousCacheEntry: previousFallbackCacheEntry = null })=>{\n                        // For the pages router, fallbacks cannot be revalidated or\n                        // generated in production. In the case of a missing fallback,\n                        // we return null, but if it's being revalidated, we just return\n                        // the previous fallback cache entry. This preserves the previous\n                        // behavior.\n                        if (isProduction) {\n                            return toResponseCacheEntry(previousFallbackCacheEntry);\n                        }\n                        // For the pages router, fallbacks can only be generated on\n                        // demand in development, so if we're not in production, and we\n                        // aren't a app path, then just add the __nextFallback query\n                        // and render.\n                        query.__nextFallback = 'true';\n                        // We pass `undefined` and `null` as it doesn't apply to the pages\n                        // router.\n                        return doRender({\n                            postponed: undefined,\n                            fallbackRouteParams: null\n                        });\n                    }, {\n                        routeKind: RouteKind.PAGES,\n                        incrementalCache,\n                        isRoutePPREnabled,\n                        isFallback: true\n                    });\n                } else if (isRoutePPREnabled && isAppPageRouteModule(components.routeModule) && !isRSCRequest) {\n                    // We use the response cache here to handle the revalidation and\n                    // management of the fallback shell.\n                    fallbackResponse = await this.responseCache.get(isProduction ? pathname : null, // This is the response generator for the fallback shell.\n                    async ()=>doRender({\n                            // We pass `undefined` as rendering a fallback isn't resumed\n                            // here.\n                            postponed: undefined,\n                            fallbackRouteParams: // If we're in production of we're debugging the fallback\n                            // shell then we should postpone when dynamic params are\n                            // accessed.\n                            isProduction || isDebugFallbackShell ? getFallbackRouteParams(pathname) : null\n                        }), {\n                        routeKind: RouteKind.APP_PAGE,\n                        incrementalCache,\n                        isRoutePPREnabled,\n                        isFallback: true\n                    });\n                }\n                // If the fallback response was set to null, then we should return null.\n                if (fallbackResponse === null) return null;\n                // Otherwise, if we did get a fallback response, we should return it.\n                if (fallbackResponse) {\n                    // Remove the revalidate from the response to prevent it from being\n                    // used in the surrounding cache.\n                    delete fallbackResponse.revalidate;\n                    return fallbackResponse;\n                }\n            }\n            // Only requests that aren't revalidating can be resumed. If we have the\n            // minimal postponed data, then we should resume the render with it.\n            const postponed = !isOnDemandRevalidate && !isRevalidating && minimalPostponed ? minimalPostponed : undefined;\n            // When we're in minimal mode, if we're trying to debug the static shell,\n            // we should just return nothing instead of resuming the dynamic render.\n            if ((isDebugStaticShell || isDebugDynamicAccesses) && typeof postponed !== 'undefined') {\n                return {\n                    revalidate: 1,\n                    isFallback: false,\n                    value: {\n                        kind: CachedRouteKind.PAGES,\n                        html: RenderResult.fromStatic(''),\n                        pageData: {},\n                        headers: undefined,\n                        status: undefined\n                    }\n                };\n            }\n            // If this is a dynamic route with PPR enabled and the default route\n            // matches were set, then we should pass the fallback route params to\n            // the renderer as this is a fallback revalidation request.\n            const fallbackRouteParams = isDynamic && isRoutePPREnabled && (getRequestMeta(req, 'didSetDefaultRouteMatches') || isDebugFallbackShell) ? getFallbackRouteParams(pathname) : null;\n            // Perform the render.\n            const result = await doRender({\n                postponed,\n                fallbackRouteParams,\n                isDevWarmup\n            });\n            if (!result) return null;\n            return {\n                ...result,\n                revalidate: result.revalidate\n            };\n        };\n        if (this.nextConfig.experimental.dynamicIO) {\n            const originalResponseGenerator = responseGenerator;\n            responseGenerator = async (state)=>{\n                if (this.renderOpts.dev) {\n                    let cache = this.prefetchCacheScopesDev.get(urlPathname);\n                    if (isServerAction || !cache) {\n                        cache = new Map();\n                        this.prefetchCacheScopesDev.set(urlPathname, cache);\n                    }\n                    // we need to seed the prefetch cache scope in dev\n                    // since we did not have a prefetch cache available\n                    // and this is not a prefetch request\n                    if (!isPrefetchRSCRequest && (routeModule == null ? void 0 : routeModule.definition.kind) === RouteKind.APP_PAGE && !isServerAction) {\n                        await runWithCacheScope({\n                            cache\n                        }, ()=>originalResponseGenerator({\n                                ...state,\n                                isDevWarmup: true\n                            }));\n                    }\n                    const response = runWithCacheScope({\n                        cache\n                    }, ()=>originalResponseGenerator(state));\n                    // Clear the prefetch cache to ensure a clean slate for the next\n                    // request.\n                    this.prefetchCacheScopesDev.del(urlPathname);\n                    return response;\n                }\n                return originalResponseGenerator(state);\n            };\n        }\n        const cacheEntry = await this.responseCache.get(ssgCacheKey, responseGenerator, {\n            routeKind: // If the route module is not defined, we can assume it's a page being\n            // rendered and thus check isAppPath.\n            (routeModule == null ? void 0 : routeModule.definition.kind) ?? (isAppPath ? RouteKind.APP_PAGE : RouteKind.PAGES),\n            incrementalCache,\n            isOnDemandRevalidate,\n            isPrefetch: req.headers.purpose === 'prefetch',\n            isRoutePPREnabled\n        });\n        if (isRoutePPREnabled && isPrefetchRSCRequest && typeof segmentPrefetchHeader === 'string') {\n            var _cacheEntry_value2;\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value2 = cacheEntry.value) == null ? void 0 : _cacheEntry_value2.kind) === CachedRouteKind.APP_PAGE) {\n                // This is a prefetch request for an individual segment's static data.\n                // Unless the segment is fully dynamic, the data should have already been\n                // loaded into the cache, when the page itself was generated. So we should\n                // always either return the cache entry. If no cache entry is available,\n                // it's a 404 — either the segment is fully dynamic, or an invalid segment\n                // path was requested.\n                if (cacheEntry.value.segmentData) {\n                    const matchedSegment = cacheEntry.value.segmentData[segmentPrefetchHeader];\n                    if (matchedSegment !== undefined) {\n                        return {\n                            type: 'rsc',\n                            body: RenderResult.fromStatic(matchedSegment),\n                            // TODO: Eventually this should use revalidate time of the\n                            // individual segment, not the whole page.\n                            revalidate: cacheEntry.revalidate\n                        };\n                    }\n                }\n                // If the segment is not found, return a 404. Since this is an RSC\n                // request, there's no reason to render a 404 page; just return an\n                // empty response.\n                res.statusCode = 404;\n                return {\n                    type: 'rsc',\n                    body: RenderResult.fromStatic(''),\n                    revalidate: cacheEntry.revalidate\n                };\n            } else {\n                // Segment prefetches should never reach the application layer. If\n                // there's no cache entry for this page, it's a 404.\n                res.statusCode = 404;\n                return {\n                    type: 'rsc',\n                    body: RenderResult.fromStatic('')\n                };\n            }\n        }\n        if (isPreviewMode) {\n            res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n        }\n        if (!cacheEntry) {\n            if (ssgCacheKey && !(isOnDemandRevalidate && revalidateOnlyGenerated)) {\n                // A cache entry might not be generated if a response is written\n                // in `getInitialProps` or `getServerSideProps`, but those shouldn't\n                // have a cache key. If we do have a cache key but we don't end up\n                // with a cache entry, then either Next.js or the application has a\n                // bug that needs fixing.\n                throw new Error('invariant: cache entry required but not generated');\n            }\n            return null;\n        }\n        // If we're not in minimal mode and the cache entry that was returned was a\n        // app page fallback, then we need to kick off the dynamic shell generation.\n        if (ssgCacheKey && !this.minimalMode && isRoutePPREnabled && ((_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) === CachedRouteKind.APP_PAGE && cacheEntry.isFallback && !isOnDemandRevalidate && // When we're debugging the fallback shell, we don't want to regenerate\n        // the route shell.\n        !isDebugFallbackShell) {\n            scheduleOnNextTick(async ()=>{\n                try {\n                    await this.responseCache.get(ssgCacheKey, ()=>doRender({\n                            // We're an on-demand request, so we don't need to pass in the\n                            // fallbackRouteParams.\n                            fallbackRouteParams: null,\n                            postponed: undefined\n                        }), {\n                        routeKind: RouteKind.APP_PAGE,\n                        incrementalCache,\n                        isOnDemandRevalidate: true,\n                        isPrefetch: false,\n                        isRoutePPREnabled: true\n                    });\n                } catch (err) {\n                    console.error('Error occurred while rendering dynamic shell', err);\n                }\n            });\n        }\n        const didPostpone = ((_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind) === CachedRouteKind.APP_PAGE && typeof cacheEntry.value.postponed === 'string';\n        if (isSSG && // We don't want to send a cache header for requests that contain dynamic\n        // data. If this is a Dynamic RSC request or wasn't a Prefetch RSC\n        // request, then we should set the cache header.\n        !isDynamicRSCRequest && (!didPostpone || isPrefetchRSCRequest)) {\n            if (!this.minimalMode) {\n                // set x-nextjs-cache header to match the header\n                // we set for the image-optimizer\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Set a header used by the client router to signal the response is static\n            // and should respect the `static` cache staleTime value.\n            res.setHeader(NEXT_IS_PRERENDER_HEADER, '1');\n        }\n        const { value: cachedData } = cacheEntry;\n        // If the cache value is an image, we should error early.\n        if ((cachedData == null ? void 0 : cachedData.kind) === CachedRouteKind.IMAGE) {\n            throw new Error('invariant SSG should not return an image cache value');\n        }\n        // Coerce the revalidate parameter from the render.\n        let revalidate;\n        // If this is a resume request in minimal mode it is streamed with dynamic\n        // content and should not be cached.\n        if (minimalPostponed) {\n            revalidate = 0;\n        } else if (this.minimalMode && isRSCRequest && !isPrefetchRSCRequest && isRoutePPREnabled) {\n            revalidate = 0;\n        } else if (!this.renderOpts.dev || hasServerProps && !isNextDataRequest) {\n            // If this is a preview mode request, we shouldn't cache it\n            if (isPreviewMode) {\n                revalidate = 0;\n            } else if (!isSSG) {\n                if (!res.getHeader('Cache-Control')) {\n                    revalidate = 0;\n                }\n            } else if (is404Page) {\n                const notFoundRevalidate = getRequestMeta(req, 'notFoundRevalidate');\n                revalidate = typeof notFoundRevalidate === 'undefined' ? 0 : notFoundRevalidate;\n            } else if (typeof cacheEntry.revalidate === 'number') {\n                if (cacheEntry.revalidate < 1) {\n                    throw new Error(`Invalid revalidate configuration provided: ${cacheEntry.revalidate} < 1`);\n                }\n                revalidate = cacheEntry.revalidate;\n            } else if (cacheEntry.revalidate === false) {\n                revalidate = CACHE_ONE_YEAR;\n            }\n        }\n        cacheEntry.revalidate = revalidate;\n        // If there's a callback for `onCacheEntry`, call it with the cache entry\n        // and the revalidate options.\n        const onCacheEntry = getRequestMeta(req, 'onCacheEntry');\n        if (onCacheEntry) {\n            var _cacheEntry_value3, _cacheEntry_value4;\n            const finished = await onCacheEntry({\n                ...cacheEntry,\n                // TODO: remove this when upstream doesn't\n                // always expect this value to be \"PAGE\"\n                value: {\n                    ...cacheEntry.value,\n                    kind: ((_cacheEntry_value3 = cacheEntry.value) == null ? void 0 : _cacheEntry_value3.kind) === CachedRouteKind.APP_PAGE ? 'PAGE' : (_cacheEntry_value4 = cacheEntry.value) == null ? void 0 : _cacheEntry_value4.kind\n                }\n            }, {\n                url: getRequestMeta(req, 'initURL')\n            });\n            if (finished) {\n                // TODO: maybe we have to end the request?\n                return null;\n            }\n        }\n        if (!cachedData) {\n            // add revalidate metadata before rendering 404 page\n            // so that we can use this as source of truth for the\n            // cache-control header instead of what the 404 page returns\n            // for the revalidate value\n            addRequestMeta(req, 'notFoundRevalidate', cacheEntry.revalidate);\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.revalidate && !res.getHeader('Cache-Control')) {\n                res.setHeader('Cache-Control', formatRevalidate({\n                    revalidate: cacheEntry.revalidate,\n                    expireTime: this.nextConfig.expireTime\n                }));\n            }\n            if (isNextDataRequest) {\n                res.statusCode = 404;\n                res.body('{\"notFound\":true}').send();\n                return null;\n            }\n            if (this.renderOpts.dev) {\n                query.__nextNotFoundSrcPage = pathname;\n            }\n            await this.render404(req, res, {\n                pathname,\n                query\n            }, false);\n            return null;\n        } else if (cachedData.kind === CachedRouteKind.REDIRECT) {\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.revalidate && !res.getHeader('Cache-Control')) {\n                res.setHeader('Cache-Control', formatRevalidate({\n                    revalidate: cacheEntry.revalidate,\n                    expireTime: this.nextConfig.expireTime\n                }));\n            }\n            if (isNextDataRequest) {\n                return {\n                    type: 'json',\n                    body: RenderResult.fromStatic(// @TODO: Handle flight data.\n                    JSON.stringify(cachedData.props)),\n                    revalidate: cacheEntry.revalidate\n                };\n            } else {\n                await handleRedirect(cachedData.props);\n                return null;\n            }\n        } else if (cachedData.kind === CachedRouteKind.APP_ROUTE) {\n            const headers = {\n                ...cachedData.headers\n            };\n            if (!(this.minimalMode && isSSG)) {\n                delete headers[NEXT_CACHE_TAGS_HEADER];\n            }\n            await sendResponse(req, res, new Response(cachedData.body, {\n                headers: fromNodeOutgoingHttpHeaders(headers),\n                status: cachedData.status || 200\n            }));\n            return null;\n        } else if (cachedData.kind === CachedRouteKind.APP_PAGE) {\n            var _cachedData_headers;\n            // If the request has a postponed state and it's a resume request we\n            // should error.\n            if (didPostpone && minimalPostponed) {\n                throw new Error('Invariant: postponed state should not be present on a resume request');\n            }\n            if (cachedData.headers) {\n                const headers = {\n                    ...cachedData.headers\n                };\n                if (!this.minimalMode || !isSSG) {\n                    delete headers[NEXT_CACHE_TAGS_HEADER];\n                }\n                for (let [key, value] of Object.entries(headers)){\n                    if (typeof value === 'undefined') continue;\n                    if (Array.isArray(value)) {\n                        for (const v of value){\n                            res.appendHeader(key, v);\n                        }\n                    } else if (typeof value === 'number') {\n                        value = value.toString();\n                        res.appendHeader(key, value);\n                    } else {\n                        res.appendHeader(key, value);\n                    }\n                }\n            }\n            if (this.minimalMode && isSSG && ((_cachedData_headers = cachedData.headers) == null ? void 0 : _cachedData_headers[NEXT_CACHE_TAGS_HEADER])) {\n                res.setHeader(NEXT_CACHE_TAGS_HEADER, cachedData.headers[NEXT_CACHE_TAGS_HEADER]);\n            }\n            // If the request is a data request, then we shouldn't set the status code\n            // from the response because it should always be 200. This should be gated\n            // behind the experimental PPR flag.\n            if (cachedData.status && (!isRSCRequest || !isRoutePPREnabled)) {\n                res.statusCode = cachedData.status;\n            }\n            // Mark that the request did postpone.\n            if (didPostpone) {\n                res.setHeader(NEXT_DID_POSTPONE_HEADER, '1');\n            }\n            // we don't go through this block when preview mode is true\n            // as preview mode is a dynamic request (bypasses cache) and doesn't\n            // generate both HTML and payloads in the same request so continue to just\n            // return the generated payload\n            if (isRSCRequest && !isPreviewMode) {\n                // If this is a dynamic RSC request, then stream the response.\n                if (typeof cachedData.rscData === 'undefined') {\n                    if (cachedData.postponed) {\n                        throw new Error('Invariant: Expected postponed to be undefined');\n                    }\n                    return {\n                        type: 'rsc',\n                        body: cachedData.html,\n                        // Dynamic RSC responses cannot be cached, even if they're\n                        // configured with `force-static` because we have no way of\n                        // distinguishing between `force-static` and pages that have no\n                        // postponed state.\n                        // TODO: distinguish `force-static` from pages with no postponed state (static)\n                        revalidate: isDynamicRSCRequest ? 0 : cacheEntry.revalidate\n                    };\n                }\n                // As this isn't a prefetch request, we should serve the static flight\n                // data.\n                return {\n                    type: 'rsc',\n                    body: RenderResult.fromStatic(cachedData.rscData),\n                    revalidate: cacheEntry.revalidate\n                };\n            }\n            // This is a request for HTML data.\n            let body = cachedData.html;\n            // If there's no postponed state, we should just serve the HTML. This\n            // should also be the case for a resume request because it's completed\n            // as a server render (rather than a static render).\n            if (!didPostpone || this.minimalMode) {\n                return {\n                    type: 'html',\n                    body,\n                    revalidate: cacheEntry.revalidate\n                };\n            }\n            // If we're debugging the static shell or the dynamic API accesses, we\n            // should just serve the HTML without resuming the render. The returned\n            // HTML will be the static shell so all the Dynamic API's will be used\n            // during static generation.\n            if (isDebugStaticShell || isDebugDynamicAccesses) {\n                // Since we're not resuming the render, we need to at least add the\n                // closing body and html tags to create valid HTML.\n                body.chain(new ReadableStream({\n                    start (controller) {\n                        controller.enqueue(ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n                        controller.close();\n                    }\n                }));\n                return {\n                    type: 'html',\n                    body,\n                    revalidate: 0\n                };\n            }\n            // This request has postponed, so let's create a new transformer that the\n            // dynamic data can pipe to that will attach the dynamic data to the end\n            // of the response.\n            const transformer = new TransformStream();\n            body.chain(transformer.readable);\n            // Perform the render again, but this time, provide the postponed state.\n            // We don't await because we want the result to start streaming now, and\n            // we've already chained the transformer's readable to the render result.\n            doRender({\n                postponed: cachedData.postponed,\n                // This is a resume render, not a fallback render, so we don't need to\n                // set this.\n                fallbackRouteParams: null\n            }).then(async (result)=>{\n                var _result_value;\n                if (!result) {\n                    throw new Error('Invariant: expected a result to be returned');\n                }\n                if (((_result_value = result.value) == null ? void 0 : _result_value.kind) !== CachedRouteKind.APP_PAGE) {\n                    var _result_value1;\n                    throw new Error(`Invariant: expected a page response, got ${(_result_value1 = result.value) == null ? void 0 : _result_value1.kind}`);\n                }\n                // Pipe the resume result to the transformer.\n                await result.value.html.pipeTo(transformer.writable);\n            }).catch((err)=>{\n                // An error occurred during piping or preparing the render, abort\n                // the transformers writer so we can terminate the stream.\n                transformer.writable.abort(err).catch((e)=>{\n                    console.error(\"couldn't abort transformer\", e);\n                });\n            });\n            return {\n                type: 'html',\n                body,\n                // We don't want to cache the response if it has postponed data because\n                // the response being sent to the client it's dynamic parts are streamed\n                // to the client on the same request.\n                revalidate: 0\n            };\n        } else if (isNextDataRequest) {\n            return {\n                type: 'json',\n                body: RenderResult.fromStatic(JSON.stringify(cachedData.pageData)),\n                revalidate: cacheEntry.revalidate\n            };\n        } else {\n            return {\n                type: 'html',\n                body: cachedData.html,\n                revalidate: cacheEntry.revalidate\n            };\n        }\n    }\n    stripNextDataPath(path, stripLocale = true) {\n        if (path.includes(this.buildId)) {\n            const splitPath = path.substring(path.indexOf(this.buildId) + this.buildId.length);\n            path = denormalizePagePath(splitPath.replace(/\\.json$/, ''));\n        }\n        if (this.localeNormalizer && stripLocale) {\n            return this.localeNormalizer.normalize(path);\n        }\n        return path;\n    }\n    // map the route to the actual bundle name\n    getOriginalAppPaths(route) {\n        if (this.enabledDirectories.app) {\n            var _this_appPathRoutes;\n            const originalAppPath = (_this_appPathRoutes = this.appPathRoutes) == null ? void 0 : _this_appPathRoutes[route];\n            if (!originalAppPath) {\n                return null;\n            }\n            return originalAppPath;\n        }\n        return null;\n    }\n    async renderPageComponent(ctx, bubbleNoFallback) {\n        var _this_nextConfig_experimental_sri;\n        const { query, pathname } = ctx;\n        const appPaths = this.getOriginalAppPaths(pathname);\n        const isAppPath = Array.isArray(appPaths);\n        let page = pathname;\n        if (isAppPath) {\n            // the last item in the array is the root page, if there are parallel routes\n            page = appPaths[appPaths.length - 1];\n        }\n        const result = await this.findPageComponents({\n            page,\n            query,\n            params: ctx.renderOpts.params || {},\n            isAppPath,\n            sriEnabled: !!((_this_nextConfig_experimental_sri = this.nextConfig.experimental.sri) == null ? void 0 : _this_nextConfig_experimental_sri.algorithm),\n            appPaths,\n            // Ensuring for loading page component routes is done via the matcher.\n            shouldEnsure: false\n        });\n        if (result) {\n            getTracer().setRootSpanAttribute('next.route', pathname);\n            try {\n                return await this.renderToResponseWithComponents(ctx, result);\n            } catch (err) {\n                const isNoFallbackError = err instanceof NoFallbackError;\n                if (!isNoFallbackError || isNoFallbackError && bubbleNoFallback) {\n                    throw err;\n                }\n            }\n        }\n        return false;\n    }\n    async renderToResponse(ctx) {\n        return getTracer().trace(BaseServerSpan.renderToResponse, {\n            spanName: `rendering page`,\n            attributes: {\n                'next.route': ctx.pathname\n            }\n        }, async ()=>{\n            return this.renderToResponseImpl(ctx);\n        });\n    }\n    async renderToResponseImpl(ctx) {\n        var _this_i18nProvider;\n        const { res, query, pathname } = ctx;\n        let page = pathname;\n        const bubbleNoFallback = !!query._nextBubbleNoFallback;\n        delete query[NEXT_RSC_UNION_QUERY];\n        delete query._nextBubbleNoFallback;\n        const options = {\n            i18n: (_this_i18nProvider = this.i18nProvider) == null ? void 0 : _this_i18nProvider.fromQuery(pathname, query)\n        };\n        try {\n            for await (const match of this.matchers.matchAll(pathname, options)){\n                // when a specific invoke-output is meant to be matched\n                // ensure a prior dynamic route/page doesn't take priority\n                const invokeOutput = getRequestMeta(ctx.req, 'invokeOutput');\n                if (!this.minimalMode && typeof invokeOutput === 'string' && isDynamicRoute(invokeOutput || '') && invokeOutput !== match.definition.pathname) {\n                    continue;\n                }\n                const result = await this.renderPageComponent({\n                    ...ctx,\n                    pathname: match.definition.pathname,\n                    renderOpts: {\n                        ...ctx.renderOpts,\n                        params: match.params\n                    }\n                }, bubbleNoFallback);\n                if (result !== false) return result;\n            }\n            // currently edge functions aren't receiving the x-matched-path\n            // header so we need to fallback to matching the current page\n            // when we weren't able to match via dynamic route to handle\n            // the rewrite case\n            // @ts-expect-error extended in child class web-server\n            if (this.serverOptions.webServerConfig) {\n                // @ts-expect-error extended in child class web-server\n                ctx.pathname = this.serverOptions.webServerConfig.page;\n                const result = await this.renderPageComponent(ctx, bubbleNoFallback);\n                if (result !== false) return result;\n            }\n        } catch (error) {\n            const err = getProperError(error);\n            if (error instanceof MissingStaticPage) {\n                console.error('Invariant: failed to load static page', JSON.stringify({\n                    page,\n                    url: ctx.req.url,\n                    matchedPath: ctx.req.headers['x-matched-path'],\n                    initUrl: getRequestMeta(ctx.req, 'initURL'),\n                    didRewrite: !!getRequestMeta(ctx.req, 'rewroteURL'),\n                    rewroteUrl: getRequestMeta(ctx.req, 'rewroteURL')\n                }, null, 2));\n                throw err;\n            }\n            if (err instanceof NoFallbackError && bubbleNoFallback) {\n                throw err;\n            }\n            if (err instanceof DecodeError || err instanceof NormalizeError) {\n                res.statusCode = 400;\n                return await this.renderErrorToResponse(ctx, err);\n            }\n            res.statusCode = 500;\n            // if pages/500 is present we still need to trigger\n            // /_error `getInitialProps` to allow reporting error\n            if (await this.hasPage('/500')) {\n                ctx.query.__nextCustomErrorRender = '1';\n                await this.renderErrorToResponse(ctx, err);\n                delete ctx.query.__nextCustomErrorRender;\n            }\n            const isWrappedError = err instanceof WrappedBuildError;\n            if (!isWrappedError) {\n                if (this.minimalMode && process.env.NEXT_RUNTIME !== 'edge' || this.renderOpts.dev) {\n                    if (isError(err)) err.page = page;\n                    throw err;\n                }\n                this.logError(getProperError(err));\n            }\n            const response = await this.renderErrorToResponse(ctx, isWrappedError ? err.innerError : err);\n            return response;\n        }\n        if (this.getMiddleware() && !!ctx.req.headers['x-nextjs-data'] && (!res.statusCode || res.statusCode === 200 || res.statusCode === 404)) {\n            res.setHeader('x-nextjs-matched-path', `${query.__nextLocale ? `/${query.__nextLocale}` : ''}${pathname}`);\n            res.statusCode = 200;\n            res.setHeader('content-type', 'application/json');\n            res.body('{}');\n            res.send();\n            return null;\n        }\n        res.statusCode = 404;\n        return this.renderErrorToResponse(ctx, null);\n    }\n    async renderToHTML(req, res, pathname, query = {}) {\n        return getTracer().trace(BaseServerSpan.renderToHTML, async ()=>{\n            return this.renderToHTMLImpl(req, res, pathname, query);\n        });\n    }\n    async renderToHTMLImpl(req, res, pathname, query = {}) {\n        return this.getStaticHTML((ctx)=>this.renderToResponse(ctx), {\n            req,\n            res,\n            pathname,\n            query\n        });\n    }\n    async renderError(err, req, res, pathname, query = {}, setHeaders = true) {\n        return getTracer().trace(BaseServerSpan.renderError, async ()=>{\n            return this.renderErrorImpl(err, req, res, pathname, query, setHeaders);\n        });\n    }\n    async renderErrorImpl(err, req, res, pathname, query = {}, setHeaders = true) {\n        if (setHeaders) {\n            res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n        }\n        return this.pipe(async (ctx)=>{\n            const response = await this.renderErrorToResponse(ctx, err);\n            if (this.minimalMode && res.statusCode === 500) {\n                throw err;\n            }\n            return response;\n        }, {\n            req,\n            res,\n            pathname,\n            query\n        });\n    }\n    async renderErrorToResponse(ctx, err) {\n        return getTracer().trace(BaseServerSpan.renderErrorToResponse, async ()=>{\n            return this.renderErrorToResponseImpl(ctx, err);\n        });\n    }\n    async renderErrorToResponseImpl(ctx, err) {\n        // Short-circuit favicon.ico in development to avoid compiling 404 page when the app has no favicon.ico.\n        // Since favicon.ico is automatically requested by the browser.\n        if (this.renderOpts.dev && ctx.pathname === '/favicon.ico') {\n            return {\n                type: 'html',\n                body: RenderResult.fromStatic('')\n            };\n        }\n        const { res, query } = ctx;\n        try {\n            let result = null;\n            const is404 = res.statusCode === 404;\n            let using404Page = false;\n            if (is404) {\n                if (this.enabledDirectories.app) {\n                    // Use the not-found entry in app directory\n                    result = await this.findPageComponents({\n                        page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n                        query,\n                        params: {},\n                        isAppPath: true,\n                        shouldEnsure: true,\n                        url: ctx.req.url\n                    });\n                    using404Page = result !== null;\n                }\n                if (!result && await this.hasPage('/404')) {\n                    result = await this.findPageComponents({\n                        page: '/404',\n                        query,\n                        params: {},\n                        isAppPath: false,\n                        // Ensuring can't be done here because you never \"match\" a 404 route.\n                        shouldEnsure: true,\n                        url: ctx.req.url\n                    });\n                    using404Page = result !== null;\n                }\n            }\n            let statusPage = `/${res.statusCode}`;\n            if (!ctx.query.__nextCustomErrorRender && !result && STATIC_STATUS_PAGES.includes(statusPage)) {\n                // skip ensuring /500 in dev mode as it isn't used and the\n                // dev overlay is used instead\n                if (statusPage !== '/500' || !this.renderOpts.dev) {\n                    result = await this.findPageComponents({\n                        page: statusPage,\n                        query,\n                        params: {},\n                        isAppPath: false,\n                        // Ensuring can't be done here because you never \"match\" a 500\n                        // route.\n                        shouldEnsure: true,\n                        url: ctx.req.url\n                    });\n                }\n            }\n            if (!result) {\n                result = await this.findPageComponents({\n                    page: '/_error',\n                    query,\n                    params: {},\n                    isAppPath: false,\n                    // Ensuring can't be done here because you never \"match\" an error\n                    // route.\n                    shouldEnsure: true,\n                    url: ctx.req.url\n                });\n                statusPage = '/_error';\n            }\n            if (process.env.NODE_ENV !== 'production' && !using404Page && await this.hasPage('/_error') && !await this.hasPage('/404')) {\n                this.customErrorNo404Warn();\n            }\n            if (!result) {\n                // this can occur when a project directory has been moved/deleted\n                // which is handled in the parent process in development\n                if (this.renderOpts.dev) {\n                    return {\n                        type: 'html',\n                        // wait for dev-server to restart before refreshing\n                        body: RenderResult.fromStatic(`\n              <pre>missing required error components, refreshing...</pre>\n              <script>\n                async function check() {\n                  const res = await fetch(location.href).catch(() => ({}))\n\n                  if (res.status === 200) {\n                    location.reload()\n                  } else {\n                    setTimeout(check, 1000)\n                  }\n                }\n                check()\n              </script>`)\n                    };\n                }\n                throw new WrappedBuildError(new Error('missing required error components'));\n            }\n            // If the page has a route module, use it for the new match. If it doesn't\n            // have a route module, remove the match.\n            if (result.components.routeModule) {\n                addRequestMeta(ctx.req, 'match', {\n                    definition: result.components.routeModule.definition,\n                    params: undefined\n                });\n            } else {\n                removeRequestMeta(ctx.req, 'match');\n            }\n            try {\n                return await this.renderToResponseWithComponents({\n                    ...ctx,\n                    pathname: statusPage,\n                    renderOpts: {\n                        ...ctx.renderOpts,\n                        err\n                    }\n                }, result);\n            } catch (maybeFallbackError) {\n                if (maybeFallbackError instanceof NoFallbackError) {\n                    throw new Error('invariant: failed to render error page');\n                }\n                throw maybeFallbackError;\n            }\n        } catch (error) {\n            const renderToHtmlError = getProperError(error);\n            const isWrappedError = renderToHtmlError instanceof WrappedBuildError;\n            if (!isWrappedError) {\n                this.logError(renderToHtmlError);\n            }\n            res.statusCode = 500;\n            const fallbackComponents = await this.getFallbackErrorComponents(ctx.req.url);\n            if (fallbackComponents) {\n                // There was an error, so use it's definition from the route module\n                // to add the match to the request.\n                addRequestMeta(ctx.req, 'match', {\n                    definition: fallbackComponents.routeModule.definition,\n                    params: undefined\n                });\n                return this.renderToResponseWithComponents({\n                    ...ctx,\n                    pathname: '/_error',\n                    renderOpts: {\n                        ...ctx.renderOpts,\n                        // We render `renderToHtmlError` here because `err` is\n                        // already captured in the stacktrace.\n                        err: isWrappedError ? renderToHtmlError.innerError : renderToHtmlError\n                    }\n                }, {\n                    query,\n                    components: fallbackComponents\n                });\n            }\n            return {\n                type: 'html',\n                body: RenderResult.fromStatic('Internal Server Error')\n            };\n        }\n    }\n    async renderErrorToHTML(err, req, res, pathname, query = {}) {\n        return this.getStaticHTML((ctx)=>this.renderErrorToResponse(ctx, err), {\n            req,\n            res,\n            pathname,\n            query\n        });\n    }\n    async render404(req, res, parsedUrl, setHeaders = true) {\n        const { pathname, query } = parsedUrl ? parsedUrl : parseUrl(req.url, true);\n        if (this.nextConfig.i18n) {\n            query.__nextLocale ||= this.nextConfig.i18n.defaultLocale;\n            query.__nextDefaultLocale ||= this.nextConfig.i18n.defaultLocale;\n        }\n        res.statusCode = 404;\n        return this.renderError(null, req, res, pathname, query, setHeaders);\n    }\n}\n\n//# sourceMappingURL=base-server.js.map","/**\n * FNV-1a Hash implementation\n * @author Travis Webb (tjwebb) <me@traviswebb.com>\n *\n * Ported from https://github.com/tjwebb/fnv-plus/blob/master/index.js\n *\n * Simplified, optimized and add modified for 52 bit, which provides a larger hash space\n * and still making use of Javascript's 53-bit integer space.\n */ export const fnv1a52 = (str)=>{\n    const len = str.length;\n    let i = 0, t0 = 0, v0 = 0x2325, t1 = 0, v1 = 0x8422, t2 = 0, v2 = 0x9ce4, t3 = 0, v3 = 0xcbf2;\n    while(i < len){\n        v0 ^= str.charCodeAt(i++);\n        t0 = v0 * 435;\n        t1 = v1 * 435;\n        t2 = v2 * 435;\n        t3 = v3 * 435;\n        t2 += v0 << 8;\n        t3 += v1 << 8;\n        t1 += t0 >>> 16;\n        v0 = t0 & 65535;\n        t2 += t1 >>> 16;\n        v1 = t1 & 65535;\n        v3 = t3 + (t2 >>> 16) & 65535;\n        v2 = t2 & 65535;\n    }\n    return (v3 & 15) * 281474976710656 + v2 * 4294967296 + v1 * 65536 + (v0 ^ v3 >> 4);\n};\nexport const generateETag = (payload, weak = false)=>{\n    const prefix = weak ? 'W/\"' : '\"';\n    return prefix + fnv1a52(payload).toString(36) + payload.length.toString(36) + '\"';\n};\n\n//# sourceMappingURL=etag.js.map","import { DetachedPromise } from '../../lib/detached-promise';\n/**\n * In the web server, there is currently no incremental cache provided and we\n * always SSR the page.\n */ export default class WebResponseCache {\n    constructor(minimalMode){\n        this.pendingResponses = new Map();\n        // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n        // because we replace this.minimalMode to true in production bundles.\n        Object.assign(this, {\n            minimalMode\n        });\n    }\n    get(key, responseGenerator, context) {\n        var _this_previousCacheItem;\n        // ensure on-demand revalidate doesn't block normal requests\n        const pendingResponseKey = key ? `${key}-${context.isOnDemandRevalidate ? '1' : '0'}` : null;\n        const pendingResponse = pendingResponseKey ? this.pendingResponses.get(pendingResponseKey) : null;\n        if (pendingResponse) {\n            return pendingResponse;\n        }\n        const { promise, resolve: resolver, reject: rejecter } = new DetachedPromise();\n        if (pendingResponseKey) {\n            this.pendingResponses.set(pendingResponseKey, promise);\n        }\n        let hasResolved = false;\n        const resolve = (cacheEntry)=>{\n            if (pendingResponseKey) {\n                // Ensure all reads from the cache get the latest value.\n                this.pendingResponses.set(pendingResponseKey, Promise.resolve(cacheEntry));\n            }\n            if (!hasResolved) {\n                hasResolved = true;\n                resolver(cacheEntry);\n            }\n        };\n        // we keep the previous cache entry around to leverage\n        // when the incremental cache is disabled in minimal mode\n        if (pendingResponseKey && this.minimalMode && ((_this_previousCacheItem = this.previousCacheItem) == null ? void 0 : _this_previousCacheItem.key) === pendingResponseKey && this.previousCacheItem.expiresAt > Date.now()) {\n            resolve(this.previousCacheItem.entry);\n            this.pendingResponses.delete(pendingResponseKey);\n            return promise;\n        }\n        (async ()=>{\n            try {\n                const cacheEntry = await responseGenerator({\n                    hasResolved\n                });\n                const resolveValue = cacheEntry === null ? null : {\n                    ...cacheEntry,\n                    isMiss: true\n                };\n                // for on-demand revalidate wait to resolve until cache is set\n                if (!context.isOnDemandRevalidate) {\n                    resolve(resolveValue);\n                }\n                if (key && cacheEntry && typeof cacheEntry.revalidate !== 'undefined') {\n                    this.previousCacheItem = {\n                        key: pendingResponseKey || key,\n                        entry: cacheEntry,\n                        expiresAt: Date.now() + 1000\n                    };\n                } else {\n                    this.previousCacheItem = undefined;\n                }\n                if (context.isOnDemandRevalidate) {\n                    resolve(resolveValue);\n                }\n            } catch (err) {\n                // while revalidating in the background we can't reject as\n                // we already resolved the cache entry so log the error here\n                if (hasResolved) {\n                    console.error(err);\n                } else {\n                    rejecter(err);\n                }\n            } finally{\n                if (pendingResponseKey) {\n                    this.pendingResponses.delete(pendingResponseKey);\n                }\n            }\n        })();\n        return promise;\n    }\n}\n\n//# sourceMappingURL=web.js.map","export class LRUCache {\n    constructor(maxSize, calculateSize){\n        this.cache = new Map();\n        this.sizes = new Map();\n        this.totalSize = 0;\n        this.maxSize = maxSize;\n        this.calculateSize = calculateSize || (()=>1);\n    }\n    set(key, value) {\n        if (!key || !value) return;\n        const size = this.calculateSize(value);\n        if (size > this.maxSize) {\n            console.warn('Single item size exceeds maxSize');\n            return;\n        }\n        if (this.cache.has(key)) {\n            this.totalSize -= this.sizes.get(key) || 0;\n        }\n        this.cache.set(key, value);\n        this.sizes.set(key, size);\n        this.totalSize += size;\n        this.touch(key);\n    }\n    has(key) {\n        if (!key) return false;\n        this.touch(key);\n        return Boolean(this.cache.get(key));\n    }\n    get(key) {\n        if (!key) return;\n        const value = this.cache.get(key);\n        if (value === undefined) {\n            return undefined;\n        }\n        this.touch(key);\n        return value;\n    }\n    touch(key) {\n        const value = this.cache.get(key);\n        if (value !== undefined) {\n            this.cache.delete(key);\n            this.cache.set(key, value);\n            this.evictIfNecessary();\n        }\n    }\n    evictIfNecessary() {\n        while(this.totalSize > this.maxSize && this.cache.size > 0){\n            this.evictLeastRecentlyUsed();\n        }\n    }\n    evictLeastRecentlyUsed() {\n        const lruKey = this.cache.keys().next().value;\n        const lruSize = this.sizes.get(lruKey) || 0;\n        this.totalSize -= lruSize;\n        this.cache.delete(lruKey);\n        this.sizes.delete(lruKey);\n    }\n    reset() {\n        this.cache.clear();\n        this.sizes.clear();\n        this.totalSize = 0;\n    }\n    keys() {\n        return [\n            ...this.cache.keys()\n        ];\n    }\n    remove(key) {\n        if (this.cache.has(key)) {\n            this.totalSize -= this.sizes.get(key) || 0;\n            this.cache.delete(key);\n            this.sizes.delete(key);\n        }\n    }\n    clear() {\n        this.cache.clear();\n        this.sizes.clear();\n        this.totalSize = 0;\n    }\n    get size() {\n        return this.cache.size;\n    }\n    get currentSize() {\n        return this.totalSize;\n    }\n}\n\n//# sourceMappingURL=lru-cache.js.map","import { CachedRouteKind, IncrementalCacheKind } from '../../response-cache';\nimport { LRUCache } from '../lru-cache';\nimport { CACHE_ONE_YEAR, NEXT_CACHE_SOFT_TAGS_HEADER } from '../../../lib/constants';\nlet rateLimitedUntil = 0;\nlet memoryCache;\nconst CACHE_TAGS_HEADER = 'x-vercel-cache-tags';\nconst CACHE_HEADERS_HEADER = 'x-vercel-sc-headers';\nconst CACHE_STATE_HEADER = 'x-vercel-cache-state';\nconst CACHE_REVALIDATE_HEADER = 'x-vercel-revalidate';\nconst CACHE_FETCH_URL_HEADER = 'x-vercel-cache-item-name';\nconst CACHE_CONTROL_VALUE_HEADER = 'x-vercel-cache-control';\nconst DEBUG = Boolean(process.env.NEXT_PRIVATE_DEBUG_CACHE);\nasync function fetchRetryWithTimeout(url, init, retryIndex = 0) {\n    const controller = new AbortController();\n    const timeout = setTimeout(()=>{\n        controller.abort();\n    }, 500);\n    return fetch(url, {\n        ...init || {},\n        signal: controller.signal\n    }).catch((err)=>{\n        if (retryIndex === 3) {\n            throw err;\n        } else {\n            if (DEBUG) {\n                console.log(`Fetch failed for ${url} retry ${retryIndex}`);\n            }\n            return fetchRetryWithTimeout(url, init, retryIndex + 1);\n        }\n    }).finally(()=>{\n        clearTimeout(timeout);\n    });\n}\nexport default class FetchCache {\n    hasMatchingTags(arr1, arr2) {\n        if (arr1.length !== arr2.length) return false;\n        const set1 = new Set(arr1);\n        const set2 = new Set(arr2);\n        if (set1.size !== set2.size) return false;\n        for (let tag of set1){\n            if (!set2.has(tag)) return false;\n        }\n        return true;\n    }\n    static isAvailable(ctx) {\n        return !!(ctx._requestHeaders['x-vercel-sc-host'] || process.env.SUSPENSE_CACHE_URL);\n    }\n    constructor(ctx){\n        this.headers = {};\n        this.headers['Content-Type'] = 'application/json';\n        if (CACHE_HEADERS_HEADER in ctx._requestHeaders) {\n            const newHeaders = JSON.parse(ctx._requestHeaders[CACHE_HEADERS_HEADER]);\n            for(const k in newHeaders){\n                this.headers[k] = newHeaders[k];\n            }\n            delete ctx._requestHeaders[CACHE_HEADERS_HEADER];\n        }\n        const scHost = ctx._requestHeaders['x-vercel-sc-host'] || process.env.SUSPENSE_CACHE_URL;\n        const scBasePath = ctx._requestHeaders['x-vercel-sc-basepath'] || process.env.SUSPENSE_CACHE_BASEPATH;\n        if (process.env.SUSPENSE_CACHE_AUTH_TOKEN) {\n            this.headers['Authorization'] = `Bearer ${process.env.SUSPENSE_CACHE_AUTH_TOKEN}`;\n        }\n        if (scHost) {\n            const scProto = process.env.SUSPENSE_CACHE_PROTO || 'https';\n            this.cacheEndpoint = `${scProto}://${scHost}${scBasePath || ''}`;\n            if (DEBUG) {\n                console.log('using cache endpoint', this.cacheEndpoint);\n            }\n        } else if (DEBUG) {\n            console.log('no cache endpoint available');\n        }\n        if (ctx.maxMemoryCacheSize) {\n            if (!memoryCache) {\n                if (DEBUG) {\n                    console.log('using memory store for fetch cache');\n                }\n                memoryCache = new LRUCache(ctx.maxMemoryCacheSize, function length({ value }) {\n                    var _JSON_stringify;\n                    if (!value) {\n                        return 25;\n                    } else if (value.kind === CachedRouteKind.REDIRECT) {\n                        return JSON.stringify(value.props).length;\n                    } else if (value.kind === CachedRouteKind.IMAGE) {\n                        throw new Error('invariant image should not be incremental-cache');\n                    } else if (value.kind === CachedRouteKind.FETCH) {\n                        return JSON.stringify(value.data || '').length;\n                    } else if (value.kind === CachedRouteKind.APP_ROUTE) {\n                        return value.body.length;\n                    }\n                    // rough estimate of size of cache value\n                    return value.html.length + (((_JSON_stringify = JSON.stringify(value.kind === CachedRouteKind.APP_PAGE ? value.rscData : value.pageData)) == null ? void 0 : _JSON_stringify.length) || 0);\n                });\n            }\n        } else {\n            if (DEBUG) {\n                console.log('not using memory store for fetch cache');\n            }\n        }\n    }\n    resetRequestCache() {\n        memoryCache == null ? void 0 : memoryCache.reset();\n    }\n    async revalidateTag(...args) {\n        let [tags] = args;\n        tags = typeof tags === 'string' ? [\n            tags\n        ] : tags;\n        if (DEBUG) {\n            console.log('revalidateTag', tags);\n        }\n        if (!tags.length) return;\n        if (Date.now() < rateLimitedUntil) {\n            if (DEBUG) {\n                console.log('rate limited ', rateLimitedUntil);\n            }\n            return;\n        }\n        for(let i = 0; i < Math.ceil(tags.length / 64); i++){\n            const currentTags = tags.slice(i * 64, i * 64 + 64);\n            try {\n                const res = await fetchRetryWithTimeout(`${this.cacheEndpoint}/v1/suspense-cache/revalidate?tags=${currentTags.map((tag)=>encodeURIComponent(tag)).join(',')}`, {\n                    method: 'POST',\n                    headers: this.headers,\n                    // @ts-expect-error not on public type\n                    next: {\n                        internal: true\n                    }\n                });\n                if (res.status === 429) {\n                    const retryAfter = res.headers.get('retry-after') || '60000';\n                    rateLimitedUntil = Date.now() + parseInt(retryAfter);\n                }\n                if (!res.ok) {\n                    throw new Error(`Request failed with status ${res.status}.`);\n                }\n            } catch (err) {\n                console.warn(`Failed to revalidate tag`, currentTags, err);\n            }\n        }\n    }\n    async get(...args) {\n        var _data_value;\n        const [key, ctx] = args;\n        const { tags, softTags, kind: kindHint, fetchIdx, fetchUrl } = ctx;\n        if (kindHint !== IncrementalCacheKind.FETCH) {\n            return null;\n        }\n        if (Date.now() < rateLimitedUntil) {\n            if (DEBUG) {\n                console.log('rate limited');\n            }\n            return null;\n        }\n        // memory cache is cleared at the end of each request\n        // so that revalidate events are pulled from upstream\n        // on successive requests\n        let data = memoryCache == null ? void 0 : memoryCache.get(key);\n        const hasFetchKindAndMatchingTags = (data == null ? void 0 : (_data_value = data.value) == null ? void 0 : _data_value.kind) === CachedRouteKind.FETCH && this.hasMatchingTags(tags ?? [], data.value.tags ?? []);\n        // Get data from fetch cache. Also check if new tags have been\n        // specified with the same cache key (fetch URL)\n        if (this.cacheEndpoint && (!data || !hasFetchKindAndMatchingTags)) {\n            try {\n                const start = Date.now();\n                const fetchParams = {\n                    internal: true,\n                    fetchType: 'cache-get',\n                    fetchUrl: fetchUrl,\n                    fetchIdx\n                };\n                const res = await fetch(`${this.cacheEndpoint}/v1/suspense-cache/${key}`, {\n                    method: 'GET',\n                    headers: {\n                        ...this.headers,\n                        [CACHE_FETCH_URL_HEADER]: fetchUrl,\n                        [CACHE_TAGS_HEADER]: (tags == null ? void 0 : tags.join(',')) || '',\n                        [NEXT_CACHE_SOFT_TAGS_HEADER]: (softTags == null ? void 0 : softTags.join(',')) || ''\n                    },\n                    next: fetchParams\n                });\n                if (res.status === 429) {\n                    const retryAfter = res.headers.get('retry-after') || '60000';\n                    rateLimitedUntil = Date.now() + parseInt(retryAfter);\n                }\n                if (res.status === 404) {\n                    if (DEBUG) {\n                        console.log(`no fetch cache entry for ${key}, duration: ${Date.now() - start}ms`);\n                    }\n                    return null;\n                }\n                if (!res.ok) {\n                    console.error(await res.text());\n                    throw new Error(`invalid response from cache ${res.status}`);\n                }\n                const cached = await res.json();\n                if (!cached || cached.kind !== CachedRouteKind.FETCH) {\n                    DEBUG && console.log({\n                        cached\n                    });\n                    throw new Error('invalid cache value');\n                }\n                // if new tags were specified, merge those tags to the existing tags\n                if (cached.kind === CachedRouteKind.FETCH) {\n                    cached.tags ??= [];\n                    for (const tag of tags ?? []){\n                        if (!cached.tags.includes(tag)) {\n                            cached.tags.push(tag);\n                        }\n                    }\n                }\n                const cacheState = res.headers.get(CACHE_STATE_HEADER);\n                const age = res.headers.get('age');\n                data = {\n                    value: cached,\n                    // if it's already stale set it to a time in the past\n                    // if not derive last modified from age\n                    lastModified: cacheState !== 'fresh' ? Date.now() - CACHE_ONE_YEAR : Date.now() - parseInt(age || '0', 10) * 1000\n                };\n                if (DEBUG) {\n                    console.log(`got fetch cache entry for ${key}, duration: ${Date.now() - start}ms, size: ${Object.keys(cached).length}, cache-state: ${cacheState} tags: ${tags == null ? void 0 : tags.join(',')} softTags: ${softTags == null ? void 0 : softTags.join(',')}`);\n                }\n                if (data) {\n                    memoryCache == null ? void 0 : memoryCache.set(key, data);\n                }\n            } catch (err) {\n                // unable to get data from fetch-cache\n                if (DEBUG) {\n                    console.error(`Failed to get from fetch-cache`, err);\n                }\n            }\n        }\n        return data || null;\n    }\n    async set(...args) {\n        const [key, data, ctx] = args;\n        const { fetchCache, fetchIdx, fetchUrl, tags } = ctx;\n        if (!fetchCache) return;\n        if (Date.now() < rateLimitedUntil) {\n            if (DEBUG) {\n                console.log('rate limited');\n            }\n            return;\n        }\n        memoryCache == null ? void 0 : memoryCache.set(key, {\n            value: data,\n            lastModified: Date.now()\n        });\n        if (this.cacheEndpoint) {\n            try {\n                const start = Date.now();\n                if (data !== null && 'revalidate' in data) {\n                    this.headers[CACHE_REVALIDATE_HEADER] = data.revalidate.toString();\n                }\n                if (!this.headers[CACHE_REVALIDATE_HEADER] && data !== null && 'data' in data) {\n                    this.headers[CACHE_CONTROL_VALUE_HEADER] = data.data.headers['cache-control'];\n                }\n                const body = JSON.stringify({\n                    ...data,\n                    // we send the tags in the header instead\n                    // of in the body here\n                    tags: undefined\n                });\n                if (DEBUG) {\n                    console.log('set cache', key);\n                }\n                const fetchParams = {\n                    internal: true,\n                    fetchType: 'cache-set',\n                    fetchUrl,\n                    fetchIdx\n                };\n                const res = await fetch(`${this.cacheEndpoint}/v1/suspense-cache/${key}`, {\n                    method: 'POST',\n                    headers: {\n                        ...this.headers,\n                        [CACHE_FETCH_URL_HEADER]: fetchUrl || '',\n                        [CACHE_TAGS_HEADER]: (tags == null ? void 0 : tags.join(',')) || ''\n                    },\n                    body: body,\n                    next: fetchParams\n                });\n                if (res.status === 429) {\n                    const retryAfter = res.headers.get('retry-after') || '60000';\n                    rateLimitedUntil = Date.now() + parseInt(retryAfter);\n                }\n                if (!res.ok) {\n                    DEBUG && console.log(await res.text());\n                    throw new Error(`invalid response ${res.status}`);\n                }\n                if (DEBUG) {\n                    console.log(`successfully set to fetch-cache for ${key}, duration: ${Date.now() - start}ms, size: ${body.length}`);\n                }\n            } catch (err) {\n                // unable to set to fetch-cache\n                if (DEBUG) {\n                    console.error(`Failed to update fetch cache`, err);\n                }\n            }\n        }\n        return;\n    }\n}\n\n//# sourceMappingURL=fetch-cache.js.map","// we share tags manifest between \"use cache\" handlers and\n// previous file-system-cache\nexport const tagsManifest = {\n    items: {}\n};\nexport const isTagStale = (tags, timestamp)=>{\n    for (const tag of tags){\n        const tagEntry = tagsManifest.items[tag];\n        if (typeof (tagEntry == null ? void 0 : tagEntry.revalidatedAt) === 'number' && // TODO: use performance.now and update file-system-cache?\n        tagEntry.revalidatedAt >= timestamp) {\n            return true;\n        }\n    }\n    return false;\n};\n\n//# sourceMappingURL=tags-manifest.external.js.map","import { CachedRouteKind, IncrementalCacheKind } from '../../response-cache';\nimport { LRUCache } from '../lru-cache';\nimport path from '../../../shared/lib/isomorphic/path';\nimport { NEXT_CACHE_TAGS_HEADER, NEXT_DATA_SUFFIX, NEXT_META_SUFFIX, RSC_PREFETCH_SUFFIX, RSC_SEGMENT_SUFFIX, RSC_SEGMENTS_DIR_SUFFIX, RSC_SUFFIX } from '../../../lib/constants';\nimport { tagsManifest } from './tags-manifest.external';\nlet memoryCache;\nexport default class FileSystemCache {\n    constructor(ctx){\n        this.fs = ctx.fs;\n        this.flushToDisk = ctx.flushToDisk;\n        this.serverDistDir = ctx.serverDistDir;\n        this.revalidatedTags = ctx.revalidatedTags;\n        this.debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE;\n        if (ctx.maxMemoryCacheSize) {\n            if (!memoryCache) {\n                if (this.debug) {\n                    console.log('using memory store for fetch cache');\n                }\n                memoryCache = new LRUCache(ctx.maxMemoryCacheSize, function length({ value }) {\n                    var _JSON_stringify;\n                    if (!value) {\n                        return 25;\n                    } else if (value.kind === CachedRouteKind.REDIRECT) {\n                        return JSON.stringify(value.props).length;\n                    } else if (value.kind === CachedRouteKind.IMAGE) {\n                        throw new Error('invariant image should not be incremental-cache');\n                    } else if (value.kind === CachedRouteKind.FETCH) {\n                        return JSON.stringify(value.data || '').length;\n                    } else if (value.kind === CachedRouteKind.APP_ROUTE) {\n                        return value.body.length;\n                    }\n                    // rough estimate of size of cache value\n                    return value.html.length + (((_JSON_stringify = JSON.stringify(value.kind === CachedRouteKind.APP_PAGE ? value.rscData : value.pageData)) == null ? void 0 : _JSON_stringify.length) || 0);\n                });\n            }\n        } else if (this.debug) {\n            console.log('not using memory store for fetch cache');\n        }\n    }\n    resetRequestCache() {}\n    async revalidateTag(...args) {\n        let [tags] = args;\n        tags = typeof tags === 'string' ? [\n            tags\n        ] : tags;\n        if (this.debug) {\n            console.log('revalidateTag', tags);\n        }\n        if (tags.length === 0) {\n            return;\n        }\n        for (const tag of tags){\n            const data = tagsManifest.items[tag] || {};\n            data.revalidatedAt = Date.now();\n            tagsManifest.items[tag] = data;\n        }\n    }\n    async get(...args) {\n        var _data_value, _data_value1, _data_value2;\n        const [key, ctx] = args;\n        const { tags, softTags, kind, isRoutePPREnabled, isFallback } = ctx;\n        let data = memoryCache == null ? void 0 : memoryCache.get(key);\n        if (this.debug) {\n            console.log('get', key, tags, kind, !!data);\n        }\n        // let's check the disk for seed data\n        if (!data && process.env.NEXT_RUNTIME !== 'edge') {\n            if (kind === IncrementalCacheKind.APP_ROUTE) {\n                try {\n                    const filePath = this.getFilePath(`${key}.body`, IncrementalCacheKind.APP_ROUTE);\n                    const fileData = await this.fs.readFile(filePath);\n                    const { mtime } = await this.fs.stat(filePath);\n                    const meta = JSON.parse(await this.fs.readFile(filePath.replace(/\\.body$/, NEXT_META_SUFFIX), 'utf8'));\n                    const cacheEntry = {\n                        lastModified: mtime.getTime(),\n                        value: {\n                            kind: CachedRouteKind.APP_ROUTE,\n                            body: fileData,\n                            headers: meta.headers,\n                            status: meta.status\n                        }\n                    };\n                    return cacheEntry;\n                } catch  {\n                    return null;\n                }\n            }\n            try {\n                const filePath = this.getFilePath(kind === IncrementalCacheKind.FETCH ? key : `${key}.html`, kind);\n                const fileData = await this.fs.readFile(filePath, 'utf8');\n                const { mtime } = await this.fs.stat(filePath);\n                if (kind === IncrementalCacheKind.FETCH) {\n                    var _data_value3;\n                    if (!this.flushToDisk) return null;\n                    const lastModified = mtime.getTime();\n                    const parsedData = JSON.parse(fileData);\n                    data = {\n                        lastModified,\n                        value: parsedData\n                    };\n                    if (((_data_value3 = data.value) == null ? void 0 : _data_value3.kind) === CachedRouteKind.FETCH) {\n                        var _data_value4;\n                        const storedTags = (_data_value4 = data.value) == null ? void 0 : _data_value4.tags;\n                        // update stored tags if a new one is being added\n                        // TODO: remove this when we can send the tags\n                        // via header on GET same as SET\n                        if (!(tags == null ? void 0 : tags.every((tag)=>storedTags == null ? void 0 : storedTags.includes(tag)))) {\n                            if (this.debug) {\n                                console.log('tags vs storedTags mismatch', tags, storedTags);\n                            }\n                            await this.set(key, data.value, {\n                                tags,\n                                isRoutePPREnabled\n                            });\n                        }\n                    }\n                } else if (kind === IncrementalCacheKind.APP_PAGE) {\n                    // We try to load the metadata file, but if it fails, we don't\n                    // error. We also don't load it if this is a fallback.\n                    let meta;\n                    try {\n                        meta = JSON.parse(await this.fs.readFile(filePath.replace(/\\.html$/, NEXT_META_SUFFIX), 'utf8'));\n                    } catch  {}\n                    let maybeSegmentData;\n                    if (meta == null ? void 0 : meta.segmentPaths) {\n                        // Collect all the segment data for this page.\n                        // TODO: To optimize file system reads, we should consider creating\n                        // separate cache entries for each segment, rather than storing them\n                        // all on the page's entry. Though the behavior is\n                        // identical regardless.\n                        const segmentData = {};\n                        maybeSegmentData = segmentData;\n                        const segmentsDir = key + RSC_SEGMENTS_DIR_SUFFIX;\n                        await Promise.all(meta.segmentPaths.map(async (segmentPath)=>{\n                            const segmentDataFilePath = this.getFilePath(segmentPath === '/' ? segmentsDir + '/_index' + RSC_SEGMENT_SUFFIX : segmentsDir + segmentPath + RSC_SEGMENT_SUFFIX, IncrementalCacheKind.APP_PAGE);\n                            try {\n                                segmentData[segmentPath] = await this.fs.readFile(segmentDataFilePath, 'utf8');\n                            } catch  {\n                            // This shouldn't happen, but if for some reason we fail to\n                            // load a segment from the filesystem, treat it the same as if\n                            // the segment is dynamic and does not have a prefetch.\n                            }\n                        }));\n                    }\n                    let rscData;\n                    if (!isFallback) {\n                        rscData = await this.fs.readFile(this.getFilePath(`${key}${isRoutePPREnabled ? RSC_PREFETCH_SUFFIX : RSC_SUFFIX}`, IncrementalCacheKind.APP_PAGE));\n                    }\n                    data = {\n                        lastModified: mtime.getTime(),\n                        value: {\n                            kind: CachedRouteKind.APP_PAGE,\n                            html: fileData,\n                            rscData,\n                            postponed: meta == null ? void 0 : meta.postponed,\n                            headers: meta == null ? void 0 : meta.headers,\n                            status: meta == null ? void 0 : meta.status,\n                            segmentData: maybeSegmentData\n                        }\n                    };\n                } else if (kind === IncrementalCacheKind.PAGES) {\n                    let meta;\n                    let pageData = {};\n                    if (!isFallback) {\n                        pageData = JSON.parse(await this.fs.readFile(this.getFilePath(`${key}${NEXT_DATA_SUFFIX}`, IncrementalCacheKind.PAGES), 'utf8'));\n                    }\n                    data = {\n                        lastModified: mtime.getTime(),\n                        value: {\n                            kind: CachedRouteKind.PAGES,\n                            html: fileData,\n                            pageData,\n                            headers: meta == null ? void 0 : meta.headers,\n                            status: meta == null ? void 0 : meta.status\n                        }\n                    };\n                } else {\n                    throw new Error(`Invariant: Unexpected route kind ${kind} in file system cache.`);\n                }\n                if (data) {\n                    memoryCache == null ? void 0 : memoryCache.set(key, data);\n                }\n            } catch  {\n                return null;\n            }\n        }\n        if ((data == null ? void 0 : (_data_value = data.value) == null ? void 0 : _data_value.kind) === CachedRouteKind.APP_PAGE || (data == null ? void 0 : (_data_value1 = data.value) == null ? void 0 : _data_value1.kind) === CachedRouteKind.PAGES) {\n            var _data_value_headers;\n            let cacheTags;\n            const tagsHeader = (_data_value_headers = data.value.headers) == null ? void 0 : _data_value_headers[NEXT_CACHE_TAGS_HEADER];\n            if (typeof tagsHeader === 'string') {\n                cacheTags = tagsHeader.split(',');\n            }\n            if (cacheTags == null ? void 0 : cacheTags.length) {\n                const isStale = cacheTags.some((tag)=>{\n                    var _tagsManifest_items_tag;\n                    return (tagsManifest == null ? void 0 : (_tagsManifest_items_tag = tagsManifest.items[tag]) == null ? void 0 : _tagsManifest_items_tag.revalidatedAt) && (tagsManifest == null ? void 0 : tagsManifest.items[tag].revalidatedAt) >= ((data == null ? void 0 : data.lastModified) || Date.now());\n                });\n                // we trigger a blocking validation if an ISR page\n                // had a tag revalidated, if we want to be a background\n                // revalidation instead we return data.lastModified = -1\n                if (isStale) {\n                    return null;\n                }\n            }\n        } else if ((data == null ? void 0 : (_data_value2 = data.value) == null ? void 0 : _data_value2.kind) === CachedRouteKind.FETCH) {\n            const combinedTags = [\n                ...tags || [],\n                ...softTags || []\n            ];\n            const wasRevalidated = combinedTags.some((tag)=>{\n                var _tagsManifest_items_tag;\n                if (this.revalidatedTags.includes(tag)) {\n                    return true;\n                }\n                return (tagsManifest == null ? void 0 : (_tagsManifest_items_tag = tagsManifest.items[tag]) == null ? void 0 : _tagsManifest_items_tag.revalidatedAt) && (tagsManifest == null ? void 0 : tagsManifest.items[tag].revalidatedAt) >= ((data == null ? void 0 : data.lastModified) || Date.now());\n            });\n            // When revalidate tag is called we don't return\n            // stale data so it's updated right away\n            if (wasRevalidated) {\n                data = undefined;\n            }\n        }\n        return data ?? null;\n    }\n    async set(...args) {\n        const [key, data, ctx] = args;\n        const { isFallback } = ctx;\n        memoryCache == null ? void 0 : memoryCache.set(key, {\n            value: data,\n            lastModified: Date.now()\n        });\n        if (this.debug) {\n            console.log('set', key);\n        }\n        if (!this.flushToDisk || !data) return;\n        if (data.kind === CachedRouteKind.APP_ROUTE) {\n            const filePath = this.getFilePath(`${key}.body`, IncrementalCacheKind.APP_ROUTE);\n            await this.fs.mkdir(path.dirname(filePath));\n            await this.fs.writeFile(filePath, data.body);\n            const meta = {\n                headers: data.headers,\n                status: data.status,\n                postponed: undefined,\n                segmentPaths: undefined\n            };\n            await this.fs.writeFile(filePath.replace(/\\.body$/, NEXT_META_SUFFIX), JSON.stringify(meta, null, 2));\n        } else if (data.kind === CachedRouteKind.PAGES || data.kind === CachedRouteKind.APP_PAGE) {\n            const isAppPath = data.kind === CachedRouteKind.APP_PAGE;\n            const htmlPath = this.getFilePath(`${key}.html`, isAppPath ? IncrementalCacheKind.APP_PAGE : IncrementalCacheKind.PAGES);\n            await this.fs.mkdir(path.dirname(htmlPath));\n            await this.fs.writeFile(htmlPath, data.html);\n            // Fallbacks don't generate a data file.\n            if (!isFallback) {\n                await this.fs.writeFile(this.getFilePath(`${key}${isAppPath ? ctx.isRoutePPREnabled ? RSC_PREFETCH_SUFFIX : RSC_SUFFIX : NEXT_DATA_SUFFIX}`, isAppPath ? IncrementalCacheKind.APP_PAGE : IncrementalCacheKind.PAGES), isAppPath ? data.rscData : JSON.stringify(data.pageData));\n            }\n            if ((data == null ? void 0 : data.kind) === CachedRouteKind.APP_PAGE) {\n                const meta = {\n                    headers: data.headers,\n                    status: data.status,\n                    postponed: data.postponed,\n                    segmentPaths: undefined\n                };\n                await this.fs.writeFile(htmlPath.replace(/\\.html$/, NEXT_META_SUFFIX), JSON.stringify(meta));\n            }\n        } else if (data.kind === CachedRouteKind.FETCH) {\n            const filePath = this.getFilePath(key, IncrementalCacheKind.FETCH);\n            await this.fs.mkdir(path.dirname(filePath));\n            await this.fs.writeFile(filePath, JSON.stringify({\n                ...data,\n                tags: ctx.tags\n            }));\n        }\n    }\n    getFilePath(pathname, kind) {\n        switch(kind){\n            case IncrementalCacheKind.FETCH:\n                // we store in .next/cache/fetch-cache so it can be persisted\n                // across deploys\n                return path.join(this.serverDistDir, '..', 'cache', 'fetch-cache', pathname);\n            case IncrementalCacheKind.PAGES:\n                return path.join(this.serverDistDir, 'pages', pathname);\n            case IncrementalCacheKind.IMAGE:\n            case IncrementalCacheKind.APP_PAGE:\n            case IncrementalCacheKind.APP_ROUTE:\n                return path.join(this.serverDistDir, 'app', pathname);\n            default:\n                throw new Error(`Unexpected file path kind: ${kind}`);\n        }\n    }\n}\n\n//# sourceMappingURL=file-system-cache.js.map","/**\n * A shared cache of revalidate timings for routes. This cache is used so we\n * don't have to modify the prerender manifest when we want to update the\n * revalidate timings for a route.\n */ export class SharedRevalidateTimings {\n    static #_ = /**\n   * The in-memory cache of revalidate timings for routes. This cache is\n   * populated when the cache is updated with new timings.\n   */ this.timings = new Map();\n    constructor(/**\n     * The prerender manifest that contains the initial revalidate timings for\n     * routes.\n     */ prerenderManifest){\n        this.prerenderManifest = prerenderManifest;\n    }\n    /**\n   * Try to get the revalidate timings for a route. This will first try to get\n   * the timings from the in-memory cache. If the timings are not present in the\n   * in-memory cache, then the timings will be sourced from the prerender\n   * manifest.\n   *\n   * @param route the route to get the revalidate timings for\n   * @returns the revalidate timings for the route, or undefined if the timings\n   *          are not present in the in-memory cache or the prerender manifest\n   */ get(route) {\n        var _this_prerenderManifest_routes_route, _this_prerenderManifest_dynamicRoutes_route;\n        // This is a copy on write cache that is updated when the cache is updated.\n        // If the cache is never written to, then the timings will be sourced from\n        // the prerender manifest.\n        let revalidate = SharedRevalidateTimings.timings.get(route);\n        if (typeof revalidate !== 'undefined') return revalidate;\n        revalidate = (_this_prerenderManifest_routes_route = this.prerenderManifest.routes[route]) == null ? void 0 : _this_prerenderManifest_routes_route.initialRevalidateSeconds;\n        if (typeof revalidate !== 'undefined') return revalidate;\n        revalidate = (_this_prerenderManifest_dynamicRoutes_route = this.prerenderManifest.dynamicRoutes[route]) == null ? void 0 : _this_prerenderManifest_dynamicRoutes_route.fallbackRevalidate;\n        if (typeof revalidate !== 'undefined') return revalidate;\n        return undefined;\n    }\n    /**\n   * Set the revalidate timings for a route.\n   *\n   * @param route the route to set the revalidate timings for\n   * @param revalidate the revalidate timings for the route\n   */ set(route, revalidate) {\n        SharedRevalidateTimings.timings.set(route, revalidate);\n    }\n    /**\n   * Clear the in-memory cache of revalidate timings for routes.\n   */ clear() {\n        SharedRevalidateTimings.timings.clear();\n    }\n}\n\n//# sourceMappingURL=shared-revalidate-timings.js.map","import { IncrementalCacheKind, CachedRouteKind } from '../../response-cache';\nimport { cacheScopeAsyncLocalStorage } from '../../async-storage/cache-scope.external';\nimport FetchCache from './fetch-cache';\nimport FileSystemCache from './file-system-cache';\nimport { normalizePagePath } from '../../../shared/lib/page-path/normalize-page-path';\nimport { CACHE_ONE_YEAR, NEXT_CACHE_REVALIDATED_TAGS_HEADER, NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER, PRERENDER_REVALIDATE_HEADER } from '../../../lib/constants';\nimport { toRoute } from '../to-route';\nimport { SharedRevalidateTimings } from './shared-revalidate-timings';\nexport class CacheHandler {\n    // eslint-disable-next-line\n    constructor(_ctx){}\n    async get(..._args) {\n        return {};\n    }\n    async set(..._args) {}\n    async revalidateTag(..._args) {}\n    resetRequestCache() {}\n}\nexport class IncrementalCache {\n    constructor({ fs, dev, dynamicIO, flushToDisk, fetchCache, minimalMode, serverDistDir, requestHeaders, requestProtocol, maxMemoryCacheSize, getPrerenderManifest, fetchCacheKeyPrefix, CurCacheHandler, allowedRevalidateHeaderKeys }){\n        var _this_prerenderManifest_preview, _this_prerenderManifest, _this_prerenderManifest_preview1, _this_prerenderManifest1;\n        this.locks = new Map();\n        const debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE;\n        this.hasCustomCacheHandler = Boolean(CurCacheHandler);\n        const cacheHandlersSymbol = Symbol.for('@next/cache-handlers');\n        const _globalThis = globalThis;\n        if (!CurCacheHandler) {\n            // if we have a global cache handler available leverage it\n            const globalCacheHandler = _globalThis[cacheHandlersSymbol];\n            if (globalCacheHandler == null ? void 0 : globalCacheHandler.FetchCache) {\n                CurCacheHandler = globalCacheHandler.FetchCache;\n            } else {\n                if (fs && serverDistDir) {\n                    if (debug) {\n                        console.log('using filesystem cache handler');\n                    }\n                    CurCacheHandler = FileSystemCache;\n                }\n                if (FetchCache.isAvailable({\n                    _requestHeaders: requestHeaders\n                }) && minimalMode && fetchCache) {\n                    if (debug) {\n                        console.log('using fetch cache handler');\n                    }\n                    CurCacheHandler = FetchCache;\n                }\n            }\n        } else if (debug) {\n            console.log('using custom cache handler', CurCacheHandler.name);\n        }\n        if (process.env.__NEXT_TEST_MAX_ISR_CACHE) {\n            // Allow cache size to be overridden for testing purposes\n            maxMemoryCacheSize = parseInt(process.env.__NEXT_TEST_MAX_ISR_CACHE, 10);\n        }\n        this.dev = dev;\n        this.hasDynamicIO = dynamicIO;\n        this.disableForTestmode = process.env.NEXT_PRIVATE_TEST_PROXY === 'true';\n        // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n        // because we replace this.minimalMode to true in production bundles.\n        const minimalModeKey = 'minimalMode';\n        this[minimalModeKey] = minimalMode;\n        this.requestHeaders = requestHeaders;\n        this.requestProtocol = requestProtocol;\n        this.allowedRevalidateHeaderKeys = allowedRevalidateHeaderKeys;\n        this.prerenderManifest = getPrerenderManifest();\n        this.revalidateTimings = new SharedRevalidateTimings(this.prerenderManifest);\n        this.fetchCacheKeyPrefix = fetchCacheKeyPrefix;\n        let revalidatedTags = [];\n        if (requestHeaders[PRERENDER_REVALIDATE_HEADER] === ((_this_prerenderManifest = this.prerenderManifest) == null ? void 0 : (_this_prerenderManifest_preview = _this_prerenderManifest.preview) == null ? void 0 : _this_prerenderManifest_preview.previewModeId)) {\n            this.isOnDemandRevalidate = true;\n        }\n        if (minimalMode && typeof requestHeaders[NEXT_CACHE_REVALIDATED_TAGS_HEADER] === 'string' && requestHeaders[NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER] === ((_this_prerenderManifest1 = this.prerenderManifest) == null ? void 0 : (_this_prerenderManifest_preview1 = _this_prerenderManifest1.preview) == null ? void 0 : _this_prerenderManifest_preview1.previewModeId)) {\n            revalidatedTags = requestHeaders[NEXT_CACHE_REVALIDATED_TAGS_HEADER].split(',');\n        }\n        if (CurCacheHandler) {\n            this.cacheHandler = new CurCacheHandler({\n                dev,\n                fs,\n                flushToDisk,\n                serverDistDir,\n                revalidatedTags,\n                maxMemoryCacheSize,\n                _requestHeaders: requestHeaders,\n                fetchCacheKeyPrefix\n            });\n        }\n    }\n    calculateRevalidate(pathname, fromTime, dev, isFallback) {\n        // in development we don't have a prerender-manifest\n        // and default to always revalidating to allow easier debugging\n        if (dev) return Math.floor(performance.timeOrigin + performance.now() - 1000);\n        // if an entry isn't present in routes we fallback to a default\n        // of revalidating after 1 second unless it's a fallback request.\n        const initialRevalidateSeconds = this.revalidateTimings.get(toRoute(pathname)) ?? (isFallback ? false : 1);\n        const revalidateAfter = typeof initialRevalidateSeconds === 'number' ? initialRevalidateSeconds * 1000 + fromTime : initialRevalidateSeconds;\n        return revalidateAfter;\n    }\n    _getPathname(pathname, fetchCache) {\n        return fetchCache ? pathname : normalizePagePath(pathname);\n    }\n    resetRequestCache() {\n        var _this_cacheHandler_resetRequestCache, _this_cacheHandler;\n        (_this_cacheHandler = this.cacheHandler) == null ? void 0 : (_this_cacheHandler_resetRequestCache = _this_cacheHandler.resetRequestCache) == null ? void 0 : _this_cacheHandler_resetRequestCache.call(_this_cacheHandler);\n    }\n    async lock(cacheKey) {\n        let unlockNext = ()=>Promise.resolve();\n        const existingLock = this.locks.get(cacheKey);\n        if (existingLock) {\n            await existingLock;\n        }\n        const newLock = new Promise((resolve)=>{\n            unlockNext = async ()=>{\n                resolve();\n                this.locks.delete(cacheKey) // Remove the lock upon release\n                ;\n            };\n        });\n        this.locks.set(cacheKey, newLock);\n        return unlockNext;\n    }\n    async revalidateTag(tags) {\n        var _this_cacheHandler_revalidateTag, _this_cacheHandler;\n        return (_this_cacheHandler = this.cacheHandler) == null ? void 0 : (_this_cacheHandler_revalidateTag = _this_cacheHandler.revalidateTag) == null ? void 0 : _this_cacheHandler_revalidateTag.call(_this_cacheHandler, tags);\n    }\n    // x-ref: https://github.com/facebook/react/blob/2655c9354d8e1c54ba888444220f63e836925caa/packages/react/src/ReactFetch.js#L23\n    async generateCacheKey(url, init = {}) {\n        // this should be bumped anytime a fix is made to cache entries\n        // that should bust the cache\n        const MAIN_KEY_PREFIX = 'v3';\n        const bodyChunks = [];\n        const encoder = new TextEncoder();\n        const decoder = new TextDecoder();\n        if (init.body) {\n            // handle ReadableStream body\n            if (typeof init.body.getReader === 'function') {\n                const readableBody = init.body;\n                const chunks = [];\n                try {\n                    await readableBody.pipeTo(new WritableStream({\n                        write (chunk) {\n                            if (typeof chunk === 'string') {\n                                chunks.push(encoder.encode(chunk));\n                                bodyChunks.push(chunk);\n                            } else {\n                                chunks.push(chunk);\n                                bodyChunks.push(decoder.decode(chunk, {\n                                    stream: true\n                                }));\n                            }\n                        }\n                    }));\n                    // Flush the decoder.\n                    bodyChunks.push(decoder.decode());\n                    // Create a new buffer with all the chunks.\n                    const length = chunks.reduce((total, arr)=>total + arr.length, 0);\n                    const arrayBuffer = new Uint8Array(length);\n                    // Push each of the chunks into the new array buffer.\n                    let offset = 0;\n                    for (const chunk of chunks){\n                        arrayBuffer.set(chunk, offset);\n                        offset += chunk.length;\n                    }\n                    init._ogBody = arrayBuffer;\n                } catch (err) {\n                    console.error('Problem reading body', err);\n                }\n            } else if (typeof init.body.keys === 'function') {\n                const formData = init.body;\n                init._ogBody = init.body;\n                for (const key of new Set([\n                    ...formData.keys()\n                ])){\n                    const values = formData.getAll(key);\n                    bodyChunks.push(`${key}=${(await Promise.all(values.map(async (val)=>{\n                        if (typeof val === 'string') {\n                            return val;\n                        } else {\n                            return await val.text();\n                        }\n                    }))).join(',')}`);\n                }\n            // handle blob body\n            } else if (typeof init.body.arrayBuffer === 'function') {\n                const blob = init.body;\n                const arrayBuffer = await blob.arrayBuffer();\n                bodyChunks.push(await blob.text());\n                init._ogBody = new Blob([\n                    arrayBuffer\n                ], {\n                    type: blob.type\n                });\n            } else if (typeof init.body === 'string') {\n                bodyChunks.push(init.body);\n                init._ogBody = init.body;\n            }\n        }\n        const headers = typeof (init.headers || {}).keys === 'function' ? Object.fromEntries(init.headers) : Object.assign({}, init.headers);\n        if ('traceparent' in headers) delete headers['traceparent'];\n        const cacheString = JSON.stringify([\n            MAIN_KEY_PREFIX,\n            this.fetchCacheKeyPrefix || '',\n            url,\n            init.method,\n            headers,\n            init.mode,\n            init.redirect,\n            init.credentials,\n            init.referrer,\n            init.referrerPolicy,\n            init.integrity,\n            init.cache,\n            bodyChunks\n        ]);\n        if (process.env.NEXT_RUNTIME === 'edge') {\n            function bufferToHex(buffer) {\n                return Array.prototype.map.call(new Uint8Array(buffer), (b)=>b.toString(16).padStart(2, '0')).join('');\n            }\n            const buffer = encoder.encode(cacheString);\n            return bufferToHex(await crypto.subtle.digest('SHA-256', buffer));\n        } else {\n            const crypto1 = require('crypto');\n            return crypto1.createHash('sha256').update(cacheString).digest('hex');\n        }\n    }\n    // get data from cache if available\n    async get(cacheKey, ctx) {\n        var _this_cacheHandler, _cacheData_value;\n        // unlike other caches if we have a cacheScope we use it even if\n        // testmode would normally disable it or if requestHeaders say 'no-cache'.\n        if (this.hasDynamicIO && ctx.kind === IncrementalCacheKind.FETCH) {\n            const cacheScope = cacheScopeAsyncLocalStorage.getStore();\n            if (cacheScope) {\n                const memoryCacheData = cacheScope.cache.get(cacheKey);\n                if ((memoryCacheData == null ? void 0 : memoryCacheData.kind) === CachedRouteKind.FETCH) {\n                    return {\n                        isStale: false,\n                        value: memoryCacheData,\n                        revalidateAfter: false,\n                        isFallback: false\n                    };\n                }\n            }\n        }\n        // we don't leverage the prerender cache in dev mode\n        // so that getStaticProps is always called for easier debugging\n        if (this.disableForTestmode || this.dev && (ctx.kind !== IncrementalCacheKind.FETCH || this.requestHeaders['cache-control'] === 'no-cache')) {\n            return null;\n        }\n        const { isFallback } = ctx;\n        cacheKey = this._getPathname(cacheKey, ctx.kind === IncrementalCacheKind.FETCH);\n        let entry = null;\n        let revalidate = ctx.revalidate;\n        const cacheData = await ((_this_cacheHandler = this.cacheHandler) == null ? void 0 : _this_cacheHandler.get(cacheKey, ctx));\n        if ((cacheData == null ? void 0 : (_cacheData_value = cacheData.value) == null ? void 0 : _cacheData_value.kind) === CachedRouteKind.FETCH) {\n            const combinedTags = [\n                ...ctx.tags || [],\n                ...ctx.softTags || []\n            ];\n            // if a tag was revalidated we don't return stale data\n            if (combinedTags.some((tag)=>{\n                var _this_revalidatedTags;\n                return (_this_revalidatedTags = this.revalidatedTags) == null ? void 0 : _this_revalidatedTags.includes(tag);\n            })) {\n                return null;\n            }\n            revalidate = revalidate || cacheData.value.revalidate;\n            const age = (performance.timeOrigin + performance.now() - (cacheData.lastModified || 0)) / 1000;\n            const isStale = age > revalidate;\n            const data = cacheData.value.data;\n            return {\n                isStale: isStale,\n                value: {\n                    kind: CachedRouteKind.FETCH,\n                    data,\n                    revalidate: revalidate\n                },\n                revalidateAfter: performance.timeOrigin + performance.now() + revalidate * 1000,\n                isFallback\n            };\n        }\n        const curRevalidate = this.revalidateTimings.get(toRoute(cacheKey));\n        let isStale;\n        let revalidateAfter;\n        if ((cacheData == null ? void 0 : cacheData.lastModified) === -1) {\n            isStale = -1;\n            revalidateAfter = -1 * CACHE_ONE_YEAR;\n        } else {\n            revalidateAfter = this.calculateRevalidate(cacheKey, (cacheData == null ? void 0 : cacheData.lastModified) || performance.timeOrigin + performance.now(), this.dev ? ctx.kind !== IncrementalCacheKind.FETCH : false, ctx.isFallback);\n            isStale = revalidateAfter !== false && revalidateAfter < performance.timeOrigin + performance.now() ? true : undefined;\n        }\n        if (cacheData) {\n            entry = {\n                isStale,\n                curRevalidate,\n                revalidateAfter,\n                value: cacheData.value,\n                isFallback\n            };\n        }\n        if (!cacheData && this.prerenderManifest.notFoundRoutes.includes(cacheKey)) {\n            // for the first hit after starting the server the cache\n            // may not have a way to save notFound: true so if\n            // the prerender-manifest marks this as notFound then we\n            // return that entry and trigger a cache set to give it a\n            // chance to update in-memory entries\n            entry = {\n                isStale,\n                value: null,\n                curRevalidate,\n                revalidateAfter,\n                isFallback\n            };\n            this.set(cacheKey, entry.value, ctx);\n        }\n        return entry;\n    }\n    // populate the incremental cache with new data\n    async set(pathname, data, ctx) {\n        // Even if we otherwise disable caching for testMode or if no fetchCache is configured\n        // we still always stash results in the cacheScope if one exists. This is because this\n        // is a transient in memory cache that populates caches ahead of a dynamic render in dev mode\n        // to allow the RSC debug info to have the right environment associated to it.\n        if (this.hasDynamicIO && (data == null ? void 0 : data.kind) === CachedRouteKind.FETCH) {\n            const cacheScope = cacheScopeAsyncLocalStorage.getStore();\n            if (cacheScope) {\n                cacheScope.cache.set(pathname, data);\n            }\n        }\n        if (this.disableForTestmode || this.dev && !ctx.fetchCache) return;\n        pathname = this._getPathname(pathname, ctx.fetchCache);\n        // FetchCache has upper limit of 2MB per-entry currently\n        const itemSize = JSON.stringify(data).length;\n        if (ctx.fetchCache && // we don't show this error/warning when a custom cache handler is being used\n        // as it might not have this limit\n        !this.hasCustomCacheHandler && itemSize > 2 * 1024 * 1024) {\n            if (this.dev) {\n                throw new Error(`Failed to set Next.js data cache, items over 2MB can not be cached (${itemSize} bytes)`);\n            }\n            return;\n        }\n        try {\n            var _this_cacheHandler;\n            // Set the value for the revalidate seconds so if it changes we can\n            // update the cache with the new value.\n            if (typeof ctx.revalidate !== 'undefined' && !ctx.fetchCache) {\n                this.revalidateTimings.set(toRoute(pathname), ctx.revalidate);\n            }\n            await ((_this_cacheHandler = this.cacheHandler) == null ? void 0 : _this_cacheHandler.set(pathname, data, ctx));\n        } catch (error) {\n            console.warn('Failed to update prerender cache for', pathname, error);\n        }\n    }\n}\n\n//# sourceMappingURL=index.js.map","import { parse, tokensToRegexp } from 'next/dist/compiled/path-to-regexp';\nimport { parse as parseURL } from 'url';\nimport isError from './is-error';\n/**\n * If there is an error show our error link but still show original error or\n * a formatted one if we can\n */ function reportError({ route, parsedPath }, err) {\n    let errMatches;\n    if (isError(err) && (errMatches = err.message.match(/at (\\d{0,})/))) {\n        const position = parseInt(errMatches[1], 10);\n        console.error(`\\nError parsing \\`${route}\\` ` + `https://nextjs.org/docs/messages/invalid-route-source\\n` + `Reason: ${err.message}\\n\\n` + `  ${parsedPath}\\n` + `  ${new Array(position).fill(' ').join('')}^\\n`);\n    } else {\n        console.error(`\\nError parsing ${route} https://nextjs.org/docs/messages/invalid-route-source`, err);\n    }\n}\n/**\n * Attempts to parse a given route with `path-to-regexp` and returns an object\n * with the result. Whenever an error happens on parse, it will print an error\n * attempting to find the error position and showing a link to the docs. When\n * `handleUrl` is set to `true` it will also attempt to parse the route\n * and use the resulting pathname to parse with `path-to-regexp`.\n */ export function tryToParsePath(route, options) {\n    const result = {\n        route,\n        parsedPath: route\n    };\n    try {\n        if (options == null ? void 0 : options.handleUrl) {\n            const parsed = parseURL(route, true);\n            result.parsedPath = `${parsed.pathname}${parsed.hash || ''}`;\n        }\n        result.tokens = parse(result.parsedPath);\n        result.regexStr = tokensToRegexp(result.tokens).source;\n    } catch (err) {\n        reportError(result, err);\n        result.error = err;\n    }\n    return result;\n}\n\n//# sourceMappingURL=try-to-parse-path.js.map","import { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers';\nconst DUMMY_ORIGIN = 'http://n';\nexport function isFullStringUrl(url) {\n    return /https?:\\/\\//.test(url);\n}\nexport function parseUrl(url) {\n    let parsed = undefined;\n    try {\n        parsed = new URL(url, DUMMY_ORIGIN);\n    } catch  {}\n    return parsed;\n}\nexport function stripNextRscUnionQuery(relativeUrl) {\n    const urlInstance = new URL(relativeUrl, DUMMY_ORIGIN);\n    urlInstance.searchParams.delete(NEXT_RSC_UNION_QUERY);\n    return urlInstance.pathname + urlInstance.search;\n}\n\n//# sourceMappingURL=url.js.map","import { bold, yellow } from './picocolors';\nimport { escapeStringRegexp } from '../shared/lib/escape-regexp';\nimport { tryToParsePath } from './try-to-parse-path';\nimport { allowedStatusCodes } from './redirect-status';\nimport { isFullStringUrl } from './url';\nconst allowedHasTypes = new Set([\n    'header',\n    'cookie',\n    'query',\n    'host'\n]);\nconst namedGroupsRegex = /\\(\\?<([a-zA-Z][a-zA-Z0-9]*)>/g;\nexport function normalizeRouteRegex(regex) {\n    // clean up un-necessary escaping from regex.source which turns / into \\\\/\n    return regex.replace(/\\\\\\//g, '/');\n}\nfunction checkRedirect(route) {\n    const invalidParts = [];\n    let hadInvalidStatus = false;\n    if (route.statusCode && !allowedStatusCodes.has(route['statusCode'])) {\n        hadInvalidStatus = true;\n        invalidParts.push(`\\`statusCode\\` is not undefined or valid statusCode`);\n    }\n    if (typeof route.permanent !== 'boolean' && !route['statusCode']) {\n        invalidParts.push(`\\`permanent\\` is not set to \\`true\\` or \\`false\\``);\n    }\n    return {\n        invalidParts,\n        hadInvalidStatus\n    };\n}\nfunction checkHeader(route) {\n    const invalidParts = [];\n    if (!Array.isArray(route.headers)) {\n        invalidParts.push('`headers` field must be an array');\n    } else if (route.headers.length === 0) {\n        invalidParts.push('`headers` field cannot be empty');\n    } else {\n        for (const header of route.headers){\n            if (!header || typeof header !== 'object') {\n                invalidParts.push(\"`headers` items must be object with { key: '', value: '' }\");\n                break;\n            }\n            if (typeof header.key !== 'string') {\n                invalidParts.push('`key` in header item must be string');\n                break;\n            }\n            if (typeof header.value !== 'string') {\n                invalidParts.push('`value` in header item must be string');\n                break;\n            }\n        }\n    }\n    return invalidParts;\n}\nexport function checkCustomRoutes(routes, type) {\n    if (!Array.isArray(routes)) {\n        console.error(`Error: ${type}s must return an array, received ${typeof routes}.\\n` + `See here for more info: https://nextjs.org/docs/messages/routes-must-be-array`);\n        process.exit(1);\n    }\n    let numInvalidRoutes = 0;\n    let hadInvalidStatus = false;\n    let hadInvalidHas = false;\n    let hadInvalidMissing = false;\n    const allowedKeys = new Set([\n        'source',\n        'locale',\n        'has',\n        'missing'\n    ]);\n    if (type === 'rewrite') {\n        allowedKeys.add('basePath');\n        allowedKeys.add('destination');\n    }\n    if (type === 'redirect') {\n        allowedKeys.add('basePath');\n        allowedKeys.add('statusCode');\n        allowedKeys.add('permanent');\n        allowedKeys.add('destination');\n    }\n    if (type === 'header') {\n        allowedKeys.add('basePath');\n        allowedKeys.add('headers');\n    }\n    for (const route of routes){\n        if (!route || typeof route !== 'object') {\n            console.error(`The route ${JSON.stringify(route)} is not a valid object with \\`source\\`${type !== 'middleware' ? ` and \\`${type === 'header' ? 'headers' : 'destination'}\\`` : ''}`);\n            numInvalidRoutes++;\n            continue;\n        }\n        if (type === 'rewrite' && route.basePath === false && !(route.destination.startsWith('http://') || route.destination.startsWith('https://'))) {\n            console.error(`The route ${route.source} rewrites urls outside of the basePath. Please use a destination that starts with \\`http://\\` or \\`https://\\` https://nextjs.org/docs/messages/invalid-external-rewrite`);\n            numInvalidRoutes++;\n            continue;\n        }\n        const keys = Object.keys(route);\n        const invalidKeys = keys.filter((key)=>!allowedKeys.has(key));\n        const invalidParts = [];\n        if ('basePath' in route && typeof route.basePath !== 'undefined' && route.basePath !== false) {\n            invalidParts.push('`basePath` must be undefined or false');\n        }\n        if (typeof route.locale !== 'undefined' && route.locale !== false) {\n            invalidParts.push('`locale` must be undefined or false');\n        }\n        const checkInvalidHasMissing = (items, fieldName)=>{\n            let hadInvalidItem = false;\n            if (typeof items !== 'undefined' && !Array.isArray(items)) {\n                invalidParts.push(`\\`${fieldName}\\` must be undefined or valid has object`);\n                hadInvalidItem = true;\n            } else if (items) {\n                const invalidHasItems = [];\n                for (const hasItem of items){\n                    let invalidHasParts = [];\n                    if (!allowedHasTypes.has(hasItem.type)) {\n                        invalidHasParts.push(`invalid type \"${hasItem.type}\"`);\n                    }\n                    if (typeof hasItem.key !== 'string' && hasItem.type !== 'host') {\n                        invalidHasParts.push(`invalid key \"${hasItem.key}\"`);\n                    }\n                    if (typeof hasItem.value !== 'undefined' && typeof hasItem.value !== 'string') {\n                        invalidHasParts.push(`invalid value \"${hasItem.value}\"`);\n                    }\n                    if (typeof hasItem.value === 'undefined' && hasItem.type === 'host') {\n                        invalidHasParts.push(`value is required for \"host\" type`);\n                    }\n                    if (invalidHasParts.length > 0) {\n                        invalidHasItems.push(`${invalidHasParts.join(', ')} for ${JSON.stringify(hasItem)}`);\n                    }\n                }\n                if (invalidHasItems.length > 0) {\n                    hadInvalidItem = true;\n                    const itemStr = `item${invalidHasItems.length === 1 ? '' : 's'}`;\n                    console.error(`Invalid \\`${fieldName}\\` ${itemStr}:\\n` + invalidHasItems.join('\\n'));\n                    console.error();\n                    invalidParts.push(`invalid \\`${fieldName}\\` ${itemStr} found`);\n                }\n            }\n            return hadInvalidItem;\n        };\n        if (checkInvalidHasMissing(route.has, 'has')) {\n            hadInvalidHas = true;\n        }\n        if (checkInvalidHasMissing(route.missing, 'missing')) {\n            hadInvalidMissing = true;\n        }\n        if (!route.source) {\n            invalidParts.push('`source` is missing');\n        } else if (typeof route.source !== 'string') {\n            invalidParts.push('`source` is not a string');\n        } else if (!route.source.startsWith('/')) {\n            invalidParts.push('`source` does not start with /');\n        }\n        if (type === 'header') {\n            invalidParts.push(...checkHeader(route));\n        } else if (type !== 'middleware') {\n            let _route = route;\n            if (!_route.destination) {\n                invalidParts.push('`destination` is missing');\n            } else if (typeof _route.destination !== 'string') {\n                invalidParts.push('`destination` is not a string');\n            } else if (type === 'rewrite' && !_route.destination.match(/^(\\/|https:\\/\\/|http:\\/\\/)/)) {\n                invalidParts.push('`destination` does not start with `/`, `http://`, or `https://`');\n            }\n        }\n        if (type === 'redirect') {\n            const result = checkRedirect(route);\n            hadInvalidStatus = hadInvalidStatus || result.hadInvalidStatus;\n            invalidParts.push(...result.invalidParts);\n        }\n        let sourceTokens;\n        if (typeof route.source === 'string' && route.source.startsWith('/')) {\n            // only show parse error if we didn't already show error\n            // for not being a string\n            const { tokens, error, regexStr } = tryToParsePath(route.source);\n            if (error) {\n                invalidParts.push('`source` parse failed');\n            }\n            if (regexStr && regexStr.length > 4096) {\n                invalidParts.push('`source` exceeds max built length of 4096');\n            }\n            sourceTokens = tokens;\n        }\n        const hasSegments = new Set();\n        if (route.has) {\n            for (const hasItem of route.has){\n                if (!hasItem.value && hasItem.key) {\n                    hasSegments.add(hasItem.key);\n                }\n                if (hasItem.value) {\n                    for (const match of hasItem.value.matchAll(namedGroupsRegex)){\n                        if (match[1]) {\n                            hasSegments.add(match[1]);\n                        }\n                    }\n                    if (hasItem.type === 'host') {\n                        hasSegments.add('host');\n                    }\n                }\n            }\n        }\n        // make sure no unnamed patterns are attempted to be used in the\n        // destination as this can cause confusion and is not allowed\n        if (typeof route.destination === 'string') {\n            if (route.destination.startsWith('/') && Array.isArray(sourceTokens)) {\n                const unnamedInDest = new Set();\n                for (const token of sourceTokens){\n                    if (typeof token === 'object' && typeof token.name === 'number') {\n                        const unnamedIndex = new RegExp(`:${token.name}(?!\\\\d)`);\n                        if (route.destination.match(unnamedIndex)) {\n                            unnamedInDest.add(`:${token.name}`);\n                        }\n                    }\n                }\n                if (unnamedInDest.size > 0) {\n                    invalidParts.push(`\\`destination\\` has unnamed params ${[\n                        ...unnamedInDest\n                    ].join(', ')}`);\n                } else {\n                    const { tokens: destTokens, regexStr: destRegexStr, error: destinationParseFailed } = tryToParsePath(route.destination, {\n                        handleUrl: true\n                    });\n                    if (destRegexStr && destRegexStr.length > 4096) {\n                        invalidParts.push('`destination` exceeds max built length of 4096');\n                    }\n                    if (destinationParseFailed) {\n                        invalidParts.push('`destination` parse failed');\n                    } else {\n                        const sourceSegments = new Set(sourceTokens.map((item)=>typeof item === 'object' && item.name).filter(Boolean));\n                        const invalidDestSegments = new Set();\n                        for (const token of destTokens){\n                            if (typeof token === 'object' && !sourceSegments.has(token.name) && !hasSegments.has(token.name)) {\n                                invalidDestSegments.add(token.name);\n                            }\n                        }\n                        if (invalidDestSegments.size) {\n                            invalidParts.push(`\\`destination\\` has segments not in \\`source\\` or \\`has\\` (${[\n                                ...invalidDestSegments\n                            ].join(', ')})`);\n                        }\n                    }\n                }\n            }\n        }\n        const hasInvalidKeys = invalidKeys.length > 0;\n        const hasInvalidParts = invalidParts.length > 0;\n        if (hasInvalidKeys || hasInvalidParts) {\n            console.error(`${invalidParts.join(', ')}${invalidKeys.length ? (hasInvalidParts ? ',' : '') + ` invalid field${invalidKeys.length === 1 ? '' : 's'}: ` + invalidKeys.join(',') : ''} for route ${JSON.stringify(route)}`);\n            console.error();\n            numInvalidRoutes++;\n        }\n    }\n    if (numInvalidRoutes > 0) {\n        if (hadInvalidStatus) {\n            console.error(`\\nValid redirect statusCode values are ${[\n                ...allowedStatusCodes\n            ].join(', ')}`);\n        }\n        if (hadInvalidHas) {\n            console.error(`\\nValid \\`has\\` object shape is ${JSON.stringify({\n                type: [\n                    ...allowedHasTypes\n                ].join(', '),\n                key: 'the key to check for',\n                value: 'undefined or a value string to match against'\n            }, null, 2)}`);\n        }\n        if (hadInvalidMissing) {\n            console.error(`\\nValid \\`missing\\` object shape is ${JSON.stringify({\n                type: [\n                    ...allowedHasTypes\n                ].join(', '),\n                key: 'the key to check for',\n                value: 'undefined or a value string to match against'\n            }, null, 2)}`);\n        }\n        console.error();\n        console.error(`Error: Invalid ${type}${numInvalidRoutes === 1 ? '' : 's'} found`);\n        process.exit(1);\n    }\n}\nfunction processRoutes(routes, config, type) {\n    const _routes = routes;\n    const newRoutes = [];\n    const defaultLocales = [];\n    if (config.i18n && type === 'redirect') {\n        var _config_i18n;\n        for (const item of ((_config_i18n = config.i18n) == null ? void 0 : _config_i18n.domains) || []){\n            defaultLocales.push({\n                locale: item.defaultLocale,\n                base: `http${item.http ? '' : 's'}://${item.domain}`\n            });\n        }\n        defaultLocales.push({\n            locale: config.i18n.defaultLocale,\n            base: ''\n        });\n    }\n    for (const r of _routes){\n        var _r_destination;\n        const srcBasePath = config.basePath && r.basePath !== false ? config.basePath : '';\n        const isExternal = !((_r_destination = r.destination) == null ? void 0 : _r_destination.startsWith('/'));\n        const destBasePath = srcBasePath && !isExternal ? srcBasePath : '';\n        if (config.i18n && r.locale !== false) {\n            var _r_destination1;\n            if (!isExternal) {\n                defaultLocales.forEach((item)=>{\n                    let destination;\n                    if (r.destination) {\n                        destination = item.base ? `${item.base}${destBasePath}${r.destination}` : `${destBasePath}${r.destination}`;\n                    }\n                    newRoutes.push({\n                        ...r,\n                        destination,\n                        source: `${srcBasePath}/${item.locale}${r.source === '/' && !config.trailingSlash ? '' : r.source}`\n                    });\n                });\n            }\n            r.source = `/:nextInternalLocale(${config.i18n.locales.map((locale)=>escapeStringRegexp(locale)).join('|')})${r.source === '/' && !config.trailingSlash ? '' : r.source}`;\n            if (r.destination && ((_r_destination1 = r.destination) == null ? void 0 : _r_destination1.startsWith('/'))) {\n                r.destination = `/:nextInternalLocale${r.destination === '/' && !config.trailingSlash ? '' : r.destination}`;\n            }\n        }\n        r.source = `${srcBasePath}${r.source === '/' && srcBasePath ? '' : r.source}`;\n        if (r.destination) {\n            r.destination = `${destBasePath}${r.destination === '/' && destBasePath ? '' : r.destination}`;\n        }\n        newRoutes.push(r);\n    }\n    return newRoutes;\n}\nasync function loadRedirects(config) {\n    if (typeof config.redirects !== 'function') {\n        return [];\n    }\n    let redirects = await config.redirects();\n    // check before we process the routes and after to ensure\n    // they are still valid\n    checkCustomRoutes(redirects, 'redirect');\n    // save original redirects before transforms\n    if (Array.isArray(redirects)) {\n        config._originalRedirects = redirects.map((r)=>({\n                ...r\n            }));\n    }\n    redirects = processRoutes(redirects, config, 'redirect');\n    checkCustomRoutes(redirects, 'redirect');\n    return redirects;\n}\nasync function loadRewrites(config) {\n    // If assetPrefix is set, add a rewrite for `/${assetPrefix}/_next/*`\n    // requests so that they are handled in any of dev, start, or deploy\n    // automatically without the user having to configure this.\n    // If the assetPrefix is an absolute URL, we can't add an automatic rewrite.\n    let maybeAssetPrefixRewrite = [];\n    if (config.assetPrefix && !isFullStringUrl(config.assetPrefix)) {\n        const assetPrefix = config.assetPrefix.startsWith('/') ? config.assetPrefix : `/${config.assetPrefix}`;\n        const basePath = config.basePath || '';\n        // If these are the same, then this would result in an infinite rewrite.\n        if (assetPrefix !== basePath) {\n            maybeAssetPrefixRewrite.push({\n                source: `${assetPrefix}/_next/:path+`,\n                destination: `${basePath}/_next/:path+`\n            });\n        }\n    }\n    if (typeof config.rewrites !== 'function') {\n        return {\n            beforeFiles: [\n                ...maybeAssetPrefixRewrite\n            ],\n            afterFiles: [],\n            fallback: []\n        };\n    }\n    const _rewrites = await config.rewrites();\n    let beforeFiles = [];\n    let afterFiles = [];\n    let fallback = [];\n    if (!Array.isArray(_rewrites) && typeof _rewrites === 'object' && Object.keys(_rewrites).every((key)=>key === 'beforeFiles' || key === 'afterFiles' || key === 'fallback')) {\n        beforeFiles = _rewrites.beforeFiles || [];\n        afterFiles = _rewrites.afterFiles || [];\n        fallback = _rewrites.fallback || [];\n    } else {\n        afterFiles = _rewrites;\n    }\n    // check before we process the routes and after to ensure\n    // they are still valid\n    checkCustomRoutes(beforeFiles, 'rewrite');\n    checkCustomRoutes(afterFiles, 'rewrite');\n    checkCustomRoutes(fallback, 'rewrite');\n    // save original rewrites before transforms\n    config._originalRewrites = {\n        beforeFiles: beforeFiles.map((r)=>({\n                ...r\n            })),\n        afterFiles: afterFiles.map((r)=>({\n                ...r\n            })),\n        fallback: fallback.map((r)=>({\n                ...r\n            }))\n    };\n    beforeFiles = [\n        ...maybeAssetPrefixRewrite,\n        ...processRoutes(beforeFiles, config, 'rewrite')\n    ];\n    afterFiles = processRoutes(afterFiles, config, 'rewrite');\n    fallback = processRoutes(fallback, config, 'rewrite');\n    checkCustomRoutes(beforeFiles, 'rewrite');\n    checkCustomRoutes(afterFiles, 'rewrite');\n    checkCustomRoutes(fallback, 'rewrite');\n    return {\n        beforeFiles,\n        afterFiles,\n        fallback\n    };\n}\nasync function loadHeaders(config) {\n    if (typeof config.headers !== 'function') {\n        return [];\n    }\n    let headers = await config.headers();\n    // check before we process the routes and after to ensure\n    // they are still valid\n    checkCustomRoutes(headers, 'header');\n    headers = processRoutes(headers, config, 'header');\n    checkCustomRoutes(headers, 'header');\n    return headers;\n}\nexport default async function loadCustomRoutes(config) {\n    const [headers, rewrites, redirects] = await Promise.all([\n        loadHeaders(config),\n        loadRewrites(config),\n        loadRedirects(config)\n    ]);\n    const totalRewrites = rewrites.beforeFiles.length + rewrites.afterFiles.length + rewrites.fallback.length;\n    const totalRoutes = headers.length + redirects.length + totalRewrites;\n    if (totalRoutes > 1000) {\n        console.warn(bold(yellow(`Warning: `)) + `total number of custom routes exceeds 1000, this can reduce performance. Route counts:\\n` + `headers: ${headers.length}\\n` + `rewrites: ${totalRewrites}\\n` + `redirects: ${redirects.length}\\n` + `See more info: https://nextjs.org/docs/messages/max-custom-routes-reached`);\n    }\n    if (!config.skipTrailingSlashRedirect) {\n        if (config.trailingSlash) {\n            redirects.unshift({\n                source: '/:file((?!\\\\.well-known(?:/.*)?)(?:[^/]+/)*[^/]+\\\\.\\\\w+)/',\n                destination: '/:file',\n                permanent: true,\n                locale: config.i18n ? false : undefined,\n                internal: true,\n                // don't run this redirect for _next/data requests\n                missing: [\n                    {\n                        type: 'header',\n                        key: 'x-nextjs-data'\n                    }\n                ]\n            }, {\n                source: '/:notfile((?!\\\\.well-known(?:/.*)?)(?:[^/]+/)*[^/\\\\.]+)',\n                destination: '/:notfile/',\n                permanent: true,\n                locale: config.i18n ? false : undefined,\n                internal: true\n            });\n            if (config.basePath) {\n                redirects.unshift({\n                    source: config.basePath,\n                    destination: config.basePath + '/',\n                    permanent: true,\n                    basePath: false,\n                    locale: config.i18n ? false : undefined,\n                    internal: true\n                });\n            }\n        } else {\n            redirects.unshift({\n                source: '/:path+/',\n                destination: '/:path+',\n                permanent: true,\n                locale: config.i18n ? false : undefined,\n                internal: true\n            });\n            if (config.basePath) {\n                redirects.unshift({\n                    source: config.basePath + '/',\n                    destination: config.basePath,\n                    permanent: true,\n                    basePath: false,\n                    locale: config.i18n ? false : undefined,\n                    internal: true\n                });\n            }\n        }\n    }\n    return {\n        headers,\n        rewrites,\n        redirects\n    };\n}\n\n//# sourceMappingURL=load-custom-routes.js.map","import { pathToRegexp } from 'next/dist/compiled/path-to-regexp';\nimport { normalizeRouteRegex } from './load-custom-routes';\nimport { getRedirectStatus, modifyRouteRegex } from './redirect-status';\nexport function buildCustomRoute(type, route, restrictedRedirectPaths) {\n    const compiled = pathToRegexp(route.source, [], {\n        strict: true,\n        sensitive: false,\n        delimiter: '/'\n    });\n    let source = compiled.source;\n    if (!route.internal) {\n        source = modifyRouteRegex(source, type === 'redirect' ? restrictedRedirectPaths : undefined);\n    }\n    const regex = normalizeRouteRegex(source);\n    if (type !== 'redirect') {\n        return {\n            ...route,\n            regex\n        };\n    }\n    return {\n        ...route,\n        statusCode: getRedirectStatus(route),\n        permanent: undefined,\n        regex\n    };\n}\n\n//# sourceMappingURL=build-custom-route.js.map","export * from '../shared/lib/constants';\n\n//# sourceMappingURL=constants.js.map","import { byteLength } from './api-utils/web';\nimport BaseServer, { NoFallbackError } from './base-server';\nimport { generateETag } from './lib/etag';\nimport { addRequestMeta } from './request-meta';\nimport WebResponseCache from './response-cache/web';\nimport { isAPIRoute } from '../lib/is-api-route';\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash';\nimport { isDynamicRoute } from '../shared/lib/router/utils';\nimport { interpolateDynamicPath, normalizeVercelUrl, normalizeDynamicRouteParams } from './server-utils';\nimport { getNamedRouteRegex } from '../shared/lib/router/utils/route-regex';\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher';\nimport { IncrementalCache } from './lib/incremental-cache';\nimport { buildCustomRoute } from '../lib/build-custom-route';\nimport { UNDERSCORE_NOT_FOUND_ROUTE } from '../api/constants';\nimport { getEdgeInstrumentationModule } from './web/globals';\nimport { getEdgePreviewProps } from './web/get-edge-preview-props';\nexport default class NextWebServer extends BaseServer {\n    constructor(options){\n        super(options);\n        this.handleCatchallRenderRequest = async (req, res, parsedUrl)=>{\n            let { pathname, query } = parsedUrl;\n            if (!pathname) {\n                throw new Error('pathname is undefined');\n            }\n            // interpolate query information into page for dynamic route\n            // so that rewritten paths are handled properly\n            const normalizedPage = this.serverOptions.webServerConfig.pathname;\n            if (pathname !== normalizedPage) {\n                pathname = normalizedPage;\n                if (isDynamicRoute(pathname)) {\n                    const routeRegex = getNamedRouteRegex(pathname, false);\n                    const dynamicRouteMatcher = getRouteMatcher(routeRegex);\n                    const defaultRouteMatches = dynamicRouteMatcher(pathname);\n                    const paramsResult = normalizeDynamicRouteParams(query, false, routeRegex, defaultRouteMatches);\n                    const normalizedParams = paramsResult.hasValidParams ? paramsResult.params : query;\n                    pathname = interpolateDynamicPath(pathname, normalizedParams, routeRegex);\n                    normalizeVercelUrl(req, true, Object.keys(routeRegex.routeKeys), true, routeRegex);\n                }\n            }\n            // next.js core assumes page path without trailing slash\n            pathname = removeTrailingSlash(pathname);\n            if (this.i18nProvider) {\n                const { detectedLocale } = await this.i18nProvider.analyze(pathname);\n                if (detectedLocale) {\n                    parsedUrl.query.__nextLocale = detectedLocale;\n                }\n            }\n            const bubbleNoFallback = !!query._nextBubbleNoFallback;\n            if (isAPIRoute(pathname)) {\n                delete query._nextBubbleNoFallback;\n            }\n            try {\n                await this.render(req, res, pathname, query, parsedUrl, true);\n                return true;\n            } catch (err) {\n                if (err instanceof NoFallbackError && bubbleNoFallback) {\n                    return false;\n                }\n                throw err;\n            }\n        };\n        // Extend `renderOpts`.\n        Object.assign(this.renderOpts, options.webServerConfig.extendRenderOpts);\n    }\n    async getIncrementalCache({ requestHeaders }) {\n        const dev = !!this.renderOpts.dev;\n        // incremental-cache is request specific\n        // although can have shared caches in module scope\n        // per-cache handler\n        return new IncrementalCache({\n            dev,\n            requestHeaders,\n            dynamicIO: Boolean(this.nextConfig.experimental.dynamicIO),\n            requestProtocol: 'https',\n            allowedRevalidateHeaderKeys: this.nextConfig.experimental.allowedRevalidateHeaderKeys,\n            minimalMode: this.minimalMode,\n            fetchCache: true,\n            fetchCacheKeyPrefix: this.nextConfig.experimental.fetchCacheKeyPrefix,\n            maxMemoryCacheSize: this.nextConfig.cacheMaxMemorySize,\n            flushToDisk: false,\n            CurCacheHandler: this.serverOptions.webServerConfig.incrementalCacheHandler,\n            getPrerenderManifest: ()=>this.getPrerenderManifest()\n        });\n    }\n    getResponseCache() {\n        return new WebResponseCache(this.minimalMode);\n    }\n    async hasPage(page) {\n        return page === this.serverOptions.webServerConfig.page;\n    }\n    getBuildId() {\n        return this.serverOptions.webServerConfig.extendRenderOpts.buildId;\n    }\n    getEnabledDirectories() {\n        return {\n            app: this.serverOptions.webServerConfig.pagesType === 'app',\n            pages: this.serverOptions.webServerConfig.pagesType === 'pages'\n        };\n    }\n    getPagesManifest() {\n        return {\n            // keep same theme but server path doesn't need to be accurate\n            [this.serverOptions.webServerConfig.pathname]: `server${this.serverOptions.webServerConfig.page}.js`\n        };\n    }\n    getAppPathsManifest() {\n        const page = this.serverOptions.webServerConfig.page;\n        return {\n            [this.serverOptions.webServerConfig.page]: `app${page}.js`\n        };\n    }\n    attachRequestMeta(req, parsedUrl) {\n        addRequestMeta(req, 'initQuery', {\n            ...parsedUrl.query\n        });\n    }\n    getPrerenderManifest() {\n        return {\n            version: -1,\n            routes: {},\n            dynamicRoutes: {},\n            notFoundRoutes: [],\n            preview: getEdgePreviewProps()\n        };\n    }\n    getNextFontManifest() {\n        return this.serverOptions.webServerConfig.extendRenderOpts.nextFontManifest;\n    }\n    renderHTML(req, res, pathname, query, renderOpts) {\n        const { renderToHTML } = this.serverOptions.webServerConfig;\n        if (!renderToHTML) {\n            throw new Error('Invariant: routeModule should be configured when rendering pages');\n        }\n        // For edge runtime if the pathname hit as /_not-found entrypoint,\n        // override the pathname to /404 for rendering\n        if (pathname === UNDERSCORE_NOT_FOUND_ROUTE) {\n            pathname = '/404';\n        }\n        return renderToHTML(req, res, pathname, query, // Edge runtime does not support ISR/PPR, so we don't need to pass in\n        // the unknown params.\n        null, Object.assign(renderOpts, {\n            disableOptimizedLoading: true,\n            runtime: 'experimental-edge'\n        }));\n    }\n    async sendRenderResult(_req, res, options) {\n        res.setHeader('X-Edge-Runtime', '1');\n        // Add necessary headers.\n        // @TODO: Share the isomorphic logic with server/send-payload.ts.\n        if (options.poweredByHeader && options.type === 'html') {\n            res.setHeader('X-Powered-By', 'Next.js');\n        }\n        if (!res.getHeader('Content-Type')) {\n            res.setHeader('Content-Type', options.result.contentType ? options.result.contentType : options.type === 'json' ? 'application/json' : 'text/html; charset=utf-8');\n        }\n        let promise;\n        if (options.result.isDynamic) {\n            promise = options.result.pipeTo(res.transformStream.writable);\n        } else {\n            const payload = options.result.toUnchunkedString();\n            res.setHeader('Content-Length', String(byteLength(payload)));\n            if (options.generateEtags) {\n                res.setHeader('ETag', generateETag(payload));\n            }\n            res.body(payload);\n        }\n        res.send();\n        // If we have a promise, wait for it to resolve.\n        if (promise) await promise;\n    }\n    async findPageComponents({ page, query, params, url: _url }) {\n        const result = await this.serverOptions.webServerConfig.loadComponent(page);\n        if (!result) return null;\n        return {\n            query: {\n                ...query || {},\n                ...params || {}\n            },\n            components: result\n        };\n    }\n    // Below are methods that are not implemented by the web server as they are\n    // handled by the upstream proxy (edge runtime or node server).\n    async runApi() {\n        // This web server does not need to handle API requests.\n        return true;\n    }\n    async handleApiRequest() {\n        // Edge API requests are handled separately in minimal mode.\n        return false;\n    }\n    loadEnvConfig() {\n    // The web server does not need to load the env config. This is done by the\n    // runtime already.\n    }\n    getPublicDir() {\n        // Public files are not handled by the web server.\n        return '';\n    }\n    getHasStaticDir() {\n        return false;\n    }\n    getFontManifest() {\n        return undefined;\n    }\n    handleCompression() {\n    // For the web server layer, compression is automatically handled by the\n    // upstream proxy (edge runtime or node server) and we can simply skip here.\n    }\n    async handleUpgrade() {\n    // The web server does not support web sockets.\n    }\n    async getFallbackErrorComponents(_url) {\n        // The web server does not need to handle fallback errors in production.\n        return null;\n    }\n    getRoutesManifest() {\n        // The web server does not need to handle rewrite rules. This is done by the\n        // upstream proxy (edge runtime or node server).\n        return undefined;\n    }\n    getMiddleware() {\n        // The web server does not need to handle middleware. This is done by the\n        // upstream proxy (edge runtime or node server).\n        return undefined;\n    }\n    getFilesystemPaths() {\n        return new Set();\n    }\n    getinterceptionRoutePatterns() {\n        var _this_serverOptions_webServerConfig_interceptionRouteRewrites;\n        return ((_this_serverOptions_webServerConfig_interceptionRouteRewrites = this.serverOptions.webServerConfig.interceptionRouteRewrites) == null ? void 0 : _this_serverOptions_webServerConfig_interceptionRouteRewrites.map((rewrite)=>new RegExp(buildCustomRoute('rewrite', rewrite).regex))) ?? [];\n    }\n    async loadInstrumentationModule() {\n        return await getEdgeInstrumentationModule();\n    }\n    async instrumentationOnRequestError(...args) {\n        await super.instrumentationOnRequestError(...args);\n        const err = args[0];\n        if (process.env.NODE_ENV !== 'production' && typeof __next_log_error__ === 'function') {\n            __next_log_error__(err);\n        } else {\n            console.error(err);\n        }\n    }\n}\n\n//# sourceMappingURL=web-server.js.map","import { RedirectStatusCode } from '../../client/components/redirect-status-code';\nimport { getCookieParser } from '../api-utils/get-cookie-parser';\nexport class BaseNextRequest {\n    constructor(method, url, body){\n        this.method = method;\n        this.url = url;\n        this.body = body;\n    }\n    // Utils implemented using the abstract methods above\n    get cookies() {\n        if (this._cookies) return this._cookies;\n        return this._cookies = getCookieParser(this.headers)();\n    }\n}\nexport class BaseNextResponse {\n    constructor(destination){\n        this.destination = destination;\n    }\n    // Utils implemented using the abstract methods above\n    redirect(destination, statusCode) {\n        this.setHeader('Location', destination);\n        this.statusCode = statusCode;\n        // Since IE11 doesn't support the 308 header add backwards\n        // compatibility using refresh header\n        if (statusCode === RedirectStatusCode.PermanentRedirect) {\n            this.setHeader('Refresh', `0;url=${destination}`);\n        }\n        return this;\n    }\n}\n\n//# sourceMappingURL=index.js.map","import { toNodeOutgoingHttpHeaders } from '../web/utils';\nimport { BaseNextRequest, BaseNextResponse } from './index';\nimport { DetachedPromise } from '../../lib/detached-promise';\nimport { CloseController, trackBodyConsumed } from '../web/web-on-close';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nexport class WebNextRequest extends BaseNextRequest {\n    constructor(request){\n        const url = new URL(request.url);\n        super(request.method, url.href.slice(url.origin.length), request.clone().body);\n        this.request = request;\n        this.fetchMetrics = request.fetchMetrics;\n        this.headers = {};\n        for (const [name, value] of request.headers.entries()){\n            this.headers[name] = value;\n        }\n    }\n    async parseBody(_limit) {\n        throw new Error('parseBody is not implemented in the web runtime');\n    }\n}\nexport class WebNextResponse extends BaseNextResponse {\n    constructor(transformStream = new TransformStream(), trackOnClose = false){\n        super(transformStream.writable);\n        this.transformStream = transformStream;\n        this.trackOnClose = trackOnClose;\n        this.headers = new Headers();\n        this.textBody = undefined;\n        this.closeController = new CloseController();\n        this.sendPromise = new DetachedPromise();\n        this._sent = false;\n    }\n    setHeader(name, value) {\n        this.headers.delete(name);\n        for (const val of Array.isArray(value) ? value : [\n            value\n        ]){\n            this.headers.append(name, val);\n        }\n        return this;\n    }\n    removeHeader(name) {\n        this.headers.delete(name);\n        return this;\n    }\n    getHeaderValues(name) {\n        var _this_getHeader;\n        // https://developer.mozilla.org/docs/Web/API/Headers/get#example\n        return (_this_getHeader = this.getHeader(name)) == null ? void 0 : _this_getHeader.split(',').map((v)=>v.trimStart());\n    }\n    getHeader(name) {\n        return this.headers.get(name) ?? undefined;\n    }\n    getHeaders() {\n        return toNodeOutgoingHttpHeaders(this.headers);\n    }\n    hasHeader(name) {\n        return this.headers.has(name);\n    }\n    appendHeader(name, value) {\n        this.headers.append(name, value);\n        return this;\n    }\n    body(value) {\n        this.textBody = value;\n        return this;\n    }\n    send() {\n        this.sendPromise.resolve();\n        this._sent = true;\n    }\n    get sent() {\n        return this._sent;\n    }\n    async toResponse() {\n        // If we haven't called `send` yet, wait for it to be called.\n        if (!this.sent) await this.sendPromise.promise;\n        const body = this.textBody ?? this.transformStream.readable;\n        let bodyInit = body;\n        const canAddListenersLater = typeof bodyInit !== 'string';\n        const shouldTrackBody = this.trackOnClose && (canAddListenersLater ? true : this.closeController.listeners > 0);\n        if (shouldTrackBody) {\n            bodyInit = trackBodyConsumed(body, ()=>{\n                this.closeController.dispatchClose();\n            });\n        }\n        return new Response(bodyInit, {\n            headers: this.headers,\n            status: this.statusCode,\n            statusText: this.statusMessage\n        });\n    }\n    onClose(callback) {\n        if (!this.trackOnClose) {\n            throw new InvariantError('Cannot call onClose on a WebNextResponse initialized with `trackOnClose = false`');\n        }\n        if (this.closeController.isClosed) {\n            throw new InvariantError('Cannot call onClose on a WebNextResponse that is already closed');\n        }\n        return this.closeController.onClose(callback);\n    }\n}\n\n//# sourceMappingURL=web.js.map","// An internal module to expose the \"waitUntil\" API to Edge SSR and Edge Route Handler functions.\n// This is highly experimental and subject to change.\n// We still need a global key to bypass Webpack's layering of modules.\nconst GLOBAL_KEY = Symbol.for('__next_internal_waitUntil__');\nconst state = // @ts-ignore\nglobalThis[GLOBAL_KEY] || // @ts-ignore\n(globalThis[GLOBAL_KEY] = {\n    waitUntilCounter: 0,\n    waitUntilResolve: undefined,\n    waitUntilPromise: null\n});\n// No matter how many concurrent requests are being handled, we want to make sure\n// that the final promise is only resolved once all of the waitUntil promises have\n// settled.\nfunction resolveOnePromise() {\n    state.waitUntilCounter--;\n    if (state.waitUntilCounter === 0) {\n        state.waitUntilResolve();\n        state.waitUntilPromise = null;\n    }\n}\nexport function internal_getCurrentFunctionWaitUntil() {\n    return state.waitUntilPromise;\n}\nexport function internal_runWithWaitUntil(fn) {\n    const result = fn();\n    if (result && typeof result === 'object' && 'then' in result && 'finally' in result && typeof result.then === 'function' && typeof result.finally === 'function') {\n        if (!state.waitUntilCounter) {\n            // Create the promise for the next batch of waitUntil calls.\n            state.waitUntilPromise = new Promise((resolve)=>{\n                state.waitUntilResolve = resolve;\n            });\n        }\n        state.waitUntilCounter++;\n        return result.finally(()=>{\n            resolveOnePromise();\n        });\n    }\n    return result;\n}\n\n//# sourceMappingURL=internal-edge-wait-until.js.map","import WebServer from '../../../../server/web-server';\nimport { WebNextRequest, WebNextResponse } from '../../../../server/base-http/web';\nimport { SERVER_RUNTIME } from '../../../../lib/constants';\nimport { normalizeAppPath } from '../../../../shared/lib/router/utils/app-paths';\nimport { internal_getCurrentFunctionWaitUntil } from '../../../../server/web/internal-edge-wait-until';\nexport function getRender({ dev, page, appMod, pageMod, errorMod, error500Mod, pagesType, Document, buildManifest, reactLoadableManifest, interceptionRouteRewrites, renderToHTML, clientReferenceManifest, subresourceIntegrityManifest, serverActionsManifest, serverActions, config, buildId, nextFontManifest, incrementalCacheHandler }) {\n    const isAppPath = pagesType === 'app';\n    const baseLoadComponentResult = {\n        dev,\n        buildManifest,\n        reactLoadableManifest,\n        subresourceIntegrityManifest,\n        Document,\n        App: appMod == null ? void 0 : appMod.default,\n        clientReferenceManifest\n    };\n    const server = new WebServer({\n        dev,\n        conf: config,\n        minimalMode: true,\n        webServerConfig: {\n            page,\n            pathname: isAppPath ? normalizeAppPath(page) : page,\n            pagesType,\n            interceptionRouteRewrites,\n            extendRenderOpts: {\n                buildId,\n                runtime: SERVER_RUNTIME.experimentalEdge,\n                supportsDynamicResponse: true,\n                disableOptimizedLoading: true,\n                serverActionsManifest,\n                serverActions,\n                nextFontManifest\n            },\n            renderToHTML,\n            incrementalCacheHandler,\n            loadComponent: async (inputPage)=>{\n                if (inputPage === page) {\n                    return {\n                        ...baseLoadComponentResult,\n                        Component: pageMod.default,\n                        pageConfig: pageMod.config || {},\n                        getStaticProps: pageMod.getStaticProps,\n                        getServerSideProps: pageMod.getServerSideProps,\n                        getStaticPaths: pageMod.getStaticPaths,\n                        ComponentMod: pageMod,\n                        isAppPath: !!pageMod.__next_app__,\n                        page: inputPage,\n                        routeModule: pageMod.routeModule\n                    };\n                }\n                // If there is a custom 500 page, we need to handle it separately.\n                if (inputPage === '/500' && error500Mod) {\n                    return {\n                        ...baseLoadComponentResult,\n                        Component: error500Mod.default,\n                        pageConfig: error500Mod.config || {},\n                        getStaticProps: error500Mod.getStaticProps,\n                        getServerSideProps: error500Mod.getServerSideProps,\n                        getStaticPaths: error500Mod.getStaticPaths,\n                        ComponentMod: error500Mod,\n                        page: inputPage,\n                        routeModule: error500Mod.routeModule\n                    };\n                }\n                if (inputPage === '/_error') {\n                    return {\n                        ...baseLoadComponentResult,\n                        Component: errorMod.default,\n                        pageConfig: errorMod.config || {},\n                        getStaticProps: errorMod.getStaticProps,\n                        getServerSideProps: errorMod.getServerSideProps,\n                        getStaticPaths: errorMod.getStaticPaths,\n                        ComponentMod: errorMod,\n                        page: inputPage,\n                        routeModule: errorMod.routeModule\n                    };\n                }\n                return null;\n            }\n        }\n    });\n    const handler = server.getRequestHandler();\n    return async function render(request, event) {\n        const extendedReq = new WebNextRequest(request);\n        const extendedRes = new WebNextResponse(undefined, // tracking onClose adds overhead, so only do it if `experimental.after` is on.\n        !!process.env.__NEXT_AFTER);\n        handler(extendedReq, extendedRes);\n        const result = await extendedRes.toResponse();\n        request.fetchMetrics = extendedReq.fetchMetrics;\n        if (event == null ? void 0 : event.waitUntil) {\n            // TODO(after):\n            // remove `internal_runWithWaitUntil` and the `internal-edge-wait-until` module\n            // when consumers switch to `unstable_after`.\n            const waitUntilPromise = internal_getCurrentFunctionWaitUntil();\n            if (waitUntilPromise) {\n                event.waitUntil(waitUntilPromise);\n            }\n        }\n        return result;\n    };\n}\n\n//# sourceMappingURL=render.js.map","export var RouteKind;\n(function(RouteKind) {\n    /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */ RouteKind[\"PAGES\"] = \"PAGES\";\n    /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */ RouteKind[\"PAGES_API\"] = \"PAGES_API\";\n    /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */ RouteKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */ RouteKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */ RouteKind[\"IMAGE\"] = \"IMAGE\";\n})(RouteKind || (RouteKind = {}));\n\n//# sourceMappingURL=route-kind.js.map","export class ReflectAdapter {\n    static get(target, prop, receiver) {\n        const value = Reflect.get(target, prop, receiver);\n        if (typeof value === 'function') {\n            return value.bind(target);\n        }\n        return value;\n    }\n    static set(target, prop, value, receiver) {\n        return Reflect.set(target, prop, value, receiver);\n    }\n    static has(target, prop) {\n        return Reflect.has(target, prop);\n    }\n    static deleteProperty(target, prop) {\n        return Reflect.deleteProperty(target, prop);\n    }\n}\n\n//# sourceMappingURL=reflect.js.map","const DYNAMIC_ERROR_CODE = 'DYNAMIC_SERVER_USAGE'\n\nexport class DynamicServerError extends Error {\n  digest: typeof DYNAMIC_ERROR_CODE = DYNAMIC_ERROR_CODE\n\n  constructor(public readonly description: string) {\n    super(`Dynamic server usage: ${description}`)\n  }\n}\n\nexport function isDynamicServerError(err: unknown): err is DynamicServerError {\n  if (\n    typeof err !== 'object' ||\n    err === null ||\n    !('digest' in err) ||\n    typeof err.digest !== 'string'\n  ) {\n    return false\n  }\n\n  return err.digest === DYNAMIC_ERROR_CODE\n}\n","const NEXT_STATIC_GEN_BAILOUT = 'NEXT_STATIC_GEN_BAILOUT'\n\nexport class StaticGenBailoutError extends Error {\n  public readonly code = NEXT_STATIC_GEN_BAILOUT\n}\n\nexport function isStaticGenBailoutError(\n  error: unknown\n): error is StaticGenBailoutError {\n  if (typeof error !== 'object' || error === null || !('code' in error)) {\n    return false\n  }\n\n  return error.code === NEXT_STATIC_GEN_BAILOUT\n}\n","export const METADATA_BOUNDARY_NAME = '__next_metadata_boundary__';\nexport const VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__';\nexport const OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__';\n\n//# sourceMappingURL=metadata-constants.js.map","/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */ // Once postpone is in stable we should switch to importing the postpone export directly\nimport React from 'react';\nimport { DynamicServerError } from '../../client/components/hooks-server-context';\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout';\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { METADATA_BOUNDARY_NAME, VIEWPORT_BOUNDARY_NAME, OUTLET_BOUNDARY_NAME } from '../../lib/metadata/metadata-constants';\nconst hasPostpone = typeof React.unstable_postpone === 'function';\nexport function createDynamicTrackingState(isDebugDynamicAccesses) {\n    return {\n        isDebugDynamicAccesses,\n        dynamicAccesses: [],\n        syncDynamicExpression: undefined,\n        syncDynamicErrorWithStack: null\n    };\n}\nexport function createDynamicValidationState() {\n    return {\n        hasSuspendedDynamic: false,\n        hasDynamicMetadata: false,\n        hasDynamicViewport: false,\n        hasSyncDynamicErrors: false,\n        dynamicErrors: []\n    };\n}\nexport function getFirstDynamicReason(trackingState) {\n    var _trackingState_dynamicAccesses_;\n    return (_trackingState_dynamicAccesses_ = trackingState.dynamicAccesses[0]) == null ? void 0 : _trackingState_dynamicAccesses_.expression;\n}\n/**\n * This function communicates that the current scope should be treated as dynamic.\n *\n * In most cases this function is a no-op but if called during\n * a PPR prerender it will postpone the current sub-tree and calling\n * it during a normal prerender will cause the entire prerender to abort\n */ export function markCurrentScopeAsDynamic(store, workUnitStore, expression) {\n    if (workUnitStore) {\n        if (workUnitStore.type === 'cache' || workUnitStore.type === 'unstable-cache') {\n            // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n            // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n            // forbidden inside a cache scope.\n            return;\n        }\n    }\n    // If we're forcing dynamic rendering or we're forcing static rendering, we\n    // don't need to do anything here because the entire page is already dynamic\n    // or it's static and it should not throw or postpone here.\n    if (store.forceDynamic || store.forceStatic) return;\n    if (store.dynamicShouldError) {\n        throw new StaticGenBailoutError(`Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`);\n    }\n    if (workUnitStore) {\n        if (workUnitStore.type === 'prerender-ppr') {\n            postponeWithTracking(store.route, expression, workUnitStore.dynamicTracking);\n        } else if (workUnitStore.type === 'prerender-legacy') {\n            workUnitStore.revalidate = 0;\n            // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n            const err = new DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`);\n            store.dynamicUsageDescription = expression;\n            store.dynamicUsageStack = err.stack;\n            throw err;\n        } else if (process.env.NODE_ENV === 'development' && workUnitStore && workUnitStore.type === 'request') {\n            workUnitStore.usedDynamic = true;\n        }\n    }\n}\n/**\n * This function communicates that some dynamic path parameter was read. This\n * differs from the more general `trackDynamicDataAccessed` in that it is will\n * not error when `dynamic = \"error\"` is set.\n *\n * @param store The static generation store\n * @param expression The expression that was accessed dynamically\n */ export function trackFallbackParamAccessed(store, expression) {\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    if (!prerenderStore || prerenderStore.type !== 'prerender-ppr') return;\n    postponeWithTracking(store.route, expression, prerenderStore.dynamicTracking);\n}\n/**\n * This function is meant to be used when prerendering without dynamicIO or PPR.\n * When called during a build it will cause Next.js to consider the route as dynamic.\n *\n * @internal\n */ export function throwToInterruptStaticGeneration(expression, store, prerenderStore) {\n    // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n    const err = new DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`);\n    prerenderStore.revalidate = 0;\n    store.dynamicUsageDescription = expression;\n    store.dynamicUsageStack = err.stack;\n    throw err;\n}\n/**\n * This function should be used to track whether something dynamic happened even when\n * we are in a dynamic render. This is useful for Dev where all renders are dynamic but\n * we still track whether dynamic APIs were accessed for helpful messaging\n *\n * @internal\n */ export function trackDynamicDataInDynamicRender(_store, workUnitStore) {\n    if (workUnitStore) {\n        if (workUnitStore.type === 'cache' || workUnitStore.type === 'unstable-cache') {\n            // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n            // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n            // forbidden inside a cache scope.\n            return;\n        }\n        if (workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-legacy') {\n            workUnitStore.revalidate = 0;\n        }\n        if (process.env.NODE_ENV === 'development' && workUnitStore.type === 'request') {\n            workUnitStore.usedDynamic = true;\n        }\n    }\n}\n// Despite it's name we don't actually abort unless we have a controller to call abort on\n// There are times when we let a prerender run long to discover caches where we want the semantics\n// of tracking dynamic access without terminating the prerender early\nfunction abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore) {\n    const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`;\n    const error = createPrerenderInterruptedError(reason);\n    if (prerenderStore.controller) {\n        prerenderStore.controller.abort(error);\n    }\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            // When we aren't debugging, we don't need to create another error for the\n            // stack trace.\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n}\nexport function abortOnSynchronousPlatformIOAccess(route, expression, errorWithStack, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        if (dynamicTracking.syncDynamicErrorWithStack === null) {\n            dynamicTracking.syncDynamicExpression = expression;\n            dynamicTracking.syncDynamicErrorWithStack = errorWithStack;\n        }\n    }\n    return abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore);\n}\nexport function trackSynchronousPlatformIOAccessInDev(requestStore) {\n    // We don't actually have a controller to abort but we do the semantic equivalent by\n    // advancing the request store out of prerender mode\n    requestStore.prerenderPhase = false;\n}\n/**\n * use this function when prerendering with dynamicIO. If we are doing a\n * prospective prerender we don't actually abort because we want to discover\n * all caches for the shell. If this is the actual prerender we do abort.\n *\n * This function accepts a prerenderStore but the caller should ensure we're\n * actually running in dynamicIO mode.\n *\n * @internal\n */ export function abortAndThrowOnSynchronousRequestDataAccess(route, expression, errorWithStack, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        if (dynamicTracking.syncDynamicErrorWithStack === null) {\n            dynamicTracking.syncDynamicExpression = expression;\n            dynamicTracking.syncDynamicErrorWithStack = errorWithStack;\n            if (prerenderStore.validating === true) {\n                // We always log Request Access in dev at the point of calling the function\n                // So we mark the dynamic validation as not requiring it to be printed\n                dynamicTracking.syncDynamicLogged = true;\n            }\n        }\n    }\n    abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore);\n    throw createPrerenderInterruptedError(`Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`);\n}\n// For now these implementations are the same so we just reexport\nexport const trackSynchronousRequestDataAccessInDev = trackSynchronousPlatformIOAccessInDev;\nexport function Postpone({ reason, route }) {\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    const dynamicTracking = prerenderStore && prerenderStore.type === 'prerender-ppr' ? prerenderStore.dynamicTracking : null;\n    postponeWithTracking(route, reason, dynamicTracking);\n}\nexport function postponeWithTracking(route, expression, dynamicTracking) {\n    assertPostpone();\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            // When we aren't debugging, we don't need to create another error for the\n            // stack trace.\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n    React.unstable_postpone(createPostponeReason(route, expression));\n}\nfunction createPostponeReason(route, expression) {\n    return `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` + `React throws this special object to indicate where. It should not be caught by ` + `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`;\n}\nexport function isDynamicPostpone(err) {\n    if (typeof err === 'object' && err !== null && typeof err.message === 'string') {\n        return isDynamicPostponeReason(err.message);\n    }\n    return false;\n}\nfunction isDynamicPostponeReason(reason) {\n    return reason.includes('needs to bail out of prerendering at this point because it used') && reason.includes('Learn more: https://nextjs.org/docs/messages/ppr-caught-error');\n}\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n    throw new Error('Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js');\n}\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED';\nfunction createPrerenderInterruptedError(message) {\n    const error = new Error(message);\n    error.digest = NEXT_PRERENDER_INTERRUPTED;\n    return error;\n}\nexport function isPrerenderInterruptedError(error) {\n    return typeof error === 'object' && error !== null && error.digest === NEXT_PRERENDER_INTERRUPTED && 'name' in error && 'message' in error && error instanceof Error;\n}\nexport function accessedDynamicData(dynamicAccesses) {\n    return dynamicAccesses.length > 0;\n}\nexport function consumeDynamicAccess(serverDynamic, clientDynamic) {\n    // We mutate because we only call this once we are no longer writing\n    // to the dynamicTrackingState and it's more efficient than creating a new\n    // array.\n    serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses);\n    return serverDynamic.dynamicAccesses;\n}\nexport function formatDynamicAPIAccesses(dynamicAccesses) {\n    return dynamicAccesses.filter((access)=>typeof access.stack === 'string' && access.stack.length > 0).map(({ expression, stack })=>{\n        stack = stack.split('\\n')// Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4).filter((line)=>{\n            // Exclude Next.js internals from the stack trace.\n            if (line.includes('node_modules/next/')) {\n                return false;\n            }\n            // Exclude anonymous functions from the stack trace.\n            if (line.includes(' (<anonymous>)')) {\n                return false;\n            }\n            // Exclude Node.js internals from the stack trace.\n            if (line.includes(' (node:')) {\n                return false;\n            }\n            return true;\n        }).join('\\n');\n        return `Dynamic API Usage Debug - ${expression}:\\n${stack}`;\n    });\n}\nfunction assertPostpone() {\n    if (!hasPostpone) {\n        throw new Error(`Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`);\n    }\n}\n/**\n * This is a bit of a hack to allow us to abort a render using a Postpone instance instead of an Error which changes React's\n * abort semantics slightly.\n */ export function createPostponedAbortSignal(reason) {\n    assertPostpone();\n    const controller = new AbortController();\n    // We get our hands on a postpone instance by calling postpone and catching the throw\n    try {\n        React.unstable_postpone(reason);\n    } catch (x) {\n        controller.abort(x);\n    }\n    return controller.signal;\n}\nexport function annotateDynamicAccess(expression, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n}\nexport function useDynamicRouteParams(expression) {\n    if (typeof window === 'undefined') {\n        const workStore = workAsyncStorage.getStore();\n        if (workStore && workStore.isStaticGeneration && workStore.fallbackRouteParams && workStore.fallbackRouteParams.size > 0) {\n            // There are fallback route params, we should track these as dynamic\n            // accesses.\n            const workUnitStore = workUnitAsyncStorage.getStore();\n            if (workUnitStore) {\n                // We're prerendering with dynamicIO or PPR or both\n                if (workUnitStore.type === 'prerender') {\n                    // We are in a prerender with dynamicIO semantics\n                    // We are going to hang here and never resolve. This will cause the currently\n                    // rendering component to effectively be a dynamic hole\n                    React.use(makeHangingPromise(workUnitStore.renderSignal, expression));\n                } else if (workUnitStore.type === 'prerender-ppr') {\n                    // We're prerendering with PPR\n                    postponeWithTracking(workStore.route, expression, workUnitStore.dynamicTracking);\n                } else if (workUnitStore.type === 'prerender-legacy') {\n                    throwToInterruptStaticGeneration(expression, workStore, workUnitStore);\n                }\n            }\n        }\n    }\n}\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/;\nconst hasMetadataRegex = new RegExp(`\\\\n\\\\s+at ${METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`);\nconst hasViewportRegex = new RegExp(`\\\\n\\\\s+at ${VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`);\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`);\nexport function trackAllowedDynamicAccess(route, componentStack, dynamicValidation, serverDynamic, clientDynamic) {\n    if (hasOutletRegex.test(componentStack)) {\n        // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n        return;\n    } else if (hasMetadataRegex.test(componentStack)) {\n        dynamicValidation.hasDynamicMetadata = true;\n        return;\n    } else if (hasViewportRegex.test(componentStack)) {\n        dynamicValidation.hasDynamicViewport = true;\n        return;\n    } else if (hasSuspenseRegex.test(componentStack)) {\n        dynamicValidation.hasSuspendedDynamic = true;\n        return;\n    } else if (serverDynamic.syncDynamicErrorWithStack || clientDynamic.syncDynamicErrorWithStack) {\n        dynamicValidation.hasSyncDynamicErrors = true;\n        return;\n    } else {\n        const message = `Route \"${route}\": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a \"use cache\" above it. We don't have the exact line number added to error messages yet but you can see which component in the stack below. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense`;\n        const error = createErrorWithComponentStack(message, componentStack);\n        dynamicValidation.dynamicErrors.push(error);\n        return;\n    }\n}\nfunction createErrorWithComponentStack(message, componentStack) {\n    const error = new Error(message);\n    error.stack = 'Error: ' + message + componentStack;\n    return error;\n}\nexport function throwIfDisallowedDynamic(route, dynamicValidation, serverDynamic, clientDynamic) {\n    let syncError;\n    let syncExpression;\n    let syncLogged;\n    if (serverDynamic.syncDynamicErrorWithStack) {\n        syncError = serverDynamic.syncDynamicErrorWithStack;\n        syncExpression = serverDynamic.syncDynamicExpression;\n        syncLogged = serverDynamic.syncDynamicLogged === true;\n    } else if (clientDynamic.syncDynamicErrorWithStack) {\n        syncError = clientDynamic.syncDynamicErrorWithStack;\n        syncExpression = clientDynamic.syncDynamicExpression;\n        syncLogged = clientDynamic.syncDynamicLogged === true;\n    } else {\n        syncError = null;\n        syncExpression = undefined;\n        syncLogged = false;\n    }\n    if (dynamicValidation.hasSyncDynamicErrors && syncError) {\n        if (!syncLogged) {\n            // In dev we already log errors about sync dynamic access. But during builds we need to ensure\n            // the offending sync error is logged before we exit the build\n            console.error(syncError);\n        }\n        // The actual error should have been logged when the sync access ocurred\n        throw new StaticGenBailoutError();\n    }\n    const dynamicErrors = dynamicValidation.dynamicErrors;\n    if (dynamicErrors.length) {\n        for(let i = 0; i < dynamicErrors.length; i++){\n            console.error(dynamicErrors[i]);\n        }\n        throw new StaticGenBailoutError();\n    }\n    if (!dynamicValidation.hasSuspendedDynamic) {\n        if (dynamicValidation.hasDynamicMetadata) {\n            if (syncError) {\n                console.error(syncError);\n                throw new StaticGenBailoutError(`Route \"${route}\" has a \\`generateMetadata\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`);\n            }\n            throw new StaticGenBailoutError(`Route \"${route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateMetadata\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`);\n        } else if (dynamicValidation.hasDynamicViewport) {\n            if (syncError) {\n                console.error(syncError);\n                throw new StaticGenBailoutError(`Route \"${route}\" has a \\`generateViewport\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`);\n            }\n            throw new StaticGenBailoutError(`Route \"${route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateViewport\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`);\n        }\n    }\n}\n\n//# sourceMappingURL=dynamic-rendering.js.map","export class InvariantError extends Error {\n  constructor(message: string, options?: ErrorOptions) {\n    super(\n      `Invariant: ${message.endsWith('.') ? message : message + '.'} This is a bug in Next.js.`,\n      options\n    )\n    this.name = 'InvariantError'\n  }\n}\n","/**\n * This function constructs a promise that will never resolve. This is primarily\n * useful for dynamicIO where we use promise resolution timing to determine which\n * parts of a render can be included in a prerender.\n *\n * @internal\n */ export function makeHangingPromise(signal, expression) {\n    const hangingPromise = new Promise((_, reject)=>{\n        signal.addEventListener('abort', ()=>{\n            reject(new Error(`During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`unstable_after\\`, or similar functions you may observe this error and you should handle it in that context.`));\n        }, {\n            once: true\n        });\n    });\n    // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n    // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n    // your own promise out of it you'll need to ensure you handle the error when it rejects.\n    hangingPromise.catch(ignoreReject);\n    return hangingPromise;\n}\nfunction ignoreReject() {}\n\n//# sourceMappingURL=dynamic-rendering-utils.js.map","import * as React from 'react';\nconst errorRef = {\n    current: null\n};\n// React.cache is currently only available in canary/experimental React channels.\nconst cache = typeof React.cache === 'function' ? React.cache : (fn)=>fn;\n// When Dynamic IO is enabled, we record these as errors so that they\n// are captured by the dev overlay as it's more critical to fix these\n// when enabled.\nconst logErrorOrWarn = process.env.__NEXT_DYNAMIC_IO ? console.error : console.warn;\n// We don't want to dedupe across requests.\n// The developer might've just attempted to fix the warning so we should warn again if it still happens.\nconst flushCurrentErrorIfNew = cache(// eslint-disable-next-line @typescript-eslint/no-unused-vars -- cache key\n(key)=>{\n    try {\n        logErrorOrWarn(errorRef.current);\n    } finally{\n        errorRef.current = null;\n    }\n});\n/**\n * Creates a function that logs an error message that is deduped by the userland\n * callsite.\n * This requires no indirection between the call of this function and the userland\n * callsite i.e. there's only a single library frame above this.\n * Do not use on the Client where sourcemaps and ignore listing might be enabled.\n * Only use that for warnings need a fix independent of the callstack.\n *\n * @param getMessage\n * @returns\n */ export function createDedupedByCallsiteServerErrorLoggerDev(getMessage) {\n    return function logDedupedError(...args) {\n        const message = getMessage(...args);\n        if (process.env.NODE_ENV !== 'production') {\n            var _stack;\n            const callStackFrames = (_stack = new Error().stack) == null ? void 0 : _stack.split('\\n');\n            if (callStackFrames === undefined || callStackFrames.length < 4) {\n                logErrorOrWarn(message);\n            } else {\n                // Error:\n                //   logDedupedError\n                //   asyncApiBeingAccessedSynchronously\n                //   <userland callsite>\n                // TODO: This breaks if sourcemaps with ignore lists are enabled.\n                const key = callStackFrames[4];\n                errorRef.current = message;\n                flushCurrentErrorIfNew(key);\n            }\n        } else {\n            logErrorOrWarn(message);\n        }\n    };\n}\n\n//# sourceMappingURL=create-deduped-by-callsite-server-error-logger.js.map","import { StaticGenBailoutError } from '../../client/components/static-generation-bailout';\n// This regex will have fast negatives meaning valid identifiers may not pass\n// this test. However this is only used during static generation to provide hints\n// about why a page bailed out of some or all prerendering and we can use bracket notation\n// for example while `ಠ_ಠ` is a valid identifier it's ok to print `searchParams['ಠ_ಠ']`\n// even if this would have been fine too `searchParams.ಠ_ಠ`\nconst isDefinitelyAValidIdentifier = /^[A-Za-z_$][A-Za-z0-9_$]*$/;\nexport function describeStringPropertyAccess(target, prop) {\n    if (isDefinitelyAValidIdentifier.test(prop)) {\n        return `\\`${target}.${prop}\\``;\n    }\n    return `\\`${target}[${JSON.stringify(prop)}]\\``;\n}\nexport function describeHasCheckingStringProperty(target, prop) {\n    const stringifiedProp = JSON.stringify(prop);\n    return `\\`Reflect.has(${target}, ${stringifiedProp})\\`, \\`${stringifiedProp} in ${target}\\`, or similar`;\n}\nexport function throwWithStaticGenerationBailoutError(route, expression) {\n    throw new StaticGenBailoutError(`Route ${route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`);\n}\nexport function throwWithStaticGenerationBailoutErrorWithDynamicError(route, expression) {\n    throw new StaticGenBailoutError(`Route ${route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`);\n}\nexport const wellKnownProperties = new Set([\n    'hasOwnProperty',\n    'isPrototypeOf',\n    'propertyIsEnumerable',\n    'toString',\n    'valueOf',\n    'toLocaleString',\n    // Promise prototype\n    // fallthrough\n    'then',\n    'catch',\n    'finally',\n    // React Promise extension\n    // fallthrough\n    'status',\n    // React introspection\n    'displayName',\n    // Common tested properties\n    // fallthrough\n    'toJSON',\n    '$$typeof',\n    '__esModule'\n]);\n\n//# sourceMappingURL=utils.js.map","import { ReflectAdapter } from '../web/spec-extension/adapters/reflect';\nimport { abortAndThrowOnSynchronousRequestDataAccess, throwToInterruptStaticGeneration, postponeWithTracking, trackDynamicDataInDynamicRender, annotateDynamicAccess, trackSynchronousRequestDataAccessInDev } from '../app-render/dynamic-rendering';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger';\nimport { describeStringPropertyAccess, describeHasCheckingStringProperty, throwWithStaticGenerationBailoutErrorWithDynamicError, wellKnownProperties } from './utils';\nimport { scheduleImmediate } from '../../lib/scheduler';\nexport function createSearchParamsFromClient(underlyingSearchParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderSearchParams(workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderSearchParams(underlyingSearchParams, workStore);\n}\n// generateMetadata always runs in RSC context so it is equivalent to a Server Page Component\nexport const createServerSearchParamsForMetadata = createServerSearchParamsForServerPage;\nexport function createServerSearchParamsForServerPage(underlyingSearchParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderSearchParams(workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderSearchParams(underlyingSearchParams, workStore);\n}\nexport function createPrerenderSearchParamsForClientPage(workStore) {\n    if (workStore.forceStatic) {\n        // When using forceStatic we override all other logic and always just return an empty\n        // dictionary object.\n        return Promise.resolve({});\n    }\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    if (prerenderStore && prerenderStore.type === 'prerender') {\n        // dynamicIO Prerender\n        // We're prerendering in a mode that aborts (dynamicIO) and should stall\n        // the promise to ensure the RSC side is considered dynamic\n        return makeHangingPromise(prerenderStore.renderSignal, '`searchParams`');\n    }\n    // We're prerendering in a mode that does not aborts. We resolve the promise without\n    // any tracking because we're just transporting a value from server to client where the tracking\n    // will be applied.\n    return Promise.resolve({});\n}\nfunction createPrerenderSearchParams(workStore, prerenderStore) {\n    if (workStore.forceStatic) {\n        // When using forceStatic we override all other logic and always just return an empty\n        // dictionary object.\n        return Promise.resolve({});\n    }\n    if (prerenderStore.type === 'prerender') {\n        // We are in a dynamicIO (PPR or otherwise) prerender\n        return makeAbortingExoticSearchParams(workStore.route, prerenderStore);\n    }\n    // The remaining cases are prerender-ppr and prerender-legacy\n    // We are in a legacy static generation and need to interrupt the prerender\n    // when search params are accessed.\n    return makeErroringExoticSearchParams(workStore, prerenderStore);\n}\nfunction createRenderSearchParams(underlyingSearchParams, workStore) {\n    if (workStore.forceStatic) {\n        // When using forceStatic we override all other logic and always just return an empty\n        // dictionary object.\n        return Promise.resolve({});\n    } else {\n        if (process.env.NODE_ENV === 'development' && !workStore.isPrefetchRequest) {\n            return makeDynamicallyTrackedExoticSearchParamsWithDevWarnings(underlyingSearchParams, workStore);\n        } else {\n            return makeUntrackedExoticSearchParams(underlyingSearchParams, workStore);\n        }\n    }\n}\nconst CachedSearchParams = new WeakMap();\nfunction makeAbortingExoticSearchParams(route, prerenderStore) {\n    const cachedSearchParams = CachedSearchParams.get(prerenderStore);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const promise = makeHangingPromise(prerenderStore.renderSignal, '`searchParams`');\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (Object.hasOwn(promise, prop)) {\n                // The promise has this property directly. we must return it.\n                // We know it isn't a dynamic access because it can only be something\n                // that was previously written to the promise and thus not an underlying searchParam value\n                return ReflectAdapter.get(target, prop, receiver);\n            }\n            switch(prop){\n                case 'then':\n                    {\n                        const expression = '`await searchParams`, `searchParams.then`, or similar';\n                        annotateDynamicAccess(expression, prerenderStore);\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n                case 'status':\n                    {\n                        const expression = '`use(searchParams)`, `searchParams.status`, or similar';\n                        annotateDynamicAccess(expression, prerenderStore);\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n                // Object prototype\n                case 'hasOwnProperty':\n                case 'isPrototypeOf':\n                case 'propertyIsEnumerable':\n                case 'toString':\n                case 'valueOf':\n                case 'toLocaleString':\n                // Promise prototype\n                // fallthrough\n                case 'catch':\n                case 'finally':\n                // Common tested properties\n                // fallthrough\n                case 'toJSON':\n                case '$$typeof':\n                case '__esModule':\n                    {\n                        // These properties cannot be shadowed because they need to be the\n                        // true underlying value for Promises to work correctly at runtime\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n                default:\n                    {\n                        if (typeof prop === 'string') {\n                            const expression = describeStringPropertyAccess('searchParams', prop);\n                            const error = createSearchAccessError(route, expression);\n                            abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n                        }\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n            }\n        },\n        has (target, prop) {\n            // We don't expect key checking to be used except for testing the existence of\n            // searchParams so we make all has tests trigger dynamic. this means that `promise.then`\n            // can resolve to the then function on the Promise prototype but 'then' in promise will assume\n            // you are testing whether the searchParams has a 'then' property.\n            if (typeof prop === 'string') {\n                const expression = describeHasCheckingStringProperty('searchParams', prop);\n                const error = createSearchAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n            return ReflectAdapter.has(target, prop);\n        },\n        ownKeys () {\n            const expression = '`{...searchParams}`, `Object.keys(searchParams)`, or similar';\n            const error = createSearchAccessError(route, expression);\n            abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n        }\n    });\n    CachedSearchParams.set(prerenderStore, proxiedPromise);\n    return proxiedPromise;\n}\nfunction makeErroringExoticSearchParams(workStore, prerenderStore) {\n    const cachedSearchParams = CachedSearchParams.get(workStore);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const underlyingSearchParams = {};\n    // For search params we don't construct a ReactPromise because we want to interrupt\n    // rendering on any property access that was not set from outside and so we only want\n    // to have properties like value and status if React sets them.\n    const promise = Promise.resolve(underlyingSearchParams);\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (Object.hasOwn(promise, prop)) {\n                // The promise has this property directly. we must return it.\n                // We know it isn't a dynamic access because it can only be something\n                // that was previously written to the promise and thus not an underlying searchParam value\n                return ReflectAdapter.get(target, prop, receiver);\n            }\n            switch(prop){\n                // Object prototype\n                case 'hasOwnProperty':\n                case 'isPrototypeOf':\n                case 'propertyIsEnumerable':\n                case 'toString':\n                case 'valueOf':\n                case 'toLocaleString':\n                // Promise prototype\n                // fallthrough\n                case 'catch':\n                case 'finally':\n                // Common tested properties\n                // fallthrough\n                case 'toJSON':\n                case '$$typeof':\n                case '__esModule':\n                    {\n                        // These properties cannot be shadowed because they need to be the\n                        // true underlying value for Promises to work correctly at runtime\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n                case 'then':\n                    {\n                        const expression = '`await searchParams`, `searchParams.then`, or similar';\n                        if (workStore.dynamicShouldError) {\n                            throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n                        } else if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no dynamicIO)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                        return;\n                    }\n                case 'status':\n                    {\n                        const expression = '`use(searchParams)`, `searchParams.status`, or similar';\n                        if (workStore.dynamicShouldError) {\n                            throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n                        } else if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no dynamicIO)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                        return;\n                    }\n                default:\n                    {\n                        if (typeof prop === 'string') {\n                            const expression = describeStringPropertyAccess('searchParams', prop);\n                            if (workStore.dynamicShouldError) {\n                                throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n                            } else if (prerenderStore.type === 'prerender-ppr') {\n                                // PPR Prerender (no dynamicIO)\n                                postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                            } else {\n                                // Legacy Prerender\n                                throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                            }\n                        }\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n            }\n        },\n        has (target, prop) {\n            // We don't expect key checking to be used except for testing the existence of\n            // searchParams so we make all has tests trigger dynamic. this means that `promise.then`\n            // can resolve to the then function on the Promise prototype but 'then' in promise will assume\n            // you are testing whether the searchParams has a 'then' property.\n            if (typeof prop === 'string') {\n                const expression = describeHasCheckingStringProperty('searchParams', prop);\n                if (workStore.dynamicShouldError) {\n                    throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n                } else if (prerenderStore.type === 'prerender-ppr') {\n                    // PPR Prerender (no dynamicIO)\n                    postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                } else {\n                    // Legacy Prerender\n                    throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                }\n                return false;\n            }\n            return ReflectAdapter.has(target, prop);\n        },\n        ownKeys () {\n            const expression = '`{...searchParams}`, `Object.keys(searchParams)`, or similar';\n            if (workStore.dynamicShouldError) {\n                throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n            } else if (prerenderStore.type === 'prerender-ppr') {\n                // PPR Prerender (no dynamicIO)\n                postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n            } else {\n                // Legacy Prerender\n                throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n            }\n        }\n    });\n    CachedSearchParams.set(workStore, proxiedPromise);\n    return proxiedPromise;\n}\nfunction makeUntrackedExoticSearchParams(underlyingSearchParams, store) {\n    const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    // We don't use makeResolvedReactPromise here because searchParams\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(underlyingSearchParams);\n    CachedSearchParams.set(underlyingSearchParams, promise);\n    Object.keys(underlyingSearchParams).forEach((prop)=>{\n        switch(prop){\n            // Object prototype\n            case 'hasOwnProperty':\n            case 'isPrototypeOf':\n            case 'propertyIsEnumerable':\n            case 'toString':\n            case 'valueOf':\n            case 'toLocaleString':\n            // Promise prototype\n            // fallthrough\n            case 'then':\n            case 'catch':\n            case 'finally':\n            // React Promise extension\n            // fallthrough\n            case 'status':\n            // Common tested properties\n            // fallthrough\n            case 'toJSON':\n            case '$$typeof':\n            case '__esModule':\n                {\n                    break;\n                }\n            default:\n                {\n                    Object.defineProperty(promise, prop, {\n                        get () {\n                            const workUnitStore = workUnitAsyncStorage.getStore();\n                            trackDynamicDataInDynamicRender(store, workUnitStore);\n                            return underlyingSearchParams[prop];\n                        },\n                        set (value) {\n                            Object.defineProperty(promise, prop, {\n                                value,\n                                writable: true,\n                                enumerable: true\n                            });\n                        },\n                        enumerable: true,\n                        configurable: true\n                    });\n                }\n        }\n    });\n    return promise;\n}\nfunction makeDynamicallyTrackedExoticSearchParamsWithDevWarnings(underlyingSearchParams, store) {\n    const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const proxiedProperties = new Set();\n    const unproxiedProperties = [];\n    // We have an unfortunate sequence of events that requires this initialization logic. We want to instrument the underlying\n    // searchParams object to detect if you are accessing values in dev. This is used for warnings and for things like the static prerender\n    // indicator. However when we pass this proxy to our Promise.resolve() below the VM checks if the resolved value is a promise by looking\n    // at the `.then` property. To our dynamic tracking logic this is indistinguishable from a `then` searchParam and so we would normally trigger\n    // dynamic tracking. However we know that this .then is not real dynamic access, it's just how thenables resolve in sequence. So we introduce\n    // this initialization concept so we omit the dynamic check until after we've constructed our resolved promise.\n    let promiseInitialized = false;\n    const proxiedUnderlying = new Proxy(underlyingSearchParams, {\n        get (target, prop, receiver) {\n            if (typeof prop === 'string' && promiseInitialized) {\n                if (store.dynamicShouldError) {\n                    const expression = describeStringPropertyAccess('searchParams', prop);\n                    throwWithStaticGenerationBailoutErrorWithDynamicError(store.route, expression);\n                }\n                const workUnitStore = workUnitAsyncStorage.getStore();\n                trackDynamicDataInDynamicRender(store, workUnitStore);\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        has (target, prop) {\n            if (typeof prop === 'string') {\n                if (store.dynamicShouldError) {\n                    const expression = describeHasCheckingStringProperty('searchParams', prop);\n                    throwWithStaticGenerationBailoutErrorWithDynamicError(store.route, expression);\n                }\n            }\n            return Reflect.has(target, prop);\n        },\n        ownKeys (target) {\n            if (store.dynamicShouldError) {\n                const expression = '`{...searchParams}`, `Object.keys(searchParams)`, or similar';\n                throwWithStaticGenerationBailoutErrorWithDynamicError(store.route, expression);\n            }\n            return Reflect.ownKeys(target);\n        }\n    });\n    // We don't use makeResolvedReactPromise here because searchParams\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = new Promise((resolve)=>scheduleImmediate(()=>resolve(underlyingSearchParams)));\n    promise.then(()=>{\n        promiseInitialized = true;\n    });\n    Object.keys(underlyingSearchParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n            // These properties cannot be shadowed because they need to be the\n            // true underlying value for Promises to work correctly at runtime\n            unproxiedProperties.push(prop);\n        } else {\n            proxiedProperties.add(prop);\n            Object.defineProperty(promise, prop, {\n                get () {\n                    return proxiedUnderlying[prop];\n                },\n                set (newValue) {\n                    Object.defineProperty(promise, prop, {\n                        value: newValue,\n                        writable: true,\n                        enumerable: true\n                    });\n                },\n                enumerable: true,\n                configurable: true\n            });\n        }\n    });\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (prop === 'then' && store.dynamicShouldError) {\n                const expression = '`searchParams.then`';\n                throwWithStaticGenerationBailoutErrorWithDynamicError(store.route, expression);\n            }\n            if (typeof prop === 'string') {\n                if (!wellKnownProperties.has(prop) && (proxiedProperties.has(prop) || // We are accessing a property that doesn't exist on the promise nor\n                // the underlying searchParams.\n                Reflect.has(target, prop) === false)) {\n                    const expression = describeStringPropertyAccess('searchParams', prop);\n                    syncIODev(store.route, expression);\n                }\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        set (target, prop, value, receiver) {\n            if (typeof prop === 'string') {\n                proxiedProperties.delete(prop);\n            }\n            return Reflect.set(target, prop, value, receiver);\n        },\n        has (target, prop) {\n            if (typeof prop === 'string') {\n                if (!wellKnownProperties.has(prop) && (proxiedProperties.has(prop) || // We are accessing a property that doesn't exist on the promise nor\n                // the underlying searchParams.\n                Reflect.has(target, prop) === false)) {\n                    const expression = describeHasCheckingStringProperty('searchParams', prop);\n                    syncIODev(store.route, expression);\n                }\n            }\n            return Reflect.has(target, prop);\n        },\n        ownKeys (target) {\n            const expression = '`Object.keys(searchParams)` or similar';\n            syncIODev(store.route, expression, unproxiedProperties);\n            return Reflect.ownKeys(target);\n        }\n    });\n    CachedSearchParams.set(underlyingSearchParams, proxiedPromise);\n    return proxiedPromise;\n}\nfunction syncIODev(route, expression, missingProperties) {\n    // In all cases we warn normally\n    if (missingProperties && missingProperties.length > 0) {\n        warnForIncompleteEnumeration(route, expression, missingProperties);\n    } else {\n        warnForSyncAccess(route, expression);\n    }\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore && workUnitStore.type === 'request' && workUnitStore.prerenderPhase === true) {\n        // When we're rendering dynamically in dev we need to advance out of the\n        // Prerender environment when we read Request data synchronously\n        const requestStore = workUnitStore;\n        trackSynchronousRequestDataAccessInDev(requestStore);\n    }\n}\nconst noop = ()=>{};\nconst warnForSyncAccess = process.env.__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS ? noop : createDedupedByCallsiteServerErrorLoggerDev(createSearchAccessError);\nconst warnForIncompleteEnumeration = process.env.__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS ? noop : createDedupedByCallsiteServerErrorLoggerDev(createIncompleteEnumerationError);\nfunction createSearchAccessError(route, expression) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return new Error(`${prefix}used ${expression}. ` + `\\`searchParams\\` should be awaited before using its properties. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`);\n}\nfunction createIncompleteEnumerationError(route, expression, missingProperties) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return new Error(`${prefix}used ${expression}. ` + `\\`searchParams\\` should be awaited before using its properties. ` + `The following properties were not available through enumeration ` + `because they conflict with builtin or well-known property names: ` + `${describeListOfPropertyNames(missingProperties)}. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`);\n}\nfunction describeListOfPropertyNames(properties) {\n    switch(properties.length){\n        case 0:\n            throw new InvariantError('Expected describeListOfPropertyNames to be called with a non-empty list of strings.');\n        case 1:\n            return `\\`${properties[0]}\\``;\n        case 2:\n            return `\\`${properties[0]}\\` and \\`${properties[1]}\\``;\n        default:\n            {\n                let description = '';\n                for(let i = 0; i < properties.length - 1; i++){\n                    description += `\\`${properties[i]}\\`, `;\n                }\n                description += `, and \\`${properties[properties.length - 1]}\\``;\n                return description;\n            }\n    }\n}\n\n//# sourceMappingURL=search-params.js.map","import { ReflectAdapter } from '../web/spec-extension/adapters/reflect';\nimport { abortAndThrowOnSynchronousRequestDataAccess, throwToInterruptStaticGeneration, postponeWithTracking, trackSynchronousRequestDataAccessInDev } from '../app-render/dynamic-rendering';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { describeStringPropertyAccess, wellKnownProperties } from './utils';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger';\nimport { scheduleImmediate } from '../../lib/scheduler';\nexport function createParamsFromClient(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderParams(underlyingParams, workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderParams(underlyingParams, workStore);\n}\nexport const createServerParamsForMetadata = createServerParamsForServerSegment;\n// routes always runs in RSC context so it is equivalent to a Server Page Component\nexport function createServerParamsForRoute(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderParams(underlyingParams, workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderParams(underlyingParams, workStore);\n}\nexport function createServerParamsForServerSegment(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderParams(underlyingParams, workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderParams(underlyingParams, workStore);\n}\nexport function createPrerenderParamsForClientSegment(underlyingParams, workStore) {\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    if (prerenderStore && prerenderStore.type === 'prerender') {\n        const fallbackParams = workStore.fallbackRouteParams;\n        if (fallbackParams) {\n            for(let key in underlyingParams){\n                if (fallbackParams.has(key)) {\n                    // This params object has one of more fallback params so we need to consider\n                    // the awaiting of this params object \"dynamic\". Since we are in dynamicIO mode\n                    // we encode this as a promise that never resolves\n                    return makeHangingPromise(prerenderStore.renderSignal, '`params`');\n                }\n            }\n        }\n    }\n    // We're prerendering in a mode that does not abort. We resolve the promise without\n    // any tracking because we're just transporting a value from server to client where the tracking\n    // will be applied.\n    return Promise.resolve(underlyingParams);\n}\nfunction createPrerenderParams(underlyingParams, workStore, prerenderStore) {\n    const fallbackParams = workStore.fallbackRouteParams;\n    if (fallbackParams) {\n        let hasSomeFallbackParams = false;\n        for(const key in underlyingParams){\n            if (fallbackParams.has(key)) {\n                hasSomeFallbackParams = true;\n                break;\n            }\n        }\n        if (hasSomeFallbackParams) {\n            // params need to be treated as dynamic because we have at least one fallback param\n            if (prerenderStore.type === 'prerender') {\n                // We are in a dynamicIO (PPR or otherwise) prerender\n                return makeAbortingExoticParams(underlyingParams, workStore.route, prerenderStore);\n            }\n            // remaining cases are prender-ppr and prerender-legacy\n            // We aren't in a dynamicIO prerender but we do have fallback params at this\n            // level so we need to make an erroring exotic params object which will postpone\n            // if you access the fallback params\n            return makeErroringExoticParams(underlyingParams, fallbackParams, workStore, prerenderStore);\n        }\n    }\n    // We don't have any fallback params so we have an entirely static safe params object\n    return makeUntrackedExoticParams(underlyingParams);\n}\nfunction createRenderParams(underlyingParams, workStore) {\n    if (process.env.NODE_ENV === 'development' && !workStore.isPrefetchRequest) {\n        return makeDynamicallyTrackedExoticParamsWithDevWarnings(underlyingParams, workStore);\n    } else {\n        return makeUntrackedExoticParams(underlyingParams);\n    }\n}\nconst CachedParams = new WeakMap();\nfunction makeAbortingExoticParams(underlyingParams, route, prerenderStore) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const promise = makeHangingPromise(prerenderStore.renderSignal, '`params`');\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            Object.defineProperty(promise, prop, {\n                get () {\n                    const expression = describeStringPropertyAccess('params', prop);\n                    const error = createParamsAccessError(route, expression);\n                    abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n                },\n                set (newValue) {\n                    Object.defineProperty(promise, prop, {\n                        value: newValue,\n                        writable: true,\n                        enumerable: true\n                    });\n                },\n                enumerable: true,\n                configurable: true\n            });\n        }\n    });\n    return promise;\n}\nfunction makeErroringExoticParams(underlyingParams, fallbackParams, workStore, prerenderStore) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const augmentedUnderlying = {\n        ...underlyingParams\n    };\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(augmentedUnderlying);\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            if (fallbackParams.has(prop)) {\n                Object.defineProperty(augmentedUnderlying, prop, {\n                    get () {\n                        const expression = describeStringPropertyAccess('params', prop);\n                        // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n                        // for params is only dynamic when we're generating a fallback shell\n                        // and even when `dynamic = \"error\"` we still support generating dynamic\n                        // fallback shells\n                        // TODO remove this comment when dynamicIO is the default since there\n                        // will be no `dynamic = \"error\"`\n                        if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no dynamicIO)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                    },\n                    enumerable: true\n                });\n                Object.defineProperty(promise, prop, {\n                    get () {\n                        const expression = describeStringPropertyAccess('params', prop);\n                        // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n                        // for params is only dynamic when we're generating a fallback shell\n                        // and even when `dynamic = \"error\"` we still support generating dynamic\n                        // fallback shells\n                        // TODO remove this comment when dynamicIO is the default since there\n                        // will be no `dynamic = \"error\"`\n                        if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no dynamicIO)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                    },\n                    set (newValue) {\n                        Object.defineProperty(promise, prop, {\n                            value: newValue,\n                            writable: true,\n                            enumerable: true\n                        });\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n            } else {\n                promise[prop] = underlyingParams[prop];\n            }\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedExoticParams(underlyingParams) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(underlyingParams);\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            promise[prop] = underlyingParams[prop];\n        }\n    });\n    return promise;\n}\nfunction makeDynamicallyTrackedExoticParamsWithDevWarnings(underlyingParams, store) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = new Promise((resolve)=>scheduleImmediate(()=>resolve(underlyingParams)));\n    const proxiedProperties = new Set();\n    const unproxiedProperties = [];\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n            // These properties cannot be shadowed because they need to be the\n            // true underlying value for Promises to work correctly at runtime\n            unproxiedProperties.push(prop);\n        } else {\n            proxiedProperties.add(prop);\n            promise[prop] = underlyingParams[prop];\n        }\n    });\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (typeof prop === 'string') {\n                if (// We are accessing a property that was proxied to the promise instance\n                proxiedProperties.has(prop)) {\n                    const expression = describeStringPropertyAccess('params', prop);\n                    syncIODev(store.route, expression);\n                }\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        set (target, prop, value, receiver) {\n            if (typeof prop === 'string') {\n                proxiedProperties.delete(prop);\n            }\n            return ReflectAdapter.set(target, prop, value, receiver);\n        },\n        ownKeys (target) {\n            const expression = '`...params` or similar expression';\n            syncIODev(store.route, expression, unproxiedProperties);\n            return Reflect.ownKeys(target);\n        }\n    });\n    CachedParams.set(underlyingParams, proxiedPromise);\n    return proxiedPromise;\n}\nfunction syncIODev(route, expression, missingProperties) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore && workUnitStore.type === 'request' && workUnitStore.prerenderPhase === true) {\n        // When we're rendering dynamically in dev we need to advance out of the\n        // Prerender environment when we read Request data synchronously\n        const requestStore = workUnitStore;\n        trackSynchronousRequestDataAccessInDev(requestStore);\n    }\n    // In all cases we warn normally\n    if (missingProperties && missingProperties.length > 0) {\n        warnForIncompleteEnumeration(route, expression, missingProperties);\n    } else {\n        warnForSyncAccess(route, expression);\n    }\n}\nconst noop = ()=>{};\nconst warnForSyncAccess = process.env.__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS ? noop : createDedupedByCallsiteServerErrorLoggerDev(createParamsAccessError);\nconst warnForIncompleteEnumeration = process.env.__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS ? noop : createDedupedByCallsiteServerErrorLoggerDev(createIncompleteEnumerationError);\nfunction createParamsAccessError(route, expression) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return new Error(`${prefix}used ${expression}. ` + `\\`params\\` should be awaited before using its properties. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`);\n}\nfunction createIncompleteEnumerationError(route, expression, missingProperties) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return new Error(`${prefix}used ${expression}. ` + `\\`params\\` should be awaited before using its properties. ` + `The following properties were not available through enumeration ` + `because they conflict with builtin property names: ` + `${describeListOfPropertyNames(missingProperties)}. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`);\n}\nfunction describeListOfPropertyNames(properties) {\n    switch(properties.length){\n        case 0:\n            throw new InvariantError('Expected describeListOfPropertyNames to be called with a non-empty list of strings.');\n        case 1:\n            return `\\`${properties[0]}\\``;\n        case 2:\n            return `\\`${properties[0]}\\` and \\`${properties[1]}\\``;\n        default:\n            {\n                let description = '';\n                for(let i = 0; i < properties.length - 1; i++){\n                    description += `\\`${properties[i]}\\`, `;\n                }\n                description += `, and \\`${properties[properties.length - 1]}\\``;\n                return description;\n            }\n    }\n}\n\n//# sourceMappingURL=params.js.map","export function nonNullable(value) {\n    return value !== null && value !== undefined;\n}\n\n//# sourceMappingURL=non-nullable.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { nonNullable } from '../../non-nullable';\nexport function Meta({ name, property, content, media }) {\n    if (typeof content !== 'undefined' && content !== null && content !== '') {\n        return /*#__PURE__*/ _jsx(\"meta\", {\n            ...name ? {\n                name\n            } : {\n                property\n            },\n            ...media ? {\n                media\n            } : undefined,\n            content: typeof content === 'string' ? content : content.toString()\n        });\n    }\n    return null;\n}\nexport function MetaFilter(items) {\n    const acc = [];\n    for (const item of items){\n        if (Array.isArray(item)) {\n            acc.push(...item.filter(nonNullable));\n        } else if (nonNullable(item)) {\n            acc.push(item);\n        }\n    }\n    return acc;\n}\nfunction camelToSnake(camelCaseStr) {\n    return camelCaseStr.replace(/([A-Z])/g, function(match) {\n        return '_' + match.toLowerCase();\n    });\n}\nconst aliasPropPrefixes = new Set([\n    'og:image',\n    'twitter:image',\n    'og:video',\n    'og:audio'\n]);\nfunction getMetaKey(prefix, key) {\n    // Use `twitter:image` and `og:image` instead of `twitter:image:url` and `og:image:url`\n    // to be more compatible as it's a more common format.\n    // `og:video` & `og:audio` do not have a `:url` suffix alias\n    if (aliasPropPrefixes.has(prefix) && key === 'url') {\n        return prefix;\n    }\n    if (prefix.startsWith('og:') || prefix.startsWith('twitter:')) {\n        key = camelToSnake(key);\n    }\n    return prefix + ':' + key;\n}\nfunction ExtendMeta({ content, namePrefix, propertyPrefix }) {\n    if (!content) return null;\n    return MetaFilter(Object.entries(content).map(([k, v])=>{\n        return typeof v === 'undefined' ? null : Meta({\n            ...propertyPrefix && {\n                property: getMetaKey(propertyPrefix, k)\n            },\n            ...namePrefix && {\n                name: getMetaKey(namePrefix, k)\n            },\n            content: typeof v === 'string' ? v : v == null ? void 0 : v.toString()\n        });\n    }));\n}\nexport function MultiMeta({ propertyPrefix, namePrefix, contents }) {\n    if (typeof contents === 'undefined' || contents === null) {\n        return null;\n    }\n    return MetaFilter(contents.map((content)=>{\n        if (typeof content === 'string' || typeof content === 'number' || content instanceof URL) {\n            return Meta({\n                ...propertyPrefix ? {\n                    property: propertyPrefix\n                } : {\n                    name: namePrefix\n                },\n                content\n            });\n        } else {\n            return ExtendMeta({\n                namePrefix,\n                propertyPrefix,\n                content\n            });\n        }\n    }));\n}\n\n//# sourceMappingURL=meta.js.map","export const ViewportMetaKeys = {\n    width: 'width',\n    height: 'height',\n    initialScale: 'initial-scale',\n    minimumScale: 'minimum-scale',\n    maximumScale: 'maximum-scale',\n    viewportFit: 'viewport-fit',\n    userScalable: 'user-scalable',\n    interactiveWidget: 'interactive-widget'\n};\nexport const IconKeys = [\n    'icon',\n    'shortcut',\n    'apple',\n    'other'\n];\n\n//# sourceMappingURL=constants.js.map","function resolveArray(value) {\n    if (Array.isArray(value)) {\n        return value;\n    }\n    return [\n        value\n    ];\n}\nfunction resolveAsArrayOrUndefined(value) {\n    if (typeof value === 'undefined' || value === null) {\n        return undefined;\n    }\n    return resolveArray(value);\n}\nfunction getOrigin(url) {\n    let origin = undefined;\n    if (typeof url === 'string') {\n        try {\n            url = new URL(url);\n            origin = url.origin;\n        } catch  {}\n    }\n    return origin;\n}\nexport { resolveAsArrayOrUndefined, resolveArray, getOrigin };\n\n//# sourceMappingURL=utils.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { Meta, MetaFilter, MultiMeta } from './meta';\nimport { ViewportMetaKeys } from '../constants';\nimport { getOrigin } from './utils';\n// convert viewport object to string for viewport meta tag\nfunction resolveViewportLayout(viewport) {\n    let resolved = null;\n    if (viewport && typeof viewport === 'object') {\n        resolved = '';\n        for(const viewportKey_ in ViewportMetaKeys){\n            const viewportKey = viewportKey_;\n            if (viewportKey in viewport) {\n                let value = viewport[viewportKey];\n                if (typeof value === 'boolean') value = value ? 'yes' : 'no';\n                if (resolved) resolved += ', ';\n                resolved += `${ViewportMetaKeys[viewportKey]}=${value}`;\n            }\n        }\n    }\n    return resolved;\n}\nexport function ViewportMeta({ viewport }) {\n    return MetaFilter([\n        Meta({\n            name: 'viewport',\n            content: resolveViewportLayout(viewport)\n        }),\n        ...viewport.themeColor ? viewport.themeColor.map((themeColor)=>Meta({\n                name: 'theme-color',\n                content: themeColor.color,\n                media: themeColor.media\n            })) : [],\n        Meta({\n            name: 'color-scheme',\n            content: viewport.colorScheme\n        })\n    ]);\n}\nexport function BasicMeta({ metadata }) {\n    var _metadata_keywords, _metadata_robots, _metadata_robots1;\n    const manifestOrigin = metadata.manifest ? getOrigin(metadata.manifest) : undefined;\n    return MetaFilter([\n        /*#__PURE__*/ _jsx(\"meta\", {\n            charSet: \"utf-8\"\n        }),\n        metadata.title !== null && metadata.title.absolute ? /*#__PURE__*/ _jsx(\"title\", {\n            children: metadata.title.absolute\n        }) : null,\n        Meta({\n            name: 'description',\n            content: metadata.description\n        }),\n        Meta({\n            name: 'application-name',\n            content: metadata.applicationName\n        }),\n        ...metadata.authors ? metadata.authors.map((author)=>[\n                author.url ? /*#__PURE__*/ _jsx(\"link\", {\n                    rel: \"author\",\n                    href: author.url.toString()\n                }) : null,\n                Meta({\n                    name: 'author',\n                    content: author.name\n                })\n            ]) : [],\n        metadata.manifest ? /*#__PURE__*/ _jsx(\"link\", {\n            rel: \"manifest\",\n            href: metadata.manifest.toString(),\n            // If it's same origin, and it's a preview deployment,\n            // including credentials for manifest request.\n            crossOrigin: !manifestOrigin && process.env.VERCEL_ENV === 'preview' ? 'use-credentials' : undefined\n        }) : null,\n        Meta({\n            name: 'generator',\n            content: metadata.generator\n        }),\n        Meta({\n            name: 'keywords',\n            content: (_metadata_keywords = metadata.keywords) == null ? void 0 : _metadata_keywords.join(',')\n        }),\n        Meta({\n            name: 'referrer',\n            content: metadata.referrer\n        }),\n        Meta({\n            name: 'creator',\n            content: metadata.creator\n        }),\n        Meta({\n            name: 'publisher',\n            content: metadata.publisher\n        }),\n        Meta({\n            name: 'robots',\n            content: (_metadata_robots = metadata.robots) == null ? void 0 : _metadata_robots.basic\n        }),\n        Meta({\n            name: 'googlebot',\n            content: (_metadata_robots1 = metadata.robots) == null ? void 0 : _metadata_robots1.googleBot\n        }),\n        Meta({\n            name: 'abstract',\n            content: metadata.abstract\n        }),\n        ...metadata.archives ? metadata.archives.map((archive)=>/*#__PURE__*/ _jsx(\"link\", {\n                rel: \"archives\",\n                href: archive\n            })) : [],\n        ...metadata.assets ? metadata.assets.map((asset)=>/*#__PURE__*/ _jsx(\"link\", {\n                rel: \"assets\",\n                href: asset\n            })) : [],\n        ...metadata.bookmarks ? metadata.bookmarks.map((bookmark)=>/*#__PURE__*/ _jsx(\"link\", {\n                rel: \"bookmarks\",\n                href: bookmark\n            })) : [],\n        Meta({\n            name: 'category',\n            content: metadata.category\n        }),\n        Meta({\n            name: 'classification',\n            content: metadata.classification\n        }),\n        ...metadata.other ? Object.entries(metadata.other).map(([name, content])=>{\n            if (Array.isArray(content)) {\n                return content.map((contentItem)=>Meta({\n                        name,\n                        content: contentItem\n                    }));\n            } else {\n                return Meta({\n                    name,\n                    content\n                });\n            }\n        }) : []\n    ]);\n}\nexport function ItunesMeta({ itunes }) {\n    if (!itunes) return null;\n    const { appId, appArgument } = itunes;\n    let content = `app-id=${appId}`;\n    if (appArgument) {\n        content += `, app-argument=${appArgument}`;\n    }\n    return /*#__PURE__*/ _jsx(\"meta\", {\n        name: \"apple-itunes-app\",\n        content: content\n    });\n}\nexport function FacebookMeta({ facebook }) {\n    if (!facebook) return null;\n    const { appId, admins } = facebook;\n    return MetaFilter([\n        appId ? /*#__PURE__*/ _jsx(\"meta\", {\n            property: \"fb:app_id\",\n            content: appId\n        }) : null,\n        ...admins ? admins.map((admin)=>/*#__PURE__*/ _jsx(\"meta\", {\n                property: \"fb:admins\",\n                content: admin\n            })) : []\n    ]);\n}\nconst formatDetectionKeys = [\n    'telephone',\n    'date',\n    'address',\n    'email',\n    'url'\n];\nexport function FormatDetectionMeta({ formatDetection }) {\n    if (!formatDetection) return null;\n    let content = '';\n    for (const key of formatDetectionKeys){\n        if (key in formatDetection) {\n            if (content) content += ', ';\n            content += `${key}=no`;\n        }\n    }\n    return /*#__PURE__*/ _jsx(\"meta\", {\n        name: \"format-detection\",\n        content: content\n    });\n}\nexport function AppleWebAppMeta({ appleWebApp }) {\n    if (!appleWebApp) return null;\n    const { capable, title, startupImage, statusBarStyle } = appleWebApp;\n    return MetaFilter([\n        capable ? Meta({\n            name: 'mobile-web-app-capable',\n            content: 'yes'\n        }) : null,\n        Meta({\n            name: 'apple-mobile-web-app-title',\n            content: title\n        }),\n        startupImage ? startupImage.map((image)=>/*#__PURE__*/ _jsx(\"link\", {\n                href: image.url,\n                media: image.media,\n                rel: \"apple-touch-startup-image\"\n            })) : null,\n        statusBarStyle ? Meta({\n            name: 'apple-mobile-web-app-status-bar-style',\n            content: statusBarStyle\n        }) : null\n    ]);\n}\nexport function VerificationMeta({ verification }) {\n    if (!verification) return null;\n    return MetaFilter([\n        MultiMeta({\n            namePrefix: 'google-site-verification',\n            contents: verification.google\n        }),\n        MultiMeta({\n            namePrefix: 'y_key',\n            contents: verification.yahoo\n        }),\n        MultiMeta({\n            namePrefix: 'yandex-verification',\n            contents: verification.yandex\n        }),\n        MultiMeta({\n            namePrefix: 'me',\n            contents: verification.me\n        }),\n        ...verification.other ? Object.entries(verification.other).map(([key, value])=>MultiMeta({\n                namePrefix: key,\n                contents: value\n            })) : []\n    ]);\n}\n\n//# sourceMappingURL=basic.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { MetaFilter } from './meta';\nfunction AlternateLink({ descriptor, ...props }) {\n    if (!descriptor.url) return null;\n    return /*#__PURE__*/ _jsx(\"link\", {\n        ...props,\n        ...descriptor.title && {\n            title: descriptor.title\n        },\n        href: descriptor.url.toString()\n    });\n}\nexport function AlternatesMetadata({ alternates }) {\n    if (!alternates) return null;\n    const { canonical, languages, media, types } = alternates;\n    return MetaFilter([\n        canonical ? AlternateLink({\n            rel: 'canonical',\n            descriptor: canonical\n        }) : null,\n        languages ? Object.entries(languages).flatMap(([locale, descriptors])=>descriptors == null ? void 0 : descriptors.map((descriptor)=>AlternateLink({\n                    rel: 'alternate',\n                    hrefLang: locale,\n                    descriptor\n                }))) : null,\n        media ? Object.entries(media).flatMap(([mediaName, descriptors])=>descriptors == null ? void 0 : descriptors.map((descriptor)=>AlternateLink({\n                    rel: 'alternate',\n                    media: mediaName,\n                    descriptor\n                }))) : null,\n        types ? Object.entries(types).flatMap(([type, descriptors])=>descriptors == null ? void 0 : descriptors.map((descriptor)=>AlternateLink({\n                    rel: 'alternate',\n                    type,\n                    descriptor\n                }))) : null\n    ]);\n}\n\n//# sourceMappingURL=alternate.js.map","import { Meta, MetaFilter, MultiMeta } from './meta';\nexport function OpenGraphMetadata({ openGraph }) {\n    var _openGraph_title, _openGraph_url, _openGraph_ttl;\n    if (!openGraph) {\n        return null;\n    }\n    let typedOpenGraph;\n    if ('type' in openGraph) {\n        const openGraphType = openGraph.type;\n        switch(openGraphType){\n            case 'website':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'website'\n                    })\n                ];\n                break;\n            case 'article':\n                var _openGraph_publishedTime, _openGraph_modifiedTime, _openGraph_expirationTime;\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'article'\n                    }),\n                    Meta({\n                        property: 'article:published_time',\n                        content: (_openGraph_publishedTime = openGraph.publishedTime) == null ? void 0 : _openGraph_publishedTime.toString()\n                    }),\n                    Meta({\n                        property: 'article:modified_time',\n                        content: (_openGraph_modifiedTime = openGraph.modifiedTime) == null ? void 0 : _openGraph_modifiedTime.toString()\n                    }),\n                    Meta({\n                        property: 'article:expiration_time',\n                        content: (_openGraph_expirationTime = openGraph.expirationTime) == null ? void 0 : _openGraph_expirationTime.toString()\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'article:author',\n                        contents: openGraph.authors\n                    }),\n                    Meta({\n                        property: 'article:section',\n                        content: openGraph.section\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'article:tag',\n                        contents: openGraph.tags\n                    })\n                ];\n                break;\n            case 'book':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'book'\n                    }),\n                    Meta({\n                        property: 'book:isbn',\n                        content: openGraph.isbn\n                    }),\n                    Meta({\n                        property: 'book:release_date',\n                        content: openGraph.releaseDate\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'book:author',\n                        contents: openGraph.authors\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'book:tag',\n                        contents: openGraph.tags\n                    })\n                ];\n                break;\n            case 'profile':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'profile'\n                    }),\n                    Meta({\n                        property: 'profile:first_name',\n                        content: openGraph.firstName\n                    }),\n                    Meta({\n                        property: 'profile:last_name',\n                        content: openGraph.lastName\n                    }),\n                    Meta({\n                        property: 'profile:username',\n                        content: openGraph.username\n                    }),\n                    Meta({\n                        property: 'profile:gender',\n                        content: openGraph.gender\n                    })\n                ];\n                break;\n            case 'music.song':\n                var _openGraph_duration;\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'music.song'\n                    }),\n                    Meta({\n                        property: 'music:duration',\n                        content: (_openGraph_duration = openGraph.duration) == null ? void 0 : _openGraph_duration.toString()\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:album',\n                        contents: openGraph.albums\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:musician',\n                        contents: openGraph.musicians\n                    })\n                ];\n                break;\n            case 'music.album':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'music.album'\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:song',\n                        contents: openGraph.songs\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:musician',\n                        contents: openGraph.musicians\n                    }),\n                    Meta({\n                        property: 'music:release_date',\n                        content: openGraph.releaseDate\n                    })\n                ];\n                break;\n            case 'music.playlist':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'music.playlist'\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:song',\n                        contents: openGraph.songs\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:creator',\n                        contents: openGraph.creators\n                    })\n                ];\n                break;\n            case 'music.radio_station':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'music.radio_station'\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:creator',\n                        contents: openGraph.creators\n                    })\n                ];\n                break;\n            case 'video.movie':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'video.movie'\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:actor',\n                        contents: openGraph.actors\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:director',\n                        contents: openGraph.directors\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:writer',\n                        contents: openGraph.writers\n                    }),\n                    Meta({\n                        property: 'video:duration',\n                        content: openGraph.duration\n                    }),\n                    Meta({\n                        property: 'video:release_date',\n                        content: openGraph.releaseDate\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:tag',\n                        contents: openGraph.tags\n                    })\n                ];\n                break;\n            case 'video.episode':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'video.episode'\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:actor',\n                        contents: openGraph.actors\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:director',\n                        contents: openGraph.directors\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:writer',\n                        contents: openGraph.writers\n                    }),\n                    Meta({\n                        property: 'video:duration',\n                        content: openGraph.duration\n                    }),\n                    Meta({\n                        property: 'video:release_date',\n                        content: openGraph.releaseDate\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:tag',\n                        contents: openGraph.tags\n                    }),\n                    Meta({\n                        property: 'video:series',\n                        content: openGraph.series\n                    })\n                ];\n                break;\n            case 'video.tv_show':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'video.tv_show'\n                    })\n                ];\n                break;\n            case 'video.other':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'video.other'\n                    })\n                ];\n                break;\n            default:\n                const _exhaustiveCheck = openGraphType;\n                throw new Error(`Invalid OpenGraph type: ${_exhaustiveCheck}`);\n        }\n    }\n    return MetaFilter([\n        Meta({\n            property: 'og:determiner',\n            content: openGraph.determiner\n        }),\n        Meta({\n            property: 'og:title',\n            content: (_openGraph_title = openGraph.title) == null ? void 0 : _openGraph_title.absolute\n        }),\n        Meta({\n            property: 'og:description',\n            content: openGraph.description\n        }),\n        Meta({\n            property: 'og:url',\n            content: (_openGraph_url = openGraph.url) == null ? void 0 : _openGraph_url.toString()\n        }),\n        Meta({\n            property: 'og:site_name',\n            content: openGraph.siteName\n        }),\n        Meta({\n            property: 'og:locale',\n            content: openGraph.locale\n        }),\n        Meta({\n            property: 'og:country_name',\n            content: openGraph.countryName\n        }),\n        Meta({\n            property: 'og:ttl',\n            content: (_openGraph_ttl = openGraph.ttl) == null ? void 0 : _openGraph_ttl.toString()\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:image',\n            contents: openGraph.images\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:video',\n            contents: openGraph.videos\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:audio',\n            contents: openGraph.audio\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:email',\n            contents: openGraph.emails\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:phone_number',\n            contents: openGraph.phoneNumbers\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:fax_number',\n            contents: openGraph.faxNumbers\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:locale:alternate',\n            contents: openGraph.alternateLocale\n        }),\n        ...typedOpenGraph ? typedOpenGraph : []\n    ]);\n}\nfunction TwitterAppItem({ app, type }) {\n    var _app_url_type, _app_url;\n    return [\n        Meta({\n            name: `twitter:app:name:${type}`,\n            content: app.name\n        }),\n        Meta({\n            name: `twitter:app:id:${type}`,\n            content: app.id[type]\n        }),\n        Meta({\n            name: `twitter:app:url:${type}`,\n            content: (_app_url = app.url) == null ? void 0 : (_app_url_type = _app_url[type]) == null ? void 0 : _app_url_type.toString()\n        })\n    ];\n}\nexport function TwitterMetadata({ twitter }) {\n    var _twitter_title;\n    if (!twitter) return null;\n    const { card } = twitter;\n    return MetaFilter([\n        Meta({\n            name: 'twitter:card',\n            content: card\n        }),\n        Meta({\n            name: 'twitter:site',\n            content: twitter.site\n        }),\n        Meta({\n            name: 'twitter:site:id',\n            content: twitter.siteId\n        }),\n        Meta({\n            name: 'twitter:creator',\n            content: twitter.creator\n        }),\n        Meta({\n            name: 'twitter:creator:id',\n            content: twitter.creatorId\n        }),\n        Meta({\n            name: 'twitter:title',\n            content: (_twitter_title = twitter.title) == null ? void 0 : _twitter_title.absolute\n        }),\n        Meta({\n            name: 'twitter:description',\n            content: twitter.description\n        }),\n        MultiMeta({\n            namePrefix: 'twitter:image',\n            contents: twitter.images\n        }),\n        ...card === 'player' ? twitter.players.flatMap((player)=>[\n                Meta({\n                    name: 'twitter:player',\n                    content: player.playerUrl.toString()\n                }),\n                Meta({\n                    name: 'twitter:player:stream',\n                    content: player.streamUrl.toString()\n                }),\n                Meta({\n                    name: 'twitter:player:width',\n                    content: player.width\n                }),\n                Meta({\n                    name: 'twitter:player:height',\n                    content: player.height\n                })\n            ]) : [],\n        ...card === 'app' ? [\n            TwitterAppItem({\n                app: twitter.app,\n                type: 'iphone'\n            }),\n            TwitterAppItem({\n                app: twitter.app,\n                type: 'ipad'\n            }),\n            TwitterAppItem({\n                app: twitter.app,\n                type: 'googleplay'\n            })\n        ] : []\n    ]);\n}\nexport function AppLinksMeta({ appLinks }) {\n    if (!appLinks) return null;\n    return MetaFilter([\n        MultiMeta({\n            propertyPrefix: 'al:ios',\n            contents: appLinks.ios\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:iphone',\n            contents: appLinks.iphone\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:ipad',\n            contents: appLinks.ipad\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:android',\n            contents: appLinks.android\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:windows_phone',\n            contents: appLinks.windows_phone\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:windows',\n            contents: appLinks.windows\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:windows_universal',\n            contents: appLinks.windows_universal\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:web',\n            contents: appLinks.web\n        })\n    ]);\n}\n\n//# sourceMappingURL=opengraph.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { MetaFilter } from './meta';\nfunction IconDescriptorLink({ icon }) {\n    const { url, rel = 'icon', ...props } = icon;\n    return /*#__PURE__*/ _jsx(\"link\", {\n        rel: rel,\n        href: url.toString(),\n        ...props\n    });\n}\nfunction IconLink({ rel, icon }) {\n    if (typeof icon === 'object' && !(icon instanceof URL)) {\n        if (!icon.rel && rel) icon.rel = rel;\n        return IconDescriptorLink({\n            icon\n        });\n    } else {\n        const href = icon.toString();\n        return /*#__PURE__*/ _jsx(\"link\", {\n            rel: rel,\n            href: href\n        });\n    }\n}\nexport function IconsMetadata({ icons }) {\n    if (!icons) return null;\n    const shortcutList = icons.shortcut;\n    const iconList = icons.icon;\n    const appleList = icons.apple;\n    const otherList = icons.other;\n    return MetaFilter([\n        shortcutList ? shortcutList.map((icon)=>IconLink({\n                rel: 'shortcut icon',\n                icon\n            })) : null,\n        iconList ? iconList.map((icon)=>IconLink({\n                rel: 'icon',\n                icon\n            })) : null,\n        appleList ? appleList.map((icon)=>IconLink({\n                rel: 'apple-touch-icon',\n                icon\n            })) : null,\n        otherList ? otherList.map((icon)=>IconDescriptorLink({\n                icon\n            })) : null\n    ]);\n}\n\n//# sourceMappingURL=icons.js.map","export function createDefaultViewport() {\n    return {\n        // name=viewport\n        width: 'device-width',\n        initialScale: 1,\n        // visual metadata\n        themeColor: null,\n        colorScheme: null\n    };\n}\nexport function createDefaultMetadata() {\n    return {\n        // Deprecated ones\n        viewport: null,\n        themeColor: null,\n        colorScheme: null,\n        metadataBase: null,\n        // Other values are all null\n        title: null,\n        description: null,\n        applicationName: null,\n        authors: null,\n        generator: null,\n        keywords: null,\n        referrer: null,\n        creator: null,\n        publisher: null,\n        robots: null,\n        manifest: null,\n        alternates: {\n            canonical: null,\n            languages: null,\n            media: null,\n            types: null\n        },\n        icons: null,\n        openGraph: null,\n        twitter: null,\n        verification: {},\n        appleWebApp: null,\n        formatDetection: null,\n        itunes: null,\n        facebook: null,\n        abstract: null,\n        appLinks: null,\n        archives: null,\n        assets: null,\n        bookmarks: null,\n        category: null,\n        classification: null,\n        other: {}\n    };\n}\n\n//# sourceMappingURL=default-metadata.js.map","import path from '../../../shared/lib/isomorphic/path';\nfunction isStringOrURL(icon) {\n    return typeof icon === 'string' || icon instanceof URL;\n}\nfunction createLocalMetadataBase() {\n    return new URL(`http://localhost:${process.env.PORT || 3000}`);\n}\nfunction getPreviewDeploymentUrl() {\n    const origin = process.env.VERCEL_BRANCH_URL || process.env.VERCEL_URL;\n    return origin ? new URL(`https://${origin}`) : undefined;\n}\nfunction getProductionDeploymentUrl() {\n    const origin = process.env.VERCEL_PROJECT_PRODUCTION_URL;\n    return origin ? new URL(`https://${origin}`) : undefined;\n}\n// For deployment url for metadata routes, prefer to use the deployment url if possible\n// as these routes are unique to the deployments url.\nexport function getSocialImageFallbackMetadataBase(metadataBase) {\n    const isMetadataBaseMissing = !metadataBase;\n    const defaultMetadataBase = createLocalMetadataBase();\n    const previewDeploymentUrl = getPreviewDeploymentUrl();\n    const productionDeploymentUrl = getProductionDeploymentUrl();\n    let fallbackMetadataBase;\n    if (process.env.NODE_ENV === 'development') {\n        fallbackMetadataBase = defaultMetadataBase;\n    } else {\n        fallbackMetadataBase = process.env.NODE_ENV === 'production' && previewDeploymentUrl && process.env.VERCEL_ENV === 'preview' ? previewDeploymentUrl : metadataBase || productionDeploymentUrl || defaultMetadataBase;\n    }\n    return {\n        fallbackMetadataBase,\n        isMetadataBaseMissing\n    };\n}\nfunction resolveUrl(url, metadataBase) {\n    if (url instanceof URL) return url;\n    if (!url) return null;\n    try {\n        // If we can construct a URL instance from url, ignore metadataBase\n        const parsedUrl = new URL(url);\n        return parsedUrl;\n    } catch  {}\n    if (!metadataBase) {\n        metadataBase = createLocalMetadataBase();\n    }\n    // Handle relative or absolute paths\n    const basePath = metadataBase.pathname || '';\n    const joinedPath = path.posix.join(basePath, url);\n    return new URL(joinedPath, metadataBase);\n}\n// Resolve with `pathname` if `url` is a relative path.\nfunction resolveRelativeUrl(url, pathname) {\n    if (typeof url === 'string' && url.startsWith('./')) {\n        return path.posix.resolve(pathname, url);\n    }\n    return url;\n}\n// The regex is matching logic from packages/next/src/lib/load-custom-routes.ts\nconst FILE_REGEX = /^(?:\\/((?!\\.well-known(?:\\/.*)?)(?:[^/]+\\/)*[^/]+\\.\\w+))(\\/?|$)/i;\nfunction isFilePattern(pathname) {\n    return FILE_REGEX.test(pathname);\n}\n// Resolve `pathname` if `url` is a relative path the compose with `metadataBase`.\nfunction resolveAbsoluteUrlWithPathname(url, metadataBase, { trailingSlash, pathname }) {\n    // Resolve url with pathname that always starts with `/`\n    url = resolveRelativeUrl(url, pathname);\n    // Convert string url or URL instance to absolute url string,\n    // if there's case needs to be resolved with metadataBase\n    let resolvedUrl = '';\n    const result = metadataBase ? resolveUrl(url, metadataBase) : url;\n    if (typeof result === 'string') {\n        resolvedUrl = result;\n    } else {\n        resolvedUrl = result.pathname === '/' ? result.origin : result.href;\n    }\n    // Add trailing slash if it's enabled for urls matches the condition\n    // - Not external, same origin with metadataBase\n    // - Doesn't have query\n    if (trailingSlash && !resolvedUrl.endsWith('/')) {\n        let isRelative = resolvedUrl.startsWith('/');\n        let hasQuery = resolvedUrl.includes('?');\n        let isExternal = false;\n        let isFileUrl = false;\n        if (!isRelative) {\n            try {\n                const parsedUrl = new URL(resolvedUrl);\n                isExternal = metadataBase != null && parsedUrl.origin !== metadataBase.origin;\n                isFileUrl = isFilePattern(parsedUrl.pathname);\n            } catch  {\n                // If it's not a valid URL, treat it as external\n                isExternal = true;\n            }\n            if (// Do not apply trailing slash for file like urls, aligning with the behavior with `trailingSlash`\n            !isFileUrl && !isExternal && !hasQuery) return `${resolvedUrl}/`;\n        }\n    }\n    return resolvedUrl;\n}\nexport { isStringOrURL, resolveUrl, resolveRelativeUrl, resolveAbsoluteUrlWithPathname,  };\n\n//# sourceMappingURL=resolve-url.js.map","function resolveTitleTemplate(template, title) {\n    return template ? template.replace(/%s/g, title) : title;\n}\nexport function resolveTitle(title, stashedTemplate) {\n    let resolved;\n    const template = typeof title !== 'string' && title && 'template' in title ? title.template : null;\n    if (typeof title === 'string') {\n        resolved = resolveTitleTemplate(stashedTemplate, title);\n    } else if (title) {\n        if ('default' in title) {\n            resolved = resolveTitleTemplate(stashedTemplate, title.default);\n        }\n        if ('absolute' in title && title.absolute) {\n            resolved = title.absolute;\n        }\n    }\n    if (title && typeof title !== 'string') {\n        return {\n            template,\n            absolute: resolved || ''\n        };\n    } else {\n        return {\n            absolute: resolved || title || '',\n            template\n        };\n    }\n}\n\n//# sourceMappingURL=resolve-title.js.map","import { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers';\nconst DUMMY_ORIGIN = 'http://n';\nexport function isFullStringUrl(url) {\n    return /https?:\\/\\//.test(url);\n}\nexport function parseUrl(url) {\n    let parsed = undefined;\n    try {\n        parsed = new URL(url, DUMMY_ORIGIN);\n    } catch  {}\n    return parsed;\n}\nexport function stripNextRscUnionQuery(relativeUrl) {\n    const urlInstance = new URL(relativeUrl, DUMMY_ORIGIN);\n    urlInstance.searchParams.delete(NEXT_RSC_UNION_QUERY);\n    return urlInstance.pathname + urlInstance.search;\n}\n\n//# sourceMappingURL=url.js.map","// ISC License\n// Copyright (c) 2021 Alexey Raspopov, Kostiantyn Denysov, Anton Verinov\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n//\n// https://github.com/alexeyraspopov/picocolors/blob/b6261487e7b81aaab2440e397a356732cad9e342/picocolors.js#L1\nvar _globalThis;\nconst { env, stdout } = ((_globalThis = globalThis) == null ? void 0 : _globalThis.process) ?? {};\nconst enabled = env && !env.NO_COLOR && (env.FORCE_COLOR || (stdout == null ? void 0 : stdout.isTTY) && !env.CI && env.TERM !== 'dumb');\nconst replaceClose = (str, close, replace, index)=>{\n    const start = str.substring(0, index) + replace;\n    const end = str.substring(index + close.length);\n    const nextIndex = end.indexOf(close);\n    return ~nextIndex ? start + replaceClose(end, close, replace, nextIndex) : start + end;\n};\nconst formatter = (open, close, replace = open)=>{\n    if (!enabled) return String;\n    return (input)=>{\n        const string = '' + input;\n        const index = string.indexOf(close, open.length);\n        return ~index ? open + replaceClose(string, close, replace, index) + close : open + string + close;\n    };\n};\nexport const reset = enabled ? (s)=>`\\x1b[0m${s}\\x1b[0m` : String;\nexport const bold = formatter('\\x1b[1m', '\\x1b[22m', '\\x1b[22m\\x1b[1m');\nexport const dim = formatter('\\x1b[2m', '\\x1b[22m', '\\x1b[22m\\x1b[2m');\nexport const italic = formatter('\\x1b[3m', '\\x1b[23m');\nexport const underline = formatter('\\x1b[4m', '\\x1b[24m');\nexport const inverse = formatter('\\x1b[7m', '\\x1b[27m');\nexport const hidden = formatter('\\x1b[8m', '\\x1b[28m');\nexport const strikethrough = formatter('\\x1b[9m', '\\x1b[29m');\nexport const black = formatter('\\x1b[30m', '\\x1b[39m');\nexport const red = formatter('\\x1b[31m', '\\x1b[39m');\nexport const green = formatter('\\x1b[32m', '\\x1b[39m');\nexport const yellow = formatter('\\x1b[33m', '\\x1b[39m');\nexport const blue = formatter('\\x1b[34m', '\\x1b[39m');\nexport const magenta = formatter('\\x1b[35m', '\\x1b[39m');\nexport const purple = formatter('\\x1b[38;2;173;127;168m', '\\x1b[39m');\nexport const cyan = formatter('\\x1b[36m', '\\x1b[39m');\nexport const white = formatter('\\x1b[37m', '\\x1b[39m');\nexport const gray = formatter('\\x1b[90m', '\\x1b[39m');\nexport const bgBlack = formatter('\\x1b[40m', '\\x1b[49m');\nexport const bgRed = formatter('\\x1b[41m', '\\x1b[49m');\nexport const bgGreen = formatter('\\x1b[42m', '\\x1b[49m');\nexport const bgYellow = formatter('\\x1b[43m', '\\x1b[49m');\nexport const bgBlue = formatter('\\x1b[44m', '\\x1b[49m');\nexport const bgMagenta = formatter('\\x1b[45m', '\\x1b[49m');\nexport const bgCyan = formatter('\\x1b[46m', '\\x1b[49m');\nexport const bgWhite = formatter('\\x1b[47m', '\\x1b[49m');\n\n//# sourceMappingURL=picocolors.js.map","import { bold, green, magenta, red, yellow, white } from '../../lib/picocolors';\nexport const prefixes = {\n    wait: white(bold('○')),\n    error: red(bold('⨯')),\n    warn: yellow(bold('⚠')),\n    ready: '▲',\n    info: white(bold(' ')),\n    event: green(bold('✓')),\n    trace: magenta(bold('»'))\n};\nconst LOGGING_METHOD = {\n    log: 'log',\n    warn: 'warn',\n    error: 'error'\n};\nfunction prefixedLog(prefixType, ...message) {\n    if ((message[0] === '' || message[0] === undefined) && message.length === 1) {\n        message.shift();\n    }\n    const consoleMethod = prefixType in LOGGING_METHOD ? LOGGING_METHOD[prefixType] : 'log';\n    const prefix = prefixes[prefixType];\n    // If there's no message, don't print the prefix but a new line\n    if (message.length === 0) {\n        console[consoleMethod]('');\n    } else {\n        // Ensure if there's ANSI escape codes it's concatenated into one string.\n        // Chrome DevTool can only handle color if it's in one string.\n        if (message.length === 1 && typeof message[0] === 'string') {\n            console[consoleMethod](' ' + prefix + ' ' + message[0]);\n        } else {\n            console[consoleMethod](' ' + prefix, ...message);\n        }\n    }\n}\nexport function bootstrap(...message) {\n    // logging format: ' <prefix> <message>'\n    // e.g. ' ✓ Compiled successfully'\n    // Add spaces to align with the indent of other logs\n    console.log('   ' + message.join(' '));\n}\nexport function wait(...message) {\n    prefixedLog('wait', ...message);\n}\nexport function error(...message) {\n    prefixedLog('error', ...message);\n}\nexport function warn(...message) {\n    prefixedLog('warn', ...message);\n}\nexport function ready(...message) {\n    prefixedLog('ready', ...message);\n}\nexport function info(...message) {\n    prefixedLog('info', ...message);\n}\nexport function event(...message) {\n    prefixedLog('event', ...message);\n}\nexport function trace(...message) {\n    prefixedLog('trace', ...message);\n}\nconst warnOnceMessages = new Set();\nexport function warnOnce(...message) {\n    if (!warnOnceMessages.has(message[0])) {\n        warnOnceMessages.add(message.join(' '));\n        warn(...message);\n    }\n}\n\n//# sourceMappingURL=log.js.map","import { resolveArray, resolveAsArrayOrUndefined } from '../generate/utils';\nimport { getSocialImageFallbackMetadataBase, isStringOrURL, resolveUrl, resolveAbsoluteUrlWithPathname } from './resolve-url';\nimport { resolveTitle } from './resolve-title';\nimport { isFullStringUrl } from '../../url';\nimport { warnOnce } from '../../../build/output/log';\nconst OgTypeFields = {\n    article: [\n        'authors',\n        'tags'\n    ],\n    song: [\n        'albums',\n        'musicians'\n    ],\n    playlist: [\n        'albums',\n        'musicians'\n    ],\n    radio: [\n        'creators'\n    ],\n    video: [\n        'actors',\n        'directors',\n        'writers',\n        'tags'\n    ],\n    basic: [\n        'emails',\n        'phoneNumbers',\n        'faxNumbers',\n        'alternateLocale',\n        'audio',\n        'videos'\n    ]\n};\nfunction resolveAndValidateImage(item, metadataBase, isMetadataBaseMissing, isStandaloneMode) {\n    if (!item) return undefined;\n    const isItemUrl = isStringOrURL(item);\n    const inputUrl = isItemUrl ? item : item.url;\n    if (!inputUrl) return undefined;\n    // process.env.VERCEL is set to \"1\" when System Environment Variables are\n    // exposed. When exposed, validation is not necessary since we are falling back to\n    // process.env.VERCEL_PROJECT_PRODUCTION_URL, process.env.VERCEL_BRANCH_URL, or\n    // process.env.VERCEL_URL for the `metadataBase`. process.env.VERCEL is undefined\n    // when System Environment Variables are not exposed. When not exposed, we cannot\n    // detect in the build environment if the deployment is a Vercel deployment or not.\n    //\n    // x-ref: https://vercel.com/docs/projects/environment-variables/system-environment-variables#system-environment-variables\n    const isNonVercelDeployment = !process.env.VERCEL && process.env.NODE_ENV === 'production';\n    // Validate url in self-host standalone mode or non-Vercel deployment\n    if (isStandaloneMode || isNonVercelDeployment) {\n        validateResolvedImageUrl(inputUrl, metadataBase, isMetadataBaseMissing);\n    }\n    return isItemUrl ? {\n        url: resolveUrl(inputUrl, metadataBase)\n    } : {\n        ...item,\n        // Update image descriptor url\n        url: resolveUrl(inputUrl, metadataBase)\n    };\n}\nexport function resolveImages(images, metadataBase, isStandaloneMode) {\n    const resolvedImages = resolveAsArrayOrUndefined(images);\n    if (!resolvedImages) return resolvedImages;\n    const { isMetadataBaseMissing, fallbackMetadataBase } = getSocialImageFallbackMetadataBase(metadataBase);\n    const nonNullableImages = [];\n    for (const item of resolvedImages){\n        const resolvedItem = resolveAndValidateImage(item, fallbackMetadataBase, isMetadataBaseMissing, isStandaloneMode);\n        if (!resolvedItem) continue;\n        nonNullableImages.push(resolvedItem);\n    }\n    return nonNullableImages;\n}\nconst ogTypeToFields = {\n    article: OgTypeFields.article,\n    book: OgTypeFields.article,\n    'music.song': OgTypeFields.song,\n    'music.album': OgTypeFields.song,\n    'music.playlist': OgTypeFields.playlist,\n    'music.radio_station': OgTypeFields.radio,\n    'video.movie': OgTypeFields.video,\n    'video.episode': OgTypeFields.video\n};\nfunction getFieldsByOgType(ogType) {\n    if (!ogType || !(ogType in ogTypeToFields)) return OgTypeFields.basic;\n    return ogTypeToFields[ogType].concat(OgTypeFields.basic);\n}\nfunction validateResolvedImageUrl(inputUrl, fallbackMetadataBase, isMetadataBaseMissing) {\n    // Only warn on the image url that needs to be resolved with metadataBase\n    if (typeof inputUrl === 'string' && !isFullStringUrl(inputUrl) && isMetadataBaseMissing) {\n        warnOnce(`metadataBase property in metadata export is not set for resolving social open graph or twitter images, using \"${fallbackMetadataBase.origin}\". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase`);\n    }\n}\nexport const resolveOpenGraph = (openGraph, metadataBase, metadataContext, titleTemplate)=>{\n    if (!openGraph) return null;\n    function resolveProps(target, og) {\n        const ogType = og && 'type' in og ? og.type : undefined;\n        const keys = getFieldsByOgType(ogType);\n        for (const k of keys){\n            const key = k;\n            if (key in og && key !== 'url') {\n                const value = og[key];\n                target[key] = value ? resolveArray(value) : null;\n            }\n        }\n        target.images = resolveImages(og.images, metadataBase, metadataContext.isStandaloneMode);\n    }\n    const resolved = {\n        ...openGraph,\n        title: resolveTitle(openGraph.title, titleTemplate)\n    };\n    resolveProps(resolved, openGraph);\n    resolved.url = openGraph.url ? resolveAbsoluteUrlWithPathname(openGraph.url, metadataBase, metadataContext) : null;\n    return resolved;\n};\nconst TwitterBasicInfoKeys = [\n    'site',\n    'siteId',\n    'creator',\n    'creatorId',\n    'description'\n];\nexport const resolveTwitter = (twitter, metadataBase, metadataContext, titleTemplate)=>{\n    var _resolved_images;\n    if (!twitter) return null;\n    let card = 'card' in twitter ? twitter.card : undefined;\n    const resolved = {\n        ...twitter,\n        title: resolveTitle(twitter.title, titleTemplate)\n    };\n    for (const infoKey of TwitterBasicInfoKeys){\n        resolved[infoKey] = twitter[infoKey] || null;\n    }\n    resolved.images = resolveImages(twitter.images, metadataBase, metadataContext.isStandaloneMode);\n    card = card || (((_resolved_images = resolved.images) == null ? void 0 : _resolved_images.length) ? 'summary_large_image' : 'summary');\n    resolved.card = card;\n    if ('card' in resolved) {\n        switch(resolved.card){\n            case 'player':\n                {\n                    resolved.players = resolveAsArrayOrUndefined(resolved.players) || [];\n                    break;\n                }\n            case 'app':\n                {\n                    resolved.app = resolved.app || {};\n                    break;\n                }\n            default:\n                break;\n        }\n    }\n    return resolved;\n};\n\n//# sourceMappingURL=resolve-opengraph.js.map","import { DEFAULT_SEGMENT_KEY } from '../../shared/lib/segment';\nexport async function getLayoutOrPageModule(loaderTree) {\n    const { layout, page, defaultPage } = loaderTree[2];\n    const isLayout = typeof layout !== 'undefined';\n    const isPage = typeof page !== 'undefined';\n    const isDefaultPage = typeof defaultPage !== 'undefined' && loaderTree[0] === DEFAULT_SEGMENT_KEY;\n    let mod = undefined;\n    let modType = undefined;\n    let filePath = undefined;\n    if (isLayout) {\n        mod = await layout[0]();\n        modType = 'layout';\n        filePath = layout[1];\n    } else if (isPage) {\n        mod = await page[0]();\n        modType = 'page';\n        filePath = page[1];\n    } else if (isDefaultPage) {\n        mod = await defaultPage[0]();\n        modType = 'page';\n        filePath = defaultPage[1];\n    }\n    return {\n        mod,\n        modType,\n        filePath\n    };\n}\nexport async function getComponentTypeModule(loaderTree, moduleType) {\n    const { [moduleType]: module } = loaderTree[2];\n    if (typeof module !== 'undefined') {\n        return await module[0]();\n    }\n    return undefined;\n}\n\n//# sourceMappingURL=app-dir-module.js.map","export function interopDefault(mod) {\n    return mod.default || mod;\n}\n\n//# sourceMappingURL=interop-default.js.map","import { resolveAsArrayOrUndefined } from '../generate/utils';\nimport { resolveAbsoluteUrlWithPathname } from './resolve-url';\nfunction resolveAlternateUrl(url, metadataBase, metadataContext) {\n    // If alter native url is an URL instance,\n    // we treat it as a URL base and resolve with current pathname\n    if (url instanceof URL) {\n        const newUrl = new URL(metadataContext.pathname, url);\n        url.searchParams.forEach((value, key)=>newUrl.searchParams.set(key, value));\n        url = newUrl;\n    }\n    return resolveAbsoluteUrlWithPathname(url, metadataBase, metadataContext);\n}\nexport const resolveThemeColor = (themeColor)=>{\n    var _resolveAsArrayOrUndefined;\n    if (!themeColor) return null;\n    const themeColorDescriptors = [];\n    (_resolveAsArrayOrUndefined = resolveAsArrayOrUndefined(themeColor)) == null ? void 0 : _resolveAsArrayOrUndefined.forEach((descriptor)=>{\n        if (typeof descriptor === 'string') themeColorDescriptors.push({\n            color: descriptor\n        });\n        else if (typeof descriptor === 'object') themeColorDescriptors.push({\n            color: descriptor.color,\n            media: descriptor.media\n        });\n    });\n    return themeColorDescriptors;\n};\nfunction resolveUrlValuesOfObject(obj, metadataBase, metadataContext) {\n    if (!obj) return null;\n    const result = {};\n    for (const [key, value] of Object.entries(obj)){\n        if (typeof value === 'string' || value instanceof URL) {\n            result[key] = [\n                {\n                    url: resolveAlternateUrl(value, metadataBase, metadataContext)\n                }\n            ];\n        } else {\n            result[key] = [];\n            value == null ? void 0 : value.forEach((item, index)=>{\n                const url = resolveAlternateUrl(item.url, metadataBase, metadataContext);\n                result[key][index] = {\n                    url,\n                    title: item.title\n                };\n            });\n        }\n    }\n    return result;\n}\nfunction resolveCanonicalUrl(urlOrDescriptor, metadataBase, metadataContext) {\n    if (!urlOrDescriptor) return null;\n    const url = typeof urlOrDescriptor === 'string' || urlOrDescriptor instanceof URL ? urlOrDescriptor : urlOrDescriptor.url;\n    // Return string url because structureClone can't handle URL instance\n    return {\n        url: resolveAlternateUrl(url, metadataBase, metadataContext)\n    };\n}\nexport const resolveAlternates = (alternates, metadataBase, context)=>{\n    if (!alternates) return null;\n    const canonical = resolveCanonicalUrl(alternates.canonical, metadataBase, context);\n    const languages = resolveUrlValuesOfObject(alternates.languages, metadataBase, context);\n    const media = resolveUrlValuesOfObject(alternates.media, metadataBase, context);\n    const types = resolveUrlValuesOfObject(alternates.types, metadataBase, context);\n    const result = {\n        canonical,\n        languages,\n        media,\n        types\n    };\n    return result;\n};\nconst robotsKeys = [\n    'noarchive',\n    'nosnippet',\n    'noimageindex',\n    'nocache',\n    'notranslate',\n    'indexifembedded',\n    'nositelinkssearchbox',\n    'unavailable_after',\n    'max-video-preview',\n    'max-image-preview',\n    'max-snippet'\n];\nconst resolveRobotsValue = (robots)=>{\n    if (!robots) return null;\n    if (typeof robots === 'string') return robots;\n    const values = [];\n    if (robots.index) values.push('index');\n    else if (typeof robots.index === 'boolean') values.push('noindex');\n    if (robots.follow) values.push('follow');\n    else if (typeof robots.follow === 'boolean') values.push('nofollow');\n    for (const key of robotsKeys){\n        const value = robots[key];\n        if (typeof value !== 'undefined' && value !== false) {\n            values.push(typeof value === 'boolean' ? key : `${key}:${value}`);\n        }\n    }\n    return values.join(', ');\n};\nexport const resolveRobots = (robots)=>{\n    if (!robots) return null;\n    return {\n        basic: resolveRobotsValue(robots),\n        googleBot: typeof robots !== 'string' ? resolveRobotsValue(robots.googleBot) : null\n    };\n};\nconst VerificationKeys = [\n    'google',\n    'yahoo',\n    'yandex',\n    'me',\n    'other'\n];\nexport const resolveVerification = (verification)=>{\n    if (!verification) return null;\n    const res = {};\n    for (const key of VerificationKeys){\n        const value = verification[key];\n        if (value) {\n            if (key === 'other') {\n                res.other = {};\n                for(const otherKey in verification.other){\n                    const otherValue = resolveAsArrayOrUndefined(verification.other[otherKey]);\n                    if (otherValue) res.other[otherKey] = otherValue;\n                }\n            } else res[key] = resolveAsArrayOrUndefined(value);\n        }\n    }\n    return res;\n};\nexport const resolveAppleWebApp = (appWebApp)=>{\n    var _resolveAsArrayOrUndefined;\n    if (!appWebApp) return null;\n    if (appWebApp === true) {\n        return {\n            capable: true\n        };\n    }\n    const startupImages = appWebApp.startupImage ? (_resolveAsArrayOrUndefined = resolveAsArrayOrUndefined(appWebApp.startupImage)) == null ? void 0 : _resolveAsArrayOrUndefined.map((item)=>typeof item === 'string' ? {\n            url: item\n        } : item) : null;\n    return {\n        capable: 'capable' in appWebApp ? !!appWebApp.capable : true,\n        title: appWebApp.title || null,\n        startupImage: startupImages,\n        statusBarStyle: appWebApp.statusBarStyle || 'default'\n    };\n};\nexport const resolveAppLinks = (appLinks)=>{\n    if (!appLinks) return null;\n    for(const key in appLinks){\n        // @ts-ignore // TODO: type infer\n        appLinks[key] = resolveAsArrayOrUndefined(appLinks[key]);\n    }\n    return appLinks;\n};\nexport const resolveItunes = (itunes, metadataBase, context)=>{\n    if (!itunes) return null;\n    return {\n        appId: itunes.appId,\n        appArgument: itunes.appArgument ? resolveAlternateUrl(itunes.appArgument, metadataBase, context) : undefined\n    };\n};\nexport const resolveFacebook = (facebook)=>{\n    if (!facebook) return null;\n    return {\n        appId: facebook.appId,\n        admins: resolveAsArrayOrUndefined(facebook.admins)\n    };\n};\n\n//# sourceMappingURL=resolve-basics.js.map","import { resolveAsArrayOrUndefined } from '../generate/utils';\nimport { isStringOrURL } from './resolve-url';\nimport { IconKeys } from '../constants';\nexport function resolveIcon(icon) {\n    if (isStringOrURL(icon)) return {\n        url: icon\n    };\n    else if (Array.isArray(icon)) return icon;\n    return icon;\n}\nexport const resolveIcons = (icons)=>{\n    if (!icons) {\n        return null;\n    }\n    const resolved = {\n        icon: [],\n        apple: []\n    };\n    if (Array.isArray(icons)) {\n        resolved.icon = icons.map(resolveIcon).filter(Boolean);\n    } else if (isStringOrURL(icons)) {\n        resolved.icon = [\n            resolveIcon(icons)\n        ];\n    } else {\n        for (const key of IconKeys){\n            const values = resolveAsArrayOrUndefined(icons[key]);\n            if (values) resolved[key] = values.map(resolveIcon);\n        }\n    }\n    return resolved;\n};\n\n//# sourceMappingURL=resolve-icons.js.map","/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/ // eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */ var BaseServerSpan;\n(function(BaseServerSpan) {\n    BaseServerSpan[\"handleRequest\"] = \"BaseServer.handleRequest\";\n    BaseServerSpan[\"run\"] = \"BaseServer.run\";\n    BaseServerSpan[\"pipe\"] = \"BaseServer.pipe\";\n    BaseServerSpan[\"getStaticHTML\"] = \"BaseServer.getStaticHTML\";\n    BaseServerSpan[\"render\"] = \"BaseServer.render\";\n    BaseServerSpan[\"renderToResponseWithComponents\"] = \"BaseServer.renderToResponseWithComponents\";\n    BaseServerSpan[\"renderToResponse\"] = \"BaseServer.renderToResponse\";\n    BaseServerSpan[\"renderToHTML\"] = \"BaseServer.renderToHTML\";\n    BaseServerSpan[\"renderError\"] = \"BaseServer.renderError\";\n    BaseServerSpan[\"renderErrorToResponse\"] = \"BaseServer.renderErrorToResponse\";\n    BaseServerSpan[\"renderErrorToHTML\"] = \"BaseServer.renderErrorToHTML\";\n    BaseServerSpan[\"render404\"] = \"BaseServer.render404\";\n})(BaseServerSpan || (BaseServerSpan = {}));\nvar LoadComponentsSpan;\n(function(LoadComponentsSpan) {\n    LoadComponentsSpan[\"loadDefaultErrorComponents\"] = \"LoadComponents.loadDefaultErrorComponents\";\n    LoadComponentsSpan[\"loadComponents\"] = \"LoadComponents.loadComponents\";\n})(LoadComponentsSpan || (LoadComponentsSpan = {}));\nvar NextServerSpan;\n(function(NextServerSpan) {\n    NextServerSpan[\"getRequestHandler\"] = \"NextServer.getRequestHandler\";\n    NextServerSpan[\"getServer\"] = \"NextServer.getServer\";\n    NextServerSpan[\"getServerRequestHandler\"] = \"NextServer.getServerRequestHandler\";\n    NextServerSpan[\"createServer\"] = \"createServer.createServer\";\n})(NextServerSpan || (NextServerSpan = {}));\nvar NextNodeServerSpan;\n(function(NextNodeServerSpan) {\n    NextNodeServerSpan[\"compression\"] = \"NextNodeServer.compression\";\n    NextNodeServerSpan[\"getBuildId\"] = \"NextNodeServer.getBuildId\";\n    NextNodeServerSpan[\"createComponentTree\"] = \"NextNodeServer.createComponentTree\";\n    NextNodeServerSpan[\"clientComponentLoading\"] = \"NextNodeServer.clientComponentLoading\";\n    NextNodeServerSpan[\"getLayoutOrPageModule\"] = \"NextNodeServer.getLayoutOrPageModule\";\n    NextNodeServerSpan[\"generateStaticRoutes\"] = \"NextNodeServer.generateStaticRoutes\";\n    NextNodeServerSpan[\"generateFsStaticRoutes\"] = \"NextNodeServer.generateFsStaticRoutes\";\n    NextNodeServerSpan[\"generatePublicRoutes\"] = \"NextNodeServer.generatePublicRoutes\";\n    NextNodeServerSpan[\"generateImageRoutes\"] = \"NextNodeServer.generateImageRoutes.route\";\n    NextNodeServerSpan[\"sendRenderResult\"] = \"NextNodeServer.sendRenderResult\";\n    NextNodeServerSpan[\"proxyRequest\"] = \"NextNodeServer.proxyRequest\";\n    NextNodeServerSpan[\"runApi\"] = \"NextNodeServer.runApi\";\n    NextNodeServerSpan[\"render\"] = \"NextNodeServer.render\";\n    NextNodeServerSpan[\"renderHTML\"] = \"NextNodeServer.renderHTML\";\n    NextNodeServerSpan[\"imageOptimizer\"] = \"NextNodeServer.imageOptimizer\";\n    NextNodeServerSpan[\"getPagePath\"] = \"NextNodeServer.getPagePath\";\n    NextNodeServerSpan[\"getRoutesManifest\"] = \"NextNodeServer.getRoutesManifest\";\n    NextNodeServerSpan[\"findPageComponents\"] = \"NextNodeServer.findPageComponents\";\n    NextNodeServerSpan[\"getFontManifest\"] = \"NextNodeServer.getFontManifest\";\n    NextNodeServerSpan[\"getServerComponentManifest\"] = \"NextNodeServer.getServerComponentManifest\";\n    NextNodeServerSpan[\"getRequestHandler\"] = \"NextNodeServer.getRequestHandler\";\n    NextNodeServerSpan[\"renderToHTML\"] = \"NextNodeServer.renderToHTML\";\n    NextNodeServerSpan[\"renderError\"] = \"NextNodeServer.renderError\";\n    NextNodeServerSpan[\"renderErrorToHTML\"] = \"NextNodeServer.renderErrorToHTML\";\n    NextNodeServerSpan[\"render404\"] = \"NextNodeServer.render404\";\n    NextNodeServerSpan[\"startResponse\"] = \"NextNodeServer.startResponse\";\n    // nested inner span, does not require parent scope name\n    NextNodeServerSpan[\"route\"] = \"route\";\n    NextNodeServerSpan[\"onProxyReq\"] = \"onProxyReq\";\n    NextNodeServerSpan[\"apiResolver\"] = \"apiResolver\";\n    NextNodeServerSpan[\"internalFetch\"] = \"internalFetch\";\n})(NextNodeServerSpan || (NextNodeServerSpan = {}));\nvar StartServerSpan;\n(function(StartServerSpan) {\n    StartServerSpan[\"startServer\"] = \"startServer.startServer\";\n})(StartServerSpan || (StartServerSpan = {}));\nvar RenderSpan;\n(function(RenderSpan) {\n    RenderSpan[\"getServerSideProps\"] = \"Render.getServerSideProps\";\n    RenderSpan[\"getStaticProps\"] = \"Render.getStaticProps\";\n    RenderSpan[\"renderToString\"] = \"Render.renderToString\";\n    RenderSpan[\"renderDocument\"] = \"Render.renderDocument\";\n    RenderSpan[\"createBodyResult\"] = \"Render.createBodyResult\";\n})(RenderSpan || (RenderSpan = {}));\nvar AppRenderSpan;\n(function(AppRenderSpan) {\n    AppRenderSpan[\"renderToString\"] = \"AppRender.renderToString\";\n    AppRenderSpan[\"renderToReadableStream\"] = \"AppRender.renderToReadableStream\";\n    AppRenderSpan[\"getBodyResult\"] = \"AppRender.getBodyResult\";\n    AppRenderSpan[\"fetch\"] = \"AppRender.fetch\";\n})(AppRenderSpan || (AppRenderSpan = {}));\nvar RouterSpan;\n(function(RouterSpan) {\n    RouterSpan[\"executeRoute\"] = \"Router.executeRoute\";\n})(RouterSpan || (RouterSpan = {}));\nvar NodeSpan;\n(function(NodeSpan) {\n    NodeSpan[\"runHandler\"] = \"Node.runHandler\";\n})(NodeSpan || (NodeSpan = {}));\nvar AppRouteRouteHandlersSpan;\n(function(AppRouteRouteHandlersSpan) {\n    AppRouteRouteHandlersSpan[\"runHandler\"] = \"AppRouteRouteHandlers.runHandler\";\n})(AppRouteRouteHandlersSpan || (AppRouteRouteHandlersSpan = {}));\nvar ResolveMetadataSpan;\n(function(ResolveMetadataSpan) {\n    ResolveMetadataSpan[\"generateMetadata\"] = \"ResolveMetadata.generateMetadata\";\n    ResolveMetadataSpan[\"generateViewport\"] = \"ResolveMetadata.generateViewport\";\n})(ResolveMetadataSpan || (ResolveMetadataSpan = {}));\nvar MiddlewareSpan;\n(function(MiddlewareSpan) {\n    MiddlewareSpan[\"execute\"] = \"Middleware.execute\";\n})(MiddlewareSpan || (MiddlewareSpan = {}));\n// This list is used to filter out spans that are not relevant to the user\nexport const NextVanillaSpanAllowlist = [\n    \"Middleware.execute\",\n    \"BaseServer.handleRequest\",\n    \"Render.getServerSideProps\",\n    \"Render.getStaticProps\",\n    \"AppRender.fetch\",\n    \"AppRender.getBodyResult\",\n    \"Render.renderDocument\",\n    \"Node.runHandler\",\n    \"AppRouteRouteHandlers.runHandler\",\n    \"ResolveMetadata.generateMetadata\",\n    \"ResolveMetadata.generateViewport\",\n    \"NextNodeServer.createComponentTree\",\n    \"NextNodeServer.findPageComponents\",\n    \"NextNodeServer.getLayoutOrPageModule\",\n    \"NextNodeServer.startResponse\",\n    \"NextNodeServer.clientComponentLoading\"\n];\n// These Spans are allowed to be always logged\n// when the otel log prefix env is set\nexport const LogSpanAllowList = [\n    \"NextNodeServer.findPageComponents\",\n    \"NextNodeServer.createComponentTree\",\n    \"NextNodeServer.clientComponentLoading\"\n];\nexport { BaseServerSpan, LoadComponentsSpan, NextServerSpan, NextNodeServerSpan, StartServerSpan, RenderSpan, RouterSpan, AppRenderSpan, NodeSpan, AppRouteRouteHandlersSpan, ResolveMetadataSpan, MiddlewareSpan,  };\n\n//# sourceMappingURL=constants.js.map","/**\n * Check to see if a value is Thenable.\n *\n * @param promise the maybe-thenable value\n * @returns true if the value is thenable\n */\nexport function isThenable<T = unknown>(\n  promise: Promise<T> | T\n): promise is Promise<T> {\n  return (\n    promise !== null &&\n    typeof promise === 'object' &&\n    'then' in promise &&\n    typeof promise.then === 'function'\n  )\n}\n","import { LogSpanAllowList, NextVanillaSpanAllowlist } from './constants';\nimport { isThenable } from '../../../shared/lib/is-thenable';\nlet api;\n// we want to allow users to use their own version of @opentelemetry/api if they\n// want to, so we try to require it first, and if it fails we fall back to the\n// version that is bundled with Next.js\n// this is because @opentelemetry/api has to be synced with the version of\n// @opentelemetry/tracing that is used, and we don't want to force users to use\n// the version that is bundled with Next.js.\n// the API is ~stable, so this should be fine\nif (process.env.NEXT_RUNTIME === 'edge') {\n    api = require('@opentelemetry/api');\n} else {\n    try {\n        api = require('@opentelemetry/api');\n    } catch (err) {\n        api = require('next/dist/compiled/@opentelemetry/api');\n    }\n}\nconst { context, propagation, trace, SpanStatusCode, SpanKind, ROOT_CONTEXT } = api;\nexport class BubbledError extends Error {\n    constructor(bubble, result){\n        super();\n        this.bubble = bubble;\n        this.result = result;\n    }\n}\nexport function isBubbledError(error) {\n    if (typeof error !== 'object' || error === null) return false;\n    return error instanceof BubbledError;\n}\nconst closeSpanWithError = (span, error)=>{\n    if (isBubbledError(error) && error.bubble) {\n        span.setAttribute('next.bubble', true);\n    } else {\n        if (error) {\n            span.recordException(error);\n        }\n        span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: error == null ? void 0 : error.message\n        });\n    }\n    span.end();\n};\n/** we use this map to propagate attributes from nested spans to the top span */ const rootSpanAttributesStore = new Map();\nconst rootSpanIdKey = api.createContextKey('next.rootSpanId');\nlet lastSpanId = 0;\nconst getSpanId = ()=>lastSpanId++;\nconst clientTraceDataSetter = {\n    set (carrier, key, value) {\n        carrier.push({\n            key,\n            value\n        });\n    }\n};\nclass NextTracerImpl {\n    /**\n   * Returns an instance to the trace with configured name.\n   * Since wrap / trace can be defined in any place prior to actual trace subscriber initialization,\n   * This should be lazily evaluated.\n   */ getTracerInstance() {\n        return trace.getTracer('next.js', '0.0.1');\n    }\n    getContext() {\n        return context;\n    }\n    getTracePropagationData() {\n        const activeContext = context.active();\n        const entries = [];\n        propagation.inject(activeContext, entries, clientTraceDataSetter);\n        return entries;\n    }\n    getActiveScopeSpan() {\n        return trace.getSpan(context == null ? void 0 : context.active());\n    }\n    withPropagatedContext(carrier, fn, getter) {\n        const activeContext = context.active();\n        if (trace.getSpanContext(activeContext)) {\n            // Active span is already set, too late to propagate.\n            return fn();\n        }\n        const remoteContext = propagation.extract(activeContext, carrier, getter);\n        return context.with(remoteContext, fn);\n    }\n    trace(...args) {\n        var _trace_getSpanContext;\n        const [type, fnOrOptions, fnOrEmpty] = args;\n        // coerce options form overload\n        const { fn, options } = typeof fnOrOptions === 'function' ? {\n            fn: fnOrOptions,\n            options: {}\n        } : {\n            fn: fnOrEmpty,\n            options: {\n                ...fnOrOptions\n            }\n        };\n        const spanName = options.spanName ?? type;\n        if (!NextVanillaSpanAllowlist.includes(type) && process.env.NEXT_OTEL_VERBOSE !== '1' || options.hideSpan) {\n            return fn();\n        }\n        // Trying to get active scoped span to assign parent. If option specifies parent span manually, will try to use it.\n        let spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        let isRootSpan = false;\n        if (!spanContext) {\n            spanContext = (context == null ? void 0 : context.active()) ?? ROOT_CONTEXT;\n            isRootSpan = true;\n        } else if ((_trace_getSpanContext = trace.getSpanContext(spanContext)) == null ? void 0 : _trace_getSpanContext.isRemote) {\n            isRootSpan = true;\n        }\n        const spanId = getSpanId();\n        options.attributes = {\n            'next.span_name': spanName,\n            'next.span_type': type,\n            ...options.attributes\n        };\n        return context.with(spanContext.setValue(rootSpanIdKey, spanId), ()=>this.getTracerInstance().startActiveSpan(spanName, options, (span)=>{\n                const startTime = 'performance' in globalThis && 'measure' in performance ? globalThis.performance.now() : undefined;\n                const onCleanup = ()=>{\n                    rootSpanAttributesStore.delete(spanId);\n                    if (startTime && process.env.NEXT_OTEL_PERFORMANCE_PREFIX && LogSpanAllowList.includes(type || '')) {\n                        performance.measure(`${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-${(type.split('.').pop() || '').replace(/[A-Z]/g, (match)=>'-' + match.toLowerCase())}`, {\n                            start: startTime,\n                            end: performance.now()\n                        });\n                    }\n                };\n                if (isRootSpan) {\n                    rootSpanAttributesStore.set(spanId, new Map(Object.entries(options.attributes ?? {})));\n                }\n                try {\n                    if (fn.length > 1) {\n                        return fn(span, (err)=>closeSpanWithError(span, err));\n                    }\n                    const result = fn(span);\n                    if (isThenable(result)) {\n                        // If there's error make sure it throws\n                        return result.then((res)=>{\n                            span.end();\n                            // Need to pass down the promise result,\n                            // it could be react stream response with error { error, stream }\n                            return res;\n                        }).catch((err)=>{\n                            closeSpanWithError(span, err);\n                            throw err;\n                        }).finally(onCleanup);\n                    } else {\n                        span.end();\n                        onCleanup();\n                    }\n                    return result;\n                } catch (err) {\n                    closeSpanWithError(span, err);\n                    onCleanup();\n                    throw err;\n                }\n            }));\n    }\n    wrap(...args) {\n        const tracer = this;\n        const [name, options, fn] = args.length === 3 ? args : [\n            args[0],\n            {},\n            args[1]\n        ];\n        if (!NextVanillaSpanAllowlist.includes(name) && process.env.NEXT_OTEL_VERBOSE !== '1') {\n            return fn;\n        }\n        return function() {\n            let optionsObj = options;\n            if (typeof optionsObj === 'function' && typeof fn === 'function') {\n                optionsObj = optionsObj.apply(this, arguments);\n            }\n            const lastArgId = arguments.length - 1;\n            const cb = arguments[lastArgId];\n            if (typeof cb === 'function') {\n                const scopeBoundCb = tracer.getContext().bind(context.active(), cb);\n                return tracer.trace(name, optionsObj, (_span, done)=>{\n                    arguments[lastArgId] = function(err) {\n                        done == null ? void 0 : done(err);\n                        return scopeBoundCb.apply(this, arguments);\n                    };\n                    return fn.apply(this, arguments);\n                });\n            } else {\n                return tracer.trace(name, optionsObj, ()=>fn.apply(this, arguments));\n            }\n        };\n    }\n    startSpan(...args) {\n        const [type, options] = args;\n        const spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        return this.getTracerInstance().startSpan(type, options, spanContext);\n    }\n    getSpanContext(parentSpan) {\n        const spanContext = parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined;\n        return spanContext;\n    }\n    getRootSpanAttributes() {\n        const spanId = context.active().getValue(rootSpanIdKey);\n        return rootSpanAttributesStore.get(spanId);\n    }\n    setRootSpanAttribute(key, value) {\n        const spanId = context.active().getValue(rootSpanIdKey);\n        const attributes = rootSpanAttributesStore.get(spanId);\n        if (attributes) {\n            attributes.set(key, value);\n        }\n    }\n}\nconst getTracer = (()=>{\n    const tracer = new NextTracerImpl();\n    return ()=>tracer;\n})();\nexport { getTracer, SpanStatusCode, SpanKind };\n\n//# sourceMappingURL=tracer.js.map","// eslint-disable-next-line import/no-extraneous-dependencies\nimport 'server-only';\nimport { cache } from 'react';\nimport { createDefaultMetadata, createDefaultViewport } from './default-metadata';\nimport { resolveOpenGraph, resolveTwitter } from './resolvers/resolve-opengraph';\nimport { resolveTitle } from './resolvers/resolve-title';\nimport { resolveAsArrayOrUndefined } from './generate/utils';\nimport { getComponentTypeModule, getLayoutOrPageModule } from '../../server/lib/app-dir-module';\nimport { interopDefault } from '../interop-default';\nimport { resolveAlternates, resolveAppleWebApp, resolveAppLinks, resolveRobots, resolveThemeColor, resolveVerification, resolveItunes, resolveFacebook } from './resolvers/resolve-basics';\nimport { resolveIcons } from './resolvers/resolve-icons';\nimport { getTracer } from '../../server/lib/trace/tracer';\nimport { ResolveMetadataSpan } from '../../server/lib/trace/constants';\nimport { PAGE_SEGMENT_KEY } from '../../shared/lib/segment';\nimport * as Log from '../../build/output/log';\nfunction isFavicon(icon) {\n    if (!icon) {\n        return false;\n    }\n    // turbopack appends a hash to all images\n    return (icon.url === '/favicon.ico' || icon.url.toString().startsWith('/favicon.ico?')) && icon.type === 'image/x-icon';\n}\nfunction mergeStaticMetadata(source, target, staticFilesMetadata, metadataContext, titleTemplates, leafSegmentStaticIcons) {\n    var _source_twitter, _source_openGraph;\n    if (!staticFilesMetadata) return;\n    const { icon, apple, openGraph, twitter, manifest } = staticFilesMetadata;\n    // Keep updating the static icons in the most leaf node\n    if (icon) {\n        leafSegmentStaticIcons.icon = icon;\n    }\n    if (apple) {\n        leafSegmentStaticIcons.apple = apple;\n    }\n    // file based metadata is specified and current level metadata twitter.images is not specified\n    if (twitter && !(source == null ? void 0 : (_source_twitter = source.twitter) == null ? void 0 : _source_twitter.hasOwnProperty('images'))) {\n        const resolvedTwitter = resolveTwitter({\n            ...target.twitter,\n            images: twitter\n        }, target.metadataBase, metadataContext, titleTemplates.twitter);\n        target.twitter = resolvedTwitter;\n    }\n    // file based metadata is specified and current level metadata openGraph.images is not specified\n    if (openGraph && !(source == null ? void 0 : (_source_openGraph = source.openGraph) == null ? void 0 : _source_openGraph.hasOwnProperty('images'))) {\n        const resolvedOpenGraph = resolveOpenGraph({\n            ...target.openGraph,\n            images: openGraph\n        }, target.metadataBase, metadataContext, titleTemplates.openGraph);\n        target.openGraph = resolvedOpenGraph;\n    }\n    if (manifest) {\n        target.manifest = manifest;\n    }\n    return target;\n}\n// Merge the source metadata into the resolved target metadata.\nfunction mergeMetadata({ source, target, staticFilesMetadata, titleTemplates, metadataContext, buildState, leafSegmentStaticIcons }) {\n    // If there's override metadata, prefer it otherwise fallback to the default metadata.\n    const metadataBase = typeof (source == null ? void 0 : source.metadataBase) !== 'undefined' ? source.metadataBase : target.metadataBase;\n    for(const key_ in source){\n        const key = key_;\n        switch(key){\n            case 'title':\n                {\n                    target.title = resolveTitle(source.title, titleTemplates.title);\n                    break;\n                }\n            case 'alternates':\n                {\n                    target.alternates = resolveAlternates(source.alternates, metadataBase, metadataContext);\n                    break;\n                }\n            case 'openGraph':\n                {\n                    target.openGraph = resolveOpenGraph(source.openGraph, metadataBase, metadataContext, titleTemplates.openGraph);\n                    break;\n                }\n            case 'twitter':\n                {\n                    target.twitter = resolveTwitter(source.twitter, metadataBase, metadataContext, titleTemplates.twitter);\n                    break;\n                }\n            case 'facebook':\n                target.facebook = resolveFacebook(source.facebook);\n                break;\n            case 'verification':\n                target.verification = resolveVerification(source.verification);\n                break;\n            case 'icons':\n                {\n                    target.icons = resolveIcons(source.icons);\n                    break;\n                }\n            case 'appleWebApp':\n                target.appleWebApp = resolveAppleWebApp(source.appleWebApp);\n                break;\n            case 'appLinks':\n                target.appLinks = resolveAppLinks(source.appLinks);\n                break;\n            case 'robots':\n                {\n                    target.robots = resolveRobots(source.robots);\n                    break;\n                }\n            case 'archives':\n            case 'assets':\n            case 'bookmarks':\n            case 'keywords':\n                {\n                    target[key] = resolveAsArrayOrUndefined(source[key]);\n                    break;\n                }\n            case 'authors':\n                {\n                    target[key] = resolveAsArrayOrUndefined(source.authors);\n                    break;\n                }\n            case 'itunes':\n                {\n                    target[key] = resolveItunes(source.itunes, metadataBase, metadataContext);\n                    break;\n                }\n            // directly assign fields that fallback to null\n            case 'applicationName':\n            case 'description':\n            case 'generator':\n            case 'creator':\n            case 'publisher':\n            case 'category':\n            case 'classification':\n            case 'referrer':\n            case 'formatDetection':\n            case 'manifest':\n                // @ts-ignore TODO: support inferring\n                target[key] = source[key] || null;\n                break;\n            case 'other':\n                target.other = Object.assign({}, target.other, source.other);\n                break;\n            case 'metadataBase':\n                target.metadataBase = metadataBase;\n                break;\n            default:\n                {\n                    if ((key === 'viewport' || key === 'themeColor' || key === 'colorScheme') && source[key] != null) {\n                        buildState.warnings.add(`Unsupported metadata ${key} is configured in metadata export in ${metadataContext.pathname}. Please move it to viewport export instead.\\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport`);\n                    }\n                    break;\n                }\n        }\n    }\n    mergeStaticMetadata(source, target, staticFilesMetadata, metadataContext, titleTemplates, leafSegmentStaticIcons);\n}\nfunction mergeViewport({ target, source }) {\n    if (!source) return;\n    for(const key_ in source){\n        const key = key_;\n        switch(key){\n            case 'themeColor':\n                {\n                    target.themeColor = resolveThemeColor(source.themeColor);\n                    break;\n                }\n            case 'colorScheme':\n                target.colorScheme = source.colorScheme || null;\n                break;\n            default:\n                if (typeof source[key] !== 'undefined') {\n                    // @ts-ignore viewport properties\n                    target[key] = source[key];\n                }\n                break;\n        }\n    }\n}\nasync function getDefinedViewport(mod, props, tracingProps) {\n    if (typeof mod.generateViewport === 'function') {\n        const { route } = tracingProps;\n        return (parent)=>getTracer().trace(ResolveMetadataSpan.generateViewport, {\n                spanName: `generateViewport ${route}`,\n                attributes: {\n                    'next.page': route\n                }\n            }, ()=>mod.generateViewport(props, parent));\n    }\n    return mod.viewport || null;\n}\nasync function getDefinedMetadata(mod, props, tracingProps) {\n    if (typeof mod.generateMetadata === 'function') {\n        const { route } = tracingProps;\n        return (parent)=>getTracer().trace(ResolveMetadataSpan.generateMetadata, {\n                spanName: `generateMetadata ${route}`,\n                attributes: {\n                    'next.page': route\n                }\n            }, ()=>mod.generateMetadata(props, parent));\n    }\n    return mod.metadata || null;\n}\nasync function collectStaticImagesFiles(metadata, props, type) {\n    var _this;\n    if (!(metadata == null ? void 0 : metadata[type])) return undefined;\n    const iconPromises = metadata[type].map(async (imageModule)=>interopDefault(await imageModule(props)));\n    return (iconPromises == null ? void 0 : iconPromises.length) > 0 ? (_this = await Promise.all(iconPromises)) == null ? void 0 : _this.flat() : undefined;\n}\nasync function resolveStaticMetadata(modules, props) {\n    const { metadata } = modules;\n    if (!metadata) return null;\n    const [icon, apple, openGraph, twitter] = await Promise.all([\n        collectStaticImagesFiles(metadata, props, 'icon'),\n        collectStaticImagesFiles(metadata, props, 'apple'),\n        collectStaticImagesFiles(metadata, props, 'openGraph'),\n        collectStaticImagesFiles(metadata, props, 'twitter')\n    ]);\n    const staticMetadata = {\n        icon,\n        apple,\n        openGraph,\n        twitter,\n        manifest: metadata.manifest\n    };\n    return staticMetadata;\n}\n// [layout.metadata, static files metadata] -> ... -> [page.metadata, static files metadata]\nasync function collectMetadata({ tree, metadataItems, errorMetadataItem, props, route, errorConvention }) {\n    let mod;\n    let modType;\n    const hasErrorConventionComponent = Boolean(errorConvention && tree[2][errorConvention]);\n    if (errorConvention) {\n        mod = await getComponentTypeModule(tree, 'layout');\n        modType = errorConvention;\n    } else {\n        const { mod: layoutOrPageMod, modType: layoutOrPageModType } = await getLayoutOrPageModule(tree);\n        mod = layoutOrPageMod;\n        modType = layoutOrPageModType;\n    }\n    if (modType) {\n        route += `/${modType}`;\n    }\n    const staticFilesMetadata = await resolveStaticMetadata(tree[2], props);\n    const metadataExport = mod ? await getDefinedMetadata(mod, props, {\n        route\n    }) : null;\n    const viewportExport = mod ? await getDefinedViewport(mod, props, {\n        route\n    }) : null;\n    metadataItems.push([\n        metadataExport,\n        staticFilesMetadata,\n        viewportExport\n    ]);\n    if (hasErrorConventionComponent && errorConvention) {\n        const errorMod = await getComponentTypeModule(tree, errorConvention);\n        const errorViewportExport = errorMod ? await getDefinedViewport(errorMod, props, {\n            route\n        }) : null;\n        const errorMetadataExport = errorMod ? await getDefinedMetadata(errorMod, props, {\n            route\n        }) : null;\n        errorMetadataItem[0] = errorMetadataExport;\n        errorMetadataItem[1] = staticFilesMetadata;\n        errorMetadataItem[2] = errorViewportExport;\n    }\n}\nconst cachedResolveMetadataItems = cache(resolveMetadataItems);\nexport { cachedResolveMetadataItems as resolveMetadataItems };\nasync function resolveMetadataItems(tree, searchParams, errorConvention, getDynamicParamFromSegment, createServerParamsForMetadata, workStore) {\n    const parentParams = {};\n    const metadataItems = [];\n    const errorMetadataItem = [\n        null,\n        null,\n        null\n    ];\n    const treePrefix = undefined;\n    return resolveMetadataItemsImpl(metadataItems, tree, treePrefix, parentParams, searchParams, errorConvention, errorMetadataItem, getDynamicParamFromSegment, createServerParamsForMetadata, workStore);\n}\nasync function resolveMetadataItemsImpl(metadataItems, tree, /** Provided tree can be nested subtree, this argument says what is the path of such subtree */ treePrefix, parentParams, searchParams, errorConvention, errorMetadataItem, getDynamicParamFromSegment, createServerParamsForMetadata, workStore) {\n    const [segment, parallelRoutes, { page }] = tree;\n    const currentTreePrefix = treePrefix && treePrefix.length ? [\n        ...treePrefix,\n        segment\n    ] : [\n        segment\n    ];\n    const isPage = typeof page !== 'undefined';\n    // Handle dynamic segment params.\n    const segmentParam = getDynamicParamFromSegment(segment);\n    /**\n   * Create object holding the parent params and current params\n   */ let currentParams = parentParams;\n    if (segmentParam && segmentParam.value !== null) {\n        currentParams = {\n            ...parentParams,\n            [segmentParam.param]: segmentParam.value\n        };\n    }\n    const params = createServerParamsForMetadata(currentParams, workStore);\n    let layerProps;\n    if (isPage) {\n        layerProps = {\n            params,\n            searchParams\n        };\n    } else {\n        layerProps = {\n            params\n        };\n    }\n    await collectMetadata({\n        tree,\n        metadataItems,\n        errorMetadataItem,\n        errorConvention,\n        props: layerProps,\n        route: currentTreePrefix// __PAGE__ shouldn't be shown in a route\n        .filter((s)=>s !== PAGE_SEGMENT_KEY).join('/')\n    });\n    for(const key in parallelRoutes){\n        const childTree = parallelRoutes[key];\n        await resolveMetadataItemsImpl(metadataItems, childTree, currentTreePrefix, currentParams, searchParams, errorConvention, errorMetadataItem, getDynamicParamFromSegment, createServerParamsForMetadata, workStore);\n    }\n    if (Object.keys(parallelRoutes).length === 0 && errorConvention) {\n        // If there are no parallel routes, place error metadata as the last item.\n        // e.g. layout -> layout -> not-found\n        metadataItems.push(errorMetadataItem);\n    }\n    return metadataItems;\n}\nconst isTitleTruthy = (title)=>!!(title == null ? void 0 : title.absolute);\nconst hasTitle = (metadata)=>isTitleTruthy(metadata == null ? void 0 : metadata.title);\nfunction inheritFromMetadata(target, metadata) {\n    if (target) {\n        if (!hasTitle(target) && hasTitle(metadata)) {\n            target.title = metadata.title;\n        }\n        if (!target.description && metadata.description) {\n            target.description = metadata.description;\n        }\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst commonOgKeys = [\n    'title',\n    'description',\n    'images'\n];\nfunction postProcessMetadata(metadata, favicon, titleTemplates, metadataContext) {\n    const { openGraph, twitter } = metadata;\n    if (openGraph) {\n        // If there's openGraph information but not configured in twitter,\n        // inherit them from openGraph metadata.\n        let autoFillProps = {};\n        const hasTwTitle = hasTitle(twitter);\n        const hasTwDescription = twitter == null ? void 0 : twitter.description;\n        const hasTwImages = Boolean((twitter == null ? void 0 : twitter.hasOwnProperty('images')) && twitter.images);\n        if (!hasTwTitle) {\n            if (isTitleTruthy(openGraph.title)) {\n                autoFillProps.title = openGraph.title;\n            } else if (metadata.title && isTitleTruthy(metadata.title)) {\n                autoFillProps.title = metadata.title;\n            }\n        }\n        if (!hasTwDescription) autoFillProps.description = openGraph.description || metadata.description || undefined;\n        if (!hasTwImages) autoFillProps.images = openGraph.images;\n        if (Object.keys(autoFillProps).length > 0) {\n            const partialTwitter = resolveTwitter(autoFillProps, metadata.metadataBase, metadataContext, titleTemplates.twitter);\n            if (metadata.twitter) {\n                metadata.twitter = Object.assign({}, metadata.twitter, {\n                    ...!hasTwTitle && {\n                        title: partialTwitter == null ? void 0 : partialTwitter.title\n                    },\n                    ...!hasTwDescription && {\n                        description: partialTwitter == null ? void 0 : partialTwitter.description\n                    },\n                    ...!hasTwImages && {\n                        images: partialTwitter == null ? void 0 : partialTwitter.images\n                    }\n                });\n            } else {\n                metadata.twitter = partialTwitter;\n            }\n        }\n    }\n    // If there's no title and description configured in openGraph or twitter,\n    // use the title and description from metadata.\n    inheritFromMetadata(openGraph, metadata);\n    inheritFromMetadata(twitter, metadata);\n    if (favicon) {\n        if (!metadata.icons) {\n            metadata.icons = {\n                icon: [],\n                apple: []\n            };\n        }\n        metadata.icons.icon.unshift(favicon);\n    }\n    return metadata;\n}\nfunction collectMetadataExportPreloading(results, dynamicMetadataExportFn, resolvers) {\n    const result = dynamicMetadataExportFn(new Promise((resolve)=>{\n        resolvers.push(resolve);\n    }));\n    if (result instanceof Promise) {\n        // since we eager execute generateMetadata and\n        // they can reject at anytime we need to ensure\n        // we attach the catch handler right away to\n        // prevent unhandled rejections crashing the process\n        result.catch((err)=>{\n            return {\n                __nextError: err\n            };\n        });\n    }\n    results.push(result);\n}\nasync function getMetadataFromExport(getPreloadMetadataExport, dynamicMetadataResolveState, metadataItems, currentIndex, resolvedMetadata, metadataResults) {\n    const metadataExport = getPreloadMetadataExport(metadataItems[currentIndex]);\n    const dynamicMetadataResolvers = dynamicMetadataResolveState.resolvers;\n    let metadata = null;\n    if (typeof metadataExport === 'function') {\n        // Only preload at the beginning when resolves are empty\n        if (!dynamicMetadataResolvers.length) {\n            for(let j = currentIndex; j < metadataItems.length; j++){\n                const preloadMetadataExport = getPreloadMetadataExport(metadataItems[j]);\n                // call each `generateMetadata function concurrently and stash their resolver\n                if (typeof preloadMetadataExport === 'function') {\n                    collectMetadataExportPreloading(metadataResults, preloadMetadataExport, dynamicMetadataResolvers);\n                }\n            }\n        }\n        const resolveParent = dynamicMetadataResolvers[dynamicMetadataResolveState.resolvingIndex];\n        const metadataResult = metadataResults[dynamicMetadataResolveState.resolvingIndex++];\n        // In dev we clone and freeze to prevent relying on mutating resolvedMetadata directly.\n        // In prod we just pass resolvedMetadata through without any copying.\n        const currentResolvedMetadata = process.env.NODE_ENV === 'development' ? Object.freeze(require('./clone-metadata').cloneMetadata(resolvedMetadata)) : resolvedMetadata;\n        // This resolve should unblock the generateMetadata function if it awaited the parent\n        // argument. If it didn't await the parent argument it might already have a value since it was\n        // called concurrently. Regardless we await the return value before continuing on to the next layer\n        resolveParent(currentResolvedMetadata);\n        metadata = metadataResult instanceof Promise ? await metadataResult : metadataResult;\n        if (metadata && typeof metadata === 'object' && '__nextError' in metadata) {\n            // re-throw caught metadata error from preloading\n            throw metadata['__nextError'];\n        }\n    } else if (metadataExport !== null && typeof metadataExport === 'object') {\n        // This metadataExport is the object form\n        metadata = metadataExport;\n    }\n    return metadata;\n}\nexport async function accumulateMetadata(metadataItems, metadataContext) {\n    const resolvedMetadata = createDefaultMetadata();\n    const metadataResults = [];\n    let titleTemplates = {\n        title: null,\n        twitter: null,\n        openGraph: null\n    };\n    // Loop over all metadata items again, merging synchronously any static object exports,\n    // awaiting any static promise exports, and resolving parent metadata and awaiting any generated metadata\n    const dynamicMetadataResolvers = {\n        resolvers: [],\n        resolvingIndex: 0\n    };\n    const buildState = {\n        warnings: new Set()\n    };\n    let favicon;\n    // Collect the static icons in the most leaf node,\n    // since we don't collect all the static metadata icons in the parent segments.\n    const leafSegmentStaticIcons = {\n        icon: [],\n        apple: []\n    };\n    for(let i = 0; i < metadataItems.length; i++){\n        var _staticFilesMetadata_icon;\n        const staticFilesMetadata = metadataItems[i][1];\n        // Treat favicon as special case, it should be the first icon in the list\n        // i <= 1 represents root layout, and if current page is also at root\n        if (i <= 1 && isFavicon(staticFilesMetadata == null ? void 0 : (_staticFilesMetadata_icon = staticFilesMetadata.icon) == null ? void 0 : _staticFilesMetadata_icon[0])) {\n            var _staticFilesMetadata_icon1;\n            const iconMod = staticFilesMetadata == null ? void 0 : (_staticFilesMetadata_icon1 = staticFilesMetadata.icon) == null ? void 0 : _staticFilesMetadata_icon1.shift();\n            if (i === 0) favicon = iconMod;\n        }\n        const metadata = await getMetadataFromExport((metadataItem)=>metadataItem[0], dynamicMetadataResolvers, metadataItems, i, resolvedMetadata, metadataResults);\n        mergeMetadata({\n            target: resolvedMetadata,\n            source: metadata,\n            metadataContext,\n            staticFilesMetadata,\n            titleTemplates,\n            buildState,\n            leafSegmentStaticIcons\n        });\n        // If the layout is the same layer with page, skip the leaf layout and leaf page\n        // The leaf layout and page are the last two items\n        if (i < metadataItems.length - 2) {\n            var _resolvedMetadata_title, _resolvedMetadata_openGraph, _resolvedMetadata_twitter;\n            titleTemplates = {\n                title: ((_resolvedMetadata_title = resolvedMetadata.title) == null ? void 0 : _resolvedMetadata_title.template) || null,\n                openGraph: ((_resolvedMetadata_openGraph = resolvedMetadata.openGraph) == null ? void 0 : _resolvedMetadata_openGraph.title.template) || null,\n                twitter: ((_resolvedMetadata_twitter = resolvedMetadata.twitter) == null ? void 0 : _resolvedMetadata_twitter.title.template) || null\n            };\n        }\n    }\n    if (leafSegmentStaticIcons.icon.length > 0 || leafSegmentStaticIcons.apple.length > 0) {\n        if (!resolvedMetadata.icons) {\n            resolvedMetadata.icons = {\n                icon: [],\n                apple: []\n            };\n            if (leafSegmentStaticIcons.icon.length > 0) {\n                resolvedMetadata.icons.icon.unshift(...leafSegmentStaticIcons.icon);\n            }\n            if (leafSegmentStaticIcons.apple.length > 0) {\n                resolvedMetadata.icons.apple.unshift(...leafSegmentStaticIcons.apple);\n            }\n        }\n    }\n    // Only log warnings if there are any, and only once after the metadata resolving process is finished\n    if (buildState.warnings.size > 0) {\n        for (const warning of buildState.warnings){\n            Log.warn(warning);\n        }\n    }\n    return postProcessMetadata(resolvedMetadata, favicon, titleTemplates, metadataContext);\n}\nexport async function accumulateViewport(metadataItems) {\n    const resolvedViewport = createDefaultViewport();\n    const viewportResults = [];\n    const dynamicMetadataResolvers = {\n        resolvers: [],\n        resolvingIndex: 0\n    };\n    for(let i = 0; i < metadataItems.length; i++){\n        const viewport = await getMetadataFromExport((metadataItem)=>metadataItem[2], dynamicMetadataResolvers, metadataItems, i, resolvedViewport, viewportResults);\n        mergeViewport({\n            target: resolvedViewport,\n            source: viewport\n        });\n    }\n    return resolvedViewport;\n}\n\n//# sourceMappingURL=resolve-metadata.js.map","const NOT_FOUND_ERROR_CODE = 'NEXT_NOT_FOUND'\n\nexport type NotFoundError = Error & { digest: typeof NOT_FOUND_ERROR_CODE }\n\n/**\n * This function allows you to render the [not-found.js file](https://nextjs.org/docs/app/api-reference/file-conventions/not-found)\n * within a route segment as well as inject a tag.\n *\n * `notFound()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a `<meta name=\"robots\" content=\"noindex\" />` meta tag and set the status code to 404.\n * - In a Route Handler or Server Action, it will serve a 404 to the caller.\n *\n * Read more: [Next.js Docs: `notFound`](https://nextjs.org/docs/app/api-reference/functions/not-found)\n */\nexport function notFound(): never {\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(NOT_FOUND_ERROR_CODE)\n  ;(error as NotFoundError).digest = NOT_FOUND_ERROR_CODE\n  throw error\n}\n\n/**\n * Checks an error to determine if it's an error generated by the `notFound()`\n * helper.\n *\n * @param error the error that may reference a not found error\n * @returns true if the error is a not found error\n */\nexport function isNotFoundError(error: unknown): error is NotFoundError {\n  if (typeof error !== 'object' || error === null || !('digest' in error)) {\n    return false\n  }\n\n  return error.digest === NOT_FOUND_ERROR_CODE\n}\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { cache, cloneElement } from 'react';\nimport { AppleWebAppMeta, FormatDetectionMeta, ItunesMeta, BasicMeta, ViewportMeta, VerificationMeta, FacebookMeta } from './generate/basic';\nimport { AlternatesMetadata } from './generate/alternate';\nimport { OpenGraphMetadata, TwitterMetadata, AppLinksMeta } from './generate/opengraph';\nimport { IconsMetadata } from './generate/icons';\nimport { resolveMetadataItems, accumulateMetadata, accumulateViewport } from './resolve-metadata';\nimport { MetaFilter } from './generate/meta';\nimport { isNotFoundError } from '../../client/components/not-found';\nimport { METADATA_BOUNDARY_NAME, VIEWPORT_BOUNDARY_NAME } from './metadata-constants';\n// Use a promise to share the status of the metadata resolving,\n// returning two components `MetadataTree` and `MetadataOutlet`\n// `MetadataTree` is the one that will be rendered at first in the content sequence for metadata tags.\n// `MetadataOutlet` is the one that will be rendered under error boundaries for metadata resolving errors.\n// In this way we can let the metadata tags always render successfully,\n// and the error will be caught by the error boundary and trigger fallbacks.\nexport function createMetadataComponents({ tree, searchParams, metadataContext, getDynamicParamFromSegment, appUsingSizeAdjustment, errorType, createServerParamsForMetadata, workStore, MetadataBoundary, ViewportBoundary }) {\n    function MetadataRoot() {\n        return /*#__PURE__*/ _jsxs(_Fragment, {\n            children: [\n                /*#__PURE__*/ _jsx(MetadataBoundary, {\n                    children: /*#__PURE__*/ _jsx(Metadata, {})\n                }),\n                /*#__PURE__*/ _jsx(ViewportBoundary, {\n                    children: /*#__PURE__*/ _jsx(Viewport, {})\n                }),\n                appUsingSizeAdjustment ? /*#__PURE__*/ _jsx(\"meta\", {\n                    name: \"next-size-adjust\"\n                }) : null\n            ]\n        });\n    }\n    async function viewport() {\n        return getResolvedViewport(tree, searchParams, getDynamicParamFromSegment, createServerParamsForMetadata, workStore, errorType);\n    }\n    async function Viewport() {\n        try {\n            return await viewport();\n        } catch (error) {\n            if (!errorType && isNotFoundError(error)) {\n                try {\n                    return await getNotFoundViewport(tree, searchParams, getDynamicParamFromSegment, createServerParamsForMetadata, workStore);\n                } catch  {}\n            }\n            // We don't actually want to error in this component. We will\n            // also error in the MetadataOutlet which causes the error to\n            // bubble from the right position in the page to be caught by the\n            // appropriate boundaries\n            return null;\n        }\n    }\n    Viewport.displayName = VIEWPORT_BOUNDARY_NAME;\n    async function metadata() {\n        return getResolvedMetadata(tree, searchParams, getDynamicParamFromSegment, metadataContext, createServerParamsForMetadata, workStore, errorType);\n    }\n    async function Metadata() {\n        try {\n            return await metadata();\n        } catch (error) {\n            if (!errorType && isNotFoundError(error)) {\n                try {\n                    return await getNotFoundMetadata(tree, searchParams, getDynamicParamFromSegment, metadataContext, createServerParamsForMetadata, workStore);\n                } catch  {}\n            }\n            // We don't actually want to error in this component. We will\n            // also error in the MetadataOutlet which causes the error to\n            // bubble from the right position in the page to be caught by the\n            // appropriate boundaries\n            return null;\n        }\n    }\n    Metadata.displayName = METADATA_BOUNDARY_NAME;\n    async function getMetadataAndViewportReady() {\n        await viewport();\n        await metadata();\n        return undefined;\n    }\n    return [\n        MetadataRoot,\n        getMetadataAndViewportReady\n    ];\n}\nconst getResolvedMetadata = cache(getResolvedMetadataImpl);\nasync function getResolvedMetadataImpl(tree, searchParams, getDynamicParamFromSegment, metadataContext, createServerParamsForMetadata, workStore, errorType) {\n    const errorConvention = errorType === 'redirect' ? undefined : errorType;\n    const metadataItems = await resolveMetadataItems(tree, searchParams, errorConvention, getDynamicParamFromSegment, createServerParamsForMetadata, workStore);\n    const elements = createMetadataElements(await accumulateMetadata(metadataItems, metadataContext));\n    return /*#__PURE__*/ _jsx(_Fragment, {\n        children: elements.map((el, index)=>{\n            return /*#__PURE__*/ cloneElement(el, {\n                key: index\n            });\n        })\n    });\n}\nconst getNotFoundMetadata = cache(getNotFoundMetadataImpl);\nasync function getNotFoundMetadataImpl(tree, searchParams, getDynamicParamFromSegment, metadataContext, createServerParamsForMetadata, workStore) {\n    const notFoundErrorConvention = 'not-found';\n    const notFoundMetadataItems = await resolveMetadataItems(tree, searchParams, notFoundErrorConvention, getDynamicParamFromSegment, createServerParamsForMetadata, workStore);\n    const elements = createMetadataElements(await accumulateMetadata(notFoundMetadataItems, metadataContext));\n    return /*#__PURE__*/ _jsx(_Fragment, {\n        children: elements.map((el, index)=>{\n            return /*#__PURE__*/ cloneElement(el, {\n                key: index\n            });\n        })\n    });\n}\nconst getResolvedViewport = cache(getResolvedViewportImpl);\nasync function getResolvedViewportImpl(tree, searchParams, getDynamicParamFromSegment, createServerParamsForMetadata, workStore, errorType) {\n    const errorConvention = errorType === 'redirect' ? undefined : errorType;\n    const metadataItems = await resolveMetadataItems(tree, searchParams, errorConvention, getDynamicParamFromSegment, createServerParamsForMetadata, workStore);\n    const elements = createViewportElements(await accumulateViewport(metadataItems));\n    return /*#__PURE__*/ _jsx(_Fragment, {\n        children: elements.map((el, index)=>{\n            return /*#__PURE__*/ cloneElement(el, {\n                key: index\n            });\n        })\n    });\n}\nconst getNotFoundViewport = cache(getNotFoundViewportImpl);\nasync function getNotFoundViewportImpl(tree, searchParams, getDynamicParamFromSegment, createServerParamsForMetadata, workStore) {\n    const notFoundErrorConvention = 'not-found';\n    const notFoundMetadataItems = await resolveMetadataItems(tree, searchParams, notFoundErrorConvention, getDynamicParamFromSegment, createServerParamsForMetadata, workStore);\n    const elements = createViewportElements(await accumulateViewport(notFoundMetadataItems));\n    return /*#__PURE__*/ _jsx(_Fragment, {\n        children: elements.map((el, index)=>{\n            return /*#__PURE__*/ cloneElement(el, {\n                key: index\n            });\n        })\n    });\n}\nfunction createMetadataElements(metadata) {\n    return MetaFilter([\n        BasicMeta({\n            metadata\n        }),\n        AlternatesMetadata({\n            alternates: metadata.alternates\n        }),\n        ItunesMeta({\n            itunes: metadata.itunes\n        }),\n        FacebookMeta({\n            facebook: metadata.facebook\n        }),\n        FormatDetectionMeta({\n            formatDetection: metadata.formatDetection\n        }),\n        VerificationMeta({\n            verification: metadata.verification\n        }),\n        AppleWebAppMeta({\n            appleWebApp: metadata.appleWebApp\n        }),\n        OpenGraphMetadata({\n            openGraph: metadata.openGraph\n        }),\n        TwitterMetadata({\n            twitter: metadata.twitter\n        }),\n        AppLinksMeta({\n            appLinks: metadata.appLinks\n        }),\n        IconsMetadata({\n            icons: metadata.icons\n        })\n    ]);\n}\nfunction createViewportElements(viewport) {\n    return MetaFilter([\n        ViewportMeta({\n            viewport: viewport\n        })\n    ]);\n}\n\n//# sourceMappingURL=metadata.js.map","/**\n * Based on https://github.com/facebook/react/blob/d4e78c42a94be027b4dc7ed2659a5fddfbf9bd4e/packages/react/src/ReactFetch.js\n */ import * as React from 'react';\nconst simpleCacheKey = '[\"GET\",[],null,\"follow\",null,null,null,null]' // generateCacheKey(new Request('https://blank'));\n;\nfunction generateCacheKey(request) {\n    // We pick the fields that goes into the key used to dedupe requests.\n    // We don't include the `cache` field, because we end up using whatever\n    // caching resulted from the first request.\n    // Notably we currently don't consider non-standard (or future) options.\n    // This might not be safe. TODO: warn for non-standard extensions differing.\n    // IF YOU CHANGE THIS UPDATE THE simpleCacheKey ABOVE.\n    return JSON.stringify([\n        request.method,\n        Array.from(request.headers.entries()),\n        request.mode,\n        request.redirect,\n        request.credentials,\n        request.referrer,\n        request.referrerPolicy,\n        request.integrity\n    ]);\n}\nexport function createDedupeFetch(originalFetch) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars -- url is the cache key\n    const getCacheEntries = React.cache((url)=>[]);\n    return function dedupeFetch(resource, options) {\n        if (options && options.signal) {\n            // If we're passed a signal, then we assume that\n            // someone else controls the lifetime of this object and opts out of\n            // caching. It's effectively the opt-out mechanism.\n            // Ideally we should be able to check this on the Request but\n            // it always gets initialized with its own signal so we don't\n            // know if it's supposed to override - unless we also override the\n            // Request constructor.\n            return originalFetch(resource, options);\n        }\n        // Normalize the Request\n        let url;\n        let cacheKey;\n        if (typeof resource === 'string' && !options) {\n            // Fast path.\n            cacheKey = simpleCacheKey;\n            url = resource;\n        } else {\n            // Normalize the request.\n            // if resource is not a string or a URL (its an instance of Request)\n            // then do not instantiate a new Request but instead\n            // reuse the request as to not disturb the body in the event it's a ReadableStream.\n            const request = typeof resource === 'string' || resource instanceof URL ? new Request(resource, options) : resource;\n            if (request.method !== 'GET' && request.method !== 'HEAD' || // $FlowFixMe[prop-missing]: keepalive is real\n            request.keepalive) {\n                // We currently don't dedupe requests that might have side-effects. Those\n                // have to be explicitly cached. We assume that the request doesn't have a\n                // body if it's GET or HEAD.\n                // keepalive gets treated the same as if you passed a custom cache signal.\n                return originalFetch(resource, options);\n            }\n            cacheKey = generateCacheKey(request);\n            url = request.url;\n        }\n        const cacheEntries = getCacheEntries(url);\n        let match;\n        if (cacheEntries.length === 0) {\n            // We pass the original arguments here in case normalizing the Request\n            // doesn't include all the options in this environment.\n            match = originalFetch(resource, options);\n            cacheEntries.push(cacheKey, match);\n        } else {\n            // We use an array as the inner data structure since it's lighter and\n            // we typically only expect to see one or two entries here.\n            for(let i = 0, l = cacheEntries.length; i < l; i += 2){\n                const key = cacheEntries[i];\n                const value = cacheEntries[i + 1];\n                if (key === cacheKey) {\n                    match = value;\n                    // I would've preferred a labelled break but lint says no.\n                    return match.then((response)=>response.clone());\n                }\n            }\n            match = originalFetch(resource, options);\n            cacheEntries.push(cacheKey, match);\n        }\n        // We clone the response so that each time you call this you get a new read\n        // of the body so that it can be read multiple times.\n        return match.then((response)=>response.clone());\n    };\n}\n\n//# sourceMappingURL=dedupe-fetch.js.map","export var CachedRouteKind;\n(function(CachedRouteKind) {\n    CachedRouteKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    CachedRouteKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    CachedRouteKind[\"PAGES\"] = \"PAGES\";\n    CachedRouteKind[\"FETCH\"] = \"FETCH\";\n    CachedRouteKind[\"REDIRECT\"] = \"REDIRECT\";\n    CachedRouteKind[\"IMAGE\"] = \"IMAGE\";\n})(CachedRouteKind || (CachedRouteKind = {}));\nexport var IncrementalCacheKind;\n(function(IncrementalCacheKind) {\n    IncrementalCacheKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    IncrementalCacheKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    IncrementalCacheKind[\"PAGES\"] = \"PAGES\";\n    IncrementalCacheKind[\"FETCH\"] = \"FETCH\";\n    IncrementalCacheKind[\"IMAGE\"] = \"IMAGE\";\n})(IncrementalCacheKind || (IncrementalCacheKind = {}));\n\n//# sourceMappingURL=types.js.map","export const ENCODED_TAGS = {\n    // opening tags do not have the closing `>` since they can contain other attributes such as `<body className=''>`\n    OPENING: {\n        // <html\n        HTML: new Uint8Array([\n            60,\n            104,\n            116,\n            109,\n            108\n        ]),\n        // <body\n        BODY: new Uint8Array([\n            60,\n            98,\n            111,\n            100,\n            121\n        ])\n    },\n    CLOSED: {\n        // </head>\n        HEAD: new Uint8Array([\n            60,\n            47,\n            104,\n            101,\n            97,\n            100,\n            62\n        ]),\n        // </body>\n        BODY: new Uint8Array([\n            60,\n            47,\n            98,\n            111,\n            100,\n            121,\n            62\n        ]),\n        // </html>\n        HTML: new Uint8Array([\n            60,\n            47,\n            104,\n            116,\n            109,\n            108,\n            62\n        ]),\n        // </body></html>\n        BODY_AND_HTML: new Uint8Array([\n            60,\n            47,\n            98,\n            111,\n            100,\n            121,\n            62,\n            60,\n            47,\n            104,\n            116,\n            109,\n            108,\n            62\n        ])\n    }\n};\n\n//# sourceMappingURL=encodedTags.js.map","import { getTracer } from '../lib/trace/tracer';\nimport { AppRenderSpan } from '../lib/trace/constants';\nimport { DetachedPromise } from '../../lib/detached-promise';\nimport { scheduleImmediate, atLeastOneTask } from '../../lib/scheduler';\nimport { ENCODED_TAGS } from './encodedTags';\nimport { indexOfUint8Array, isEquivalentUint8Arrays, removeFromUint8Array } from './uint8array-helpers';\nfunction voidCatch() {\n// this catcher is designed to be used with pipeTo where we expect the underlying\n// pipe implementation to forward errors but we don't want the pipeTo promise to reject\n// and be unhandled\n}\n// We can share the same encoder instance everywhere\n// Notably we cannot do the same for TextDecoder because it is stateful\n// when handling streaming data\nconst encoder = new TextEncoder();\nexport function chainStreams(...streams) {\n    // We could encode this invariant in the arguments but current uses of this function pass\n    // use spread so it would be missed by\n    if (streams.length === 0) {\n        throw new Error('Invariant: chainStreams requires at least one stream');\n    }\n    // If we only have 1 stream we fast path it by returning just this stream\n    if (streams.length === 1) {\n        return streams[0];\n    }\n    const { readable, writable } = new TransformStream();\n    // We always initiate pipeTo immediately. We know we have at least 2 streams\n    // so we need to avoid closing the writable when this one finishes.\n    let promise = streams[0].pipeTo(writable, {\n        preventClose: true\n    });\n    let i = 1;\n    for(; i < streams.length - 1; i++){\n        const nextStream = streams[i];\n        promise = promise.then(()=>nextStream.pipeTo(writable, {\n                preventClose: true\n            }));\n    }\n    // We can omit the length check because we halted before the last stream and there\n    // is at least two streams so the lastStream here will always be defined\n    const lastStream = streams[i];\n    promise = promise.then(()=>lastStream.pipeTo(writable));\n    // Catch any errors from the streams and ignore them, they will be handled\n    // by whatever is consuming the readable stream.\n    promise.catch(voidCatch);\n    return readable;\n}\nexport function streamFromString(str) {\n    return new ReadableStream({\n        start (controller) {\n            controller.enqueue(encoder.encode(str));\n            controller.close();\n        }\n    });\n}\nexport function streamFromBuffer(chunk) {\n    return new ReadableStream({\n        start (controller) {\n            controller.enqueue(chunk);\n            controller.close();\n        }\n    });\n}\nexport async function streamToBuffer(stream) {\n    const reader = stream.getReader();\n    const chunks = [];\n    while(true){\n        const { done, value } = await reader.read();\n        if (done) {\n            break;\n        }\n        chunks.push(value);\n    }\n    return Buffer.concat(chunks);\n}\nexport async function streamToString(stream) {\n    const decoder = new TextDecoder('utf-8', {\n        fatal: true\n    });\n    let string = '';\n    for await (const chunk of stream){\n        string += decoder.decode(chunk, {\n            stream: true\n        });\n    }\n    string += decoder.decode();\n    return string;\n}\nexport function createBufferedTransformStream() {\n    let bufferedChunks = [];\n    let bufferByteLength = 0;\n    let pending;\n    const flush = (controller)=>{\n        // If we already have a pending flush, then return early.\n        if (pending) return;\n        const detached = new DetachedPromise();\n        pending = detached;\n        scheduleImmediate(()=>{\n            try {\n                const chunk = new Uint8Array(bufferByteLength);\n                let copiedBytes = 0;\n                for(let i = 0; i < bufferedChunks.length; i++){\n                    const bufferedChunk = bufferedChunks[i];\n                    chunk.set(bufferedChunk, copiedBytes);\n                    copiedBytes += bufferedChunk.byteLength;\n                }\n                // We just wrote all the buffered chunks so we need to reset the bufferedChunks array\n                // and our bufferByteLength to prepare for the next round of buffered chunks\n                bufferedChunks.length = 0;\n                bufferByteLength = 0;\n                controller.enqueue(chunk);\n            } catch  {\n            // If an error occurs while enqueuing it can't be due to this\n            // transformers fault. It's likely due to the controller being\n            // errored due to the stream being cancelled.\n            } finally{\n                pending = undefined;\n                detached.resolve();\n            }\n        });\n    };\n    return new TransformStream({\n        transform (chunk, controller) {\n            // Combine the previous buffer with the new chunk.\n            bufferedChunks.push(chunk);\n            bufferByteLength += chunk.byteLength;\n            // Flush the buffer to the controller.\n            flush(controller);\n        },\n        flush () {\n            if (!pending) return;\n            return pending.promise;\n        }\n    });\n}\nfunction createInsertedHTMLStream(getServerInsertedHTML) {\n    return new TransformStream({\n        transform: async (chunk, controller)=>{\n            const html = await getServerInsertedHTML();\n            if (html) {\n                controller.enqueue(encoder.encode(html));\n            }\n            controller.enqueue(chunk);\n        }\n    });\n}\nexport function renderToInitialFizzStream({ ReactDOMServer, element, streamOptions }) {\n    return getTracer().trace(AppRenderSpan.renderToReadableStream, async ()=>ReactDOMServer.renderToReadableStream(element, streamOptions));\n}\nfunction createHeadInsertionTransformStream(insert) {\n    let inserted = false;\n    let freezing = false;\n    // We need to track if this transform saw any bytes because if it didn't\n    // we won't want to insert any server HTML at all\n    let hasBytes = false;\n    return new TransformStream({\n        async transform (chunk, controller) {\n            hasBytes = true;\n            // While react is flushing chunks, we don't apply insertions\n            if (freezing) {\n                controller.enqueue(chunk);\n                return;\n            }\n            const insertion = await insert();\n            if (inserted) {\n                if (insertion) {\n                    const encodedInsertion = encoder.encode(insertion);\n                    controller.enqueue(encodedInsertion);\n                }\n                controller.enqueue(chunk);\n                freezing = true;\n            } else {\n                // TODO (@Ethan-Arrowood): Replace the generic `indexOfUint8Array` method with something finely tuned for the subset of things actually being checked for.\n                const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.HEAD);\n                if (index !== -1) {\n                    if (insertion) {\n                        const encodedInsertion = encoder.encode(insertion);\n                        const insertedHeadContent = new Uint8Array(chunk.length + encodedInsertion.length);\n                        insertedHeadContent.set(chunk.slice(0, index));\n                        insertedHeadContent.set(encodedInsertion, index);\n                        insertedHeadContent.set(chunk.slice(index), index + encodedInsertion.length);\n                        controller.enqueue(insertedHeadContent);\n                    } else {\n                        controller.enqueue(chunk);\n                    }\n                    freezing = true;\n                    inserted = true;\n                }\n            }\n            if (!inserted) {\n                controller.enqueue(chunk);\n            } else {\n                scheduleImmediate(()=>{\n                    freezing = false;\n                });\n            }\n        },\n        async flush (controller) {\n            // Check before closing if there's anything remaining to insert.\n            if (hasBytes) {\n                const insertion = await insert();\n                if (insertion) {\n                    controller.enqueue(encoder.encode(insertion));\n                }\n            }\n        }\n    });\n}\n// Suffix after main body content - scripts before </body>,\n// but wait for the major chunks to be enqueued.\nfunction createDeferredSuffixStream(suffix) {\n    let flushed = false;\n    let pending;\n    const flush = (controller)=>{\n        const detached = new DetachedPromise();\n        pending = detached;\n        scheduleImmediate(()=>{\n            try {\n                controller.enqueue(encoder.encode(suffix));\n            } catch  {\n            // If an error occurs while enqueuing it can't be due to this\n            // transformers fault. It's likely due to the controller being\n            // errored due to the stream being cancelled.\n            } finally{\n                pending = undefined;\n                detached.resolve();\n            }\n        });\n    };\n    return new TransformStream({\n        transform (chunk, controller) {\n            controller.enqueue(chunk);\n            // If we've already flushed, we're done.\n            if (flushed) return;\n            // Schedule the flush to happen.\n            flushed = true;\n            flush(controller);\n        },\n        flush (controller) {\n            if (pending) return pending.promise;\n            if (flushed) return;\n            // Flush now.\n            controller.enqueue(encoder.encode(suffix));\n        }\n    });\n}\n// Merge two streams into one. Ensure the final transform stream is closed\n// when both are finished.\nfunction createMergedTransformStream(stream) {\n    let pull = null;\n    let donePulling = false;\n    async function startPulling(controller) {\n        if (pull) {\n            return;\n        }\n        const reader = stream.getReader();\n        // NOTE: streaming flush\n        // We are buffering here for the inlined data stream because the\n        // \"shell\" stream might be chunkenized again by the underlying stream\n        // implementation, e.g. with a specific high-water mark. To ensure it's\n        // the safe timing to pipe the data stream, this extra tick is\n        // necessary.\n        // We don't start reading until we've left the current Task to ensure\n        // that it's inserted after flushing the shell. Note that this implementation\n        // might get stale if impl details of Fizz change in the future.\n        await atLeastOneTask();\n        try {\n            while(true){\n                const { done, value } = await reader.read();\n                if (done) {\n                    donePulling = true;\n                    return;\n                }\n                controller.enqueue(value);\n            }\n        } catch (err) {\n            controller.error(err);\n        }\n    }\n    return new TransformStream({\n        transform (chunk, controller) {\n            controller.enqueue(chunk);\n            // Start the streaming if it hasn't already been started yet.\n            if (!pull) {\n                pull = startPulling(controller);\n            }\n        },\n        flush (controller) {\n            if (donePulling) {\n                return;\n            }\n            return pull || startPulling(controller);\n        }\n    });\n}\nconst CLOSE_TAG = '</body></html>';\n/**\n * This transform stream moves the suffix to the end of the stream, so results\n * like `</body></html><script>...</script>` will be transformed to\n * `<script>...</script></body></html>`.\n */ function createMoveSuffixStream() {\n    let foundSuffix = false;\n    return new TransformStream({\n        transform (chunk, controller) {\n            if (foundSuffix) {\n                return controller.enqueue(chunk);\n            }\n            const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n            if (index > -1) {\n                foundSuffix = true;\n                // If the whole chunk is the suffix, then don't write anything, it will\n                // be written in the flush.\n                if (chunk.length === ENCODED_TAGS.CLOSED.BODY_AND_HTML.length) {\n                    return;\n                }\n                // Write out the part before the suffix.\n                const before = chunk.slice(0, index);\n                controller.enqueue(before);\n                // In the case where the suffix is in the middle of the chunk, we need\n                // to split the chunk into two parts.\n                if (chunk.length > ENCODED_TAGS.CLOSED.BODY_AND_HTML.length + index) {\n                    // Write out the part after the suffix.\n                    const after = chunk.slice(index + ENCODED_TAGS.CLOSED.BODY_AND_HTML.length);\n                    controller.enqueue(after);\n                }\n            } else {\n                controller.enqueue(chunk);\n            }\n        },\n        flush (controller) {\n            // Even if we didn't find the suffix, the HTML is not valid if we don't\n            // add it, so insert it at the end.\n            controller.enqueue(ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n        }\n    });\n}\nfunction createStripDocumentClosingTagsTransform() {\n    return new TransformStream({\n        transform (chunk, controller) {\n            // We rely on the assumption that chunks will never break across a code unit.\n            // This is reasonable because we currently concat all of React's output from a single\n            // flush into one chunk before streaming it forward which means the chunk will represent\n            // a single coherent utf-8 string. This is not safe to use if we change our streaming to no\n            // longer do this large buffered chunk\n            if (isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML) || isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY) || isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.HTML)) {\n                // the entire chunk is the closing tags; return without enqueueing anything.\n                return;\n            }\n            // We assume these tags will go at together at the end of the document and that\n            // they won't appear anywhere else in the document. This is not really a safe assumption\n            // but until we revamp our streaming infra this is a performant way to string the tags\n            chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY);\n            chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.HTML);\n            controller.enqueue(chunk);\n        }\n    });\n}\n/*\n * Checks if the root layout is missing the html or body tags\n * and if so, it will inject a script tag to throw an error in the browser, showing the user\n * the error message in the error overlay.\n */ export function createRootLayoutValidatorStream() {\n    let foundHtml = false;\n    let foundBody = false;\n    return new TransformStream({\n        async transform (chunk, controller) {\n            // Peek into the streamed chunk to see if the tags are present.\n            if (!foundHtml && indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.HTML) > -1) {\n                foundHtml = true;\n            }\n            if (!foundBody && indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.BODY) > -1) {\n                foundBody = true;\n            }\n            controller.enqueue(chunk);\n        },\n        flush (controller) {\n            const missingTags = [];\n            if (!foundHtml) missingTags.push('html');\n            if (!foundBody) missingTags.push('body');\n            if (!missingTags.length) return;\n            controller.enqueue(encoder.encode(`<script>self.__next_root_layout_missing_tags=${JSON.stringify(missingTags)}</script>`));\n        }\n    });\n}\nfunction chainTransformers(readable, transformers) {\n    let stream = readable;\n    for (const transformer of transformers){\n        if (!transformer) continue;\n        stream = stream.pipeThrough(transformer);\n    }\n    return stream;\n}\nexport async function continueFizzStream(renderStream, { suffix, inlinedDataStream, isStaticGeneration, getServerInsertedHTML, serverInsertedHTMLToHead, validateRootLayout }) {\n    // Suffix itself might contain close tags at the end, so we need to split it.\n    const suffixUnclosed = suffix ? suffix.split(CLOSE_TAG, 1)[0] : null;\n    // If we're generating static HTML and there's an `allReady` promise on the\n    // stream, we need to wait for it to resolve before continuing.\n    if (isStaticGeneration && 'allReady' in renderStream) {\n        await renderStream.allReady;\n    }\n    return chainTransformers(renderStream, [\n        // Buffer everything to avoid flushing too frequently\n        createBufferedTransformStream(),\n        // Insert generated tags to head\n        getServerInsertedHTML && !serverInsertedHTMLToHead ? createInsertedHTMLStream(getServerInsertedHTML) : null,\n        // Insert suffix content\n        suffixUnclosed != null && suffixUnclosed.length > 0 ? createDeferredSuffixStream(suffixUnclosed) : null,\n        // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n        inlinedDataStream ? createMergedTransformStream(inlinedDataStream) : null,\n        // Validate the root layout for missing html or body tags\n        validateRootLayout ? createRootLayoutValidatorStream() : null,\n        // Close tags should always be deferred to the end\n        createMoveSuffixStream(),\n        // Special head insertions\n        // TODO-APP: Insert server side html to end of head in app layout rendering, to avoid\n        // hydration errors. Remove this once it's ready to be handled by react itself.\n        getServerInsertedHTML && serverInsertedHTMLToHead ? createHeadInsertionTransformStream(getServerInsertedHTML) : null\n    ]);\n}\nexport async function continueDynamicPrerender(prerenderStream, { getServerInsertedHTML }) {\n    return prerenderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream()).pipeThrough(createStripDocumentClosingTagsTransform())// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML));\n}\nexport async function continueStaticPrerender(prerenderStream, { inlinedDataStream, getServerInsertedHTML }) {\n    return prerenderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream())// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))// Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    .pipeThrough(createMergedTransformStream(inlinedDataStream))// Close tags should always be deferred to the end\n    .pipeThrough(createMoveSuffixStream());\n}\nexport async function continueDynamicHTMLResume(renderStream, { inlinedDataStream, getServerInsertedHTML }) {\n    return renderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream())// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))// Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    .pipeThrough(createMergedTransformStream(inlinedDataStream))// Close tags should always be deferred to the end\n    .pipeThrough(createMoveSuffixStream());\n}\nexport function createDocumentClosingStream() {\n    return streamFromString(CLOSE_TAG);\n}\n\n//# sourceMappingURL=node-web-streams-helper.js.map","/* eslint-disable no-redeclare */ // FIXME: (wyattjoh) this is a temporary solution to allow us to pass data between bundled modules\nexport const NEXT_REQUEST_META = Symbol.for('NextInternalRequestMeta');\nexport function getRequestMeta(req, key) {\n    const meta = req[NEXT_REQUEST_META] || {};\n    return typeof key === 'string' ? meta[key] : meta;\n}\n/**\n * Sets the request metadata.\n *\n * @param req the request to set the metadata on\n * @param meta the metadata to set\n * @returns the mutated request metadata\n */ export function setRequestMeta(req, meta) {\n    req[NEXT_REQUEST_META] = meta;\n    return meta;\n}\n/**\n * Adds a value to the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to set\n * @param value the value to set\n * @returns the mutated request metadata\n */ export function addRequestMeta(request, key, value) {\n    const meta = getRequestMeta(request);\n    meta[key] = value;\n    return setRequestMeta(request, meta);\n}\n/**\n * Removes a key from the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to remove\n * @returns the mutated request metadata\n */ export function removeRequestMeta(request, key) {\n    const meta = getRequestMeta(request);\n    delete meta[key];\n    return setRequestMeta(request, meta);\n}\nexport function getNextInternalQuery(query) {\n    const keysToInclude = [\n        '__nextDefaultLocale',\n        '__nextFallback',\n        '__nextLocale',\n        '__nextSsgPath',\n        '_nextBubbleNoFallback',\n        '__nextDataReq',\n        '__nextInferredLocaleFromDefault'\n    ];\n    const nextInternalQuery = {};\n    for (const key of keysToInclude){\n        if (key in query) {\n            // @ts-ignore this can't be typed correctly\n            nextInternalQuery[key] = query[key];\n        }\n    }\n    return nextInternalQuery;\n}\n\n//# sourceMappingURL=request-meta.js.map","import { NEXT_INTERCEPTION_MARKER_PREFIX, NEXT_QUERY_PARAM_PREFIX } from '../../lib/constants';\n/**\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\n * headers with multiple values will be joined with a comma and space. Any\n * headers that have an undefined value will be ignored and others will be\n * coerced to strings.\n *\n * @param nodeHeaders the headers object to convert\n * @returns the converted headers object\n */ export function fromNodeOutgoingHttpHeaders(nodeHeaders) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(nodeHeaders)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (typeof v === 'undefined') continue;\n            if (typeof v === 'number') {\n                v = v.toString();\n            }\n            headers.append(key, v);\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ export function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== '=' && ch !== ';' && ch !== ',';\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === ',') {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === '=') {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\n/**\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\n * required to support the set-cookie header, which may have multiple values.\n *\n * @param headers the headers object to convert\n * @returns the converted headers object\n */ export function toNodeOutgoingHttpHeaders(headers) {\n    const nodeHeaders = {};\n    const cookies = [];\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            if (key.toLowerCase() === 'set-cookie') {\n                // We may have gotten a comma joined string of cookies, or multiple\n                // set-cookie headers. We need to merge them into one header array\n                // to represent all the cookies.\n                cookies.push(...splitCookiesString(value));\n                nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies;\n            } else {\n                nodeHeaders[key] = value;\n            }\n        }\n    }\n    return nodeHeaders;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ export function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        });\n    }\n}\n/**\n * Normalizes `nxtP` and `nxtI` query param values to remove the prefix.\n * This function does not mutate the input key; it calls the provided function\n * with the normalized key.\n */ export function normalizeNextQueryParam(key, onKeyNormalized) {\n    const prefixes = [\n        NEXT_QUERY_PARAM_PREFIX,\n        NEXT_INTERCEPTION_MARKER_PREFIX\n    ];\n    for (const prefix of prefixes){\n        if (key !== prefix && key.startsWith(prefix)) {\n            const normalizedKey = key.substring(prefix.length);\n            onKeyNormalized(normalizedKey);\n        }\n    }\n}\n\n//# sourceMappingURL=utils.js.map","import type { DomainLocale } from '../../../server/config-shared'\n\nexport function detectDomainLocale(\n  domainItems?: DomainLocale[],\n  hostname?: string,\n  detectedLocale?: string\n) {\n  if (!domainItems) return\n\n  if (detectedLocale) {\n    detectedLocale = detectedLocale.toLowerCase()\n  }\n\n  for (const item of domainItems) {\n    // remove port if present\n    const domainHostname = item.domain?.split(':', 1)[0].toLowerCase()\n    if (\n      hostname === domainHostname ||\n      detectedLocale === item.defaultLocale.toLowerCase() ||\n      item.locales?.some((locale) => locale.toLowerCase() === detectedLocale)\n    ) {\n      return item\n    }\n  }\n}\n","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */\nexport function parsePath(path: string) {\n  const hashIndex = path.indexOf('#')\n  const queryIndex = path.indexOf('?')\n  const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex)\n\n  if (hasQuery || hashIndex > -1) {\n    return {\n      pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n      query: hasQuery\n        ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined)\n        : '',\n      hash: hashIndex > -1 ? path.slice(hashIndex) : '',\n    }\n  }\n\n  return { pathname: path, query: '', hash: '' }\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */\nexport function addPathPrefix(path: string, prefix?: string) {\n  if (!path.startsWith('/') || !prefix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${prefix}${pathname}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */\nexport function addPathSuffix(path: string, suffix?: string) {\n  if (!path.startsWith('/') || !suffix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${pathname}${suffix}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */\nexport function pathHasPrefix(path: string, prefix: string) {\n  if (typeof path !== 'string') {\n    return false\n  }\n\n  const { pathname } = parsePath(path)\n  return pathname === prefix || pathname.startsWith(prefix + '/')\n}\n","import { addPathPrefix } from './add-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */\nexport function addLocale(\n  path: string,\n  locale?: string | false,\n  defaultLocale?: string,\n  ignorePrefix?: boolean\n) {\n  // If no locale was given or the locale is the default locale, we don't need\n  // to prefix the path.\n  if (!locale || locale === defaultLocale) return path\n\n  const lower = path.toLowerCase()\n\n  // If the path is an API path or the path already has the locale prefix, we\n  // don't need to prefix the path.\n  if (!ignorePrefix) {\n    if (pathHasPrefix(lower, '/api')) return path\n    if (pathHasPrefix(lower, `/${locale.toLowerCase()}`)) return path\n  }\n\n  // Add the locale prefix to the path.\n  return addPathPrefix(path, `/${locale}`)\n}\n","import type { NextPathnameInfo } from './get-next-pathname-info'\nimport { removeTrailingSlash } from './remove-trailing-slash'\nimport { addPathPrefix } from './add-path-prefix'\nimport { addPathSuffix } from './add-path-suffix'\nimport { addLocale } from './add-locale'\n\ninterface ExtendedInfo extends NextPathnameInfo {\n  defaultLocale?: string\n  ignorePrefix?: boolean\n}\n\nexport function formatNextPathnameInfo(info: ExtendedInfo) {\n  let pathname = addLocale(\n    info.pathname,\n    info.locale,\n    info.buildId ? undefined : info.defaultLocale,\n    info.ignorePrefix\n  )\n\n  if (info.buildId || !info.trailingSlash) {\n    pathname = removeTrailingSlash(pathname)\n  }\n\n  if (info.buildId) {\n    pathname = addPathSuffix(\n      addPathPrefix(pathname, `/_next/data/${info.buildId}`),\n      info.pathname === '/' ? 'index.json' : '.json'\n    )\n  }\n\n  pathname = addPathPrefix(pathname, info.basePath)\n  return !info.buildId && info.trailingSlash\n    ? !pathname.endsWith('/')\n      ? addPathSuffix(pathname, '/')\n      : pathname\n    : removeTrailingSlash(pathname)\n}\n","import type { OutgoingHttpHeaders } from 'http'\n\n/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */\nexport function getHostname(\n  parsed: { hostname?: string | null },\n  headers?: OutgoingHttpHeaders\n): string | undefined {\n  // Get the hostname from the headers if it exists, otherwise use the parsed\n  // hostname.\n  let hostname: string\n  if (headers?.host && !Array.isArray(headers.host)) {\n    hostname = headers.host.toString().split(':', 1)[0]\n  } else if (parsed.hostname) {\n    hostname = parsed.hostname\n  } else return\n\n  return hostname.toLowerCase()\n}\n","export interface PathLocale {\n  detectedLocale?: string\n  pathname: string\n}\n\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */\nexport function normalizeLocalePath(\n  pathname: string,\n  locales?: string[]\n): PathLocale {\n  let detectedLocale: string | undefined\n  // first item will be empty string from splitting at first char\n  const pathnameParts = pathname.split('/')\n\n  ;(locales || []).some((locale) => {\n    if (\n      pathnameParts[1] &&\n      pathnameParts[1].toLowerCase() === locale.toLowerCase()\n    ) {\n      detectedLocale = locale\n      pathnameParts.splice(1, 1)\n      pathname = pathnameParts.join('/') || '/'\n      return true\n    }\n    return false\n  })\n\n  return {\n    pathname,\n    detectedLocale,\n  }\n}\n","import { pathHasPrefix } from './path-has-prefix'\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */\nexport function removePathPrefix(path: string, prefix: string): string {\n  // If the path doesn't start with the prefix we can return it as is. This\n  // protects us from situations where the prefix is a substring of the path\n  // prefix such as:\n  //\n  // For prefix: /blog\n  //\n  //   /blog -> true\n  //   /blog/ -> true\n  //   /blog/1 -> true\n  //   /blogging -> false\n  //   /blogging/ -> false\n  //   /blogging/1 -> false\n  if (!pathHasPrefix(path, prefix)) {\n    return path\n  }\n\n  // Remove the prefix from the path via slicing.\n  const withoutPrefix = path.slice(prefix.length)\n\n  // If the path without the prefix starts with a `/` we can return it as is.\n  if (withoutPrefix.startsWith('/')) {\n    return withoutPrefix\n  }\n\n  // If the path without the prefix doesn't start with a `/` we need to add it\n  // back to the path to make sure it's a valid path.\n  return `/${withoutPrefix}`\n}\n","import { normalizeLocalePath } from '../../i18n/normalize-locale-path'\nimport { removePathPrefix } from './remove-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\nimport type { I18NProvider } from '../../../../server/lib/i18n-provider'\n\nexport interface NextPathnameInfo {\n  /**\n   * The base path in case the pathname included it.\n   */\n  basePath?: string\n  /**\n   * The buildId for when the parsed URL is a data URL. Parsing it can be\n   * disabled with the `parseData` option.\n   */\n  buildId?: string\n  /**\n   * If there was a locale in the pathname, this will hold its value.\n   */\n  locale?: string\n  /**\n   * The processed pathname without a base path, locale, or data URL elements\n   * when parsing it is enabled.\n   */\n  pathname: string\n  /**\n   * A boolean telling if the pathname had a trailingSlash. This can be only\n   * true if trailingSlash is enabled.\n   */\n  trailingSlash?: boolean\n}\n\ninterface Options {\n  /**\n   * When passed to true, this function will also parse Nextjs data URLs.\n   */\n  parseData?: boolean\n  /**\n   * A partial of the Next.js configuration to parse the URL.\n   */\n  nextConfig?: {\n    basePath?: string\n    i18n?: { locales?: string[] } | null\n    trailingSlash?: boolean\n  }\n\n  /**\n   * If provided, this normalizer will be used to detect the locale instead of\n   * the default locale detection.\n   */\n  i18nProvider?: I18NProvider\n}\n\nexport function getNextPathnameInfo(\n  pathname: string,\n  options: Options\n): NextPathnameInfo {\n  const { basePath, i18n, trailingSlash } = options.nextConfig ?? {}\n  const info: NextPathnameInfo = {\n    pathname,\n    trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash,\n  }\n\n  if (basePath && pathHasPrefix(info.pathname, basePath)) {\n    info.pathname = removePathPrefix(info.pathname, basePath)\n    info.basePath = basePath\n  }\n  let pathnameNoDataPrefix = info.pathname\n\n  if (\n    info.pathname.startsWith('/_next/data/') &&\n    info.pathname.endsWith('.json')\n  ) {\n    const paths = info.pathname\n      .replace(/^\\/_next\\/data\\//, '')\n      .replace(/\\.json$/, '')\n      .split('/')\n\n    const buildId = paths[0]\n    info.buildId = buildId\n    pathnameNoDataPrefix =\n      paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/'\n\n    // update pathname with normalized if enabled although\n    // we use normalized to populate locale info still\n    if (options.parseData === true) {\n      info.pathname = pathnameNoDataPrefix\n    }\n  }\n\n  // If provided, use the locale route normalizer to detect the locale instead\n  // of the function below.\n  if (i18n) {\n    let result = options.i18nProvider\n      ? options.i18nProvider.analyze(info.pathname)\n      : normalizeLocalePath(info.pathname, i18n.locales)\n\n    info.locale = result.detectedLocale\n    info.pathname = result.pathname ?? info.pathname\n\n    if (!result.detectedLocale && info.buildId) {\n      result = options.i18nProvider\n        ? options.i18nProvider.analyze(pathnameNoDataPrefix)\n        : normalizeLocalePath(pathnameNoDataPrefix, i18n.locales)\n\n      if (result.detectedLocale) {\n        info.locale = result.detectedLocale\n      }\n    }\n  }\n  return info\n}\n","import { detectDomainLocale } from '../../shared/lib/i18n/detect-domain-locale';\nimport { formatNextPathnameInfo } from '../../shared/lib/router/utils/format-next-pathname-info';\nimport { getHostname } from '../../shared/lib/get-hostname';\nimport { getNextPathnameInfo } from '../../shared/lib/router/utils/get-next-pathname-info';\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'));\n}\nconst Internal = Symbol('NextURLInternal');\nexport class NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === 'object' && 'pathname' in baseOrOpts || typeof baseOrOpts === 'string') {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: ''\n        };\n        this.analyze();\n    }\n    analyze() {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig, _this_Internal_domainLocale, _this_Internal_options_nextConfig_i18n1, _this_Internal_options_nextConfig1;\n        const info = getNextPathnameInfo(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE,\n            i18nProvider: this[Internal].options.i18nProvider\n        });\n        const hostname = getHostname(this[Internal].url, this[Internal].options.headers);\n        this[Internal].domainLocale = this[Internal].options.i18nProvider ? this[Internal].options.i18nProvider.detectDomainLocale(hostname) : detectDomainLocale((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.domains, hostname);\n        const defaultLocale = ((_this_Internal_domainLocale = this[Internal].domainLocale) == null ? void 0 : _this_Internal_domainLocale.defaultLocale) || ((_this_Internal_options_nextConfig1 = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n1 = _this_Internal_options_nextConfig1.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n1.defaultLocale);\n        this[Internal].url.pathname = info.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = info.basePath ?? '';\n        this[Internal].buildId = info.buildId;\n        this[Internal].locale = info.locale ?? defaultLocale;\n        this[Internal].trailingSlash = info.trailingSlash;\n    }\n    formatPathname() {\n        return formatNextPathnameInfo({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? '';\n    }\n    set locale(locale) {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig;\n        if (!this[Internal].locale || !((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.locales.includes(locale))) {\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyze();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith('/') ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for('edge-runtime.inspect.custom')]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n}\n\n//# sourceMappingURL=next-url.js.map","export class PageSignatureError extends Error {\n    constructor({ page }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nexport class RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nexport class RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n}\n\n//# sourceMappingURL=error.js.map","export { RequestCookies, ResponseCookies, stringifyCookie } from 'next/dist/compiled/@edge-runtime/cookies';\n\n//# sourceMappingURL=cookies.js.map","import { NextURL } from '../next-url';\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils';\nimport { RemovedUAError, RemovedPageError } from '../error';\nimport { RequestCookies } from './cookies';\nexport const INTERNALS = Symbol('internal request');\n/**\n * This class extends the [Web `Request` API](https://developer.mozilla.org/docs/Web/API/Request) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextRequest`](https://nextjs.org/docs/app/api-reference/functions/next-request)\n */ export class NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== 'string' && 'url' in input ? input.url : String(input);\n        validateURL(url);\n        if (input instanceof Request) super(input, init);\n        else super(url, init);\n        const nextUrl = new NextURL(url, {\n            headers: toNodeOutgoingHttpHeaders(this.headers),\n            nextConfig: init.nextConfig\n        });\n        this[INTERNALS] = {\n            cookies: new RequestCookies(this.headers),\n            nextUrl,\n            url: process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE ? url : nextUrl.toString()\n        };\n    }\n    [Symbol.for('edge-runtime.inspect.custom')]() {\n        return {\n            cookies: this.cookies,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get nextUrl() {\n        return this[INTERNALS].nextUrl;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url;\n    }\n}\n\n//# sourceMappingURL=request.js.map","import { getRequestMeta } from '../../../request-meta';\nimport { fromNodeOutgoingHttpHeaders } from '../../utils';\nimport { NextRequest } from '../request';\nimport { isNodeNextRequest, isWebNextRequest } from '../../../base-http/helpers';\nexport const ResponseAbortedName = 'ResponseAborted';\nexport class ResponseAborted extends Error {\n    constructor(...args){\n        super(...args);\n        this.name = ResponseAbortedName;\n    }\n}\n/**\n * Creates an AbortController tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * If the `close` event is fired before the `finish` event, then we'll send the\n * `abort` signal.\n */ export function createAbortController(response) {\n    const controller = new AbortController();\n    // If `finish` fires first, then `res.end()` has been called and the close is\n    // just us finishing the stream on our side. If `close` fires first, then we\n    // know the client disconnected before we finished.\n    response.once('close', ()=>{\n        if (response.writableFinished) return;\n        controller.abort(new ResponseAborted());\n    });\n    return controller;\n}\n/**\n * Creates an AbortSignal tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * This cannot be done with the request (IncomingMessage or Readable) because\n * the `abort` event will not fire if to data has been fully read (because that\n * will \"close\" the readable stream and nothing fires after that).\n */ export function signalFromNodeResponse(response) {\n    const { errored, destroyed } = response;\n    if (errored || destroyed) {\n        return AbortSignal.abort(errored ?? new ResponseAborted());\n    }\n    const { signal } = createAbortController(response);\n    return signal;\n}\nexport class NextRequestAdapter {\n    static fromBaseNextRequest(request, signal) {\n        if (// The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME === 'edge' && isWebNextRequest(request)) {\n            return NextRequestAdapter.fromWebNextRequest(request);\n        } else if (// The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME !== 'edge' && isNodeNextRequest(request)) {\n            return NextRequestAdapter.fromNodeNextRequest(request, signal);\n        } else {\n            throw new Error('Invariant: Unsupported NextRequest type');\n        }\n    }\n    static fromNodeNextRequest(request, signal) {\n        // HEAD and GET requests can not have a body.\n        let body = null;\n        if (request.method !== 'GET' && request.method !== 'HEAD' && request.body) {\n            // @ts-expect-error - this is handled by undici, when streams/web land use it instead\n            body = request.body;\n        }\n        let url;\n        if (request.url.startsWith('http')) {\n            url = new URL(request.url);\n        } else {\n            // Grab the full URL from the request metadata.\n            const base = getRequestMeta(request, 'initURL');\n            if (!base || !base.startsWith('http')) {\n                // Because the URL construction relies on the fact that the URL provided\n                // is absolute, we need to provide a base URL. We can't use the request\n                // URL because it's relative, so we use a dummy URL instead.\n                url = new URL(request.url, 'http://n');\n            } else {\n                url = new URL(request.url, base);\n            }\n        }\n        return new NextRequest(url, {\n            method: request.method,\n            headers: fromNodeOutgoingHttpHeaders(request.headers),\n            // @ts-expect-error - see https://github.com/whatwg/fetch/pull/1457\n            duplex: 'half',\n            signal,\n            // geo\n            // ip\n            // nextConfig\n            // body can not be passed if request was aborted\n            // or we get a Request body was disturbed error\n            ...signal.aborted ? {} : {\n                body\n            }\n        });\n    }\n    static fromWebNextRequest(request) {\n        // HEAD and GET requests can not have a body.\n        let body = null;\n        if (request.method !== 'GET' && request.method !== 'HEAD') {\n            body = request.body;\n        }\n        return new NextRequest(request.url, {\n            method: request.method,\n            headers: fromNodeOutgoingHttpHeaders(request.headers),\n            // @ts-expect-error - see https://github.com/whatwg/fetch/pull/1457\n            duplex: 'half',\n            signal: request.request.signal,\n            // geo\n            // ip\n            // nextConfig\n            // body can not be passed if request was aborted\n            // or we get a Request body was disturbed error\n            ...request.request.signal.aborted ? {} : {\n                body\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=next-request.js.map","import { ResponseAbortedName, createAbortController } from './web/spec-extension/adapters/next-request';\nimport { DetachedPromise } from '../lib/detached-promise';\nimport { getTracer } from './lib/trace/tracer';\nimport { NextNodeServerSpan } from './lib/trace/constants';\nimport { getClientComponentLoaderMetrics } from './client-component-renderer-logger';\nexport function isAbortError(e) {\n    return (e == null ? void 0 : e.name) === 'AbortError' || (e == null ? void 0 : e.name) === ResponseAbortedName;\n}\nfunction createWriterFromResponse(res, waitUntilForEnd) {\n    let started = false;\n    // Create a promise that will resolve once the response has drained. See\n    // https://nodejs.org/api/stream.html#stream_event_drain\n    let drained = new DetachedPromise();\n    function onDrain() {\n        drained.resolve();\n    }\n    res.on('drain', onDrain);\n    // If the finish event fires, it means we shouldn't block and wait for the\n    // drain event.\n    res.once('close', ()=>{\n        res.off('drain', onDrain);\n        drained.resolve();\n    });\n    // Create a promise that will resolve once the response has finished. See\n    // https://nodejs.org/api/http.html#event-finish_1\n    const finished = new DetachedPromise();\n    res.once('finish', ()=>{\n        finished.resolve();\n    });\n    // Create a writable stream that will write to the response.\n    return new WritableStream({\n        write: async (chunk)=>{\n            // You'd think we'd want to use `start` instead of placing this in `write`\n            // but this ensures that we don't actually flush the headers until we've\n            // started writing chunks.\n            if (!started) {\n                started = true;\n                if ('performance' in globalThis && process.env.NEXT_OTEL_PERFORMANCE_PREFIX) {\n                    const metrics = getClientComponentLoaderMetrics();\n                    if (metrics) {\n                        performance.measure(`${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-client-component-loading`, {\n                            start: metrics.clientComponentLoadStart,\n                            end: metrics.clientComponentLoadStart + metrics.clientComponentLoadTimes\n                        });\n                    }\n                }\n                res.flushHeaders();\n                getTracer().trace(NextNodeServerSpan.startResponse, {\n                    spanName: 'start response'\n                }, ()=>undefined);\n            }\n            try {\n                const ok = res.write(chunk);\n                // Added by the `compression` middleware, this is a function that will\n                // flush the partially-compressed response to the client.\n                if ('flush' in res && typeof res.flush === 'function') {\n                    res.flush();\n                }\n                // If the write returns false, it means there's some backpressure, so\n                // wait until it's streamed before continuing.\n                if (!ok) {\n                    await drained.promise;\n                    // Reset the drained promise so that we can wait for the next drain event.\n                    drained = new DetachedPromise();\n                }\n            } catch (err) {\n                res.end();\n                throw new Error('failed to write chunk to response', {\n                    cause: err\n                });\n            }\n        },\n        abort: (err)=>{\n            if (res.writableFinished) return;\n            res.destroy(err);\n        },\n        close: async ()=>{\n            // if a waitUntil promise was passed, wait for it to resolve before\n            // ending the response.\n            if (waitUntilForEnd) {\n                await waitUntilForEnd;\n            }\n            if (res.writableFinished) return;\n            res.end();\n            return finished.promise;\n        }\n    });\n}\nexport async function pipeToNodeResponse(readable, res, waitUntilForEnd) {\n    try {\n        // If the response has already errored, then just return now.\n        const { errored, destroyed } = res;\n        if (errored || destroyed) return;\n        // Create a new AbortController so that we can abort the readable if the\n        // client disconnects.\n        const controller = createAbortController(res);\n        const writer = createWriterFromResponse(res, waitUntilForEnd);\n        await readable.pipeTo(writer, {\n            signal: controller.signal\n        });\n    } catch (err) {\n        // If this isn't related to an abort error, re-throw it.\n        if (isAbortError(err)) return;\n        throw new Error('failed to pipe response', {\n            cause: err\n        });\n    }\n}\n\n//# sourceMappingURL=pipe-readable.js.map","import { chainStreams, streamFromBuffer, streamFromString, streamToBuffer, streamToString } from './stream-utils/node-web-streams-helper';\nimport { isAbortError, pipeToNodeResponse } from './pipe-readable';\nexport default class RenderResult {\n    /**\n   * Creates a new RenderResult instance from a static response.\n   *\n   * @param value the static response value\n   * @returns a new RenderResult instance\n   */ static fromStatic(value) {\n        return new RenderResult(value, {\n            metadata: {}\n        });\n    }\n    constructor(response, { contentType, waitUntil, metadata }){\n        this.response = response;\n        this.contentType = contentType;\n        this.metadata = metadata;\n        this.waitUntil = waitUntil;\n    }\n    assignMetadata(metadata) {\n        Object.assign(this.metadata, metadata);\n    }\n    /**\n   * Returns true if the response is null. It can be null if the response was\n   * not found or was already sent.\n   */ get isNull() {\n        return this.response === null;\n    }\n    /**\n   * Returns false if the response is a string. It can be a string if the page\n   * was prerendered. If it's not, then it was generated dynamically.\n   */ get isDynamic() {\n        return typeof this.response !== 'string';\n    }\n    toUnchunkedBuffer(stream = false) {\n        if (this.response === null) {\n            throw new Error('Invariant: null responses cannot be unchunked');\n        }\n        if (typeof this.response !== 'string') {\n            if (!stream) {\n                throw new Error('Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js');\n            }\n            return streamToBuffer(this.readable);\n        }\n        return Buffer.from(this.response);\n    }\n    toUnchunkedString(stream = false) {\n        if (this.response === null) {\n            throw new Error('Invariant: null responses cannot be unchunked');\n        }\n        if (typeof this.response !== 'string') {\n            if (!stream) {\n                throw new Error('Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js');\n            }\n            return streamToString(this.readable);\n        }\n        return this.response;\n    }\n    /**\n   * Returns the response if it is a stream, or throws an error if it is a\n   * string.\n   */ get readable() {\n        if (this.response === null) {\n            throw new Error('Invariant: null responses cannot be streamed');\n        }\n        if (typeof this.response === 'string') {\n            throw new Error('Invariant: static responses cannot be streamed');\n        }\n        if (Buffer.isBuffer(this.response)) {\n            return streamFromBuffer(this.response);\n        }\n        // If the response is an array of streams, then chain them together.\n        if (Array.isArray(this.response)) {\n            return chainStreams(...this.response);\n        }\n        return this.response;\n    }\n    /**\n   * Chains a new stream to the response. This will convert the response to an\n   * array of streams if it is not already one and will add the new stream to\n   * the end. When this response is piped, all of the streams will be piped\n   * one after the other.\n   *\n   * @param readable The new stream to chain\n   */ chain(readable) {\n        if (this.response === null) {\n            throw new Error('Invariant: response is null. This is a bug in Next.js');\n        }\n        // If the response is not an array of streams already, make it one.\n        let responses;\n        if (typeof this.response === 'string') {\n            responses = [\n                streamFromString(this.response)\n            ];\n        } else if (Array.isArray(this.response)) {\n            responses = this.response;\n        } else if (Buffer.isBuffer(this.response)) {\n            responses = [\n                streamFromBuffer(this.response)\n            ];\n        } else {\n            responses = [\n                this.response\n            ];\n        }\n        // Add the new stream to the array.\n        responses.push(readable);\n        // Update the response.\n        this.response = responses;\n    }\n    /**\n   * Pipes the response to a writable stream. This will close/cancel the\n   * writable stream if an error is encountered. If this doesn't throw, then\n   * the writable stream will be closed or aborted.\n   *\n   * @param writable Writable stream to pipe the response to\n   */ async pipeTo(writable) {\n        try {\n            await this.readable.pipeTo(writable, {\n                // We want to close the writable stream ourselves so that we can wait\n                // for the waitUntil promise to resolve before closing it. If an error\n                // is encountered, we'll abort the writable stream if we swallowed the\n                // error.\n                preventClose: true\n            });\n            // If there is a waitUntil promise, wait for it to resolve before\n            // closing the writable stream.\n            if (this.waitUntil) await this.waitUntil;\n            // Close the writable stream.\n            await writable.close();\n        } catch (err) {\n            // If this is an abort error, we should abort the writable stream (as we\n            // took ownership of it when we started piping). We don't need to re-throw\n            // because we handled the error.\n            if (isAbortError(err)) {\n                // Abort the writable stream if an error is encountered.\n                await writable.abort(err);\n                return;\n            }\n            // We're not aborting the writer here as when this method throws it's not\n            // clear as to how so the caller should assume it's their responsibility\n            // to clean up the writer.\n            throw err;\n        }\n    }\n    /**\n   * Pipes the response to a node response. This will close/cancel the node\n   * response if an error is encountered.\n   *\n   * @param res\n   */ async pipeToNodeResponse(res) {\n        await pipeToNodeResponse(this.readable, res, this.waitUntil);\n    }\n}\n\n//# sourceMappingURL=render-result.js.map","import { CachedRouteKind, IncrementalCacheKind } from './types';\nimport RenderResult from '../render-result';\nimport { RouteKind } from '../route-kind';\nexport async function fromResponseCacheEntry(cacheEntry) {\n    var _cacheEntry_value, _cacheEntry_value1;\n    return {\n        ...cacheEntry,\n        value: ((_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) === CachedRouteKind.PAGES ? {\n            kind: CachedRouteKind.PAGES,\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            pageData: cacheEntry.value.pageData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status\n        } : ((_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind) === CachedRouteKind.APP_PAGE ? {\n            kind: CachedRouteKind.APP_PAGE,\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            postponed: cacheEntry.value.postponed,\n            rscData: cacheEntry.value.rscData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status,\n            segmentData: cacheEntry.value.segmentData\n        } : cacheEntry.value\n    };\n}\nexport async function toResponseCacheEntry(response) {\n    var _response_value, _response_value1, _response_value2;\n    if (!response) return null;\n    if (((_response_value = response.value) == null ? void 0 : _response_value.kind) === CachedRouteKind.FETCH) {\n        throw new Error('Invariant: unexpected cachedResponse of kind fetch in response cache');\n    }\n    return {\n        isMiss: response.isMiss,\n        isStale: response.isStale,\n        revalidate: response.revalidate,\n        isFallback: response.isFallback,\n        value: ((_response_value1 = response.value) == null ? void 0 : _response_value1.kind) === CachedRouteKind.PAGES ? {\n            kind: CachedRouteKind.PAGES,\n            html: RenderResult.fromStatic(response.value.html),\n            pageData: response.value.pageData,\n            headers: response.value.headers,\n            status: response.value.status\n        } : ((_response_value2 = response.value) == null ? void 0 : _response_value2.kind) === CachedRouteKind.APP_PAGE ? {\n            kind: CachedRouteKind.APP_PAGE,\n            html: RenderResult.fromStatic(response.value.html),\n            rscData: response.value.rscData,\n            headers: response.value.headers,\n            status: response.value.status,\n            postponed: response.value.postponed,\n            segmentData: response.value.segmentData\n        } : response.value\n    };\n}\nexport function routeKindToIncrementalCacheKind(routeKind) {\n    switch(routeKind){\n        case RouteKind.PAGES:\n            return IncrementalCacheKind.PAGES;\n        case RouteKind.APP_PAGE:\n            return IncrementalCacheKind.APP_PAGE;\n        case RouteKind.IMAGE:\n            return IncrementalCacheKind.IMAGE;\n        case RouteKind.APP_ROUTE:\n            return IncrementalCacheKind.APP_ROUTE;\n        default:\n            throw new Error(`Unexpected route kind ${routeKind}`);\n    }\n}\n\n//# sourceMappingURL=utils.js.map","import { CachedRouteKind } from './types';\nimport { Batcher } from '../../lib/batcher';\nimport { scheduleOnNextTick } from '../../lib/scheduler';\nimport { fromResponseCacheEntry, routeKindToIncrementalCacheKind, toResponseCacheEntry } from './utils';\nexport * from './types';\nexport default class ResponseCache {\n    constructor(minimalMode){\n        this.batcher = Batcher.create({\n            // Ensure on-demand revalidate doesn't block normal requests, it should be\n            // safe to run an on-demand revalidate for the same key as a normal request.\n            cacheKeyFn: ({ key, isOnDemandRevalidate })=>`${key}-${isOnDemandRevalidate ? '1' : '0'}`,\n            // We wait to do any async work until after we've added our promise to\n            // `pendingResponses` to ensure that any any other calls will reuse the\n            // same promise until we've fully finished our work.\n            schedulerFn: scheduleOnNextTick\n        });\n        // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n        // because we replace this.minimalMode to true in production bundles.\n        const minimalModeKey = 'minimalMode';\n        this[minimalModeKey] = minimalMode;\n    }\n    async get(key, responseGenerator, context) {\n        // If there is no key for the cache, we can't possibly look this up in the\n        // cache so just return the result of the response generator.\n        if (!key) {\n            return responseGenerator({\n                hasResolved: false,\n                previousCacheEntry: null\n            });\n        }\n        const { incrementalCache, isOnDemandRevalidate = false, isFallback = false, isRoutePPREnabled = false } = context;\n        const response = await this.batcher.batch({\n            key,\n            isOnDemandRevalidate\n        }, async (cacheKey, resolve)=>{\n            var _this_previousCacheItem;\n            // We keep the previous cache entry around to leverage when the\n            // incremental cache is disabled in minimal mode.\n            if (this.minimalMode && ((_this_previousCacheItem = this.previousCacheItem) == null ? void 0 : _this_previousCacheItem.key) === cacheKey && this.previousCacheItem.expiresAt > Date.now()) {\n                return this.previousCacheItem.entry;\n            }\n            // Coerce the kindHint into a given kind for the incremental cache.\n            const kind = routeKindToIncrementalCacheKind(context.routeKind);\n            let resolved = false;\n            let cachedResponse = null;\n            try {\n                cachedResponse = !this.minimalMode ? await incrementalCache.get(key, {\n                    kind,\n                    isRoutePPREnabled: context.isRoutePPREnabled,\n                    isFallback\n                }) : null;\n                if (cachedResponse && !isOnDemandRevalidate) {\n                    var _cachedResponse_value;\n                    if (((_cachedResponse_value = cachedResponse.value) == null ? void 0 : _cachedResponse_value.kind) === CachedRouteKind.FETCH) {\n                        throw new Error(`invariant: unexpected cachedResponse of kind fetch in response cache`);\n                    }\n                    resolve({\n                        ...cachedResponse,\n                        revalidate: cachedResponse.curRevalidate\n                    });\n                    resolved = true;\n                    if (!cachedResponse.isStale || context.isPrefetch) {\n                        // The cached value is still valid, so we don't need\n                        // to update it yet.\n                        return null;\n                    }\n                }\n                const cacheEntry = await responseGenerator({\n                    hasResolved: resolved,\n                    previousCacheEntry: cachedResponse,\n                    isRevalidating: true\n                });\n                // If the cache entry couldn't be generated, we don't want to cache\n                // the result.\n                if (!cacheEntry) {\n                    // Unset the previous cache item if it was set.\n                    if (this.minimalMode) this.previousCacheItem = undefined;\n                    return null;\n                }\n                const resolveValue = await fromResponseCacheEntry({\n                    ...cacheEntry,\n                    isMiss: !cachedResponse\n                });\n                if (!resolveValue) {\n                    // Unset the previous cache item if it was set.\n                    if (this.minimalMode) this.previousCacheItem = undefined;\n                    return null;\n                }\n                // For on-demand revalidate wait to resolve until cache is set.\n                // Otherwise resolve now.\n                if (!isOnDemandRevalidate && !resolved) {\n                    resolve(resolveValue);\n                    resolved = true;\n                }\n                // We want to persist the result only if it has a revalidate value\n                // defined.\n                if (typeof resolveValue.revalidate !== 'undefined') {\n                    if (this.minimalMode) {\n                        this.previousCacheItem = {\n                            key: cacheKey,\n                            entry: resolveValue,\n                            expiresAt: Date.now() + 1000\n                        };\n                    } else {\n                        await incrementalCache.set(key, resolveValue.value, {\n                            revalidate: resolveValue.revalidate,\n                            isRoutePPREnabled,\n                            isFallback\n                        });\n                    }\n                }\n                return resolveValue;\n            } catch (err) {\n                // When a getStaticProps path is erroring we automatically re-set the\n                // existing cache under a new expiration to prevent non-stop retrying.\n                if (cachedResponse) {\n                    await incrementalCache.set(key, cachedResponse.value, {\n                        revalidate: Math.min(Math.max(cachedResponse.revalidate || 3, 3), 30),\n                        isRoutePPREnabled,\n                        isFallback\n                    });\n                }\n                // While revalidating in the background we can't reject as we already\n                // resolved the cache entry so log the error here.\n                if (resolved) {\n                    console.error(err);\n                    return null;\n                }\n                // We haven't resolved yet, so let's throw to indicate an error.\n                throw err;\n            }\n        });\n        return toResponseCacheEntry(response);\n    }\n}\n\n//# sourceMappingURL=index.js.map","/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */ export const scheduleOnNextTick = (cb)=>{\n    // We use Promise.resolve().then() here so that the operation is scheduled at\n    // the end of the promise job queue, we then add it to the next process tick\n    // to ensure it's evaluated afterwards.\n    //\n    // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n    //\n    Promise.resolve().then(()=>{\n        if (process.env.NEXT_RUNTIME === 'edge') {\n            setTimeout(cb, 0);\n        } else {\n            process.nextTick(cb);\n        }\n    });\n};\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */ export const scheduleImmediate = (cb)=>{\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        setTimeout(cb, 0);\n    } else {\n        setImmediate(cb);\n    }\n};\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */ export function atLeastOneTask() {\n    return new Promise((resolve)=>scheduleImmediate(resolve));\n}\n/**\n * This utility function is extracted to make it easier to find places where we are doing\n * specific timing tricks to try to schedule work after React has rendered. This is especially\n * important at the moment because Next.js uses the edge builds of React which use setTimeout to\n * schedule work when you might expect that something like setImmediate would do the trick.\n *\n * Long term we should switch to the node versions of React rendering when possible and then\n * update this to use setImmediate rather than setTimeout\n */ export function waitAtLeastOneReactRenderTask() {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        return new Promise((r)=>setTimeout(r, 0));\n    } else {\n        return new Promise((r)=>setImmediate(r));\n    }\n}\n\n//# sourceMappingURL=scheduler.js.map","import { AppRenderSpan, NextNodeServerSpan } from './trace/constants';\nimport { getTracer, SpanKind } from './trace/tracer';\nimport { CACHE_ONE_YEAR, INFINITE_CACHE, NEXT_CACHE_TAG_MAX_ITEMS, NEXT_CACHE_TAG_MAX_LENGTH } from '../../lib/constants';\nimport { markCurrentScopeAsDynamic } from '../app-render/dynamic-rendering';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupeFetch } from './dedupe-fetch';\nimport { CachedRouteKind, IncrementalCacheKind } from '../response-cache';\nimport { waitAtLeastOneReactRenderTask } from '../../lib/scheduler';\nconst isEdgeRuntime = process.env.NEXT_RUNTIME === 'edge';\nexport const NEXT_PATCH_SYMBOL = Symbol.for('next-patch');\nfunction isFetchPatched() {\n    return globalThis[NEXT_PATCH_SYMBOL] === true;\n}\nexport function validateRevalidate(revalidateVal, route) {\n    try {\n        let normalizedRevalidate = undefined;\n        if (revalidateVal === false) {\n            normalizedRevalidate = INFINITE_CACHE;\n        } else if (typeof revalidateVal === 'number' && !isNaN(revalidateVal) && revalidateVal > -1) {\n            normalizedRevalidate = revalidateVal;\n        } else if (typeof revalidateVal !== 'undefined') {\n            throw new Error(`Invalid revalidate value \"${revalidateVal}\" on \"${route}\", must be a non-negative number or false`);\n        }\n        return normalizedRevalidate;\n    } catch (err) {\n        // handle client component error from attempting to check revalidate value\n        if (err instanceof Error && err.message.includes('Invalid revalidate')) {\n            throw err;\n        }\n        return undefined;\n    }\n}\nexport function validateTags(tags, description) {\n    const validTags = [];\n    const invalidTags = [];\n    for(let i = 0; i < tags.length; i++){\n        const tag = tags[i];\n        if (typeof tag !== 'string') {\n            invalidTags.push({\n                tag,\n                reason: 'invalid type, must be a string'\n            });\n        } else if (tag.length > NEXT_CACHE_TAG_MAX_LENGTH) {\n            invalidTags.push({\n                tag,\n                reason: `exceeded max length of ${NEXT_CACHE_TAG_MAX_LENGTH}`\n            });\n        } else {\n            validTags.push(tag);\n        }\n        if (validTags.length > NEXT_CACHE_TAG_MAX_ITEMS) {\n            console.warn(`Warning: exceeded max tag count for ${description}, dropped tags:`, tags.slice(i).join(', '));\n            break;\n        }\n    }\n    if (invalidTags.length > 0) {\n        console.warn(`Warning: invalid tags passed to ${description}: `);\n        for (const { tag, reason } of invalidTags){\n            console.log(`tag: \"${tag}\" ${reason}`);\n        }\n    }\n    return validTags;\n}\nfunction trackFetchMetric(workStore, ctx) {\n    var _workStore_requestEndedState;\n    // If the static generation store is not available, we can't track the fetch\n    if (!workStore) return;\n    if ((_workStore_requestEndedState = workStore.requestEndedState) == null ? void 0 : _workStore_requestEndedState.ended) return;\n    const isDebugBuild = (!!process.env.NEXT_DEBUG_BUILD || process.env.NEXT_SSG_FETCH_METRICS === '1') && workStore.isStaticGeneration;\n    const isDevelopment = process.env.NODE_ENV === 'development';\n    if (// The only time we want to track fetch metrics outside of development is when\n    // we are performing a static generation & we are in debug mode.\n    !isDebugBuild && !isDevelopment) {\n        return;\n    }\n    workStore.fetchMetrics ??= [];\n    workStore.fetchMetrics.push({\n        ...ctx,\n        end: performance.timeOrigin + performance.now(),\n        idx: workStore.nextFetchId || 0\n    });\n}\nexport function createPatchedFetcher(originFetch, { workAsyncStorage, workUnitAsyncStorage }) {\n    // Create the patched fetch function. We don't set the type here, as it's\n    // verified as the return value of this function.\n    const patched = async (input, init)=>{\n        var _init_method, _init_next;\n        let url;\n        try {\n            url = new URL(input instanceof Request ? input.url : input);\n            url.username = '';\n            url.password = '';\n        } catch  {\n            // Error caused by malformed URL should be handled by native fetch\n            url = undefined;\n        }\n        const fetchUrl = (url == null ? void 0 : url.href) ?? '';\n        const method = (init == null ? void 0 : (_init_method = init.method) == null ? void 0 : _init_method.toUpperCase()) || 'GET';\n        // Do create a new span trace for internal fetches in the\n        // non-verbose mode.\n        const isInternal = (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next.internal) === true;\n        const hideSpan = process.env.NEXT_OTEL_FETCH_DISABLED === '1';\n        // We don't track fetch metrics for internal fetches\n        // so it's not critical that we have a start time, as it won't be recorded.\n        // This is to workaround a flaky issue where performance APIs might\n        // not be available and will require follow-up investigation.\n        const fetchStart = isInternal ? undefined : performance.timeOrigin + performance.now();\n        const workStore = workAsyncStorage.getStore();\n        const workUnitStore = workUnitAsyncStorage.getStore();\n        // During static generation we track cache reads so we can reason about when they fill\n        let cacheSignal = workUnitStore && workUnitStore.type === 'prerender' ? workUnitStore.cacheSignal : null;\n        if (cacheSignal) {\n            cacheSignal.beginRead();\n        }\n        const result = getTracer().trace(isInternal ? NextNodeServerSpan.internalFetch : AppRenderSpan.fetch, {\n            hideSpan,\n            kind: SpanKind.CLIENT,\n            spanName: [\n                'fetch',\n                method,\n                fetchUrl\n            ].filter(Boolean).join(' '),\n            attributes: {\n                'http.url': fetchUrl,\n                'http.method': method,\n                'net.peer.name': url == null ? void 0 : url.hostname,\n                'net.peer.port': (url == null ? void 0 : url.port) || undefined\n            }\n        }, async ()=>{\n            var _getRequestMeta;\n            // If this is an internal fetch, we should not do any special treatment.\n            if (isInternal) {\n                return originFetch(input, init);\n            }\n            // If the workStore is not available, we can't do any\n            // special treatment of fetch, therefore fallback to the original\n            // fetch implementation.\n            if (!workStore) {\n                return originFetch(input, init);\n            }\n            // We should also fallback to the original fetch implementation if we\n            // are in draft mode, it does not constitute a static generation.\n            if (workStore.isDraftMode) {\n                return originFetch(input, init);\n            }\n            const isRequestInput = input && typeof input === 'object' && typeof input.method === 'string';\n            const getRequestMeta = (field)=>{\n                // If request input is present but init is not, retrieve from input first.\n                const value = init == null ? void 0 : init[field];\n                return value || (isRequestInput ? input[field] : null);\n            };\n            let finalRevalidate = undefined;\n            const getNextField = (field)=>{\n                var _init_next, _init_next1, _input_next;\n                return typeof (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next[field]) !== 'undefined' ? init == null ? void 0 : (_init_next1 = init.next) == null ? void 0 : _init_next1[field] : isRequestInput ? (_input_next = input.next) == null ? void 0 : _input_next[field] : undefined;\n            };\n            // RequestInit doesn't keep extra fields e.g. next so it's\n            // only available if init is used separate\n            let currentFetchRevalidate = getNextField('revalidate');\n            const tags = validateTags(getNextField('tags') || [], `fetch ${input.toString()}`);\n            if (workUnitStore && (workUnitStore.type === 'cache' || workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-ppr' || workUnitStore.type === 'prerender-legacy')) {\n                if (Array.isArray(tags)) {\n                    // Collect tags onto parent caches or parent prerenders.\n                    const collectedTags = workUnitStore.tags ?? (workUnitStore.tags = []);\n                    for (const tag of tags){\n                        if (!collectedTags.includes(tag)) {\n                            collectedTags.push(tag);\n                        }\n                    }\n                }\n            }\n            const implicitTags = !workUnitStore || workUnitStore.type === 'unstable-cache' ? [] : workUnitStore.implicitTags;\n            // Inside unstable-cache or \"use cache\", we treat it the same as\n            // force-no-store on the page.\n            const pageFetchCacheMode = workUnitStore && (workUnitStore.type === 'unstable-cache' || workUnitStore.type === 'cache') ? 'force-no-store' : workStore.fetchCache;\n            const isUsingNoStore = !!workStore.isUnstableNoStore;\n            let currentFetchCacheConfig = getRequestMeta('cache');\n            let cacheReason = '';\n            let cacheWarning;\n            if (typeof currentFetchCacheConfig === 'string' && typeof currentFetchRevalidate !== 'undefined') {\n                // when providing fetch with a Request input, it'll automatically set a cache value of 'default'\n                // we only want to warn if the user is explicitly setting a cache value\n                if (!(isRequestInput && currentFetchCacheConfig === 'default')) {\n                    cacheWarning = `Specified \"cache: ${currentFetchCacheConfig}\" and \"revalidate: ${currentFetchRevalidate}\", only one should be specified.`;\n                }\n                currentFetchCacheConfig = undefined;\n            }\n            if (currentFetchCacheConfig === 'force-cache') {\n                currentFetchRevalidate = false;\n            } else if (// if we are inside of \"use cache\"/\"unstable_cache\"\n            // we shouldn't set the revalidate to 0 as it's overridden\n            // by the cache context\n            (workUnitStore == null ? void 0 : workUnitStore.type) !== 'cache' && (currentFetchCacheConfig === 'no-cache' || currentFetchCacheConfig === 'no-store' || pageFetchCacheMode === 'force-no-store' || pageFetchCacheMode === 'only-no-store' || // If no explicit fetch cache mode is set, but dynamic = `force-dynamic` is set,\n            // we shouldn't consider caching the fetch. This is because the `dynamic` cache\n            // is considered a \"top-level\" cache mode, whereas something like `fetchCache` is more\n            // fine-grained. Top-level modes are responsible for setting reasonable defaults for the\n            // other configurations.\n            !pageFetchCacheMode && workStore.forceDynamic)) {\n                currentFetchRevalidate = 0;\n            }\n            if (currentFetchCacheConfig === 'no-cache' || currentFetchCacheConfig === 'no-store') {\n                cacheReason = `cache: ${currentFetchCacheConfig}`;\n            }\n            finalRevalidate = validateRevalidate(currentFetchRevalidate, workStore.route);\n            const _headers = getRequestMeta('headers');\n            const initHeaders = typeof (_headers == null ? void 0 : _headers.get) === 'function' ? _headers : new Headers(_headers || {});\n            const hasUnCacheableHeader = initHeaders.get('authorization') || initHeaders.get('cookie');\n            const isUnCacheableMethod = ![\n                'get',\n                'head'\n            ].includes(((_getRequestMeta = getRequestMeta('method')) == null ? void 0 : _getRequestMeta.toLowerCase()) || 'get');\n            const revalidateStore = workUnitStore && (workUnitStore.type === 'cache' || workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-ppr' || workUnitStore.type === 'prerender-legacy') ? workUnitStore : undefined;\n            /**\n         * We automatically disable fetch caching under the following conditions:\n         * - Fetch cache configs are not set. Specifically:\n         *    - A page fetch cache mode is not set (export const fetchCache=...)\n         *    - A fetch cache mode is not set in the fetch call (fetch(url, { cache: ... }))\n         *      or the fetch cache mode is set to 'default'\n         *    - A fetch revalidate value is not set in the fetch call (fetch(url, { revalidate: ... }))\n         * - OR the fetch comes after a configuration that triggered dynamic rendering (e.g., reading cookies())\n         *   and the fetch was considered uncacheable (e.g., POST method or has authorization headers)\n         */ const hasNoExplicitCacheConfig = // eslint-disable-next-line eqeqeq\n            pageFetchCacheMode == undefined && // eslint-disable-next-line eqeqeq\n            (currentFetchCacheConfig == undefined || // when considering whether to opt into the default \"no-cache\" fetch semantics,\n            // a \"default\" cache config should be treated the same as no cache config\n            currentFetchCacheConfig === 'default') && // eslint-disable-next-line eqeqeq\n            currentFetchRevalidate == undefined;\n            const autoNoCache = // this condition is hit for null/undefined\n            // eslint-disable-next-line eqeqeq\n            hasNoExplicitCacheConfig && // we disable automatic no caching behavior during build time SSG so that we can still\n            // leverage the fetch cache between SSG workers\n            !workStore.isPrerendering || (hasUnCacheableHeader || isUnCacheableMethod) && revalidateStore && revalidateStore.revalidate === 0;\n            if (hasNoExplicitCacheConfig && workUnitStore !== undefined && workUnitStore.type === 'prerender') {\n                // If we have no cache config, and we're in Dynamic I/O prerendering, it'll be a dynamic call.\n                // We don't have to issue that dynamic call.\n                if (cacheSignal) {\n                    cacheSignal.endRead();\n                    cacheSignal = null;\n                }\n                return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n            }\n            switch(pageFetchCacheMode){\n                case 'force-no-store':\n                    {\n                        cacheReason = 'fetchCache = force-no-store';\n                        break;\n                    }\n                case 'only-no-store':\n                    {\n                        if (currentFetchCacheConfig === 'force-cache' || typeof finalRevalidate !== 'undefined' && finalRevalidate > 0) {\n                            throw new Error(`cache: 'force-cache' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-no-store'`);\n                        }\n                        cacheReason = 'fetchCache = only-no-store';\n                        break;\n                    }\n                case 'only-cache':\n                    {\n                        if (currentFetchCacheConfig === 'no-store') {\n                            throw new Error(`cache: 'no-store' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-cache'`);\n                        }\n                        break;\n                    }\n                case 'force-cache':\n                    {\n                        if (typeof currentFetchRevalidate === 'undefined' || currentFetchRevalidate === 0) {\n                            cacheReason = 'fetchCache = force-cache';\n                            finalRevalidate = INFINITE_CACHE;\n                        }\n                        break;\n                    }\n                default:\n            }\n            if (typeof finalRevalidate === 'undefined') {\n                if (pageFetchCacheMode === 'default-cache' && !isUsingNoStore) {\n                    finalRevalidate = INFINITE_CACHE;\n                    cacheReason = 'fetchCache = default-cache';\n                } else if (pageFetchCacheMode === 'default-no-store') {\n                    finalRevalidate = 0;\n                    cacheReason = 'fetchCache = default-no-store';\n                } else if (isUsingNoStore) {\n                    finalRevalidate = 0;\n                    cacheReason = 'noStore call';\n                } else if (autoNoCache) {\n                    finalRevalidate = 0;\n                    cacheReason = 'auto no cache';\n                } else {\n                    // TODO: should we consider this case an invariant?\n                    cacheReason = 'auto cache';\n                    finalRevalidate = revalidateStore ? revalidateStore.revalidate : INFINITE_CACHE;\n                }\n            } else if (!cacheReason) {\n                cacheReason = `revalidate: ${finalRevalidate}`;\n            }\n            if (// when force static is configured we don't bail from\n            // `revalidate: 0` values\n            !(workStore.forceStatic && finalRevalidate === 0) && // we don't consider autoNoCache to switch to dynamic for ISR\n            !autoNoCache && // If the revalidate value isn't currently set or the value is less\n            // than the current revalidate value, we should update the revalidate\n            // value.\n            revalidateStore && finalRevalidate < revalidateStore.revalidate) {\n                // If we were setting the revalidate value to 0, we should try to\n                // postpone instead first.\n                if (finalRevalidate === 0) {\n                    if (workUnitStore && workUnitStore.type === 'prerender') {\n                        if (cacheSignal) {\n                            cacheSignal.endRead();\n                            cacheSignal = null;\n                        }\n                        return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n                    } else {\n                        markCurrentScopeAsDynamic(workStore, workUnitStore, `revalidate: 0 fetch ${input} ${workStore.route}`);\n                    }\n                }\n                if (revalidateStore) {\n                    revalidateStore.revalidate = finalRevalidate;\n                }\n            }\n            const isCacheableRevalidate = typeof finalRevalidate === 'number' && finalRevalidate > 0;\n            let cacheKey;\n            const { incrementalCache } = workStore;\n            const requestStore = workUnitStore !== undefined && workUnitStore.type === 'request' ? workUnitStore : undefined;\n            if (incrementalCache && (isCacheableRevalidate || (requestStore == null ? void 0 : requestStore.serverComponentsHmrCache))) {\n                try {\n                    cacheKey = await incrementalCache.generateCacheKey(fetchUrl, isRequestInput ? input : init);\n                } catch (err) {\n                    console.error(`Failed to generate cache key for`, input);\n                }\n            }\n            const fetchIdx = workStore.nextFetchId ?? 1;\n            workStore.nextFetchId = fetchIdx + 1;\n            let handleUnlock = ()=>Promise.resolve();\n            const doOriginalFetch = async (isStale, cacheReasonOverride)=>{\n                const requestInputFields = [\n                    'cache',\n                    'credentials',\n                    'headers',\n                    'integrity',\n                    'keepalive',\n                    'method',\n                    'mode',\n                    'redirect',\n                    'referrer',\n                    'referrerPolicy',\n                    'window',\n                    'duplex',\n                    // don't pass through signal when revalidating\n                    ...isStale ? [] : [\n                        'signal'\n                    ]\n                ];\n                if (isRequestInput) {\n                    const reqInput = input;\n                    const reqOptions = {\n                        body: reqInput._ogBody || reqInput.body\n                    };\n                    for (const field of requestInputFields){\n                        // @ts-expect-error custom fields\n                        reqOptions[field] = reqInput[field];\n                    }\n                    input = new Request(reqInput.url, reqOptions);\n                } else if (init) {\n                    const { _ogBody, body, signal, ...otherInput } = init;\n                    init = {\n                        ...otherInput,\n                        body: _ogBody || body,\n                        signal: isStale ? undefined : signal\n                    };\n                }\n                // add metadata to init without editing the original\n                const clonedInit = {\n                    ...init,\n                    next: {\n                        ...init == null ? void 0 : init.next,\n                        fetchType: 'origin',\n                        fetchIdx\n                    }\n                };\n                return originFetch(input, clonedInit).then(async (res)=>{\n                    if (!isStale && fetchStart) {\n                        trackFetchMetric(workStore, {\n                            start: fetchStart,\n                            url: fetchUrl,\n                            cacheReason: cacheReasonOverride || cacheReason,\n                            cacheStatus: finalRevalidate === 0 || cacheReasonOverride ? 'skip' : 'miss',\n                            cacheWarning,\n                            status: res.status,\n                            method: clonedInit.method || 'GET'\n                        });\n                    }\n                    if (res.status === 200 && incrementalCache && cacheKey && (isCacheableRevalidate || (requestStore == null ? void 0 : requestStore.serverComponentsHmrCache))) {\n                        const normalizedRevalidate = finalRevalidate >= INFINITE_CACHE ? CACHE_ONE_YEAR : finalRevalidate;\n                        const externalRevalidate = finalRevalidate >= INFINITE_CACHE ? false : finalRevalidate;\n                        if (workUnitStore && workUnitStore.type === 'prerender') {\n                            // We are prerendering at build time or revalidate time with dynamicIO so we need to\n                            // buffer the response so we can guarantee it can be read in a microtask\n                            const bodyBuffer = await res.arrayBuffer();\n                            const fetchedData = {\n                                headers: Object.fromEntries(res.headers.entries()),\n                                body: Buffer.from(bodyBuffer).toString('base64'),\n                                status: res.status,\n                                url: res.url\n                            };\n                            // We can skip checking the serverComponentsHmrCache because we aren't in\n                            // dev mode.\n                            await incrementalCache.set(cacheKey, {\n                                kind: CachedRouteKind.FETCH,\n                                data: fetchedData,\n                                revalidate: normalizedRevalidate\n                            }, {\n                                fetchCache: true,\n                                revalidate: externalRevalidate,\n                                fetchUrl,\n                                fetchIdx,\n                                tags\n                            });\n                            await handleUnlock();\n                            // We we return a new Response to the caller.\n                            return new Response(bodyBuffer, {\n                                headers: res.headers,\n                                status: res.status,\n                                statusText: res.statusText\n                            });\n                        } else {\n                            // We are dynamically rendering including dev mode. We want to return\n                            // the response to the caller as soon as possible because it might stream\n                            // over a very long time.\n                            res.clone().arrayBuffer().then(async (arrayBuffer)=>{\n                                var _requestStore_serverComponentsHmrCache;\n                                const bodyBuffer = Buffer.from(arrayBuffer);\n                                const fetchedData = {\n                                    headers: Object.fromEntries(res.headers.entries()),\n                                    body: bodyBuffer.toString('base64'),\n                                    status: res.status,\n                                    url: res.url\n                                };\n                                requestStore == null ? void 0 : (_requestStore_serverComponentsHmrCache = requestStore.serverComponentsHmrCache) == null ? void 0 : _requestStore_serverComponentsHmrCache.set(cacheKey, fetchedData);\n                                if (isCacheableRevalidate) {\n                                    await incrementalCache.set(cacheKey, {\n                                        kind: CachedRouteKind.FETCH,\n                                        data: fetchedData,\n                                        revalidate: normalizedRevalidate\n                                    }, {\n                                        fetchCache: true,\n                                        revalidate: externalRevalidate,\n                                        fetchUrl,\n                                        fetchIdx,\n                                        tags\n                                    });\n                                }\n                            }).catch((error)=>console.warn(`Failed to set fetch cache`, input, error)).finally(handleUnlock);\n                            return res;\n                        }\n                    }\n                    // we had response that we determined shouldn't be cached so we return it\n                    // and don't cache it. This also needs to unlock the cache lock we acquired.\n                    await handleUnlock();\n                    return res;\n                });\n            };\n            let cacheReasonOverride;\n            let isForegroundRevalidate = false;\n            let isHmrRefreshCache = false;\n            if (cacheKey && incrementalCache) {\n                let cachedFetchData;\n                if ((requestStore == null ? void 0 : requestStore.isHmrRefresh) && requestStore.serverComponentsHmrCache) {\n                    cachedFetchData = requestStore.serverComponentsHmrCache.get(cacheKey);\n                    isHmrRefreshCache = true;\n                }\n                if (isCacheableRevalidate && !cachedFetchData) {\n                    handleUnlock = await incrementalCache.lock(cacheKey);\n                    const entry = workStore.isOnDemandRevalidate ? null : await incrementalCache.get(cacheKey, {\n                        kind: IncrementalCacheKind.FETCH,\n                        revalidate: finalRevalidate,\n                        fetchUrl,\n                        fetchIdx,\n                        tags,\n                        softTags: implicitTags,\n                        isFallback: false\n                    });\n                    if (hasNoExplicitCacheConfig) {\n                        // We sometimes use the cache to dedupe fetches that do not specify a cache configuration\n                        // In these cases we want to make sure we still exclude them from prerenders if dynamicIO is on\n                        // so we introduce an artificial Task boundary here.\n                        if (workUnitStore && workUnitStore.type === 'prerender') {\n                            await waitAtLeastOneReactRenderTask();\n                        }\n                    }\n                    if (entry) {\n                        await handleUnlock();\n                    } else {\n                        // in dev, incremental cache response will be null in case the browser adds `cache-control: no-cache` in the request headers\n                        cacheReasonOverride = 'cache-control: no-cache (hard refresh)';\n                    }\n                    if ((entry == null ? void 0 : entry.value) && entry.value.kind === CachedRouteKind.FETCH) {\n                        // when stale and is revalidating we wait for fresh data\n                        // so the revalidated entry has the updated data\n                        if (workStore.isRevalidate && entry.isStale) {\n                            isForegroundRevalidate = true;\n                        } else {\n                            if (entry.isStale) {\n                                workStore.pendingRevalidates ??= {};\n                                if (!workStore.pendingRevalidates[cacheKey]) {\n                                    workStore.pendingRevalidates[cacheKey] = doOriginalFetch(true).catch(console.error).finally(()=>{\n                                        workStore.pendingRevalidates ??= {};\n                                        delete workStore.pendingRevalidates[cacheKey || ''];\n                                    });\n                                }\n                            }\n                            cachedFetchData = entry.value.data;\n                        }\n                    }\n                }\n                if (cachedFetchData) {\n                    if (fetchStart) {\n                        trackFetchMetric(workStore, {\n                            start: fetchStart,\n                            url: fetchUrl,\n                            cacheReason,\n                            cacheStatus: isHmrRefreshCache ? 'hmr' : 'hit',\n                            cacheWarning,\n                            status: cachedFetchData.status || 200,\n                            method: (init == null ? void 0 : init.method) || 'GET'\n                        });\n                    }\n                    const response = new Response(Buffer.from(cachedFetchData.body, 'base64'), {\n                        headers: cachedFetchData.headers,\n                        status: cachedFetchData.status\n                    });\n                    Object.defineProperty(response, 'url', {\n                        value: cachedFetchData.url\n                    });\n                    return response;\n                }\n            }\n            if (workStore.isStaticGeneration && init && typeof init === 'object') {\n                const { cache } = init;\n                // Delete `cache` property as Cloudflare Workers will throw an error\n                if (isEdgeRuntime) delete init.cache;\n                if (cache === 'no-store') {\n                    // If enabled, we should bail out of static generation.\n                    if (workUnitStore && workUnitStore.type === 'prerender') {\n                        if (cacheSignal) {\n                            cacheSignal.endRead();\n                            cacheSignal = null;\n                        }\n                        return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n                    } else {\n                        markCurrentScopeAsDynamic(workStore, workUnitStore, `no-store fetch ${input} ${workStore.route}`);\n                    }\n                }\n                const hasNextConfig = 'next' in init;\n                const { next = {} } = init;\n                if (typeof next.revalidate === 'number' && revalidateStore && next.revalidate < revalidateStore.revalidate) {\n                    if (next.revalidate === 0) {\n                        // If enabled, we should bail out of static generation.\n                        if (workUnitStore && workUnitStore.type === 'prerender') {\n                            return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n                        } else {\n                            markCurrentScopeAsDynamic(workStore, workUnitStore, `revalidate: 0 fetch ${input} ${workStore.route}`);\n                        }\n                    }\n                    if (!workStore.forceStatic || next.revalidate !== 0) {\n                        revalidateStore.revalidate = next.revalidate;\n                    }\n                }\n                if (hasNextConfig) delete init.next;\n            }\n            // if we are revalidating the whole page via time or on-demand and\n            // the fetch cache entry is stale we should still de-dupe the\n            // origin hit if it's a cache-able entry\n            if (cacheKey && isForegroundRevalidate) {\n                const pendingRevalidateKey = cacheKey;\n                workStore.pendingRevalidates ??= {};\n                const pendingRevalidate = workStore.pendingRevalidates[pendingRevalidateKey];\n                if (pendingRevalidate) {\n                    const revalidatedResult = await pendingRevalidate;\n                    return new Response(revalidatedResult.body, {\n                        headers: revalidatedResult.headers,\n                        status: revalidatedResult.status,\n                        statusText: revalidatedResult.statusText\n                    });\n                }\n                // We used to just resolve the Response and clone it however for\n                // static generation with dynamicIO we need the response to be able to\n                // be resolved in a microtask and Response#clone() will never have a\n                // body that can resolve in a microtask in node (as observed through\n                // experimentation) So instead we await the body and then when it is\n                // available we construct manually cloned Response objects with the\n                // body as an ArrayBuffer. This will be resolvable in a microtask\n                // making it compatible with dynamicIO.\n                const pendingResponse = doOriginalFetch(true, cacheReasonOverride);\n                const nextRevalidate = pendingResponse.then(async (response)=>{\n                    // Clone the response here. It'll run first because we attached\n                    // the resolve before we returned below. We have to clone it\n                    // because the original response is going to be consumed by\n                    // at a later point in time.\n                    const clonedResponse = response.clone();\n                    return {\n                        body: await clonedResponse.arrayBuffer(),\n                        headers: clonedResponse.headers,\n                        status: clonedResponse.status,\n                        statusText: clonedResponse.statusText\n                    };\n                }).finally(()=>{\n                    var _workStore_pendingRevalidates;\n                    // If the pending revalidate is not present in the store, then\n                    // we have nothing to delete.\n                    if (!((_workStore_pendingRevalidates = workStore.pendingRevalidates) == null ? void 0 : _workStore_pendingRevalidates[pendingRevalidateKey])) {\n                        return;\n                    }\n                    delete workStore.pendingRevalidates[pendingRevalidateKey];\n                });\n                // Attach the empty catch here so we don't get a \"unhandled promise\n                // rejection\" warning\n                nextRevalidate.catch(()=>{});\n                workStore.pendingRevalidates[pendingRevalidateKey] = nextRevalidate;\n                return pendingResponse;\n            } else {\n                return doOriginalFetch(false, cacheReasonOverride);\n            }\n        });\n        if (cacheSignal) {\n            try {\n                return await result;\n            } finally{\n                if (cacheSignal) {\n                    cacheSignal.endRead();\n                }\n            }\n        }\n        return result;\n    };\n    // Attach the necessary properties to the patched fetch function.\n    // We don't use this to determine if the fetch function has been patched,\n    // but for external consumers to determine if the fetch function has been\n    // patched.\n    patched.__nextPatched = true;\n    patched.__nextGetStaticStore = ()=>workAsyncStorage;\n    patched._nextOriginalFetch = originFetch;\n    globalThis[NEXT_PATCH_SYMBOL] = true;\n    return patched;\n}\n// we patch fetch to collect cache information used for\n// determining if a page is static or not\nexport function patchFetch(options) {\n    // If we've already patched fetch, we should not patch it again.\n    if (isFetchPatched()) return;\n    // Grab the original fetch function. We'll attach this so we can use it in\n    // the patched fetch function.\n    const original = createDedupeFetch(globalThis.fetch);\n    // Set the global fetch to the patched fetch.\n    globalThis.fetch = createPatchedFetcher(original, options);\n}\n\n//# sourceMappingURL=patch-fetch.js.map","/*\n\nFiles in the rsc directory are meant to be packaged as part of the RSC graph using next-app-loader.\n\n*/ import ReactDOM from 'react-dom';\nexport function preloadStyle(href, crossOrigin, nonce) {\n    const opts = {\n        as: 'style'\n    };\n    if (typeof crossOrigin === 'string') {\n        opts.crossOrigin = crossOrigin;\n    }\n    if (typeof nonce === 'string') {\n        opts.nonce = nonce;\n    }\n    ReactDOM.preload(href, opts);\n}\nexport function preloadFont(href, type, crossOrigin, nonce) {\n    const opts = {\n        as: 'font',\n        type\n    };\n    if (typeof crossOrigin === 'string') {\n        opts.crossOrigin = crossOrigin;\n    }\n    if (typeof nonce === 'string') {\n        opts.nonce = nonce;\n    }\n    ReactDOM.preload(href, opts);\n}\nexport function preconnect(href, crossOrigin, nonce) {\n    const opts = {};\n    if (typeof crossOrigin === 'string') {\n        opts.crossOrigin = crossOrigin;\n    }\n    if (typeof nonce === 'string') {\n        opts.nonce = nonce;\n    }\n    ReactDOM.preconnect(href, opts);\n}\n\n//# sourceMappingURL=preloads.js.map","/*\n\nFiles in the rsc directory are meant to be packaged as part of the RSC graph using next-app-loader.\n\n*/ // When postpone is available in canary React we can switch to importing it directly\nexport { Postpone } from '../dynamic-rendering';\n\n//# sourceMappingURL=postpone.js.map","/*\n\nFiles in the rsc directory are meant to be packaged as part of the RSC graph using next-app-loader.\n\n*/ import * as React from 'react';\nfunction notImplemented() {\n    throw new Error('Taint can only be used with the taint flag.');\n}\nexport const taintObjectReference = process.env.__NEXT_EXPERIMENTAL_REACT ? React.experimental_taintObjectReference : notImplemented;\nexport const taintUniqueValue = process.env.__NEXT_EXPERIMENTAL_REACT ? React.experimental_taintUniqueValue : notImplemented;\n\n//# sourceMappingURL=taint.js.map","// eslint-disable-next-line import/no-extraneous-dependencies\nexport { createTemporaryReferenceSet, renderToReadableStream, decodeReply, decodeAction, decodeFormState } from 'react-server-dom-webpack/server.edge';\n// eslint-disable-next-line import/no-extraneous-dependencies\nexport { prerender } from 'react-server-dom-webpack/static.edge';\nimport LayoutRouter from '../../client/components/layout-router';\nimport RenderFromTemplateContext from '../../client/components/render-from-template-context';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external';\nimport { actionAsyncStorage } from '../app-render/action-async-storage.external';\nimport { ClientPageRoot } from '../../client/components/client-page';\nimport { ClientSegmentRoot } from '../../client/components/client-segment';\nimport { createServerSearchParamsForServerPage, createPrerenderSearchParamsForClientPage, createServerSearchParamsForMetadata } from '../request/search-params';\nimport { createServerParamsForServerSegment, createServerParamsForMetadata, createPrerenderParamsForClientSegment } from '../request/params';\nimport * as serverHooks from '../../client/components/hooks-server-context';\nimport { NotFoundBoundary } from '../../client/components/not-found-boundary';\nimport { createMetadataComponents } from '../../lib/metadata/metadata';\nimport { patchFetch as _patchFetch } from '../lib/patch-fetch';\n// not being used but needs to be included in the client manifest for /_not-found\nimport '../../client/components/error-boundary';\nimport { MetadataBoundary, ViewportBoundary, OutletBoundary } from '../../lib/metadata/metadata-boundary';\nimport { preloadStyle, preloadFont, preconnect } from './rsc/preloads';\nimport { Postpone } from './rsc/postpone';\nimport { taintObjectReference } from './rsc/taint';\n// patchFetch makes use of APIs such as `React.unstable_postpone` which are only available\n// in the experimental channel of React, so export it from here so that it comes from the bundled runtime\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { LayoutRouter, RenderFromTemplateContext, workAsyncStorage, workUnitAsyncStorage, actionAsyncStorage, createServerSearchParamsForServerPage, createServerSearchParamsForMetadata, createPrerenderSearchParamsForClientPage, createServerParamsForServerSegment, createServerParamsForMetadata, createPrerenderParamsForClientSegment, serverHooks, preloadStyle, preloadFont, preconnect, Postpone, MetadataBoundary, ViewportBoundary, OutletBoundary, taintObjectReference, ClientPageRoot, ClientSegmentRoot, NotFoundBoundary, patchFetch, createMetadataComponents,  };\n\n//# sourceMappingURL=entry-base.js.map","const notFound0 = () => import(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/src/app/not-found.tsx\");\nconst module1 = () => import(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/src/app/layout.tsx\");\nconst module2 = () => import(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/src/app/not-found.tsx\");\nimport { AppPageRouteModule } from \"next/dist/server/route-modules/app-page/module.compiled\" with {\n    'turbopack-transition': 'next-ssr'\n};\nimport { RouteKind } from \"next/dist/server/route-kind\";\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n          children: [\"/_not-found\", {\n            children: ['__PAGE__', {}, {\n              page: [\n                notFound0,\n                \"/Users/nakaikento/repos/reel/src/app/not-found.tsx\"\n              ]\n            }]\n          }, {}]\n        },\n        {\n        'layout': [module1, \"/Users/nakaikento/repos/reel/src/app/layout.tsx\"],\n'not-found': [module2, \"/Users/nakaikento/repos/reel/src/app/not-found.tsx\"],\n        metadata: {\n    icon: [(async (props) => (await import(/* webpackMode: \"eager\" */ \"next-metadata-image-loader?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!/Users/nakaikento/repos/reel/src/app/favicon.ico?__next_metadata__\")).default(props))],\n    apple: [],\n    openGraph: [],\n    twitter: [],\n    manifest: undefined\n  }\n      }\n      ]\n      }.children;\nconst pages = [];\nexport { tree, pages };\nexport { default as GlobalError } from \"next/dist/client/components/error-boundary\";\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nexport const __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\nexport * from \"next/dist/server/app-render/entry-base\";\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n    definition: {\n        kind: RouteKind.APP_PAGE,\n        page: \"/_not-found/page\",\n        pathname: \"/_not-found\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: '',\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    }\n});\n\n//# sourceMappingURL=app-page.js.map","var _self___RSC_MANIFEST;\nimport \"next/dist/server/web/globals\";\nimport { adapter } from \"next/dist/server/web/adapter\";\nimport { getRender } from \"next/dist/build/webpack/loaders/next-edge-ssr-loader/render\";\nimport { IncrementalCache } from \"next/dist/server/lib/incremental-cache\";\nimport { renderToHTMLOrFlight as renderToHTML } from \"next/dist/server/app-render/app-render\";\nimport * as pageMod from \"next-app-loader?name=app%2F_not-found%2Fpage&page=%2F_not-found%2Fpage&pagePath=private-next-app-dir%2Fnot-found.tsx&appDir=%2FUsers%2Fnakaikento%2Frepos%2Freel%2Fsrc%2Fapp&appPaths=%2Fnot-found&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&flyingShuttle=false&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/not-found.tsx?__next_edge_ssr_entry__\";\nimport { PAGE_TYPES } from \"next/dist/lib/page-types\";\nimport { setReferenceManifestsSingleton } from \"next/dist/server/app-render/encryption-utils\";\nimport { createServerModuleMap } from \"next/dist/server/app-render/action-utils\";\nconst incrementalCacheHandler = null\nconst cacheHandlers = {\n\n};\nif (!globalThis.__nextCacheHandlers) {\n    globalThis.__nextCacheHandlers = cacheHandlers;\n}\nconst Document = null;\nconst appMod = null;\nconst errorMod = null;\nconst error500Mod = null;\nconst sriEnabled = false\nconst isServerComponent = true\nconst dev = false\nconst serverActions = undefined\nconst nextConfig = {\"env\":{},\"webpack\":null,\"eslint\":{\"ignoreDuringBuilds\":false},\"typescript\":{\"ignoreBuildErrors\":false,\"tsconfigPath\":\"tsconfig.json\"},\"distDir\":\".next\",\"cleanDistDir\":true,\"assetPrefix\":\"\",\"cacheMaxMemorySize\":52428800,\"configOrigin\":\"next.config.ts\",\"useFileSystemPublicRoutes\":true,\"generateEtags\":true,\"pageExtensions\":[\"tsx\",\"ts\",\"jsx\",\"js\"],\"poweredByHeader\":true,\"compress\":true,\"images\":{\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"loaderFile\":\"\",\"domains\":[],\"disableStaticImages\":false,\"minimumCacheTTL\":60,\"formats\":[\"image/webp\"],\"dangerouslyAllowSVG\":false,\"contentSecurityPolicy\":\"script-src 'none'; frame-src 'none'; sandbox;\",\"contentDispositionType\":\"attachment\",\"remotePatterns\":[],\"unoptimized\":false},\"devIndicators\":{\"appIsrStatus\":true,\"buildActivity\":true,\"buildActivityPosition\":\"bottom-right\"},\"onDemandEntries\":{\"maxInactiveAge\":60000,\"pagesBufferLength\":5},\"amp\":{\"canonicalBase\":\"\"},\"basePath\":\"\",\"sassOptions\":{},\"trailingSlash\":false,\"i18n\":null,\"productionBrowserSourceMaps\":false,\"excludeDefaultMomentLocales\":true,\"serverRuntimeConfig\":{},\"publicRuntimeConfig\":{},\"reactProductionProfiling\":false,\"reactStrictMode\":null,\"reactMaxHeadersLength\":6000,\"httpAgentOptions\":{\"keepAlive\":true},\"logging\":{},\"expireTime\":31536000,\"staticPageGenerationTimeout\":60,\"modularizeImports\":{\"@mui/icons-material\":{\"transform\":\"@mui/icons-material/{{member}}\"},\"lodash\":{\"transform\":\"lodash/{{member}}\"}},\"outputFileTracingRoot\":\"/Users/nakaikento/repos/reel\",\"experimental\":{\"cacheLife\":{\"default\":{\"stale\":300,\"revalidate\":900,\"expire\":4294967294},\"seconds\":{\"stale\":0,\"revalidate\":1,\"expire\":1},\"minutes\":{\"stale\":300,\"revalidate\":60,\"expire\":3600},\"hours\":{\"stale\":300,\"revalidate\":3600,\"expire\":86400},\"days\":{\"stale\":300,\"revalidate\":86400,\"expire\":604800},\"weeks\":{\"stale\":300,\"revalidate\":604800,\"expire\":2592000},\"max\":{\"stale\":300,\"revalidate\":2592000,\"expire\":4294967294}},\"cacheHandlers\":{},\"multiZoneDraftMode\":false,\"appNavFailHandling\":false,\"prerenderEarlyExit\":true,\"serverMinification\":true,\"serverSourceMaps\":false,\"linkNoTouchStart\":false,\"caseSensitiveRoutes\":false,\"preloadEntriesOnStart\":true,\"clientRouterFilter\":true,\"clientRouterFilterRedirects\":false,\"fetchCacheKeyPrefix\":\"\",\"middlewarePrefetch\":\"flexible\",\"optimisticClientCache\":true,\"manualClientBasePath\":false,\"cpus\":7,\"memoryBasedWorkersCount\":false,\"imgOptConcurrency\":null,\"imgOptTimeoutInSeconds\":7,\"imgOptMaxInputPixels\":268402689,\"isrFlushToDisk\":true,\"workerThreads\":false,\"optimizeCss\":false,\"nextScriptWorkers\":false,\"scrollRestoration\":false,\"externalDir\":false,\"disableOptimizedLoading\":false,\"gzipSize\":true,\"craCompat\":false,\"esmExternals\":true,\"fullySpecified\":false,\"swcTraceProfiling\":false,\"forceSwcTransforms\":false,\"largePageDataBytes\":128000,\"turbo\":{\"root\":\"/Users/nakaikento/repos/reel\"},\"typedRoutes\":false,\"typedEnv\":false,\"parallelServerCompiles\":false,\"parallelServerBuildTraces\":false,\"ppr\":false,\"reactOwnerStack\":false,\"webpackMemoryOptimizations\":false,\"optimizeServerReact\":true,\"useEarlyImport\":false,\"staleTimes\":{\"dynamic\":0,\"static\":300},\"after\":false,\"serverComponentsHmrCache\":true,\"staticGenerationMaxConcurrency\":8,\"staticGenerationMinPagesPerWorker\":25,\"dynamicIO\":false,\"optimizePackageImports\":[\"lucide-react\",\"date-fns\",\"lodash-es\",\"ramda\",\"antd\",\"react-bootstrap\",\"ahooks\",\"@ant-design/icons\",\"@headlessui/react\",\"@headlessui-float/react\",\"@heroicons/react/20/solid\",\"@heroicons/react/24/solid\",\"@heroicons/react/24/outline\",\"@visx/visx\",\"@tremor/react\",\"rxjs\",\"@mui/material\",\"@mui/icons-material\",\"recharts\",\"react-use\",\"effect\",\"@effect/schema\",\"@effect/platform\",\"@effect/platform-node\",\"@effect/platform-browser\",\"@effect/platform-bun\",\"@effect/sql\",\"@effect/sql-mssql\",\"@effect/sql-mysql2\",\"@effect/sql-pg\",\"@effect/sql-squlite-node\",\"@effect/sql-squlite-bun\",\"@effect/sql-squlite-wasm\",\"@effect/sql-squlite-react-native\",\"@effect/rpc\",\"@effect/rpc-http\",\"@effect/typeclass\",\"@effect/experimental\",\"@effect/opentelemetry\",\"@material-ui/core\",\"@material-ui/icons\",\"@tabler/icons-react\",\"mui-core\",\"react-icons/ai\",\"react-icons/bi\",\"react-icons/bs\",\"react-icons/cg\",\"react-icons/ci\",\"react-icons/di\",\"react-icons/fa\",\"react-icons/fa6\",\"react-icons/fc\",\"react-icons/fi\",\"react-icons/gi\",\"react-icons/go\",\"react-icons/gr\",\"react-icons/hi\",\"react-icons/hi2\",\"react-icons/im\",\"react-icons/io\",\"react-icons/io5\",\"react-icons/lia\",\"react-icons/lib\",\"react-icons/lu\",\"react-icons/md\",\"react-icons/pi\",\"react-icons/ri\",\"react-icons/rx\",\"react-icons/si\",\"react-icons/sl\",\"react-icons/tb\",\"react-icons/tfi\",\"react-icons/ti\",\"react-icons/vsc\",\"react-icons/wi\"]},\"bundlePagesRouterDependencies\":false,\"configFile\":\"/Users/nakaikento/repos/reel/next.config.ts\",\"configFileName\":\"next.config.ts\"}\nconst maybeJSONParse = (str)=>str ? JSON.parse(str) : undefined;\nconst buildManifest = self.__BUILD_MANIFEST;\nconst reactLoadableManifest = maybeJSONParse(self.__REACT_LOADABLE_MANIFEST);\nconst rscManifest = (_self___RSC_MANIFEST = self.__RSC_MANIFEST) == null ? void 0 : _self___RSC_MANIFEST[\"/_not-found/page\"];\nconst rscServerManifest = maybeJSONParse(self.__RSC_SERVER_MANIFEST);\nconst subresourceIntegrityManifest = sriEnabled ? maybeJSONParse(self.__SUBRESOURCE_INTEGRITY_MANIFEST) : undefined;\nconst nextFontManifest = maybeJSONParse(self.__NEXT_FONT_MANIFEST);\nconst interceptionRouteRewrites = maybeJSONParse(self.__INTERCEPTION_ROUTE_REWRITE_MANIFEST) ?? [];\nif (rscManifest && rscServerManifest) {\n    setReferenceManifestsSingleton({\n        page: \"/_not-found/page\",\n        clientReferenceManifest: rscManifest,\n        serverActionsManifest: rscServerManifest,\n        serverModuleMap: createServerModuleMap({\n            serverActionsManifest: rscServerManifest\n        })\n    });\n}\nconst render = getRender({\n    pagesType: PAGE_TYPES.APP,\n    dev,\n    page: \"/_not-found/page\",\n    appMod,\n    pageMod,\n    errorMod,\n    error500Mod,\n    Document,\n    buildManifest,\n    renderToHTML,\n    reactLoadableManifest,\n    clientReferenceManifest: isServerComponent ? rscManifest : null,\n    serverActionsManifest: isServerComponent ? rscServerManifest : null,\n    serverActions: isServerComponent ? serverActions : undefined,\n    subresourceIntegrityManifest,\n    config: nextConfig,\n    buildId: process.env.__NEXT_BUILD_ID,\n    nextFontManifest,\n    incrementalCacheHandler,\n    interceptionRouteRewrites\n});\nexport const ComponentMod = pageMod;\nexport default function nHandler(opts) {\n    return adapter({\n        ...opts,\n        IncrementalCache,\n        handler: render\n    });\n}\n\n//# sourceMappingURL=edge-ssr-app.js.map","import(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/client/components/app-router.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/client/components/client-page.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/client/components/client-segment.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/client/components/error-boundary.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/client/components/layout-router.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/client/components/not-found-boundary.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/client/components/render-from-template-context.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/client/components/router-reducer/fetch-server-response.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/lib/metadata/metadata-boundary.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/shared/lib/server-inserted-html.shared-runtime.js\");\n","import(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/client/components/app-router.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/client/components/client-page.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/client/components/client-segment.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/client/components/error-boundary.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/client/components/layout-router.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/client/components/not-found-boundary.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/client/components/render-from-template-context.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/client/components/router-reducer/fetch-server-response.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/lib/metadata/metadata-boundary.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/nakaikento/repos/reel/node_modules/next/dist/esm/shared/lib/server-inserted-html.shared-runtime.js\");\n",null,null,null,null,"\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies,\n  parseCookie: () => parseCookie,\n  parseSetCookie: () => parseSetCookie,\n  stringifyCookie: () => stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction stringifyCookie(c) {\n  var _a;\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\n    \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\n    \"partitioned\" in c && c.partitioned && \"Partitioned\",\n    \"priority\" in c && c.priority && `Priority=${c.priority}`\n  ].filter(Boolean);\n  const stringified = `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}`;\n  return attrs.length === 0 ? stringified : `${stringified}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    if (splitAt === -1) {\n      map.set(pair, \"true\");\n      continue;\n    }\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookie(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookie(setCookie);\n  const {\n    domain,\n    expires,\n    httponly,\n    maxage,\n    path,\n    samesite,\n    secure,\n    partitioned,\n    priority\n  } = Object.fromEntries(\n    attributes.map(([key, value2]) => [key.toLowerCase(), value2])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true },\n    ...priority && { priority: parsePriority(priority) },\n    ...partitioned && { partitioned: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\"low\", \"medium\", \"high\"];\nfunction parsePriority(string) {\n  string = string.toLowerCase();\n  return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookie(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  /**\n   * The amount of cookies received from the client\n   */\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => stringifyCookie(value2)).join(\"; \")\n    );\n    return this;\n  }\n  /**\n   * Delete the cookies matching the passed name or names in the request.\n   */\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => stringifyCookie(value)).join(\"; \")\n    );\n    return result;\n  }\n  /**\n   * Delete all the cookies in the cookies in the request.\n   */\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  /**\n   * Format the cookies in the request as a string for logging\n   */\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a, _b, _c;\n    this._headers = responseHeaders;\n    const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookie(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */\n  delete(...args) {\n    const [name, path, domain] = typeof args[0] === \"string\" ? [args[0]] : [args[0].name, args[0].path, args[0].domain];\n    return this.set({ name, path, domain, value: \"\", expires: /* @__PURE__ */ new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(stringifyCookie).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = stringifyCookie(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (typeof cookie.expires === \"number\") {\n    cookie.expires = new Date(cookie.expires);\n  }\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RequestCookies,\n  ResponseCookies,\n  parseCookie,\n  parseSetCookie,\n  stringifyCookie\n});\n","(()=>{\"use strict\";var e={491:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ContextAPI=void 0;const n=r(223);const a=r(172);const o=r(930);const i=\"context\";const c=new n.NoopContextManager;class ContextAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new ContextAPI}return this._instance}setGlobalContextManager(e){return(0,a.registerGlobal)(i,e,o.DiagAPI.instance())}active(){return this._getContextManager().active()}with(e,t,r,...n){return this._getContextManager().with(e,t,r,...n)}bind(e,t){return this._getContextManager().bind(e,t)}_getContextManager(){return(0,a.getGlobal)(i)||c}disable(){this._getContextManager().disable();(0,a.unregisterGlobal)(i,o.DiagAPI.instance())}}t.ContextAPI=ContextAPI},930:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagAPI=void 0;const n=r(56);const a=r(912);const o=r(957);const i=r(172);const c=\"diag\";class DiagAPI{constructor(){function _logProxy(e){return function(...t){const r=(0,i.getGlobal)(\"diag\");if(!r)return;return r[e](...t)}}const e=this;const setLogger=(t,r={logLevel:o.DiagLogLevel.INFO})=>{var n,c,s;if(t===e){const t=new Error(\"Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation\");e.error((n=t.stack)!==null&&n!==void 0?n:t.message);return false}if(typeof r===\"number\"){r={logLevel:r}}const u=(0,i.getGlobal)(\"diag\");const l=(0,a.createLogLevelDiagLogger)((c=r.logLevel)!==null&&c!==void 0?c:o.DiagLogLevel.INFO,t);if(u&&!r.suppressOverrideMessage){const e=(s=(new Error).stack)!==null&&s!==void 0?s:\"<failed to generate stacktrace>\";u.warn(`Current logger will be overwritten from ${e}`);l.warn(`Current logger will overwrite one already registered from ${e}`)}return(0,i.registerGlobal)(\"diag\",l,e,true)};e.setLogger=setLogger;e.disable=()=>{(0,i.unregisterGlobal)(c,e)};e.createComponentLogger=e=>new n.DiagComponentLogger(e);e.verbose=_logProxy(\"verbose\");e.debug=_logProxy(\"debug\");e.info=_logProxy(\"info\");e.warn=_logProxy(\"warn\");e.error=_logProxy(\"error\")}static instance(){if(!this._instance){this._instance=new DiagAPI}return this._instance}}t.DiagAPI=DiagAPI},653:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.MetricsAPI=void 0;const n=r(660);const a=r(172);const o=r(930);const i=\"metrics\";class MetricsAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new MetricsAPI}return this._instance}setGlobalMeterProvider(e){return(0,a.registerGlobal)(i,e,o.DiagAPI.instance())}getMeterProvider(){return(0,a.getGlobal)(i)||n.NOOP_METER_PROVIDER}getMeter(e,t,r){return this.getMeterProvider().getMeter(e,t,r)}disable(){(0,a.unregisterGlobal)(i,o.DiagAPI.instance())}}t.MetricsAPI=MetricsAPI},181:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.PropagationAPI=void 0;const n=r(172);const a=r(874);const o=r(194);const i=r(277);const c=r(369);const s=r(930);const u=\"propagation\";const l=new a.NoopTextMapPropagator;class PropagationAPI{constructor(){this.createBaggage=c.createBaggage;this.getBaggage=i.getBaggage;this.getActiveBaggage=i.getActiveBaggage;this.setBaggage=i.setBaggage;this.deleteBaggage=i.deleteBaggage}static getInstance(){if(!this._instance){this._instance=new PropagationAPI}return this._instance}setGlobalPropagator(e){return(0,n.registerGlobal)(u,e,s.DiagAPI.instance())}inject(e,t,r=o.defaultTextMapSetter){return this._getGlobalPropagator().inject(e,t,r)}extract(e,t,r=o.defaultTextMapGetter){return this._getGlobalPropagator().extract(e,t,r)}fields(){return this._getGlobalPropagator().fields()}disable(){(0,n.unregisterGlobal)(u,s.DiagAPI.instance())}_getGlobalPropagator(){return(0,n.getGlobal)(u)||l}}t.PropagationAPI=PropagationAPI},997:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceAPI=void 0;const n=r(172);const a=r(846);const o=r(139);const i=r(607);const c=r(930);const s=\"trace\";class TraceAPI{constructor(){this._proxyTracerProvider=new a.ProxyTracerProvider;this.wrapSpanContext=o.wrapSpanContext;this.isSpanContextValid=o.isSpanContextValid;this.deleteSpan=i.deleteSpan;this.getSpan=i.getSpan;this.getActiveSpan=i.getActiveSpan;this.getSpanContext=i.getSpanContext;this.setSpan=i.setSpan;this.setSpanContext=i.setSpanContext}static getInstance(){if(!this._instance){this._instance=new TraceAPI}return this._instance}setGlobalTracerProvider(e){const t=(0,n.registerGlobal)(s,this._proxyTracerProvider,c.DiagAPI.instance());if(t){this._proxyTracerProvider.setDelegate(e)}return t}getTracerProvider(){return(0,n.getGlobal)(s)||this._proxyTracerProvider}getTracer(e,t){return this.getTracerProvider().getTracer(e,t)}disable(){(0,n.unregisterGlobal)(s,c.DiagAPI.instance());this._proxyTracerProvider=new a.ProxyTracerProvider}}t.TraceAPI=TraceAPI},277:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.deleteBaggage=t.setBaggage=t.getActiveBaggage=t.getBaggage=void 0;const n=r(491);const a=r(780);const o=(0,a.createContextKey)(\"OpenTelemetry Baggage Key\");function getBaggage(e){return e.getValue(o)||undefined}t.getBaggage=getBaggage;function getActiveBaggage(){return getBaggage(n.ContextAPI.getInstance().active())}t.getActiveBaggage=getActiveBaggage;function setBaggage(e,t){return e.setValue(o,t)}t.setBaggage=setBaggage;function deleteBaggage(e){return e.deleteValue(o)}t.deleteBaggage=deleteBaggage},993:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.BaggageImpl=void 0;class BaggageImpl{constructor(e){this._entries=e?new Map(e):new Map}getEntry(e){const t=this._entries.get(e);if(!t){return undefined}return Object.assign({},t)}getAllEntries(){return Array.from(this._entries.entries()).map((([e,t])=>[e,t]))}setEntry(e,t){const r=new BaggageImpl(this._entries);r._entries.set(e,t);return r}removeEntry(e){const t=new BaggageImpl(this._entries);t._entries.delete(e);return t}removeEntries(...e){const t=new BaggageImpl(this._entries);for(const r of e){t._entries.delete(r)}return t}clear(){return new BaggageImpl}}t.BaggageImpl=BaggageImpl},830:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.baggageEntryMetadataSymbol=void 0;t.baggageEntryMetadataSymbol=Symbol(\"BaggageEntryMetadata\")},369:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.baggageEntryMetadataFromString=t.createBaggage=void 0;const n=r(930);const a=r(993);const o=r(830);const i=n.DiagAPI.instance();function createBaggage(e={}){return new a.BaggageImpl(new Map(Object.entries(e)))}t.createBaggage=createBaggage;function baggageEntryMetadataFromString(e){if(typeof e!==\"string\"){i.error(`Cannot create baggage metadata from unknown type: ${typeof e}`);e=\"\"}return{__TYPE__:o.baggageEntryMetadataSymbol,toString(){return e}}}t.baggageEntryMetadataFromString=baggageEntryMetadataFromString},67:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.context=void 0;const n=r(491);t.context=n.ContextAPI.getInstance()},223:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopContextManager=void 0;const n=r(780);class NoopContextManager{active(){return n.ROOT_CONTEXT}with(e,t,r,...n){return t.call(r,...n)}bind(e,t){return t}enable(){return this}disable(){return this}}t.NoopContextManager=NoopContextManager},780:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ROOT_CONTEXT=t.createContextKey=void 0;function createContextKey(e){return Symbol.for(e)}t.createContextKey=createContextKey;class BaseContext{constructor(e){const t=this;t._currentContext=e?new Map(e):new Map;t.getValue=e=>t._currentContext.get(e);t.setValue=(e,r)=>{const n=new BaseContext(t._currentContext);n._currentContext.set(e,r);return n};t.deleteValue=e=>{const r=new BaseContext(t._currentContext);r._currentContext.delete(e);return r}}}t.ROOT_CONTEXT=new BaseContext},506:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.diag=void 0;const n=r(930);t.diag=n.DiagAPI.instance()},56:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagComponentLogger=void 0;const n=r(172);class DiagComponentLogger{constructor(e){this._namespace=e.namespace||\"DiagComponentLogger\"}debug(...e){return logProxy(\"debug\",this._namespace,e)}error(...e){return logProxy(\"error\",this._namespace,e)}info(...e){return logProxy(\"info\",this._namespace,e)}warn(...e){return logProxy(\"warn\",this._namespace,e)}verbose(...e){return logProxy(\"verbose\",this._namespace,e)}}t.DiagComponentLogger=DiagComponentLogger;function logProxy(e,t,r){const a=(0,n.getGlobal)(\"diag\");if(!a){return}r.unshift(t);return a[e](...r)}},972:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagConsoleLogger=void 0;const r=[{n:\"error\",c:\"error\"},{n:\"warn\",c:\"warn\"},{n:\"info\",c:\"info\"},{n:\"debug\",c:\"debug\"},{n:\"verbose\",c:\"trace\"}];class DiagConsoleLogger{constructor(){function _consoleFunc(e){return function(...t){if(console){let r=console[e];if(typeof r!==\"function\"){r=console.log}if(typeof r===\"function\"){return r.apply(console,t)}}}}for(let e=0;e<r.length;e++){this[r[e].n]=_consoleFunc(r[e].c)}}}t.DiagConsoleLogger=DiagConsoleLogger},912:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createLogLevelDiagLogger=void 0;const n=r(957);function createLogLevelDiagLogger(e,t){if(e<n.DiagLogLevel.NONE){e=n.DiagLogLevel.NONE}else if(e>n.DiagLogLevel.ALL){e=n.DiagLogLevel.ALL}t=t||{};function _filterFunc(r,n){const a=t[r];if(typeof a===\"function\"&&e>=n){return a.bind(t)}return function(){}}return{error:_filterFunc(\"error\",n.DiagLogLevel.ERROR),warn:_filterFunc(\"warn\",n.DiagLogLevel.WARN),info:_filterFunc(\"info\",n.DiagLogLevel.INFO),debug:_filterFunc(\"debug\",n.DiagLogLevel.DEBUG),verbose:_filterFunc(\"verbose\",n.DiagLogLevel.VERBOSE)}}t.createLogLevelDiagLogger=createLogLevelDiagLogger},957:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagLogLevel=void 0;var r;(function(e){e[e[\"NONE\"]=0]=\"NONE\";e[e[\"ERROR\"]=30]=\"ERROR\";e[e[\"WARN\"]=50]=\"WARN\";e[e[\"INFO\"]=60]=\"INFO\";e[e[\"DEBUG\"]=70]=\"DEBUG\";e[e[\"VERBOSE\"]=80]=\"VERBOSE\";e[e[\"ALL\"]=9999]=\"ALL\"})(r=t.DiagLogLevel||(t.DiagLogLevel={}))},172:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.unregisterGlobal=t.getGlobal=t.registerGlobal=void 0;const n=r(200);const a=r(521);const o=r(130);const i=a.VERSION.split(\".\")[0];const c=Symbol.for(`opentelemetry.js.api.${i}`);const s=n._globalThis;function registerGlobal(e,t,r,n=false){var o;const i=s[c]=(o=s[c])!==null&&o!==void 0?o:{version:a.VERSION};if(!n&&i[e]){const t=new Error(`@opentelemetry/api: Attempted duplicate registration of API: ${e}`);r.error(t.stack||t.message);return false}if(i.version!==a.VERSION){const t=new Error(`@opentelemetry/api: Registration of version v${i.version} for ${e} does not match previously registered API v${a.VERSION}`);r.error(t.stack||t.message);return false}i[e]=t;r.debug(`@opentelemetry/api: Registered a global for ${e} v${a.VERSION}.`);return true}t.registerGlobal=registerGlobal;function getGlobal(e){var t,r;const n=(t=s[c])===null||t===void 0?void 0:t.version;if(!n||!(0,o.isCompatible)(n)){return}return(r=s[c])===null||r===void 0?void 0:r[e]}t.getGlobal=getGlobal;function unregisterGlobal(e,t){t.debug(`@opentelemetry/api: Unregistering a global for ${e} v${a.VERSION}.`);const r=s[c];if(r){delete r[e]}}t.unregisterGlobal=unregisterGlobal},130:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.isCompatible=t._makeCompatibilityCheck=void 0;const n=r(521);const a=/^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;function _makeCompatibilityCheck(e){const t=new Set([e]);const r=new Set;const n=e.match(a);if(!n){return()=>false}const o={major:+n[1],minor:+n[2],patch:+n[3],prerelease:n[4]};if(o.prerelease!=null){return function isExactmatch(t){return t===e}}function _reject(e){r.add(e);return false}function _accept(e){t.add(e);return true}return function isCompatible(e){if(t.has(e)){return true}if(r.has(e)){return false}const n=e.match(a);if(!n){return _reject(e)}const i={major:+n[1],minor:+n[2],patch:+n[3],prerelease:n[4]};if(i.prerelease!=null){return _reject(e)}if(o.major!==i.major){return _reject(e)}if(o.major===0){if(o.minor===i.minor&&o.patch<=i.patch){return _accept(e)}return _reject(e)}if(o.minor<=i.minor){return _accept(e)}return _reject(e)}}t._makeCompatibilityCheck=_makeCompatibilityCheck;t.isCompatible=_makeCompatibilityCheck(n.VERSION)},886:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.metrics=void 0;const n=r(653);t.metrics=n.MetricsAPI.getInstance()},901:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ValueType=void 0;var r;(function(e){e[e[\"INT\"]=0]=\"INT\";e[e[\"DOUBLE\"]=1]=\"DOUBLE\"})(r=t.ValueType||(t.ValueType={}))},102:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createNoopMeter=t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=t.NOOP_OBSERVABLE_GAUGE_METRIC=t.NOOP_OBSERVABLE_COUNTER_METRIC=t.NOOP_UP_DOWN_COUNTER_METRIC=t.NOOP_HISTOGRAM_METRIC=t.NOOP_COUNTER_METRIC=t.NOOP_METER=t.NoopObservableUpDownCounterMetric=t.NoopObservableGaugeMetric=t.NoopObservableCounterMetric=t.NoopObservableMetric=t.NoopHistogramMetric=t.NoopUpDownCounterMetric=t.NoopCounterMetric=t.NoopMetric=t.NoopMeter=void 0;class NoopMeter{constructor(){}createHistogram(e,r){return t.NOOP_HISTOGRAM_METRIC}createCounter(e,r){return t.NOOP_COUNTER_METRIC}createUpDownCounter(e,r){return t.NOOP_UP_DOWN_COUNTER_METRIC}createObservableGauge(e,r){return t.NOOP_OBSERVABLE_GAUGE_METRIC}createObservableCounter(e,r){return t.NOOP_OBSERVABLE_COUNTER_METRIC}createObservableUpDownCounter(e,r){return t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC}addBatchObservableCallback(e,t){}removeBatchObservableCallback(e){}}t.NoopMeter=NoopMeter;class NoopMetric{}t.NoopMetric=NoopMetric;class NoopCounterMetric extends NoopMetric{add(e,t){}}t.NoopCounterMetric=NoopCounterMetric;class NoopUpDownCounterMetric extends NoopMetric{add(e,t){}}t.NoopUpDownCounterMetric=NoopUpDownCounterMetric;class NoopHistogramMetric extends NoopMetric{record(e,t){}}t.NoopHistogramMetric=NoopHistogramMetric;class NoopObservableMetric{addCallback(e){}removeCallback(e){}}t.NoopObservableMetric=NoopObservableMetric;class NoopObservableCounterMetric extends NoopObservableMetric{}t.NoopObservableCounterMetric=NoopObservableCounterMetric;class NoopObservableGaugeMetric extends NoopObservableMetric{}t.NoopObservableGaugeMetric=NoopObservableGaugeMetric;class NoopObservableUpDownCounterMetric extends NoopObservableMetric{}t.NoopObservableUpDownCounterMetric=NoopObservableUpDownCounterMetric;t.NOOP_METER=new NoopMeter;t.NOOP_COUNTER_METRIC=new NoopCounterMetric;t.NOOP_HISTOGRAM_METRIC=new NoopHistogramMetric;t.NOOP_UP_DOWN_COUNTER_METRIC=new NoopUpDownCounterMetric;t.NOOP_OBSERVABLE_COUNTER_METRIC=new NoopObservableCounterMetric;t.NOOP_OBSERVABLE_GAUGE_METRIC=new NoopObservableGaugeMetric;t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=new NoopObservableUpDownCounterMetric;function createNoopMeter(){return t.NOOP_METER}t.createNoopMeter=createNoopMeter},660:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NOOP_METER_PROVIDER=t.NoopMeterProvider=void 0;const n=r(102);class NoopMeterProvider{getMeter(e,t,r){return n.NOOP_METER}}t.NoopMeterProvider=NoopMeterProvider;t.NOOP_METER_PROVIDER=new NoopMeterProvider},200:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){if(n===undefined)n=r;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,n){if(n===undefined)n=r;e[n]=t[r]});var a=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});a(r(46),t)},651:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t._globalThis=void 0;t._globalThis=typeof globalThis===\"object\"?globalThis:global},46:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){if(n===undefined)n=r;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,n){if(n===undefined)n=r;e[n]=t[r]});var a=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});a(r(651),t)},939:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.propagation=void 0;const n=r(181);t.propagation=n.PropagationAPI.getInstance()},874:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTextMapPropagator=void 0;class NoopTextMapPropagator{inject(e,t){}extract(e,t){return e}fields(){return[]}}t.NoopTextMapPropagator=NoopTextMapPropagator},194:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.defaultTextMapSetter=t.defaultTextMapGetter=void 0;t.defaultTextMapGetter={get(e,t){if(e==null){return undefined}return e[t]},keys(e){if(e==null){return[]}return Object.keys(e)}};t.defaultTextMapSetter={set(e,t,r){if(e==null){return}e[t]=r}}},845:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.trace=void 0;const n=r(997);t.trace=n.TraceAPI.getInstance()},403:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NonRecordingSpan=void 0;const n=r(476);class NonRecordingSpan{constructor(e=n.INVALID_SPAN_CONTEXT){this._spanContext=e}spanContext(){return this._spanContext}setAttribute(e,t){return this}setAttributes(e){return this}addEvent(e,t){return this}setStatus(e){return this}updateName(e){return this}end(e){}isRecording(){return false}recordException(e,t){}}t.NonRecordingSpan=NonRecordingSpan},614:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTracer=void 0;const n=r(491);const a=r(607);const o=r(403);const i=r(139);const c=n.ContextAPI.getInstance();class NoopTracer{startSpan(e,t,r=c.active()){const n=Boolean(t===null||t===void 0?void 0:t.root);if(n){return new o.NonRecordingSpan}const s=r&&(0,a.getSpanContext)(r);if(isSpanContext(s)&&(0,i.isSpanContextValid)(s)){return new o.NonRecordingSpan(s)}else{return new o.NonRecordingSpan}}startActiveSpan(e,t,r,n){let o;let i;let s;if(arguments.length<2){return}else if(arguments.length===2){s=t}else if(arguments.length===3){o=t;s=r}else{o=t;i=r;s=n}const u=i!==null&&i!==void 0?i:c.active();const l=this.startSpan(e,o,u);const g=(0,a.setSpan)(u,l);return c.with(g,s,undefined,l)}}t.NoopTracer=NoopTracer;function isSpanContext(e){return typeof e===\"object\"&&typeof e[\"spanId\"]===\"string\"&&typeof e[\"traceId\"]===\"string\"&&typeof e[\"traceFlags\"]===\"number\"}},124:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTracerProvider=void 0;const n=r(614);class NoopTracerProvider{getTracer(e,t,r){return new n.NoopTracer}}t.NoopTracerProvider=NoopTracerProvider},125:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ProxyTracer=void 0;const n=r(614);const a=new n.NoopTracer;class ProxyTracer{constructor(e,t,r,n){this._provider=e;this.name=t;this.version=r;this.options=n}startSpan(e,t,r){return this._getTracer().startSpan(e,t,r)}startActiveSpan(e,t,r,n){const a=this._getTracer();return Reflect.apply(a.startActiveSpan,a,arguments)}_getTracer(){if(this._delegate){return this._delegate}const e=this._provider.getDelegateTracer(this.name,this.version,this.options);if(!e){return a}this._delegate=e;return this._delegate}}t.ProxyTracer=ProxyTracer},846:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ProxyTracerProvider=void 0;const n=r(125);const a=r(124);const o=new a.NoopTracerProvider;class ProxyTracerProvider{getTracer(e,t,r){var a;return(a=this.getDelegateTracer(e,t,r))!==null&&a!==void 0?a:new n.ProxyTracer(this,e,t,r)}getDelegate(){var e;return(e=this._delegate)!==null&&e!==void 0?e:o}setDelegate(e){this._delegate=e}getDelegateTracer(e,t,r){var n;return(n=this._delegate)===null||n===void 0?void 0:n.getTracer(e,t,r)}}t.ProxyTracerProvider=ProxyTracerProvider},996:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SamplingDecision=void 0;var r;(function(e){e[e[\"NOT_RECORD\"]=0]=\"NOT_RECORD\";e[e[\"RECORD\"]=1]=\"RECORD\";e[e[\"RECORD_AND_SAMPLED\"]=2]=\"RECORD_AND_SAMPLED\"})(r=t.SamplingDecision||(t.SamplingDecision={}))},607:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.getSpanContext=t.setSpanContext=t.deleteSpan=t.setSpan=t.getActiveSpan=t.getSpan=void 0;const n=r(780);const a=r(403);const o=r(491);const i=(0,n.createContextKey)(\"OpenTelemetry Context Key SPAN\");function getSpan(e){return e.getValue(i)||undefined}t.getSpan=getSpan;function getActiveSpan(){return getSpan(o.ContextAPI.getInstance().active())}t.getActiveSpan=getActiveSpan;function setSpan(e,t){return e.setValue(i,t)}t.setSpan=setSpan;function deleteSpan(e){return e.deleteValue(i)}t.deleteSpan=deleteSpan;function setSpanContext(e,t){return setSpan(e,new a.NonRecordingSpan(t))}t.setSpanContext=setSpanContext;function getSpanContext(e){var t;return(t=getSpan(e))===null||t===void 0?void 0:t.spanContext()}t.getSpanContext=getSpanContext},325:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceStateImpl=void 0;const n=r(564);const a=32;const o=512;const i=\",\";const c=\"=\";class TraceStateImpl{constructor(e){this._internalState=new Map;if(e)this._parse(e)}set(e,t){const r=this._clone();if(r._internalState.has(e)){r._internalState.delete(e)}r._internalState.set(e,t);return r}unset(e){const t=this._clone();t._internalState.delete(e);return t}get(e){return this._internalState.get(e)}serialize(){return this._keys().reduce(((e,t)=>{e.push(t+c+this.get(t));return e}),[]).join(i)}_parse(e){if(e.length>o)return;this._internalState=e.split(i).reverse().reduce(((e,t)=>{const r=t.trim();const a=r.indexOf(c);if(a!==-1){const o=r.slice(0,a);const i=r.slice(a+1,t.length);if((0,n.validateKey)(o)&&(0,n.validateValue)(i)){e.set(o,i)}else{}}return e}),new Map);if(this._internalState.size>a){this._internalState=new Map(Array.from(this._internalState.entries()).reverse().slice(0,a))}}_keys(){return Array.from(this._internalState.keys()).reverse()}_clone(){const e=new TraceStateImpl;e._internalState=new Map(this._internalState);return e}}t.TraceStateImpl=TraceStateImpl},564:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.validateValue=t.validateKey=void 0;const r=\"[_0-9a-z-*/]\";const n=`[a-z]${r}{0,255}`;const a=`[a-z0-9]${r}{0,240}@[a-z]${r}{0,13}`;const o=new RegExp(`^(?:${n}|${a})$`);const i=/^[ -~]{0,255}[!-~]$/;const c=/,|=/;function validateKey(e){return o.test(e)}t.validateKey=validateKey;function validateValue(e){return i.test(e)&&!c.test(e)}t.validateValue=validateValue},98:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createTraceState=void 0;const n=r(325);function createTraceState(e){return new n.TraceStateImpl(e)}t.createTraceState=createTraceState},476:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.INVALID_SPAN_CONTEXT=t.INVALID_TRACEID=t.INVALID_SPANID=void 0;const n=r(475);t.INVALID_SPANID=\"0000000000000000\";t.INVALID_TRACEID=\"00000000000000000000000000000000\";t.INVALID_SPAN_CONTEXT={traceId:t.INVALID_TRACEID,spanId:t.INVALID_SPANID,traceFlags:n.TraceFlags.NONE}},357:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SpanKind=void 0;var r;(function(e){e[e[\"INTERNAL\"]=0]=\"INTERNAL\";e[e[\"SERVER\"]=1]=\"SERVER\";e[e[\"CLIENT\"]=2]=\"CLIENT\";e[e[\"PRODUCER\"]=3]=\"PRODUCER\";e[e[\"CONSUMER\"]=4]=\"CONSUMER\"})(r=t.SpanKind||(t.SpanKind={}))},139:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.wrapSpanContext=t.isSpanContextValid=t.isValidSpanId=t.isValidTraceId=void 0;const n=r(476);const a=r(403);const o=/^([0-9a-f]{32})$/i;const i=/^[0-9a-f]{16}$/i;function isValidTraceId(e){return o.test(e)&&e!==n.INVALID_TRACEID}t.isValidTraceId=isValidTraceId;function isValidSpanId(e){return i.test(e)&&e!==n.INVALID_SPANID}t.isValidSpanId=isValidSpanId;function isSpanContextValid(e){return isValidTraceId(e.traceId)&&isValidSpanId(e.spanId)}t.isSpanContextValid=isSpanContextValid;function wrapSpanContext(e){return new a.NonRecordingSpan(e)}t.wrapSpanContext=wrapSpanContext},847:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SpanStatusCode=void 0;var r;(function(e){e[e[\"UNSET\"]=0]=\"UNSET\";e[e[\"OK\"]=1]=\"OK\";e[e[\"ERROR\"]=2]=\"ERROR\"})(r=t.SpanStatusCode||(t.SpanStatusCode={}))},475:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceFlags=void 0;var r;(function(e){e[e[\"NONE\"]=0]=\"NONE\";e[e[\"SAMPLED\"]=1]=\"SAMPLED\"})(r=t.TraceFlags||(t.TraceFlags={}))},521:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.VERSION=void 0;t.VERSION=\"1.6.0\"}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var a=t[r]={exports:{}};var o=true;try{e[r].call(a.exports,a,a.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return a.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r={};(()=>{var e=r;Object.defineProperty(e,\"__esModule\",{value:true});e.trace=e.propagation=e.metrics=e.diag=e.context=e.INVALID_SPAN_CONTEXT=e.INVALID_TRACEID=e.INVALID_SPANID=e.isValidSpanId=e.isValidTraceId=e.isSpanContextValid=e.createTraceState=e.TraceFlags=e.SpanStatusCode=e.SpanKind=e.SamplingDecision=e.ProxyTracerProvider=e.ProxyTracer=e.defaultTextMapSetter=e.defaultTextMapGetter=e.ValueType=e.createNoopMeter=e.DiagLogLevel=e.DiagConsoleLogger=e.ROOT_CONTEXT=e.createContextKey=e.baggageEntryMetadataFromString=void 0;var t=__nccwpck_require__(369);Object.defineProperty(e,\"baggageEntryMetadataFromString\",{enumerable:true,get:function(){return t.baggageEntryMetadataFromString}});var n=__nccwpck_require__(780);Object.defineProperty(e,\"createContextKey\",{enumerable:true,get:function(){return n.createContextKey}});Object.defineProperty(e,\"ROOT_CONTEXT\",{enumerable:true,get:function(){return n.ROOT_CONTEXT}});var a=__nccwpck_require__(972);Object.defineProperty(e,\"DiagConsoleLogger\",{enumerable:true,get:function(){return a.DiagConsoleLogger}});var o=__nccwpck_require__(957);Object.defineProperty(e,\"DiagLogLevel\",{enumerable:true,get:function(){return o.DiagLogLevel}});var i=__nccwpck_require__(102);Object.defineProperty(e,\"createNoopMeter\",{enumerable:true,get:function(){return i.createNoopMeter}});var c=__nccwpck_require__(901);Object.defineProperty(e,\"ValueType\",{enumerable:true,get:function(){return c.ValueType}});var s=__nccwpck_require__(194);Object.defineProperty(e,\"defaultTextMapGetter\",{enumerable:true,get:function(){return s.defaultTextMapGetter}});Object.defineProperty(e,\"defaultTextMapSetter\",{enumerable:true,get:function(){return s.defaultTextMapSetter}});var u=__nccwpck_require__(125);Object.defineProperty(e,\"ProxyTracer\",{enumerable:true,get:function(){return u.ProxyTracer}});var l=__nccwpck_require__(846);Object.defineProperty(e,\"ProxyTracerProvider\",{enumerable:true,get:function(){return l.ProxyTracerProvider}});var g=__nccwpck_require__(996);Object.defineProperty(e,\"SamplingDecision\",{enumerable:true,get:function(){return g.SamplingDecision}});var p=__nccwpck_require__(357);Object.defineProperty(e,\"SpanKind\",{enumerable:true,get:function(){return p.SpanKind}});var d=__nccwpck_require__(847);Object.defineProperty(e,\"SpanStatusCode\",{enumerable:true,get:function(){return d.SpanStatusCode}});var _=__nccwpck_require__(475);Object.defineProperty(e,\"TraceFlags\",{enumerable:true,get:function(){return _.TraceFlags}});var f=__nccwpck_require__(98);Object.defineProperty(e,\"createTraceState\",{enumerable:true,get:function(){return f.createTraceState}});var b=__nccwpck_require__(139);Object.defineProperty(e,\"isSpanContextValid\",{enumerable:true,get:function(){return b.isSpanContextValid}});Object.defineProperty(e,\"isValidTraceId\",{enumerable:true,get:function(){return b.isValidTraceId}});Object.defineProperty(e,\"isValidSpanId\",{enumerable:true,get:function(){return b.isValidSpanId}});var v=__nccwpck_require__(476);Object.defineProperty(e,\"INVALID_SPANID\",{enumerable:true,get:function(){return v.INVALID_SPANID}});Object.defineProperty(e,\"INVALID_TRACEID\",{enumerable:true,get:function(){return v.INVALID_TRACEID}});Object.defineProperty(e,\"INVALID_SPAN_CONTEXT\",{enumerable:true,get:function(){return v.INVALID_SPAN_CONTEXT}});const O=__nccwpck_require__(67);Object.defineProperty(e,\"context\",{enumerable:true,get:function(){return O.context}});const P=__nccwpck_require__(506);Object.defineProperty(e,\"diag\",{enumerable:true,get:function(){return P.diag}});const N=__nccwpck_require__(886);Object.defineProperty(e,\"metrics\",{enumerable:true,get:function(){return N.metrics}});const S=__nccwpck_require__(939);Object.defineProperty(e,\"propagation\",{enumerable:true,get:function(){return S.propagation}});const C=__nccwpck_require__(845);Object.defineProperty(e,\"trace\",{enumerable:true,get:function(){return C.trace}});e[\"default\"]={context:O.context,diag:P.diag,metrics:N.metrics,propagation:S.propagation,trace:C.trace}})();module.exports=r})();","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */r.parse=parse;r.serialize=serialize;var i=decodeURIComponent;var t=encodeURIComponent;var a=/; */;var n=/^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;function parse(e,r){if(typeof e!==\"string\"){throw new TypeError(\"argument str must be a string\")}var t={};var n=r||{};var o=e.split(a);var s=n.decode||i;for(var p=0;p<o.length;p++){var f=o[p];var u=f.indexOf(\"=\");if(u<0){continue}var v=f.substr(0,u).trim();var c=f.substr(++u,f.length).trim();if('\"'==c[0]){c=c.slice(1,-1)}if(undefined==t[v]){t[v]=tryDecode(c,s)}}return t}function serialize(e,r,i){var a=i||{};var o=a.encode||t;if(typeof o!==\"function\"){throw new TypeError(\"option encode is invalid\")}if(!n.test(e)){throw new TypeError(\"argument name is invalid\")}var s=o(r);if(s&&!n.test(s)){throw new TypeError(\"argument val is invalid\")}var p=e+\"=\"+s;if(null!=a.maxAge){var f=a.maxAge-0;if(isNaN(f)||!isFinite(f)){throw new TypeError(\"option maxAge is invalid\")}p+=\"; Max-Age=\"+Math.floor(f)}if(a.domain){if(!n.test(a.domain)){throw new TypeError(\"option domain is invalid\")}p+=\"; Domain=\"+a.domain}if(a.path){if(!n.test(a.path)){throw new TypeError(\"option path is invalid\")}p+=\"; Path=\"+a.path}if(a.expires){if(typeof a.expires.toUTCString!==\"function\"){throw new TypeError(\"option expires is invalid\")}p+=\"; Expires=\"+a.expires.toUTCString()}if(a.httpOnly){p+=\"; HttpOnly\"}if(a.secure){p+=\"; Secure\"}if(a.sameSite){var u=typeof a.sameSite===\"string\"?a.sameSite.toLowerCase():a.sameSite;switch(u){case true:p+=\"; SameSite=Strict\";break;case\"lax\":p+=\"; SameSite=Lax\";break;case\"strict\":p+=\"; SameSite=Strict\";break;case\"none\":p+=\"; SameSite=None\";break;default:throw new TypeError(\"option sameSite is invalid\")}}return p}function tryDecode(e,r){try{return r(e)}catch(r){return e}}})();module.exports=e})();","(function(){var e={452:function(e){\"use strict\";e.exports=require(\"next/dist/compiled/querystring-es3\")}};var t={};function __nccwpck_require__(o){var a=t[o];if(a!==undefined){return a.exports}var s=t[o]={exports:{}};var n=true;try{e[o](s,s.exports,__nccwpck_require__);n=false}finally{if(n)delete t[o]}return s.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var o={};!function(){var e=o;var t,a=(t=__nccwpck_require__(452))&&\"object\"==typeof t&&\"default\"in t?t.default:t,s=/https?|ftp|gopher|file/;function r(e){\"string\"==typeof e&&(e=d(e));var t=function(e,t,o){var a=e.auth,s=e.hostname,n=e.protocol||\"\",p=e.pathname||\"\",c=e.hash||\"\",i=e.query||\"\",u=!1;a=a?encodeURIComponent(a).replace(/%3A/i,\":\")+\"@\":\"\",e.host?u=a+e.host:s&&(u=a+(~s.indexOf(\":\")?\"[\"+s+\"]\":s),e.port&&(u+=\":\"+e.port)),i&&\"object\"==typeof i&&(i=t.encode(i));var f=e.search||i&&\"?\"+i||\"\";return n&&\":\"!==n.substr(-1)&&(n+=\":\"),e.slashes||(!n||o.test(n))&&!1!==u?(u=\"//\"+(u||\"\"),p&&\"/\"!==p[0]&&(p=\"/\"+p)):u||(u=\"\"),c&&\"#\"!==c[0]&&(c=\"#\"+c),f&&\"?\"!==f[0]&&(f=\"?\"+f),{protocol:n,host:u,pathname:p=p.replace(/[?#]/g,encodeURIComponent),search:f=f.replace(\"#\",\"%23\"),hash:c}}(e,a,s);return\"\"+t.protocol+t.host+t.pathname+t.search+t.hash}var n=\"http://\",p=\"w.w\",c=n+p,i=/^([a-z0-9.+-]*:\\/\\/\\/)([a-z0-9.+-]:\\/*)?/i,u=/https?|ftp|gopher|file/;function h(e,t){var o=\"string\"==typeof e?d(e):e;e=\"object\"==typeof e?r(e):e;var a=d(t),s=\"\";o.protocol&&!o.slashes&&(s=o.protocol,e=e.replace(o.protocol,\"\"),s+=\"/\"===t[0]||\"/\"===e[0]?\"/\":\"\"),s&&a.protocol&&(s=\"\",a.slashes||(s=a.protocol,t=t.replace(a.protocol,\"\")));var p=e.match(i);p&&!a.protocol&&(e=e.substr((s=p[1]+(p[2]||\"\")).length),/^\\/\\/[^/]/.test(t)&&(s=s.slice(0,-1)));var f=new URL(e,c+\"/\"),m=new URL(t,f).toString().replace(c,\"\"),v=a.protocol||o.protocol;return v+=o.slashes||a.slashes?\"//\":\"\",!s&&v?m=m.replace(n,v):s&&(m=m.replace(n,\"\")),u.test(m)||~t.indexOf(\".\")||\"/\"===e.slice(-1)||\"/\"===t.slice(-1)||\"/\"!==m.slice(-1)||(m=m.slice(0,-1)),s&&(m=s+(\"/\"===m[0]?m.substr(1):m)),m}function l(){}l.prototype.parse=d,l.prototype.format=r,l.prototype.resolve=h,l.prototype.resolveObject=h;var f=/^https?|ftp|gopher|file/,m=/^(.*?)([#?].*)/,v=/^([a-z0-9.+-]*:)(\\/{0,3})(.*)/i,_=/^([a-z0-9.+-]*:)?\\/\\/\\/*/i,b=/^([a-z0-9.+-]*:)(\\/{0,2})\\[(.*)\\]$/i;function d(e,t,o){if(void 0===t&&(t=!1),void 0===o&&(o=!1),e&&\"object\"==typeof e&&e instanceof l)return e;var s=(e=e.trim()).match(m);e=s?s[1].replace(/\\\\/g,\"/\")+s[2]:e.replace(/\\\\/g,\"/\"),b.test(e)&&\"/\"!==e.slice(-1)&&(e+=\"/\");var n=!/(^javascript)/.test(e)&&e.match(v),i=_.test(e),u=\"\";n&&(f.test(n[1])||(u=n[1].toLowerCase(),e=\"\"+n[2]+n[3]),n[2]||(i=!1,f.test(n[1])?(u=n[1],e=\"\"+n[3]):e=\"//\"+n[3]),3!==n[2].length&&1!==n[2].length||(u=n[1],e=\"/\"+n[3]));var g,y=(s?s[1]:e).match(/^https?:\\/\\/[^/]+(:[0-9]+)(?=\\/|$)/),w=y&&y[1],x=new l,C=\"\",U=\"\";try{g=new URL(e)}catch(t){C=t,u||o||!/^\\/\\//.test(e)||/^\\/\\/.+[@.]/.test(e)||(U=\"/\",e=e.substr(1));try{g=new URL(e,c)}catch(e){return x.protocol=u,x.href=u,x}}x.slashes=i&&!U,x.host=g.host===p?\"\":g.host,x.hostname=g.hostname===p?\"\":g.hostname.replace(/(\\[|\\])/g,\"\"),x.protocol=C?u||null:g.protocol,x.search=g.search.replace(/\\\\/g,\"%5C\"),x.hash=g.hash.replace(/\\\\/g,\"%5C\");var j=e.split(\"#\");!x.search&&~j[0].indexOf(\"?\")&&(x.search=\"?\"),x.hash||\"\"!==j[1]||(x.hash=\"#\"),x.query=t?a.decode(g.search.substr(1)):x.search.substr(1),x.pathname=U+(n?function(e){return e.replace(/['^|`]/g,(function(e){return\"%\"+e.charCodeAt().toString(16).toUpperCase()})).replace(/((?:%[0-9A-F]{2})+)/g,(function(e,t){try{return decodeURIComponent(t).split(\"\").map((function(e){var t=e.charCodeAt();return t>256||/^[a-z0-9]$/i.test(e)?e:\"%\"+t.toString(16).toUpperCase()})).join(\"\")}catch(e){return t}}))}(g.pathname):g.pathname),\"about:\"===x.protocol&&\"blank\"===x.pathname&&(x.protocol=\"\",x.pathname=\"\"),C&&\"/\"!==e[0]&&(x.pathname=x.pathname.substr(1)),u&&!f.test(u)&&\"/\"!==e.slice(-1)&&\"/\"===x.pathname&&(x.pathname=\"\"),x.path=x.pathname+x.search,x.auth=[g.username,g.password].map(decodeURIComponent).filter(Boolean).join(\":\"),x.port=g.port,w&&!x.host.endsWith(w)&&(x.host+=w,x.port=w.slice(1)),x.href=U?\"\"+x.pathname+x.search+x.hash:r(x);var q=/^(file)/.test(x.href)?[\"host\",\"hostname\"]:[];return Object.keys(x).forEach((function(e){~q.indexOf(e)||(x[e]=x[e]||null)})),x}e.parse=d,e.format=r,e.resolve=h,e.resolveObject=function(e,t){return d(h(e,t))},e.Url=l}();module.exports=o})();","(()=>{\"use strict\";var e={993:e=>{var t=Object.prototype.hasOwnProperty,n=\"~\";function Events(){}if(Object.create){Events.prototype=Object.create(null);if(!(new Events).__proto__)n=false}function EE(e,t,n){this.fn=e;this.context=t;this.once=n||false}function addListener(e,t,r,i,s){if(typeof r!==\"function\"){throw new TypeError(\"The listener must be a function\")}var o=new EE(r,i||e,s),u=n?n+t:t;if(!e._events[u])e._events[u]=o,e._eventsCount++;else if(!e._events[u].fn)e._events[u].push(o);else e._events[u]=[e._events[u],o];return e}function clearEvent(e,t){if(--e._eventsCount===0)e._events=new Events;else delete e._events[t]}function EventEmitter(){this._events=new Events;this._eventsCount=0}EventEmitter.prototype.eventNames=function eventNames(){var e=[],r,i;if(this._eventsCount===0)return e;for(i in r=this._events){if(t.call(r,i))e.push(n?i.slice(1):i)}if(Object.getOwnPropertySymbols){return e.concat(Object.getOwnPropertySymbols(r))}return e};EventEmitter.prototype.listeners=function listeners(e){var t=n?n+e:e,r=this._events[t];if(!r)return[];if(r.fn)return[r.fn];for(var i=0,s=r.length,o=new Array(s);i<s;i++){o[i]=r[i].fn}return o};EventEmitter.prototype.listenerCount=function listenerCount(e){var t=n?n+e:e,r=this._events[t];if(!r)return 0;if(r.fn)return 1;return r.length};EventEmitter.prototype.emit=function emit(e,t,r,i,s,o){var u=n?n+e:e;if(!this._events[u])return false;var a=this._events[u],l=arguments.length,c,h;if(a.fn){if(a.once)this.removeListener(e,a.fn,undefined,true);switch(l){case 1:return a.fn.call(a.context),true;case 2:return a.fn.call(a.context,t),true;case 3:return a.fn.call(a.context,t,r),true;case 4:return a.fn.call(a.context,t,r,i),true;case 5:return a.fn.call(a.context,t,r,i,s),true;case 6:return a.fn.call(a.context,t,r,i,s,o),true}for(h=1,c=new Array(l-1);h<l;h++){c[h-1]=arguments[h]}a.fn.apply(a.context,c)}else{var _=a.length,f;for(h=0;h<_;h++){if(a[h].once)this.removeListener(e,a[h].fn,undefined,true);switch(l){case 1:a[h].fn.call(a[h].context);break;case 2:a[h].fn.call(a[h].context,t);break;case 3:a[h].fn.call(a[h].context,t,r);break;case 4:a[h].fn.call(a[h].context,t,r,i);break;default:if(!c)for(f=1,c=new Array(l-1);f<l;f++){c[f-1]=arguments[f]}a[h].fn.apply(a[h].context,c)}}}return true};EventEmitter.prototype.on=function on(e,t,n){return addListener(this,e,t,n,false)};EventEmitter.prototype.once=function once(e,t,n){return addListener(this,e,t,n,true)};EventEmitter.prototype.removeListener=function removeListener(e,t,r,i){var s=n?n+e:e;if(!this._events[s])return this;if(!t){clearEvent(this,s);return this}var o=this._events[s];if(o.fn){if(o.fn===t&&(!i||o.once)&&(!r||o.context===r)){clearEvent(this,s)}}else{for(var u=0,a=[],l=o.length;u<l;u++){if(o[u].fn!==t||i&&!o[u].once||r&&o[u].context!==r){a.push(o[u])}}if(a.length)this._events[s]=a.length===1?a[0]:a;else clearEvent(this,s)}return this};EventEmitter.prototype.removeAllListeners=function removeAllListeners(e){var t;if(e){t=n?n+e:e;if(this._events[t])clearEvent(this,t)}else{this._events=new Events;this._eventsCount=0}return this};EventEmitter.prototype.off=EventEmitter.prototype.removeListener;EventEmitter.prototype.addListener=EventEmitter.prototype.on;EventEmitter.prefixed=n;EventEmitter.EventEmitter=EventEmitter;if(true){e.exports=EventEmitter}},213:e=>{e.exports=(e,t)=>{t=t||(()=>{});return e.then((e=>new Promise((e=>{e(t())})).then((()=>e))),(e=>new Promise((e=>{e(t())})).then((()=>{throw e}))))}},574:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});function lowerBound(e,t,n){let r=0;let i=e.length;while(i>0){const s=i/2|0;let o=r+s;if(n(e[o],t)<=0){r=++o;i-=s+1}else{i=s}}return r}t[\"default\"]=lowerBound},821:(e,t,n)=>{Object.defineProperty(t,\"__esModule\",{value:true});const r=n(574);class PriorityQueue{constructor(){this._queue=[]}enqueue(e,t){t=Object.assign({priority:0},t);const n={priority:t.priority,run:e};if(this.size&&this._queue[this.size-1].priority>=t.priority){this._queue.push(n);return}const i=r.default(this._queue,n,((e,t)=>t.priority-e.priority));this._queue.splice(i,0,n)}dequeue(){const e=this._queue.shift();return e===null||e===void 0?void 0:e.run}filter(e){return this._queue.filter((t=>t.priority===e.priority)).map((e=>e.run))}get size(){return this._queue.length}}t[\"default\"]=PriorityQueue},816:(e,t,n)=>{const r=n(213);class TimeoutError extends Error{constructor(e){super(e);this.name=\"TimeoutError\"}}const pTimeout=(e,t,n)=>new Promise(((i,s)=>{if(typeof t!==\"number\"||t<0){throw new TypeError(\"Expected `milliseconds` to be a positive number\")}if(t===Infinity){i(e);return}const o=setTimeout((()=>{if(typeof n===\"function\"){try{i(n())}catch(e){s(e)}return}const r=typeof n===\"string\"?n:`Promise timed out after ${t} milliseconds`;const o=n instanceof Error?n:new TimeoutError(r);if(typeof e.cancel===\"function\"){e.cancel()}s(o)}),t);r(e.then(i,s),(()=>{clearTimeout(o)}))}));e.exports=pTimeout;e.exports[\"default\"]=pTimeout;e.exports.TimeoutError=TimeoutError}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var i=t[n]={exports:{}};var s=true;try{e[n](i,i.exports,__nccwpck_require__);s=false}finally{if(s)delete t[n]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};(()=>{var e=n;Object.defineProperty(e,\"__esModule\",{value:true});const t=__nccwpck_require__(993);const r=__nccwpck_require__(816);const i=__nccwpck_require__(821);const empty=()=>{};const s=new r.TimeoutError;class PQueue extends t{constructor(e){var t,n,r,s;super();this._intervalCount=0;this._intervalEnd=0;this._pendingCount=0;this._resolveEmpty=empty;this._resolveIdle=empty;e=Object.assign({carryoverConcurrencyCount:false,intervalCap:Infinity,interval:0,concurrency:Infinity,autoStart:true,queueClass:i.default},e);if(!(typeof e.intervalCap===\"number\"&&e.intervalCap>=1)){throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(n=(t=e.intervalCap)===null||t===void 0?void 0:t.toString())!==null&&n!==void 0?n:\"\"}\\` (${typeof e.intervalCap})`)}if(e.interval===undefined||!(Number.isFinite(e.interval)&&e.interval>=0)){throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(s=(r=e.interval)===null||r===void 0?void 0:r.toString())!==null&&s!==void 0?s:\"\"}\\` (${typeof e.interval})`)}this._carryoverConcurrencyCount=e.carryoverConcurrencyCount;this._isIntervalIgnored=e.intervalCap===Infinity||e.interval===0;this._intervalCap=e.intervalCap;this._interval=e.interval;this._queue=new e.queueClass;this._queueClass=e.queueClass;this.concurrency=e.concurrency;this._timeout=e.timeout;this._throwOnTimeout=e.throwOnTimeout===true;this._isPaused=e.autoStart===false}get _doesIntervalAllowAnother(){return this._isIntervalIgnored||this._intervalCount<this._intervalCap}get _doesConcurrentAllowAnother(){return this._pendingCount<this._concurrency}_next(){this._pendingCount--;this._tryToStartAnother();this.emit(\"next\")}_resolvePromises(){this._resolveEmpty();this._resolveEmpty=empty;if(this._pendingCount===0){this._resolveIdle();this._resolveIdle=empty;this.emit(\"idle\")}}_onResumeInterval(){this._onInterval();this._initializeIntervalIfNeeded();this._timeoutId=undefined}_isIntervalPaused(){const e=Date.now();if(this._intervalId===undefined){const t=this._intervalEnd-e;if(t<0){this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0}else{if(this._timeoutId===undefined){this._timeoutId=setTimeout((()=>{this._onResumeInterval()}),t)}return true}}return false}_tryToStartAnother(){if(this._queue.size===0){if(this._intervalId){clearInterval(this._intervalId)}this._intervalId=undefined;this._resolvePromises();return false}if(!this._isPaused){const e=!this._isIntervalPaused();if(this._doesIntervalAllowAnother&&this._doesConcurrentAllowAnother){const t=this._queue.dequeue();if(!t){return false}this.emit(\"active\");t();if(e){this._initializeIntervalIfNeeded()}return true}}return false}_initializeIntervalIfNeeded(){if(this._isIntervalIgnored||this._intervalId!==undefined){return}this._intervalId=setInterval((()=>{this._onInterval()}),this._interval);this._intervalEnd=Date.now()+this._interval}_onInterval(){if(this._intervalCount===0&&this._pendingCount===0&&this._intervalId){clearInterval(this._intervalId);this._intervalId=undefined}this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0;this._processQueue()}_processQueue(){while(this._tryToStartAnother()){}}get concurrency(){return this._concurrency}set concurrency(e){if(!(typeof e===\"number\"&&e>=1)){throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${e}\\` (${typeof e})`)}this._concurrency=e;this._processQueue()}async add(e,t={}){return new Promise(((n,i)=>{const run=async()=>{this._pendingCount++;this._intervalCount++;try{const o=this._timeout===undefined&&t.timeout===undefined?e():r.default(Promise.resolve(e()),t.timeout===undefined?this._timeout:t.timeout,(()=>{if(t.throwOnTimeout===undefined?this._throwOnTimeout:t.throwOnTimeout){i(s)}return undefined}));n(await o)}catch(e){i(e)}this._next()};this._queue.enqueue(run,t);this._tryToStartAnother();this.emit(\"add\")}))}async addAll(e,t){return Promise.all(e.map((async e=>this.add(e,t))))}start(){if(!this._isPaused){return this}this._isPaused=false;this._processQueue();return this}pause(){this._isPaused=true}clear(){this._queue=new this._queueClass}async onEmpty(){if(this._queue.size===0){return}return new Promise((e=>{const t=this._resolveEmpty;this._resolveEmpty=()=>{t();e()}}))}async onIdle(){if(this._pendingCount===0&&this._queue.size===0){return}return new Promise((e=>{const t=this._resolveIdle;this._resolveIdle=()=>{t();e()}}))}get size(){return this._queue.size}sizeBy(e){return this._queue.filter(e).length}get pending(){return this._pendingCount}get isPaused(){return this._isPaused}get timeout(){return this._timeout}set timeout(e){this._timeout=e}}e[\"default\"]=PQueue})();module.exports=n})();","(function(){\"use strict\";var e={114:function(e){function assertPath(e){if(typeof e!==\"string\"){throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(e))}}function normalizeStringPosix(e,r){var t=\"\";var i=0;var n=-1;var a=0;var f;for(var l=0;l<=e.length;++l){if(l<e.length)f=e.charCodeAt(l);else if(f===47)break;else f=47;if(f===47){if(n===l-1||a===1){}else if(n!==l-1&&a===2){if(t.length<2||i!==2||t.charCodeAt(t.length-1)!==46||t.charCodeAt(t.length-2)!==46){if(t.length>2){var s=t.lastIndexOf(\"/\");if(s!==t.length-1){if(s===-1){t=\"\";i=0}else{t=t.slice(0,s);i=t.length-1-t.lastIndexOf(\"/\")}n=l;a=0;continue}}else if(t.length===2||t.length===1){t=\"\";i=0;n=l;a=0;continue}}if(r){if(t.length>0)t+=\"/..\";else t=\"..\";i=2}}else{if(t.length>0)t+=\"/\"+e.slice(n+1,l);else t=e.slice(n+1,l);i=l-n-1}n=l;a=0}else if(f===46&&a!==-1){++a}else{a=-1}}return t}function _format(e,r){var t=r.dir||r.root;var i=r.base||(r.name||\"\")+(r.ext||\"\");if(!t){return i}if(t===r.root){return t+i}return t+e+i}var r={resolve:function resolve(){var e=\"\";var r=false;var t;for(var i=arguments.length-1;i>=-1&&!r;i--){var n;if(i>=0)n=arguments[i];else{if(t===undefined)t=\"\";n=t}assertPath(n);if(n.length===0){continue}e=n+\"/\"+e;r=n.charCodeAt(0)===47}e=normalizeStringPosix(e,!r);if(r){if(e.length>0)return\"/\"+e;else return\"/\"}else if(e.length>0){return e}else{return\".\"}},normalize:function normalize(e){assertPath(e);if(e.length===0)return\".\";var r=e.charCodeAt(0)===47;var t=e.charCodeAt(e.length-1)===47;e=normalizeStringPosix(e,!r);if(e.length===0&&!r)e=\".\";if(e.length>0&&t)e+=\"/\";if(r)return\"/\"+e;return e},isAbsolute:function isAbsolute(e){assertPath(e);return e.length>0&&e.charCodeAt(0)===47},join:function join(){if(arguments.length===0)return\".\";var e;for(var t=0;t<arguments.length;++t){var i=arguments[t];assertPath(i);if(i.length>0){if(e===undefined)e=i;else e+=\"/\"+i}}if(e===undefined)return\".\";return r.normalize(e)},relative:function relative(e,t){assertPath(e);assertPath(t);if(e===t)return\"\";e=r.resolve(e);t=r.resolve(t);if(e===t)return\"\";var i=1;for(;i<e.length;++i){if(e.charCodeAt(i)!==47)break}var n=e.length;var a=n-i;var f=1;for(;f<t.length;++f){if(t.charCodeAt(f)!==47)break}var l=t.length;var s=l-f;var o=a<s?a:s;var u=-1;var h=0;for(;h<=o;++h){if(h===o){if(s>o){if(t.charCodeAt(f+h)===47){return t.slice(f+h+1)}else if(h===0){return t.slice(f+h)}}else if(a>o){if(e.charCodeAt(i+h)===47){u=h}else if(h===0){u=0}}break}var c=e.charCodeAt(i+h);var v=t.charCodeAt(f+h);if(c!==v)break;else if(c===47)u=h}var g=\"\";for(h=i+u+1;h<=n;++h){if(h===n||e.charCodeAt(h)===47){if(g.length===0)g+=\"..\";else g+=\"/..\"}}if(g.length>0)return g+t.slice(f+u);else{f+=u;if(t.charCodeAt(f)===47)++f;return t.slice(f)}},_makeLong:function _makeLong(e){return e},dirname:function dirname(e){assertPath(e);if(e.length===0)return\".\";var r=e.charCodeAt(0);var t=r===47;var i=-1;var n=true;for(var a=e.length-1;a>=1;--a){r=e.charCodeAt(a);if(r===47){if(!n){i=a;break}}else{n=false}}if(i===-1)return t?\"/\":\".\";if(t&&i===1)return\"//\";return e.slice(0,i)},basename:function basename(e,r){if(r!==undefined&&typeof r!==\"string\")throw new TypeError('\"ext\" argument must be a string');assertPath(e);var t=0;var i=-1;var n=true;var a;if(r!==undefined&&r.length>0&&r.length<=e.length){if(r.length===e.length&&r===e)return\"\";var f=r.length-1;var l=-1;for(a=e.length-1;a>=0;--a){var s=e.charCodeAt(a);if(s===47){if(!n){t=a+1;break}}else{if(l===-1){n=false;l=a+1}if(f>=0){if(s===r.charCodeAt(f)){if(--f===-1){i=a}}else{f=-1;i=l}}}}if(t===i)i=l;else if(i===-1)i=e.length;return e.slice(t,i)}else{for(a=e.length-1;a>=0;--a){if(e.charCodeAt(a)===47){if(!n){t=a+1;break}}else if(i===-1){n=false;i=a+1}}if(i===-1)return\"\";return e.slice(t,i)}},extname:function extname(e){assertPath(e);var r=-1;var t=0;var i=-1;var n=true;var a=0;for(var f=e.length-1;f>=0;--f){var l=e.charCodeAt(f);if(l===47){if(!n){t=f+1;break}continue}if(i===-1){n=false;i=f+1}if(l===46){if(r===-1)r=f;else if(a!==1)a=1}else if(r!==-1){a=-1}}if(r===-1||i===-1||a===0||a===1&&r===i-1&&r===t+1){return\"\"}return e.slice(r,i)},format:function format(e){if(e===null||typeof e!==\"object\"){throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof e)}return _format(\"/\",e)},parse:function parse(e){assertPath(e);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(e.length===0)return r;var t=e.charCodeAt(0);var i=t===47;var n;if(i){r.root=\"/\";n=1}else{n=0}var a=-1;var f=0;var l=-1;var s=true;var o=e.length-1;var u=0;for(;o>=n;--o){t=e.charCodeAt(o);if(t===47){if(!s){f=o+1;break}continue}if(l===-1){s=false;l=o+1}if(t===46){if(a===-1)a=o;else if(u!==1)u=1}else if(a!==-1){u=-1}}if(a===-1||l===-1||u===0||u===1&&a===l-1&&a===f+1){if(l!==-1){if(f===0&&i)r.base=r.name=e.slice(1,l);else r.base=r.name=e.slice(f,l)}}else{if(f===0&&i){r.name=e.slice(1,a);r.base=e.slice(1,l)}else{r.name=e.slice(f,a);r.base=e.slice(f,l)}r.ext=e.slice(a,l)}if(f>0)r.dir=e.slice(0,f-1);else if(i)r.dir=\"/\";return r},sep:\"/\",delimiter:\":\",win32:null,posix:null};r.posix=r;e.exports=r}};var r={};function __nccwpck_require__(t){var i=r[t];if(i!==undefined){return i.exports}var n=r[t]={exports:{}};var a=true;try{e[t](n,n.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(114);module.exports=t})();","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;Object.defineProperty(r,\"__esModule\",{value:true});function lexer(e){var r=[];var n=0;while(n<e.length){var t=e[n];if(t===\"*\"||t===\"+\"||t===\"?\"){r.push({type:\"MODIFIER\",index:n,value:e[n++]});continue}if(t===\"\\\\\"){r.push({type:\"ESCAPED_CHAR\",index:n++,value:e[n++]});continue}if(t===\"{\"){r.push({type:\"OPEN\",index:n,value:e[n++]});continue}if(t===\"}\"){r.push({type:\"CLOSE\",index:n,value:e[n++]});continue}if(t===\":\"){var i=\"\";var a=n+1;while(a<e.length){var o=e.charCodeAt(a);if(o>=48&&o<=57||o>=65&&o<=90||o>=97&&o<=122||o===95){i+=e[a++];continue}break}if(!i)throw new TypeError(\"Missing parameter name at \"+n);r.push({type:\"NAME\",index:n,value:i});n=a;continue}if(t===\"(\"){var f=1;var u=\"\";var a=n+1;if(e[a]===\"?\"){throw new TypeError('Pattern cannot start with \"?\" at '+a)}while(a<e.length){if(e[a]===\"\\\\\"){u+=e[a++]+e[a++];continue}if(e[a]===\")\"){f--;if(f===0){a++;break}}else if(e[a]===\"(\"){f++;if(e[a+1]!==\"?\"){throw new TypeError(\"Capturing groups are not allowed at \"+a)}}u+=e[a++]}if(f)throw new TypeError(\"Unbalanced pattern at \"+n);if(!u)throw new TypeError(\"Missing pattern at \"+n);r.push({type:\"PATTERN\",index:n,value:u});n=a;continue}r.push({type:\"CHAR\",index:n,value:e[n++]})}r.push({type:\"END\",index:n,value:\"\"});return r}function parse(e,r){if(r===void 0){r={}}var n=lexer(e);var t=r.prefixes,i=t===void 0?\"./\":t;var a=\"[^\"+escapeString(r.delimiter||\"/#?\")+\"]+?\";var o=[];var f=0;var u=0;var p=\"\";var tryConsume=function(e){if(u<n.length&&n[u].type===e)return n[u++].value};var mustConsume=function(e){var r=tryConsume(e);if(r!==undefined)return r;var t=n[u],i=t.type,a=t.index;throw new TypeError(\"Unexpected \"+i+\" at \"+a+\", expected \"+e)};var consumeText=function(){var e=\"\";var r;while(r=tryConsume(\"CHAR\")||tryConsume(\"ESCAPED_CHAR\")){e+=r}return e};while(u<n.length){var v=tryConsume(\"CHAR\");var c=tryConsume(\"NAME\");var s=tryConsume(\"PATTERN\");if(c||s){var d=v||\"\";if(i.indexOf(d)===-1){p+=d;d=\"\"}if(p){o.push(p);p=\"\"}o.push({name:c||f++,prefix:d,suffix:\"\",pattern:s||a,modifier:tryConsume(\"MODIFIER\")||\"\"});continue}var g=v||tryConsume(\"ESCAPED_CHAR\");if(g){p+=g;continue}if(p){o.push(p);p=\"\"}var x=tryConsume(\"OPEN\");if(x){var d=consumeText();var l=tryConsume(\"NAME\")||\"\";var h=tryConsume(\"PATTERN\")||\"\";var m=consumeText();mustConsume(\"CLOSE\");o.push({name:l||(h?f++:\"\"),pattern:l&&!h?a:h,prefix:d,suffix:m,modifier:tryConsume(\"MODIFIER\")||\"\"});continue}mustConsume(\"END\")}return o}r.parse=parse;function compile(e,r){return tokensToFunction(parse(e,r),r)}r.compile=compile;function tokensToFunction(e,r){if(r===void 0){r={}}var n=flags(r);var t=r.encode,i=t===void 0?function(e){return e}:t,a=r.validate,o=a===void 0?true:a;var f=e.map((function(e){if(typeof e===\"object\"){return new RegExp(\"^(?:\"+e.pattern+\")$\",n)}}));return function(r){var n=\"\";for(var t=0;t<e.length;t++){var a=e[t];if(typeof a===\"string\"){n+=a;continue}var u=r?r[a.name]:undefined;var p=a.modifier===\"?\"||a.modifier===\"*\";var v=a.modifier===\"*\"||a.modifier===\"+\";if(Array.isArray(u)){if(!v){throw new TypeError('Expected \"'+a.name+'\" to not repeat, but got an array')}if(u.length===0){if(p)continue;throw new TypeError('Expected \"'+a.name+'\" to not be empty')}for(var c=0;c<u.length;c++){var s=i(u[c],a);if(o&&!f[t].test(s)){throw new TypeError('Expected all \"'+a.name+'\" to match \"'+a.pattern+'\", but got \"'+s+'\"')}n+=a.prefix+s+a.suffix}continue}if(typeof u===\"string\"||typeof u===\"number\"){var s=i(String(u),a);if(o&&!f[t].test(s)){throw new TypeError('Expected \"'+a.name+'\" to match \"'+a.pattern+'\", but got \"'+s+'\"')}n+=a.prefix+s+a.suffix;continue}if(p)continue;var d=v?\"an array\":\"a string\";throw new TypeError('Expected \"'+a.name+'\" to be '+d)}return n}}r.tokensToFunction=tokensToFunction;function match(e,r){var n=[];var t=pathToRegexp(e,n,r);return regexpToFunction(t,n,r)}r.match=match;function regexpToFunction(e,r,n){if(n===void 0){n={}}var t=n.decode,i=t===void 0?function(e){return e}:t;return function(n){var t=e.exec(n);if(!t)return false;var a=t[0],o=t.index;var f=Object.create(null);var _loop_1=function(e){if(t[e]===undefined)return\"continue\";var n=r[e-1];if(n.modifier===\"*\"||n.modifier===\"+\"){f[n.name]=t[e].split(n.prefix+n.suffix).map((function(e){return i(e,n)}))}else{f[n.name]=i(t[e],n)}};for(var u=1;u<t.length;u++){_loop_1(u)}return{path:a,index:o,params:f}}}r.regexpToFunction=regexpToFunction;function escapeString(e){return e.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g,\"\\\\$1\")}function flags(e){return e&&e.sensitive?\"\":\"i\"}function regexpToRegexp(e,r){if(!r)return e;var n=e.source.match(/\\((?!\\?)/g);if(n){for(var t=0;t<n.length;t++){r.push({name:t,prefix:\"\",suffix:\"\",modifier:\"\",pattern:\"\"})}}return e}function arrayToRegexp(e,r,n){var t=e.map((function(e){return pathToRegexp(e,r,n).source}));return new RegExp(\"(?:\"+t.join(\"|\")+\")\",flags(n))}function stringToRegexp(e,r,n){return tokensToRegexp(parse(e,n),r,n)}function tokensToRegexp(e,r,n){if(n===void 0){n={}}var t=n.strict,i=t===void 0?false:t,a=n.start,o=a===void 0?true:a,f=n.end,u=f===void 0?true:f,p=n.encode,v=p===void 0?function(e){return e}:p;var c=\"[\"+escapeString(n.endsWith||\"\")+\"]|$\";var s=\"[\"+escapeString(n.delimiter||\"/#?\")+\"]\";var d=o?\"^\":\"\";for(var g=0,x=e;g<x.length;g++){var l=x[g];if(typeof l===\"string\"){d+=escapeString(v(l))}else{var h=escapeString(v(l.prefix));var m=escapeString(v(l.suffix));if(l.pattern){if(r)r.push(l);if(h||m){if(l.modifier===\"+\"||l.modifier===\"*\"){var E=l.modifier===\"*\"?\"?\":\"\";d+=\"(?:\"+h+\"((?:\"+l.pattern+\")(?:\"+m+h+\"(?:\"+l.pattern+\"))*)\"+m+\")\"+E}else{d+=\"(?:\"+h+\"(\"+l.pattern+\")\"+m+\")\"+l.modifier}}else{d+=\"(\"+l.pattern+\")\"+l.modifier}}else{d+=\"(?:\"+h+m+\")\"+l.modifier}}}if(u){if(!i)d+=s+\"?\";d+=!n.endsWith?\"$\":\"(?=\"+c+\")\"}else{var T=e[e.length-1];var y=typeof T===\"string\"?s.indexOf(T[T.length-1])>-1:T===undefined;if(!i){d+=\"(?:\"+s+\"(?=\"+c+\"))?\"}if(!y){d+=\"(?=\"+s+\"|\"+c+\")\"}}return new RegExp(d,flags(n))}r.tokensToRegexp=tokensToRegexp;function pathToRegexp(e,r,n){if(e instanceof RegExp)return regexpToRegexp(e,r);if(Array.isArray(e))return arrayToRegexp(e,r,n);return stringToRegexp(e,r,n)}r.pathToRegexp=pathToRegexp})();module.exports=e})();","(function(){\"use strict\";var e={815:function(e){function hasOwnProperty(e,r){return Object.prototype.hasOwnProperty.call(e,r)}e.exports=function(e,n,t,o){n=n||\"&\";t=t||\"=\";var a={};if(typeof e!==\"string\"||e.length===0){return a}var i=/\\+/g;e=e.split(n);var u=1e3;if(o&&typeof o.maxKeys===\"number\"){u=o.maxKeys}var c=e.length;if(u>0&&c>u){c=u}for(var p=0;p<c;++p){var f=e[p].replace(i,\"%20\"),s=f.indexOf(t),_,l,y,d;if(s>=0){_=f.substr(0,s);l=f.substr(s+1)}else{_=f;l=\"\"}y=decodeURIComponent(_);d=decodeURIComponent(l);if(!hasOwnProperty(a,y)){a[y]=d}else if(r(a[y])){a[y].push(d)}else{a[y]=[a[y],d]}}return a};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"}},577:function(e){var stringifyPrimitive=function(e){switch(typeof e){case\"string\":return e;case\"boolean\":return e?\"true\":\"false\";case\"number\":return isFinite(e)?e:\"\";default:return\"\"}};e.exports=function(e,t,o,a){t=t||\"&\";o=o||\"=\";if(e===null){e=undefined}if(typeof e===\"object\"){return map(n(e),(function(n){var a=encodeURIComponent(stringifyPrimitive(n))+o;if(r(e[n])){return map(e[n],(function(e){return a+encodeURIComponent(stringifyPrimitive(e))})).join(t)}else{return a+encodeURIComponent(stringifyPrimitive(e[n]))}})).join(t)}if(!a)return\"\";return encodeURIComponent(stringifyPrimitive(a))+o+encodeURIComponent(stringifyPrimitive(e))};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"};function map(e,r){if(e.map)return e.map(r);var n=[];for(var t=0;t<e.length;t++){n.push(r(e[t],t))}return n}var n=Object.keys||function(e){var r=[];for(var n in e){if(Object.prototype.hasOwnProperty.call(e,n))r.push(n)}return r}}};var r={};function __nccwpck_require__(n){var t=r[n];if(t!==undefined){return t.exports}var o=r[n]={exports:{}};var a=true;try{e[n](o,o.exports,__nccwpck_require__);a=false}finally{if(a)delete r[n]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};!function(){var e=n;e.decode=e.parse=__nccwpck_require__(815);e.encode=e.stringify=__nccwpck_require__(577)}();module.exports=n})();","/**\n * @license React\n * react-dom-server.edge.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n\n\n JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n\n Copyright (c) 2011 Gary Court\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n*/\n\"use strict\";\nvar React = require(\"next/dist/compiled/react\"),\n  ReactDOM = require(\"next/dist/compiled/react-dom\"),\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  REACT_SCOPE_TYPE = Symbol.for(\"react.scope\"),\n  REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\"react.debug_trace_mode\"),\n  REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\"),\n  REACT_LEGACY_HIDDEN_TYPE = Symbol.for(\"react.legacy_hidden\"),\n  REACT_MEMO_CACHE_SENTINEL = Symbol.for(\"react.memo_cache_sentinel\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator,\n  isArrayImpl = Array.isArray;\nfunction murmurhash3_32_gc(key, seed) {\n  var remainder = key.length & 3;\n  var bytes = key.length - remainder;\n  var h1 = seed;\n  for (seed = 0; seed < bytes; ) {\n    var k1 =\n      (key.charCodeAt(seed) & 255) |\n      ((key.charCodeAt(++seed) & 255) << 8) |\n      ((key.charCodeAt(++seed) & 255) << 16) |\n      ((key.charCodeAt(++seed) & 255) << 24);\n    ++seed;\n    k1 =\n      (3432918353 * (k1 & 65535) +\n        (((3432918353 * (k1 >>> 16)) & 65535) << 16)) &\n      4294967295;\n    k1 = (k1 << 15) | (k1 >>> 17);\n    k1 =\n      (461845907 * (k1 & 65535) + (((461845907 * (k1 >>> 16)) & 65535) << 16)) &\n      4294967295;\n    h1 ^= k1;\n    h1 = (h1 << 13) | (h1 >>> 19);\n    h1 = (5 * (h1 & 65535) + (((5 * (h1 >>> 16)) & 65535) << 16)) & 4294967295;\n    h1 = (h1 & 65535) + 27492 + ((((h1 >>> 16) + 58964) & 65535) << 16);\n  }\n  k1 = 0;\n  switch (remainder) {\n    case 3:\n      k1 ^= (key.charCodeAt(seed + 2) & 255) << 16;\n    case 2:\n      k1 ^= (key.charCodeAt(seed + 1) & 255) << 8;\n    case 1:\n      (k1 ^= key.charCodeAt(seed) & 255),\n        (k1 =\n          (3432918353 * (k1 & 65535) +\n            (((3432918353 * (k1 >>> 16)) & 65535) << 16)) &\n          4294967295),\n        (k1 = (k1 << 15) | (k1 >>> 17)),\n        (h1 ^=\n          (461845907 * (k1 & 65535) +\n            (((461845907 * (k1 >>> 16)) & 65535) << 16)) &\n          4294967295);\n  }\n  h1 ^= key.length;\n  h1 ^= h1 >>> 16;\n  h1 =\n    (2246822507 * (h1 & 65535) + (((2246822507 * (h1 >>> 16)) & 65535) << 16)) &\n    4294967295;\n  h1 ^= h1 >>> 13;\n  h1 =\n    (3266489909 * (h1 & 65535) + (((3266489909 * (h1 >>> 16)) & 65535) << 16)) &\n    4294967295;\n  return (h1 ^ (h1 >>> 16)) >>> 0;\n}\nfunction handleErrorInNextTick(error) {\n  setTimeoutOrImmediate(function () {\n    throw error;\n  });\n}\nvar LocalPromise = Promise,\n  scheduleMicrotask =\n    \"function\" === typeof queueMicrotask\n      ? queueMicrotask\n      : function (callback) {\n          LocalPromise.resolve(null)\n            .then(callback)\n            .catch(handleErrorInNextTick);\n        },\n  currentView = null,\n  writtenBytes = 0;\nfunction writeChunk(destination, chunk) {\n  if (0 !== chunk.byteLength)\n    if (2048 < chunk.byteLength)\n      0 < writtenBytes &&\n        (destination.enqueue(\n          new Uint8Array(currentView.buffer, 0, writtenBytes)\n        ),\n        (currentView = new Uint8Array(2048)),\n        (writtenBytes = 0)),\n        destination.enqueue(chunk);\n    else {\n      var allowableBytes = currentView.length - writtenBytes;\n      allowableBytes < chunk.byteLength &&\n        (0 === allowableBytes\n          ? destination.enqueue(currentView)\n          : (currentView.set(chunk.subarray(0, allowableBytes), writtenBytes),\n            destination.enqueue(currentView),\n            (chunk = chunk.subarray(allowableBytes))),\n        (currentView = new Uint8Array(2048)),\n        (writtenBytes = 0));\n      currentView.set(chunk, writtenBytes);\n      writtenBytes += chunk.byteLength;\n    }\n}\nfunction writeChunkAndReturn(destination, chunk) {\n  writeChunk(destination, chunk);\n  return !0;\n}\nfunction completeWriting(destination) {\n  currentView &&\n    0 < writtenBytes &&\n    (destination.enqueue(new Uint8Array(currentView.buffer, 0, writtenBytes)),\n    (currentView = null),\n    (writtenBytes = 0));\n}\nvar textEncoder = new TextEncoder();\nfunction stringToChunk(content) {\n  return textEncoder.encode(content);\n}\nfunction stringToPrecomputedChunk(content) {\n  return textEncoder.encode(content);\n}\nfunction closeWithError(destination, error) {\n  \"function\" === typeof destination.error\n    ? destination.error(error)\n    : destination.close();\n}\nvar assign = Object.assign,\n  hasOwnProperty = Object.prototype.hasOwnProperty,\n  VALID_ATTRIBUTE_NAME_REGEX = RegExp(\n    \"^[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"\n  ),\n  illegalAttributeNameCache = {},\n  validatedAttributeNameCache = {};\nfunction isAttributeNameSafe(attributeName) {\n  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName))\n    return !0;\n  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return !1;\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName))\n    return (validatedAttributeNameCache[attributeName] = !0);\n  illegalAttributeNameCache[attributeName] = !0;\n  return !1;\n}\nvar unitlessNumbers = new Set(\n    \"animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp\".split(\n      \" \"\n    )\n  ),\n  aliases = new Map([\n    [\"acceptCharset\", \"accept-charset\"],\n    [\"htmlFor\", \"for\"],\n    [\"httpEquiv\", \"http-equiv\"],\n    [\"crossOrigin\", \"crossorigin\"],\n    [\"accentHeight\", \"accent-height\"],\n    [\"alignmentBaseline\", \"alignment-baseline\"],\n    [\"arabicForm\", \"arabic-form\"],\n    [\"baselineShift\", \"baseline-shift\"],\n    [\"capHeight\", \"cap-height\"],\n    [\"clipPath\", \"clip-path\"],\n    [\"clipRule\", \"clip-rule\"],\n    [\"colorInterpolation\", \"color-interpolation\"],\n    [\"colorInterpolationFilters\", \"color-interpolation-filters\"],\n    [\"colorProfile\", \"color-profile\"],\n    [\"colorRendering\", \"color-rendering\"],\n    [\"dominantBaseline\", \"dominant-baseline\"],\n    [\"enableBackground\", \"enable-background\"],\n    [\"fillOpacity\", \"fill-opacity\"],\n    [\"fillRule\", \"fill-rule\"],\n    [\"floodColor\", \"flood-color\"],\n    [\"floodOpacity\", \"flood-opacity\"],\n    [\"fontFamily\", \"font-family\"],\n    [\"fontSize\", \"font-size\"],\n    [\"fontSizeAdjust\", \"font-size-adjust\"],\n    [\"fontStretch\", \"font-stretch\"],\n    [\"fontStyle\", \"font-style\"],\n    [\"fontVariant\", \"font-variant\"],\n    [\"fontWeight\", \"font-weight\"],\n    [\"glyphName\", \"glyph-name\"],\n    [\"glyphOrientationHorizontal\", \"glyph-orientation-horizontal\"],\n    [\"glyphOrientationVertical\", \"glyph-orientation-vertical\"],\n    [\"horizAdvX\", \"horiz-adv-x\"],\n    [\"horizOriginX\", \"horiz-origin-x\"],\n    [\"imageRendering\", \"image-rendering\"],\n    [\"letterSpacing\", \"letter-spacing\"],\n    [\"lightingColor\", \"lighting-color\"],\n    [\"markerEnd\", \"marker-end\"],\n    [\"markerMid\", \"marker-mid\"],\n    [\"markerStart\", \"marker-start\"],\n    [\"overlinePosition\", \"overline-position\"],\n    [\"overlineThickness\", \"overline-thickness\"],\n    [\"paintOrder\", \"paint-order\"],\n    [\"panose-1\", \"panose-1\"],\n    [\"pointerEvents\", \"pointer-events\"],\n    [\"renderingIntent\", \"rendering-intent\"],\n    [\"shapeRendering\", \"shape-rendering\"],\n    [\"stopColor\", \"stop-color\"],\n    [\"stopOpacity\", \"stop-opacity\"],\n    [\"strikethroughPosition\", \"strikethrough-position\"],\n    [\"strikethroughThickness\", \"strikethrough-thickness\"],\n    [\"strokeDasharray\", \"stroke-dasharray\"],\n    [\"strokeDashoffset\", \"stroke-dashoffset\"],\n    [\"strokeLinecap\", \"stroke-linecap\"],\n    [\"strokeLinejoin\", \"stroke-linejoin\"],\n    [\"strokeMiterlimit\", \"stroke-miterlimit\"],\n    [\"strokeOpacity\", \"stroke-opacity\"],\n    [\"strokeWidth\", \"stroke-width\"],\n    [\"textAnchor\", \"text-anchor\"],\n    [\"textDecoration\", \"text-decoration\"],\n    [\"textRendering\", \"text-rendering\"],\n    [\"transformOrigin\", \"transform-origin\"],\n    [\"underlinePosition\", \"underline-position\"],\n    [\"underlineThickness\", \"underline-thickness\"],\n    [\"unicodeBidi\", \"unicode-bidi\"],\n    [\"unicodeRange\", \"unicode-range\"],\n    [\"unitsPerEm\", \"units-per-em\"],\n    [\"vAlphabetic\", \"v-alphabetic\"],\n    [\"vHanging\", \"v-hanging\"],\n    [\"vIdeographic\", \"v-ideographic\"],\n    [\"vMathematical\", \"v-mathematical\"],\n    [\"vectorEffect\", \"vector-effect\"],\n    [\"vertAdvY\", \"vert-adv-y\"],\n    [\"vertOriginX\", \"vert-origin-x\"],\n    [\"vertOriginY\", \"vert-origin-y\"],\n    [\"wordSpacing\", \"word-spacing\"],\n    [\"writingMode\", \"writing-mode\"],\n    [\"xmlnsXlink\", \"xmlns:xlink\"],\n    [\"xHeight\", \"x-height\"]\n  ]),\n  matchHtmlRegExp = /[\"'&<>]/;\nfunction escapeTextForBrowser(text) {\n  if (\n    \"boolean\" === typeof text ||\n    \"number\" === typeof text ||\n    \"bigint\" === typeof text\n  )\n    return \"\" + text;\n  text = \"\" + text;\n  var match = matchHtmlRegExp.exec(text);\n  if (match) {\n    var html = \"\",\n      index,\n      lastIndex = 0;\n    for (index = match.index; index < text.length; index++) {\n      switch (text.charCodeAt(index)) {\n        case 34:\n          match = \"&quot;\";\n          break;\n        case 38:\n          match = \"&amp;\";\n          break;\n        case 39:\n          match = \"&#x27;\";\n          break;\n        case 60:\n          match = \"&lt;\";\n          break;\n        case 62:\n          match = \"&gt;\";\n          break;\n        default:\n          continue;\n      }\n      lastIndex !== index && (html += text.slice(lastIndex, index));\n      lastIndex = index + 1;\n      html += match;\n    }\n    text = lastIndex !== index ? html + text.slice(lastIndex, index) : html;\n  }\n  return text;\n}\nvar uppercasePattern = /([A-Z])/g,\n  msPattern = /^ms-/,\n  isJavaScriptProtocol =\n    /^[\\u0000-\\u001F ]*j[\\r\\n\\t]*a[\\r\\n\\t]*v[\\r\\n\\t]*a[\\r\\n\\t]*s[\\r\\n\\t]*c[\\r\\n\\t]*r[\\r\\n\\t]*i[\\r\\n\\t]*p[\\r\\n\\t]*t[\\r\\n\\t]*:/i;\nfunction sanitizeURL(url) {\n  return isJavaScriptProtocol.test(\"\" + url)\n    ? \"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')\"\n    : url;\n}\nvar ReactSharedInternals =\n    React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  ReactDOMSharedInternals =\n    ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  sharedNotPendingObject = {\n    pending: !1,\n    data: null,\n    method: null,\n    action: null\n  },\n  previousDispatcher = ReactDOMSharedInternals.d;\nReactDOMSharedInternals.d = {\n  f: previousDispatcher.f,\n  r: previousDispatcher.r,\n  D: prefetchDNS,\n  C: preconnect,\n  L: preload,\n  m: preloadModule,\n  X: preinitScript,\n  S: preinitStyle,\n  M: preinitModuleScript\n};\nvar PRELOAD_NO_CREDS = [];\nstringToPrecomputedChunk('\"></template>');\nvar startInlineScript = stringToPrecomputedChunk(\"<script>\"),\n  endInlineScript = stringToPrecomputedChunk(\"\\x3c/script>\"),\n  startScriptSrc = stringToPrecomputedChunk('<script src=\"'),\n  startModuleSrc = stringToPrecomputedChunk('<script type=\"module\" src=\"'),\n  scriptNonce = stringToPrecomputedChunk('\" nonce=\"'),\n  scriptIntegirty = stringToPrecomputedChunk('\" integrity=\"'),\n  scriptCrossOrigin = stringToPrecomputedChunk('\" crossorigin=\"'),\n  endAsyncScript = stringToPrecomputedChunk('\" async=\"\">\\x3c/script>'),\n  scriptRegex = /(<\\/|<)(s)(cript)/gi;\nfunction scriptReplacer(match, prefix, s, suffix) {\n  return \"\" + prefix + (\"s\" === s ? \"\\\\u0073\" : \"\\\\u0053\") + suffix;\n}\nvar importMapScriptStart = stringToPrecomputedChunk(\n    '<script type=\"importmap\">'\n  ),\n  importMapScriptEnd = stringToPrecomputedChunk(\"\\x3c/script>\");\nfunction createRenderState(\n  resumableState,\n  nonce,\n  externalRuntimeConfig,\n  importMap,\n  onHeaders,\n  maxHeadersLength\n) {\n  var inlineScriptWithNonce =\n      void 0 === nonce\n        ? startInlineScript\n        : stringToPrecomputedChunk(\n            '<script nonce=\"' + escapeTextForBrowser(nonce) + '\">'\n          ),\n    idPrefix = resumableState.idPrefix;\n  externalRuntimeConfig = [];\n  var bootstrapScriptContent = resumableState.bootstrapScriptContent,\n    bootstrapScripts = resumableState.bootstrapScripts,\n    bootstrapModules = resumableState.bootstrapModules;\n  void 0 !== bootstrapScriptContent &&\n    externalRuntimeConfig.push(\n      inlineScriptWithNonce,\n      stringToChunk(\n        (\"\" + bootstrapScriptContent).replace(scriptRegex, scriptReplacer)\n      ),\n      endInlineScript\n    );\n  bootstrapScriptContent = [];\n  void 0 !== importMap &&\n    (bootstrapScriptContent.push(importMapScriptStart),\n    bootstrapScriptContent.push(\n      stringToChunk(\n        (\"\" + JSON.stringify(importMap)).replace(scriptRegex, scriptReplacer)\n      )\n    ),\n    bootstrapScriptContent.push(importMapScriptEnd));\n  importMap = onHeaders\n    ? {\n        preconnects: \"\",\n        fontPreloads: \"\",\n        highImagePreloads: \"\",\n        remainingCapacity:\n          2 + (\"number\" === typeof maxHeadersLength ? maxHeadersLength : 2e3)\n      }\n    : null;\n  onHeaders = {\n    placeholderPrefix: stringToPrecomputedChunk(idPrefix + \"P:\"),\n    segmentPrefix: stringToPrecomputedChunk(idPrefix + \"S:\"),\n    boundaryPrefix: stringToPrecomputedChunk(idPrefix + \"B:\"),\n    startInlineScript: inlineScriptWithNonce,\n    htmlChunks: null,\n    headChunks: null,\n    externalRuntimeScript: null,\n    bootstrapChunks: externalRuntimeConfig,\n    importMapChunks: bootstrapScriptContent,\n    onHeaders: onHeaders,\n    headers: importMap,\n    resets: {\n      font: {},\n      dns: {},\n      connect: { default: {}, anonymous: {}, credentials: {} },\n      image: {},\n      style: {}\n    },\n    charsetChunks: [],\n    viewportChunks: [],\n    hoistableChunks: [],\n    preconnects: new Set(),\n    fontPreloads: new Set(),\n    highImagePreloads: new Set(),\n    styles: new Map(),\n    bootstrapScripts: new Set(),\n    scripts: new Set(),\n    bulkPreloads: new Set(),\n    preloads: {\n      images: new Map(),\n      stylesheets: new Map(),\n      scripts: new Map(),\n      moduleScripts: new Map()\n    },\n    nonce: nonce,\n    hoistableState: null,\n    stylesToHoist: !1\n  };\n  if (void 0 !== bootstrapScripts)\n    for (importMap = 0; importMap < bootstrapScripts.length; importMap++) {\n      var scriptConfig = bootstrapScripts[importMap];\n      idPrefix = inlineScriptWithNonce = void 0;\n      bootstrapScriptContent = {\n        rel: \"preload\",\n        as: \"script\",\n        fetchPriority: \"low\",\n        nonce: nonce\n      };\n      \"string\" === typeof scriptConfig\n        ? (bootstrapScriptContent.href = maxHeadersLength = scriptConfig)\n        : ((bootstrapScriptContent.href = maxHeadersLength = scriptConfig.src),\n          (bootstrapScriptContent.integrity = idPrefix =\n            \"string\" === typeof scriptConfig.integrity\n              ? scriptConfig.integrity\n              : void 0),\n          (bootstrapScriptContent.crossOrigin = inlineScriptWithNonce =\n            \"string\" === typeof scriptConfig || null == scriptConfig.crossOrigin\n              ? void 0\n              : \"use-credentials\" === scriptConfig.crossOrigin\n                ? \"use-credentials\"\n                : \"\"));\n      scriptConfig = resumableState;\n      var href = maxHeadersLength;\n      scriptConfig.scriptResources[href] = null;\n      scriptConfig.moduleScriptResources[href] = null;\n      scriptConfig = [];\n      pushLinkImpl(scriptConfig, bootstrapScriptContent);\n      onHeaders.bootstrapScripts.add(scriptConfig);\n      externalRuntimeConfig.push(\n        startScriptSrc,\n        stringToChunk(escapeTextForBrowser(maxHeadersLength))\n      );\n      nonce &&\n        externalRuntimeConfig.push(\n          scriptNonce,\n          stringToChunk(escapeTextForBrowser(nonce))\n        );\n      \"string\" === typeof idPrefix &&\n        externalRuntimeConfig.push(\n          scriptIntegirty,\n          stringToChunk(escapeTextForBrowser(idPrefix))\n        );\n      \"string\" === typeof inlineScriptWithNonce &&\n        externalRuntimeConfig.push(\n          scriptCrossOrigin,\n          stringToChunk(escapeTextForBrowser(inlineScriptWithNonce))\n        );\n      externalRuntimeConfig.push(endAsyncScript);\n    }\n  if (void 0 !== bootstrapModules)\n    for (\n      bootstrapScripts = 0;\n      bootstrapScripts < bootstrapModules.length;\n      bootstrapScripts++\n    )\n      (bootstrapScriptContent = bootstrapModules[bootstrapScripts]),\n        (inlineScriptWithNonce = maxHeadersLength = void 0),\n        (idPrefix = {\n          rel: \"modulepreload\",\n          fetchPriority: \"low\",\n          nonce: nonce\n        }),\n        \"string\" === typeof bootstrapScriptContent\n          ? (idPrefix.href = importMap = bootstrapScriptContent)\n          : ((idPrefix.href = importMap = bootstrapScriptContent.src),\n            (idPrefix.integrity = inlineScriptWithNonce =\n              \"string\" === typeof bootstrapScriptContent.integrity\n                ? bootstrapScriptContent.integrity\n                : void 0),\n            (idPrefix.crossOrigin = maxHeadersLength =\n              \"string\" === typeof bootstrapScriptContent ||\n              null == bootstrapScriptContent.crossOrigin\n                ? void 0\n                : \"use-credentials\" === bootstrapScriptContent.crossOrigin\n                  ? \"use-credentials\"\n                  : \"\")),\n        (bootstrapScriptContent = resumableState),\n        (scriptConfig = importMap),\n        (bootstrapScriptContent.scriptResources[scriptConfig] = null),\n        (bootstrapScriptContent.moduleScriptResources[scriptConfig] = null),\n        (bootstrapScriptContent = []),\n        pushLinkImpl(bootstrapScriptContent, idPrefix),\n        onHeaders.bootstrapScripts.add(bootstrapScriptContent),\n        externalRuntimeConfig.push(\n          startModuleSrc,\n          stringToChunk(escapeTextForBrowser(importMap))\n        ),\n        nonce &&\n          externalRuntimeConfig.push(\n            scriptNonce,\n            stringToChunk(escapeTextForBrowser(nonce))\n          ),\n        \"string\" === typeof inlineScriptWithNonce &&\n          externalRuntimeConfig.push(\n            scriptIntegirty,\n            stringToChunk(escapeTextForBrowser(inlineScriptWithNonce))\n          ),\n        \"string\" === typeof maxHeadersLength &&\n          externalRuntimeConfig.push(\n            scriptCrossOrigin,\n            stringToChunk(escapeTextForBrowser(maxHeadersLength))\n          ),\n        externalRuntimeConfig.push(endAsyncScript);\n  return onHeaders;\n}\nfunction createResumableState(\n  identifierPrefix,\n  externalRuntimeConfig,\n  bootstrapScriptContent,\n  bootstrapScripts,\n  bootstrapModules\n) {\n  return {\n    idPrefix: void 0 === identifierPrefix ? \"\" : identifierPrefix,\n    nextFormID: 0,\n    streamingFormat: 0,\n    bootstrapScriptContent: bootstrapScriptContent,\n    bootstrapScripts: bootstrapScripts,\n    bootstrapModules: bootstrapModules,\n    instructions: 0,\n    hasBody: !1,\n    hasHtml: !1,\n    unknownResources: {},\n    dnsResources: {},\n    connectResources: { default: {}, anonymous: {}, credentials: {} },\n    imageResources: {},\n    styleResources: {},\n    scriptResources: {},\n    moduleUnknownResources: {},\n    moduleScriptResources: {}\n  };\n}\nfunction createFormatContext(insertionMode, selectedValue, tagScope) {\n  return {\n    insertionMode: insertionMode,\n    selectedValue: selectedValue,\n    tagScope: tagScope\n  };\n}\nfunction createRootFormatContext(namespaceURI) {\n  return createFormatContext(\n    \"http://www.w3.org/2000/svg\" === namespaceURI\n      ? 3\n      : \"http://www.w3.org/1998/Math/MathML\" === namespaceURI\n        ? 4\n        : 0,\n    null,\n    0\n  );\n}\nfunction getChildFormatContext(parentContext, type, props) {\n  switch (type) {\n    case \"noscript\":\n      return createFormatContext(2, null, parentContext.tagScope | 1);\n    case \"select\":\n      return createFormatContext(\n        2,\n        null != props.value ? props.value : props.defaultValue,\n        parentContext.tagScope\n      );\n    case \"svg\":\n      return createFormatContext(3, null, parentContext.tagScope);\n    case \"picture\":\n      return createFormatContext(2, null, parentContext.tagScope | 2);\n    case \"math\":\n      return createFormatContext(4, null, parentContext.tagScope);\n    case \"foreignObject\":\n      return createFormatContext(2, null, parentContext.tagScope);\n    case \"table\":\n      return createFormatContext(5, null, parentContext.tagScope);\n    case \"thead\":\n    case \"tbody\":\n    case \"tfoot\":\n      return createFormatContext(6, null, parentContext.tagScope);\n    case \"colgroup\":\n      return createFormatContext(8, null, parentContext.tagScope);\n    case \"tr\":\n      return createFormatContext(7, null, parentContext.tagScope);\n  }\n  return 5 <= parentContext.insertionMode\n    ? createFormatContext(2, null, parentContext.tagScope)\n    : 0 === parentContext.insertionMode\n      ? \"html\" === type\n        ? createFormatContext(1, null, parentContext.tagScope)\n        : createFormatContext(2, null, parentContext.tagScope)\n      : 1 === parentContext.insertionMode\n        ? createFormatContext(2, null, parentContext.tagScope)\n        : parentContext;\n}\nvar textSeparator = stringToPrecomputedChunk(\"\\x3c!-- --\\x3e\");\nfunction pushTextInstance(target, text, renderState, textEmbedded) {\n  if (\"\" === text) return textEmbedded;\n  textEmbedded && target.push(textSeparator);\n  target.push(stringToChunk(escapeTextForBrowser(text)));\n  return !0;\n}\nvar styleNameCache = new Map(),\n  styleAttributeStart = stringToPrecomputedChunk(' style=\"'),\n  styleAssign = stringToPrecomputedChunk(\":\"),\n  styleSeparator = stringToPrecomputedChunk(\";\");\nfunction pushStyleAttribute(target, style) {\n  if (\"object\" !== typeof style)\n    throw Error(\n      \"The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.\"\n    );\n  var isFirst = !0,\n    styleName;\n  for (styleName in style)\n    if (hasOwnProperty.call(style, styleName)) {\n      var styleValue = style[styleName];\n      if (\n        null != styleValue &&\n        \"boolean\" !== typeof styleValue &&\n        \"\" !== styleValue\n      ) {\n        if (0 === styleName.indexOf(\"--\")) {\n          var nameChunk = stringToChunk(escapeTextForBrowser(styleName));\n          styleValue = stringToChunk(\n            escapeTextForBrowser((\"\" + styleValue).trim())\n          );\n        } else\n          (nameChunk = styleNameCache.get(styleName)),\n            void 0 === nameChunk &&\n              ((nameChunk = stringToPrecomputedChunk(\n                escapeTextForBrowser(\n                  styleName\n                    .replace(uppercasePattern, \"-$1\")\n                    .toLowerCase()\n                    .replace(msPattern, \"-ms-\")\n                )\n              )),\n              styleNameCache.set(styleName, nameChunk)),\n            (styleValue =\n              \"number\" === typeof styleValue\n                ? 0 === styleValue || unitlessNumbers.has(styleName)\n                  ? stringToChunk(\"\" + styleValue)\n                  : stringToChunk(styleValue + \"px\")\n                : stringToChunk(\n                    escapeTextForBrowser((\"\" + styleValue).trim())\n                  ));\n        isFirst\n          ? ((isFirst = !1),\n            target.push(\n              styleAttributeStart,\n              nameChunk,\n              styleAssign,\n              styleValue\n            ))\n          : target.push(styleSeparator, nameChunk, styleAssign, styleValue);\n      }\n    }\n  isFirst || target.push(attributeEnd);\n}\nvar attributeSeparator = stringToPrecomputedChunk(\" \"),\n  attributeAssign = stringToPrecomputedChunk('=\"'),\n  attributeEnd = stringToPrecomputedChunk('\"'),\n  attributeEmptyString = stringToPrecomputedChunk('=\"\"');\nfunction pushBooleanAttribute(target, name, value) {\n  value &&\n    \"function\" !== typeof value &&\n    \"symbol\" !== typeof value &&\n    target.push(attributeSeparator, stringToChunk(name), attributeEmptyString);\n}\nfunction pushStringAttribute(target, name, value) {\n  \"function\" !== typeof value &&\n    \"symbol\" !== typeof value &&\n    \"boolean\" !== typeof value &&\n    target.push(\n      attributeSeparator,\n      stringToChunk(name),\n      attributeAssign,\n      stringToChunk(escapeTextForBrowser(value)),\n      attributeEnd\n    );\n}\nvar actionJavaScriptURL = stringToPrecomputedChunk(\n    escapeTextForBrowser(\n      \"javascript:throw new Error('React form unexpectedly submitted.')\"\n    )\n  ),\n  startHiddenInputChunk = stringToPrecomputedChunk('<input type=\"hidden\"');\nfunction pushAdditionalFormField(value, key) {\n  this.push(startHiddenInputChunk);\n  validateAdditionalFormField(value);\n  pushStringAttribute(this, \"name\", key);\n  pushStringAttribute(this, \"value\", value);\n  this.push(endOfStartTagSelfClosing);\n}\nfunction validateAdditionalFormField(value) {\n  if (\"string\" !== typeof value)\n    throw Error(\n      \"File/Blob fields are not yet supported in progressive forms. Will fallback to client hydration.\"\n    );\n}\nfunction getCustomFormFields(resumableState, formAction) {\n  if (\"function\" === typeof formAction.$$FORM_ACTION) {\n    var id = resumableState.nextFormID++;\n    resumableState = resumableState.idPrefix + id;\n    try {\n      var customFields = formAction.$$FORM_ACTION(resumableState);\n      if (customFields) {\n        var formData = customFields.data;\n        null != formData && formData.forEach(validateAdditionalFormField);\n      }\n      return customFields;\n    } catch (x) {\n      if (\"object\" === typeof x && null !== x && \"function\" === typeof x.then)\n        throw x;\n    }\n  }\n  return null;\n}\nfunction pushFormActionAttribute(\n  target,\n  resumableState,\n  renderState,\n  formAction,\n  formEncType,\n  formMethod,\n  formTarget,\n  name\n) {\n  var formData = null;\n  if (\"function\" === typeof formAction) {\n    var customFields = getCustomFormFields(resumableState, formAction);\n    null !== customFields\n      ? ((name = customFields.name),\n        (formAction = customFields.action || \"\"),\n        (formEncType = customFields.encType),\n        (formMethod = customFields.method),\n        (formTarget = customFields.target),\n        (formData = customFields.data))\n      : (target.push(\n          attributeSeparator,\n          stringToChunk(\"formAction\"),\n          attributeAssign,\n          actionJavaScriptURL,\n          attributeEnd\n        ),\n        (formTarget = formMethod = formEncType = formAction = name = null),\n        injectFormReplayingRuntime(resumableState, renderState));\n  }\n  null != name && pushAttribute(target, \"name\", name);\n  null != formAction && pushAttribute(target, \"formAction\", formAction);\n  null != formEncType && pushAttribute(target, \"formEncType\", formEncType);\n  null != formMethod && pushAttribute(target, \"formMethod\", formMethod);\n  null != formTarget && pushAttribute(target, \"formTarget\", formTarget);\n  return formData;\n}\nfunction pushAttribute(target, name, value) {\n  switch (name) {\n    case \"className\":\n      pushStringAttribute(target, \"class\", value);\n      break;\n    case \"tabIndex\":\n      pushStringAttribute(target, \"tabindex\", value);\n      break;\n    case \"dir\":\n    case \"role\":\n    case \"viewBox\":\n    case \"width\":\n    case \"height\":\n      pushStringAttribute(target, name, value);\n      break;\n    case \"style\":\n      pushStyleAttribute(target, value);\n      break;\n    case \"src\":\n    case \"href\":\n      if (\"\" === value) break;\n    case \"action\":\n    case \"formAction\":\n      if (\n        null == value ||\n        \"function\" === typeof value ||\n        \"symbol\" === typeof value ||\n        \"boolean\" === typeof value\n      )\n        break;\n      value = sanitizeURL(\"\" + value);\n      target.push(\n        attributeSeparator,\n        stringToChunk(name),\n        attributeAssign,\n        stringToChunk(escapeTextForBrowser(value)),\n        attributeEnd\n      );\n      break;\n    case \"defaultValue\":\n    case \"defaultChecked\":\n    case \"innerHTML\":\n    case \"suppressContentEditableWarning\":\n    case \"suppressHydrationWarning\":\n    case \"ref\":\n      break;\n    case \"autoFocus\":\n    case \"multiple\":\n    case \"muted\":\n      pushBooleanAttribute(target, name.toLowerCase(), value);\n      break;\n    case \"xlinkHref\":\n      if (\n        \"function\" === typeof value ||\n        \"symbol\" === typeof value ||\n        \"boolean\" === typeof value\n      )\n        break;\n      value = sanitizeURL(\"\" + value);\n      target.push(\n        attributeSeparator,\n        stringToChunk(\"xlink:href\"),\n        attributeAssign,\n        stringToChunk(escapeTextForBrowser(value)),\n        attributeEnd\n      );\n      break;\n    case \"contentEditable\":\n    case \"spellCheck\":\n    case \"draggable\":\n    case \"value\":\n    case \"autoReverse\":\n    case \"externalResourcesRequired\":\n    case \"focusable\":\n    case \"preserveAlpha\":\n      \"function\" !== typeof value &&\n        \"symbol\" !== typeof value &&\n        target.push(\n          attributeSeparator,\n          stringToChunk(name),\n          attributeAssign,\n          stringToChunk(escapeTextForBrowser(value)),\n          attributeEnd\n        );\n      break;\n    case \"inert\":\n    case \"allowFullScreen\":\n    case \"async\":\n    case \"autoPlay\":\n    case \"controls\":\n    case \"default\":\n    case \"defer\":\n    case \"disabled\":\n    case \"disablePictureInPicture\":\n    case \"disableRemotePlayback\":\n    case \"formNoValidate\":\n    case \"hidden\":\n    case \"loop\":\n    case \"noModule\":\n    case \"noValidate\":\n    case \"open\":\n    case \"playsInline\":\n    case \"readOnly\":\n    case \"required\":\n    case \"reversed\":\n    case \"scoped\":\n    case \"seamless\":\n    case \"itemScope\":\n      value &&\n        \"function\" !== typeof value &&\n        \"symbol\" !== typeof value &&\n        target.push(\n          attributeSeparator,\n          stringToChunk(name),\n          attributeEmptyString\n        );\n      break;\n    case \"capture\":\n    case \"download\":\n      !0 === value\n        ? target.push(\n            attributeSeparator,\n            stringToChunk(name),\n            attributeEmptyString\n          )\n        : !1 !== value &&\n          \"function\" !== typeof value &&\n          \"symbol\" !== typeof value &&\n          target.push(\n            attributeSeparator,\n            stringToChunk(name),\n            attributeAssign,\n            stringToChunk(escapeTextForBrowser(value)),\n            attributeEnd\n          );\n      break;\n    case \"cols\":\n    case \"rows\":\n    case \"size\":\n    case \"span\":\n      \"function\" !== typeof value &&\n        \"symbol\" !== typeof value &&\n        !isNaN(value) &&\n        1 <= value &&\n        target.push(\n          attributeSeparator,\n          stringToChunk(name),\n          attributeAssign,\n          stringToChunk(escapeTextForBrowser(value)),\n          attributeEnd\n        );\n      break;\n    case \"rowSpan\":\n    case \"start\":\n      \"function\" === typeof value ||\n        \"symbol\" === typeof value ||\n        isNaN(value) ||\n        target.push(\n          attributeSeparator,\n          stringToChunk(name),\n          attributeAssign,\n          stringToChunk(escapeTextForBrowser(value)),\n          attributeEnd\n        );\n      break;\n    case \"xlinkActuate\":\n      pushStringAttribute(target, \"xlink:actuate\", value);\n      break;\n    case \"xlinkArcrole\":\n      pushStringAttribute(target, \"xlink:arcrole\", value);\n      break;\n    case \"xlinkRole\":\n      pushStringAttribute(target, \"xlink:role\", value);\n      break;\n    case \"xlinkShow\":\n      pushStringAttribute(target, \"xlink:show\", value);\n      break;\n    case \"xlinkTitle\":\n      pushStringAttribute(target, \"xlink:title\", value);\n      break;\n    case \"xlinkType\":\n      pushStringAttribute(target, \"xlink:type\", value);\n      break;\n    case \"xmlBase\":\n      pushStringAttribute(target, \"xml:base\", value);\n      break;\n    case \"xmlLang\":\n      pushStringAttribute(target, \"xml:lang\", value);\n      break;\n    case \"xmlSpace\":\n      pushStringAttribute(target, \"xml:space\", value);\n      break;\n    default:\n      if (\n        !(2 < name.length) ||\n        (\"o\" !== name[0] && \"O\" !== name[0]) ||\n        (\"n\" !== name[1] && \"N\" !== name[1])\n      )\n        if (((name = aliases.get(name) || name), isAttributeNameSafe(name))) {\n          switch (typeof value) {\n            case \"function\":\n            case \"symbol\":\n              return;\n            case \"boolean\":\n              var prefix$8 = name.toLowerCase().slice(0, 5);\n              if (\"data-\" !== prefix$8 && \"aria-\" !== prefix$8) return;\n          }\n          target.push(\n            attributeSeparator,\n            stringToChunk(name),\n            attributeAssign,\n            stringToChunk(escapeTextForBrowser(value)),\n            attributeEnd\n          );\n        }\n  }\n}\nvar endOfStartTag = stringToPrecomputedChunk(\">\"),\n  endOfStartTagSelfClosing = stringToPrecomputedChunk(\"/>\");\nfunction pushInnerHTML(target, innerHTML, children) {\n  if (null != innerHTML) {\n    if (null != children)\n      throw Error(\n        \"Can only set one of `children` or `props.dangerouslySetInnerHTML`.\"\n      );\n    if (\"object\" !== typeof innerHTML || !(\"__html\" in innerHTML))\n      throw Error(\n        \"`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information.\"\n      );\n    innerHTML = innerHTML.__html;\n    null !== innerHTML &&\n      void 0 !== innerHTML &&\n      target.push(stringToChunk(\"\" + innerHTML));\n  }\n}\nfunction flattenOptionChildren(children) {\n  var content = \"\";\n  React.Children.forEach(children, function (child) {\n    null != child && (content += child);\n  });\n  return content;\n}\nvar selectedMarkerAttribute = stringToPrecomputedChunk(' selected=\"\"'),\n  formReplayingRuntimeScript = stringToPrecomputedChunk(\n    'addEventListener(\"submit\",function(a){if(!a.defaultPrevented){var c=a.target,d=a.submitter,e=c.action,b=d;if(d){var f=d.getAttribute(\"formAction\");null!=f&&(e=f,b=null)}\"javascript:throw new Error(\\'React form unexpectedly submitted.\\')\"===e&&(a.preventDefault(),b?(a=document.createElement(\"input\"),a.name=b.name,a.value=b.value,b.parentNode.insertBefore(a,b),b=new FormData(c),a.parentNode.removeChild(a)):b=new FormData(c),a=c.ownerDocument||c,(a.$$reactFormReplay=a.$$reactFormReplay||[]).push(c,d,b))}});'\n  );\nfunction injectFormReplayingRuntime(resumableState, renderState) {\n  0 === (resumableState.instructions & 16) &&\n    ((resumableState.instructions |= 16),\n    renderState.bootstrapChunks.unshift(\n      renderState.startInlineScript,\n      formReplayingRuntimeScript,\n      endInlineScript\n    ));\n}\nvar formStateMarkerIsMatching = stringToPrecomputedChunk(\"\\x3c!--F!--\\x3e\"),\n  formStateMarkerIsNotMatching = stringToPrecomputedChunk(\"\\x3c!--F--\\x3e\");\nfunction pushLinkImpl(target, props) {\n  target.push(startChunkForTag(\"link\"));\n  for (var propKey in props)\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n      if (null != propValue)\n        switch (propKey) {\n          case \"children\":\n          case \"dangerouslySetInnerHTML\":\n            throw Error(\n              \"link is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\"\n            );\n          default:\n            pushAttribute(target, propKey, propValue);\n        }\n    }\n  target.push(endOfStartTagSelfClosing);\n  return null;\n}\nvar styleRegex = /(<\\/|<)(s)(tyle)/gi;\nfunction styleReplacer(match, prefix, s, suffix) {\n  return \"\" + prefix + (\"s\" === s ? \"\\\\73 \" : \"\\\\53 \") + suffix;\n}\nfunction pushSelfClosing(target, props, tag) {\n  target.push(startChunkForTag(tag));\n  for (var propKey in props)\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n      if (null != propValue)\n        switch (propKey) {\n          case \"children\":\n          case \"dangerouslySetInnerHTML\":\n            throw Error(\n              tag +\n                \" is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\"\n            );\n          default:\n            pushAttribute(target, propKey, propValue);\n        }\n    }\n  target.push(endOfStartTagSelfClosing);\n  return null;\n}\nfunction pushTitleImpl(target, props) {\n  target.push(startChunkForTag(\"title\"));\n  var children = null,\n    innerHTML = null,\n    propKey;\n  for (propKey in props)\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n      if (null != propValue)\n        switch (propKey) {\n          case \"children\":\n            children = propValue;\n            break;\n          case \"dangerouslySetInnerHTML\":\n            innerHTML = propValue;\n            break;\n          default:\n            pushAttribute(target, propKey, propValue);\n        }\n    }\n  target.push(endOfStartTag);\n  props = Array.isArray(children)\n    ? 2 > children.length\n      ? children[0]\n      : null\n    : children;\n  \"function\" !== typeof props &&\n    \"symbol\" !== typeof props &&\n    null !== props &&\n    void 0 !== props &&\n    target.push(stringToChunk(escapeTextForBrowser(\"\" + props)));\n  pushInnerHTML(target, innerHTML, children);\n  target.push(endChunkForTag(\"title\"));\n  return null;\n}\nfunction pushScriptImpl(target, props) {\n  target.push(startChunkForTag(\"script\"));\n  var children = null,\n    innerHTML = null,\n    propKey;\n  for (propKey in props)\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n      if (null != propValue)\n        switch (propKey) {\n          case \"children\":\n            children = propValue;\n            break;\n          case \"dangerouslySetInnerHTML\":\n            innerHTML = propValue;\n            break;\n          default:\n            pushAttribute(target, propKey, propValue);\n        }\n    }\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, children);\n  \"string\" === typeof children &&\n    target.push(\n      stringToChunk((\"\" + children).replace(scriptRegex, scriptReplacer))\n    );\n  target.push(endChunkForTag(\"script\"));\n  return null;\n}\nfunction pushStartGenericElement(target, props, tag) {\n  target.push(startChunkForTag(tag));\n  var innerHTML = (tag = null),\n    propKey;\n  for (propKey in props)\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n      if (null != propValue)\n        switch (propKey) {\n          case \"children\":\n            tag = propValue;\n            break;\n          case \"dangerouslySetInnerHTML\":\n            innerHTML = propValue;\n            break;\n          default:\n            pushAttribute(target, propKey, propValue);\n        }\n    }\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, tag);\n  return \"string\" === typeof tag\n    ? (target.push(stringToChunk(escapeTextForBrowser(tag))), null)\n    : tag;\n}\nvar leadingNewline = stringToPrecomputedChunk(\"\\n\"),\n  VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/,\n  validatedTagCache = new Map();\nfunction startChunkForTag(tag) {\n  var tagStartChunk = validatedTagCache.get(tag);\n  if (void 0 === tagStartChunk) {\n    if (!VALID_TAG_REGEX.test(tag)) throw Error(\"Invalid tag: \" + tag);\n    tagStartChunk = stringToPrecomputedChunk(\"<\" + tag);\n    validatedTagCache.set(tag, tagStartChunk);\n  }\n  return tagStartChunk;\n}\nvar doctypeChunk = stringToPrecomputedChunk(\"<!DOCTYPE html>\");\nfunction pushStartInstance(\n  target$jscomp$0,\n  type,\n  props,\n  resumableState,\n  renderState,\n  hoistableState,\n  formatContext,\n  textEmbedded,\n  isFallback\n) {\n  switch (type) {\n    case \"div\":\n    case \"span\":\n    case \"svg\":\n    case \"path\":\n      break;\n    case \"a\":\n      target$jscomp$0.push(startChunkForTag(\"a\"));\n      var children = null,\n        innerHTML = null,\n        propKey;\n      for (propKey in props)\n        if (hasOwnProperty.call(props, propKey)) {\n          var propValue = props[propKey];\n          if (null != propValue)\n            switch (propKey) {\n              case \"children\":\n                children = propValue;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                innerHTML = propValue;\n                break;\n              case \"href\":\n                \"\" === propValue\n                  ? pushStringAttribute(target$jscomp$0, \"href\", \"\")\n                  : pushAttribute(target$jscomp$0, propKey, propValue);\n                break;\n              default:\n                pushAttribute(target$jscomp$0, propKey, propValue);\n            }\n        }\n      target$jscomp$0.push(endOfStartTag);\n      pushInnerHTML(target$jscomp$0, innerHTML, children);\n      if (\"string\" === typeof children) {\n        target$jscomp$0.push(stringToChunk(escapeTextForBrowser(children)));\n        var JSCompiler_inline_result = null;\n      } else JSCompiler_inline_result = children;\n      return JSCompiler_inline_result;\n    case \"g\":\n    case \"p\":\n    case \"li\":\n      break;\n    case \"select\":\n      target$jscomp$0.push(startChunkForTag(\"select\"));\n      var children$jscomp$0 = null,\n        innerHTML$jscomp$0 = null,\n        propKey$jscomp$0;\n      for (propKey$jscomp$0 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$0)) {\n          var propValue$jscomp$0 = props[propKey$jscomp$0];\n          if (null != propValue$jscomp$0)\n            switch (propKey$jscomp$0) {\n              case \"children\":\n                children$jscomp$0 = propValue$jscomp$0;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                innerHTML$jscomp$0 = propValue$jscomp$0;\n                break;\n              case \"defaultValue\":\n              case \"value\":\n                break;\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$0,\n                  propValue$jscomp$0\n                );\n            }\n        }\n      target$jscomp$0.push(endOfStartTag);\n      pushInnerHTML(target$jscomp$0, innerHTML$jscomp$0, children$jscomp$0);\n      return children$jscomp$0;\n    case \"option\":\n      var selectedValue = formatContext.selectedValue;\n      target$jscomp$0.push(startChunkForTag(\"option\"));\n      var children$jscomp$1 = null,\n        value = null,\n        selected = null,\n        innerHTML$jscomp$1 = null,\n        propKey$jscomp$1;\n      for (propKey$jscomp$1 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$1)) {\n          var propValue$jscomp$1 = props[propKey$jscomp$1];\n          if (null != propValue$jscomp$1)\n            switch (propKey$jscomp$1) {\n              case \"children\":\n                children$jscomp$1 = propValue$jscomp$1;\n                break;\n              case \"selected\":\n                selected = propValue$jscomp$1;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                innerHTML$jscomp$1 = propValue$jscomp$1;\n                break;\n              case \"value\":\n                value = propValue$jscomp$1;\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$1,\n                  propValue$jscomp$1\n                );\n            }\n        }\n      if (null != selectedValue) {\n        var stringValue =\n          null !== value\n            ? \"\" + value\n            : flattenOptionChildren(children$jscomp$1);\n        if (isArrayImpl(selectedValue))\n          for (var i = 0; i < selectedValue.length; i++) {\n            if (\"\" + selectedValue[i] === stringValue) {\n              target$jscomp$0.push(selectedMarkerAttribute);\n              break;\n            }\n          }\n        else\n          \"\" + selectedValue === stringValue &&\n            target$jscomp$0.push(selectedMarkerAttribute);\n      } else selected && target$jscomp$0.push(selectedMarkerAttribute);\n      target$jscomp$0.push(endOfStartTag);\n      pushInnerHTML(target$jscomp$0, innerHTML$jscomp$1, children$jscomp$1);\n      return children$jscomp$1;\n    case \"textarea\":\n      target$jscomp$0.push(startChunkForTag(\"textarea\"));\n      var value$jscomp$0 = null,\n        defaultValue = null,\n        children$jscomp$2 = null,\n        propKey$jscomp$2;\n      for (propKey$jscomp$2 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$2)) {\n          var propValue$jscomp$2 = props[propKey$jscomp$2];\n          if (null != propValue$jscomp$2)\n            switch (propKey$jscomp$2) {\n              case \"children\":\n                children$jscomp$2 = propValue$jscomp$2;\n                break;\n              case \"value\":\n                value$jscomp$0 = propValue$jscomp$2;\n                break;\n              case \"defaultValue\":\n                defaultValue = propValue$jscomp$2;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                throw Error(\n                  \"`dangerouslySetInnerHTML` does not make sense on <textarea>.\"\n                );\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$2,\n                  propValue$jscomp$2\n                );\n            }\n        }\n      null === value$jscomp$0 &&\n        null !== defaultValue &&\n        (value$jscomp$0 = defaultValue);\n      target$jscomp$0.push(endOfStartTag);\n      if (null != children$jscomp$2) {\n        if (null != value$jscomp$0)\n          throw Error(\n            \"If you supply `defaultValue` on a <textarea>, do not pass children.\"\n          );\n        if (isArrayImpl(children$jscomp$2)) {\n          if (1 < children$jscomp$2.length)\n            throw Error(\"<textarea> can only have at most one child.\");\n          value$jscomp$0 = \"\" + children$jscomp$2[0];\n        }\n        value$jscomp$0 = \"\" + children$jscomp$2;\n      }\n      \"string\" === typeof value$jscomp$0 &&\n        \"\\n\" === value$jscomp$0[0] &&\n        target$jscomp$0.push(leadingNewline);\n      null !== value$jscomp$0 &&\n        target$jscomp$0.push(\n          stringToChunk(escapeTextForBrowser(\"\" + value$jscomp$0))\n        );\n      return null;\n    case \"input\":\n      target$jscomp$0.push(startChunkForTag(\"input\"));\n      var name = null,\n        formAction = null,\n        formEncType = null,\n        formMethod = null,\n        formTarget = null,\n        value$jscomp$1 = null,\n        defaultValue$jscomp$0 = null,\n        checked = null,\n        defaultChecked = null,\n        propKey$jscomp$3;\n      for (propKey$jscomp$3 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$3)) {\n          var propValue$jscomp$3 = props[propKey$jscomp$3];\n          if (null != propValue$jscomp$3)\n            switch (propKey$jscomp$3) {\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                throw Error(\n                  \"input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\"\n                );\n              case \"name\":\n                name = propValue$jscomp$3;\n                break;\n              case \"formAction\":\n                formAction = propValue$jscomp$3;\n                break;\n              case \"formEncType\":\n                formEncType = propValue$jscomp$3;\n                break;\n              case \"formMethod\":\n                formMethod = propValue$jscomp$3;\n                break;\n              case \"formTarget\":\n                formTarget = propValue$jscomp$3;\n                break;\n              case \"defaultChecked\":\n                defaultChecked = propValue$jscomp$3;\n                break;\n              case \"defaultValue\":\n                defaultValue$jscomp$0 = propValue$jscomp$3;\n                break;\n              case \"checked\":\n                checked = propValue$jscomp$3;\n                break;\n              case \"value\":\n                value$jscomp$1 = propValue$jscomp$3;\n                break;\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$3,\n                  propValue$jscomp$3\n                );\n            }\n        }\n      var formData = pushFormActionAttribute(\n        target$jscomp$0,\n        resumableState,\n        renderState,\n        formAction,\n        formEncType,\n        formMethod,\n        formTarget,\n        name\n      );\n      null !== checked\n        ? pushBooleanAttribute(target$jscomp$0, \"checked\", checked)\n        : null !== defaultChecked &&\n          pushBooleanAttribute(target$jscomp$0, \"checked\", defaultChecked);\n      null !== value$jscomp$1\n        ? pushAttribute(target$jscomp$0, \"value\", value$jscomp$1)\n        : null !== defaultValue$jscomp$0 &&\n          pushAttribute(target$jscomp$0, \"value\", defaultValue$jscomp$0);\n      target$jscomp$0.push(endOfStartTagSelfClosing);\n      null != formData &&\n        formData.forEach(pushAdditionalFormField, target$jscomp$0);\n      return null;\n    case \"button\":\n      target$jscomp$0.push(startChunkForTag(\"button\"));\n      var children$jscomp$3 = null,\n        innerHTML$jscomp$2 = null,\n        name$jscomp$0 = null,\n        formAction$jscomp$0 = null,\n        formEncType$jscomp$0 = null,\n        formMethod$jscomp$0 = null,\n        formTarget$jscomp$0 = null,\n        propKey$jscomp$4;\n      for (propKey$jscomp$4 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$4)) {\n          var propValue$jscomp$4 = props[propKey$jscomp$4];\n          if (null != propValue$jscomp$4)\n            switch (propKey$jscomp$4) {\n              case \"children\":\n                children$jscomp$3 = propValue$jscomp$4;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                innerHTML$jscomp$2 = propValue$jscomp$4;\n                break;\n              case \"name\":\n                name$jscomp$0 = propValue$jscomp$4;\n                break;\n              case \"formAction\":\n                formAction$jscomp$0 = propValue$jscomp$4;\n                break;\n              case \"formEncType\":\n                formEncType$jscomp$0 = propValue$jscomp$4;\n                break;\n              case \"formMethod\":\n                formMethod$jscomp$0 = propValue$jscomp$4;\n                break;\n              case \"formTarget\":\n                formTarget$jscomp$0 = propValue$jscomp$4;\n                break;\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$4,\n                  propValue$jscomp$4\n                );\n            }\n        }\n      var formData$jscomp$0 = pushFormActionAttribute(\n        target$jscomp$0,\n        resumableState,\n        renderState,\n        formAction$jscomp$0,\n        formEncType$jscomp$0,\n        formMethod$jscomp$0,\n        formTarget$jscomp$0,\n        name$jscomp$0\n      );\n      target$jscomp$0.push(endOfStartTag);\n      null != formData$jscomp$0 &&\n        formData$jscomp$0.forEach(pushAdditionalFormField, target$jscomp$0);\n      pushInnerHTML(target$jscomp$0, innerHTML$jscomp$2, children$jscomp$3);\n      if (\"string\" === typeof children$jscomp$3) {\n        target$jscomp$0.push(\n          stringToChunk(escapeTextForBrowser(children$jscomp$3))\n        );\n        var JSCompiler_inline_result$jscomp$0 = null;\n      } else JSCompiler_inline_result$jscomp$0 = children$jscomp$3;\n      return JSCompiler_inline_result$jscomp$0;\n    case \"form\":\n      target$jscomp$0.push(startChunkForTag(\"form\"));\n      var children$jscomp$4 = null,\n        innerHTML$jscomp$3 = null,\n        formAction$jscomp$1 = null,\n        formEncType$jscomp$1 = null,\n        formMethod$jscomp$1 = null,\n        formTarget$jscomp$1 = null,\n        propKey$jscomp$5;\n      for (propKey$jscomp$5 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$5)) {\n          var propValue$jscomp$5 = props[propKey$jscomp$5];\n          if (null != propValue$jscomp$5)\n            switch (propKey$jscomp$5) {\n              case \"children\":\n                children$jscomp$4 = propValue$jscomp$5;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                innerHTML$jscomp$3 = propValue$jscomp$5;\n                break;\n              case \"action\":\n                formAction$jscomp$1 = propValue$jscomp$5;\n                break;\n              case \"encType\":\n                formEncType$jscomp$1 = propValue$jscomp$5;\n                break;\n              case \"method\":\n                formMethod$jscomp$1 = propValue$jscomp$5;\n                break;\n              case \"target\":\n                formTarget$jscomp$1 = propValue$jscomp$5;\n                break;\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$5,\n                  propValue$jscomp$5\n                );\n            }\n        }\n      var formData$jscomp$1 = null,\n        formActionName = null;\n      if (\"function\" === typeof formAction$jscomp$1) {\n        var customFields = getCustomFormFields(\n          resumableState,\n          formAction$jscomp$1\n        );\n        null !== customFields\n          ? ((formAction$jscomp$1 = customFields.action || \"\"),\n            (formEncType$jscomp$1 = customFields.encType),\n            (formMethod$jscomp$1 = customFields.method),\n            (formTarget$jscomp$1 = customFields.target),\n            (formData$jscomp$1 = customFields.data),\n            (formActionName = customFields.name))\n          : (target$jscomp$0.push(\n              attributeSeparator,\n              stringToChunk(\"action\"),\n              attributeAssign,\n              actionJavaScriptURL,\n              attributeEnd\n            ),\n            (formTarget$jscomp$1 =\n              formMethod$jscomp$1 =\n              formEncType$jscomp$1 =\n              formAction$jscomp$1 =\n                null),\n            injectFormReplayingRuntime(resumableState, renderState));\n      }\n      null != formAction$jscomp$1 &&\n        pushAttribute(target$jscomp$0, \"action\", formAction$jscomp$1);\n      null != formEncType$jscomp$1 &&\n        pushAttribute(target$jscomp$0, \"encType\", formEncType$jscomp$1);\n      null != formMethod$jscomp$1 &&\n        pushAttribute(target$jscomp$0, \"method\", formMethod$jscomp$1);\n      null != formTarget$jscomp$1 &&\n        pushAttribute(target$jscomp$0, \"target\", formTarget$jscomp$1);\n      target$jscomp$0.push(endOfStartTag);\n      null !== formActionName &&\n        (target$jscomp$0.push(startHiddenInputChunk),\n        pushStringAttribute(target$jscomp$0, \"name\", formActionName),\n        target$jscomp$0.push(endOfStartTagSelfClosing),\n        null != formData$jscomp$1 &&\n          formData$jscomp$1.forEach(pushAdditionalFormField, target$jscomp$0));\n      pushInnerHTML(target$jscomp$0, innerHTML$jscomp$3, children$jscomp$4);\n      if (\"string\" === typeof children$jscomp$4) {\n        target$jscomp$0.push(\n          stringToChunk(escapeTextForBrowser(children$jscomp$4))\n        );\n        var JSCompiler_inline_result$jscomp$1 = null;\n      } else JSCompiler_inline_result$jscomp$1 = children$jscomp$4;\n      return JSCompiler_inline_result$jscomp$1;\n    case \"menuitem\":\n      target$jscomp$0.push(startChunkForTag(\"menuitem\"));\n      for (var propKey$jscomp$6 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$6)) {\n          var propValue$jscomp$6 = props[propKey$jscomp$6];\n          if (null != propValue$jscomp$6)\n            switch (propKey$jscomp$6) {\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                throw Error(\n                  \"menuitems cannot have `children` nor `dangerouslySetInnerHTML`.\"\n                );\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$6,\n                  propValue$jscomp$6\n                );\n            }\n        }\n      target$jscomp$0.push(endOfStartTag);\n      return null;\n    case \"object\":\n      target$jscomp$0.push(startChunkForTag(\"object\"));\n      var children$jscomp$5 = null,\n        innerHTML$jscomp$4 = null,\n        propKey$jscomp$7;\n      for (propKey$jscomp$7 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$7)) {\n          var propValue$jscomp$7 = props[propKey$jscomp$7];\n          if (null != propValue$jscomp$7)\n            switch (propKey$jscomp$7) {\n              case \"children\":\n                children$jscomp$5 = propValue$jscomp$7;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                innerHTML$jscomp$4 = propValue$jscomp$7;\n                break;\n              case \"data\":\n                var sanitizedValue = sanitizeURL(\"\" + propValue$jscomp$7);\n                if (\"\" === sanitizedValue) break;\n                target$jscomp$0.push(\n                  attributeSeparator,\n                  stringToChunk(\"data\"),\n                  attributeAssign,\n                  stringToChunk(escapeTextForBrowser(sanitizedValue)),\n                  attributeEnd\n                );\n                break;\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$7,\n                  propValue$jscomp$7\n                );\n            }\n        }\n      target$jscomp$0.push(endOfStartTag);\n      pushInnerHTML(target$jscomp$0, innerHTML$jscomp$4, children$jscomp$5);\n      if (\"string\" === typeof children$jscomp$5) {\n        target$jscomp$0.push(\n          stringToChunk(escapeTextForBrowser(children$jscomp$5))\n        );\n        var JSCompiler_inline_result$jscomp$2 = null;\n      } else JSCompiler_inline_result$jscomp$2 = children$jscomp$5;\n      return JSCompiler_inline_result$jscomp$2;\n    case \"title\":\n      if (\n        3 === formatContext.insertionMode ||\n        formatContext.tagScope & 1 ||\n        null != props.itemProp\n      )\n        var JSCompiler_inline_result$jscomp$3 = pushTitleImpl(\n          target$jscomp$0,\n          props\n        );\n      else\n        isFallback\n          ? (JSCompiler_inline_result$jscomp$3 = null)\n          : (pushTitleImpl(renderState.hoistableChunks, props),\n            (JSCompiler_inline_result$jscomp$3 = void 0));\n      return JSCompiler_inline_result$jscomp$3;\n    case \"link\":\n      var rel = props.rel,\n        href = props.href,\n        precedence = props.precedence;\n      if (\n        3 === formatContext.insertionMode ||\n        formatContext.tagScope & 1 ||\n        null != props.itemProp ||\n        \"string\" !== typeof rel ||\n        \"string\" !== typeof href ||\n        \"\" === href\n      ) {\n        pushLinkImpl(target$jscomp$0, props);\n        var JSCompiler_inline_result$jscomp$4 = null;\n      } else if (\"stylesheet\" === props.rel)\n        if (\n          \"string\" !== typeof precedence ||\n          null != props.disabled ||\n          props.onLoad ||\n          props.onError\n        )\n          JSCompiler_inline_result$jscomp$4 = pushLinkImpl(\n            target$jscomp$0,\n            props\n          );\n        else {\n          var styleQueue = renderState.styles.get(precedence),\n            resourceState = resumableState.styleResources.hasOwnProperty(href)\n              ? resumableState.styleResources[href]\n              : void 0;\n          if (null !== resourceState) {\n            resumableState.styleResources[href] = null;\n            styleQueue ||\n              ((styleQueue = {\n                precedence: stringToChunk(escapeTextForBrowser(precedence)),\n                rules: [],\n                hrefs: [],\n                sheets: new Map()\n              }),\n              renderState.styles.set(precedence, styleQueue));\n            var resource = {\n              state: 0,\n              props: assign({}, props, {\n                \"data-precedence\": props.precedence,\n                precedence: null\n              })\n            };\n            if (resourceState) {\n              2 === resourceState.length &&\n                adoptPreloadCredentials(resource.props, resourceState);\n              var preloadResource = renderState.preloads.stylesheets.get(href);\n              preloadResource && 0 < preloadResource.length\n                ? (preloadResource.length = 0)\n                : (resource.state = 1);\n            }\n            styleQueue.sheets.set(href, resource);\n            hoistableState && hoistableState.stylesheets.add(resource);\n          } else if (styleQueue) {\n            var resource$9 = styleQueue.sheets.get(href);\n            resource$9 &&\n              hoistableState &&\n              hoistableState.stylesheets.add(resource$9);\n          }\n          textEmbedded && target$jscomp$0.push(textSeparator);\n          JSCompiler_inline_result$jscomp$4 = null;\n        }\n      else\n        props.onLoad || props.onError\n          ? (JSCompiler_inline_result$jscomp$4 = pushLinkImpl(\n              target$jscomp$0,\n              props\n            ))\n          : (textEmbedded && target$jscomp$0.push(textSeparator),\n            (JSCompiler_inline_result$jscomp$4 = isFallback\n              ? null\n              : pushLinkImpl(renderState.hoistableChunks, props)));\n      return JSCompiler_inline_result$jscomp$4;\n    case \"script\":\n      var asyncProp = props.async;\n      if (\n        \"string\" !== typeof props.src ||\n        !props.src ||\n        !asyncProp ||\n        \"function\" === typeof asyncProp ||\n        \"symbol\" === typeof asyncProp ||\n        props.onLoad ||\n        props.onError ||\n        3 === formatContext.insertionMode ||\n        formatContext.tagScope & 1 ||\n        null != props.itemProp\n      )\n        var JSCompiler_inline_result$jscomp$5 = pushScriptImpl(\n          target$jscomp$0,\n          props\n        );\n      else {\n        var key = props.src;\n        if (\"module\" === props.type) {\n          var resources = resumableState.moduleScriptResources;\n          var preloads = renderState.preloads.moduleScripts;\n        } else\n          (resources = resumableState.scriptResources),\n            (preloads = renderState.preloads.scripts);\n        var resourceState$jscomp$0 = resources.hasOwnProperty(key)\n          ? resources[key]\n          : void 0;\n        if (null !== resourceState$jscomp$0) {\n          resources[key] = null;\n          var scriptProps = props;\n          if (resourceState$jscomp$0) {\n            2 === resourceState$jscomp$0.length &&\n              ((scriptProps = assign({}, props)),\n              adoptPreloadCredentials(scriptProps, resourceState$jscomp$0));\n            var preloadResource$jscomp$0 = preloads.get(key);\n            preloadResource$jscomp$0 && (preloadResource$jscomp$0.length = 0);\n          }\n          var resource$jscomp$0 = [];\n          renderState.scripts.add(resource$jscomp$0);\n          pushScriptImpl(resource$jscomp$0, scriptProps);\n        }\n        textEmbedded && target$jscomp$0.push(textSeparator);\n        JSCompiler_inline_result$jscomp$5 = null;\n      }\n      return JSCompiler_inline_result$jscomp$5;\n    case \"style\":\n      var precedence$jscomp$0 = props.precedence,\n        href$jscomp$0 = props.href;\n      if (\n        3 === formatContext.insertionMode ||\n        formatContext.tagScope & 1 ||\n        null != props.itemProp ||\n        \"string\" !== typeof precedence$jscomp$0 ||\n        \"string\" !== typeof href$jscomp$0 ||\n        \"\" === href$jscomp$0\n      ) {\n        target$jscomp$0.push(startChunkForTag(\"style\"));\n        var children$jscomp$6 = null,\n          innerHTML$jscomp$5 = null,\n          propKey$jscomp$8;\n        for (propKey$jscomp$8 in props)\n          if (hasOwnProperty.call(props, propKey$jscomp$8)) {\n            var propValue$jscomp$8 = props[propKey$jscomp$8];\n            if (null != propValue$jscomp$8)\n              switch (propKey$jscomp$8) {\n                case \"children\":\n                  children$jscomp$6 = propValue$jscomp$8;\n                  break;\n                case \"dangerouslySetInnerHTML\":\n                  innerHTML$jscomp$5 = propValue$jscomp$8;\n                  break;\n                default:\n                  pushAttribute(\n                    target$jscomp$0,\n                    propKey$jscomp$8,\n                    propValue$jscomp$8\n                  );\n              }\n          }\n        target$jscomp$0.push(endOfStartTag);\n        var child = Array.isArray(children$jscomp$6)\n          ? 2 > children$jscomp$6.length\n            ? children$jscomp$6[0]\n            : null\n          : children$jscomp$6;\n        \"function\" !== typeof child &&\n          \"symbol\" !== typeof child &&\n          null !== child &&\n          void 0 !== child &&\n          target$jscomp$0.push(\n            stringToChunk((\"\" + child).replace(styleRegex, styleReplacer))\n          );\n        pushInnerHTML(target$jscomp$0, innerHTML$jscomp$5, children$jscomp$6);\n        target$jscomp$0.push(endChunkForTag(\"style\"));\n        var JSCompiler_inline_result$jscomp$6 = null;\n      } else {\n        var styleQueue$jscomp$0 = renderState.styles.get(precedence$jscomp$0);\n        if (\n          null !==\n          (resumableState.styleResources.hasOwnProperty(href$jscomp$0)\n            ? resumableState.styleResources[href$jscomp$0]\n            : void 0)\n        ) {\n          resumableState.styleResources[href$jscomp$0] = null;\n          styleQueue$jscomp$0\n            ? styleQueue$jscomp$0.hrefs.push(\n                stringToChunk(escapeTextForBrowser(href$jscomp$0))\n              )\n            : ((styleQueue$jscomp$0 = {\n                precedence: stringToChunk(\n                  escapeTextForBrowser(precedence$jscomp$0)\n                ),\n                rules: [],\n                hrefs: [stringToChunk(escapeTextForBrowser(href$jscomp$0))],\n                sheets: new Map()\n              }),\n              renderState.styles.set(precedence$jscomp$0, styleQueue$jscomp$0));\n          var target = styleQueue$jscomp$0.rules,\n            children$jscomp$7 = null,\n            innerHTML$jscomp$6 = null,\n            propKey$jscomp$9;\n          for (propKey$jscomp$9 in props)\n            if (hasOwnProperty.call(props, propKey$jscomp$9)) {\n              var propValue$jscomp$9 = props[propKey$jscomp$9];\n              if (null != propValue$jscomp$9)\n                switch (propKey$jscomp$9) {\n                  case \"children\":\n                    children$jscomp$7 = propValue$jscomp$9;\n                    break;\n                  case \"dangerouslySetInnerHTML\":\n                    innerHTML$jscomp$6 = propValue$jscomp$9;\n                }\n            }\n          var child$jscomp$0 = Array.isArray(children$jscomp$7)\n            ? 2 > children$jscomp$7.length\n              ? children$jscomp$7[0]\n              : null\n            : children$jscomp$7;\n          \"function\" !== typeof child$jscomp$0 &&\n            \"symbol\" !== typeof child$jscomp$0 &&\n            null !== child$jscomp$0 &&\n            void 0 !== child$jscomp$0 &&\n            target.push(\n              stringToChunk(\n                (\"\" + child$jscomp$0).replace(styleRegex, styleReplacer)\n              )\n            );\n          pushInnerHTML(target, innerHTML$jscomp$6, children$jscomp$7);\n        }\n        styleQueue$jscomp$0 &&\n          hoistableState &&\n          hoistableState.styles.add(styleQueue$jscomp$0);\n        textEmbedded && target$jscomp$0.push(textSeparator);\n        JSCompiler_inline_result$jscomp$6 = void 0;\n      }\n      return JSCompiler_inline_result$jscomp$6;\n    case \"meta\":\n      if (\n        3 === formatContext.insertionMode ||\n        formatContext.tagScope & 1 ||\n        null != props.itemProp\n      )\n        var JSCompiler_inline_result$jscomp$7 = pushSelfClosing(\n          target$jscomp$0,\n          props,\n          \"meta\"\n        );\n      else\n        textEmbedded && target$jscomp$0.push(textSeparator),\n          (JSCompiler_inline_result$jscomp$7 = isFallback\n            ? null\n            : \"string\" === typeof props.charSet\n              ? pushSelfClosing(renderState.charsetChunks, props, \"meta\")\n              : \"viewport\" === props.name\n                ? pushSelfClosing(renderState.viewportChunks, props, \"meta\")\n                : pushSelfClosing(renderState.hoistableChunks, props, \"meta\"));\n      return JSCompiler_inline_result$jscomp$7;\n    case \"listing\":\n    case \"pre\":\n      target$jscomp$0.push(startChunkForTag(type));\n      var children$jscomp$8 = null,\n        innerHTML$jscomp$7 = null,\n        propKey$jscomp$10;\n      for (propKey$jscomp$10 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$10)) {\n          var propValue$jscomp$10 = props[propKey$jscomp$10];\n          if (null != propValue$jscomp$10)\n            switch (propKey$jscomp$10) {\n              case \"children\":\n                children$jscomp$8 = propValue$jscomp$10;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                innerHTML$jscomp$7 = propValue$jscomp$10;\n                break;\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$10,\n                  propValue$jscomp$10\n                );\n            }\n        }\n      target$jscomp$0.push(endOfStartTag);\n      if (null != innerHTML$jscomp$7) {\n        if (null != children$jscomp$8)\n          throw Error(\n            \"Can only set one of `children` or `props.dangerouslySetInnerHTML`.\"\n          );\n        if (\n          \"object\" !== typeof innerHTML$jscomp$7 ||\n          !(\"__html\" in innerHTML$jscomp$7)\n        )\n          throw Error(\n            \"`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information.\"\n          );\n        var html = innerHTML$jscomp$7.__html;\n        null !== html &&\n          void 0 !== html &&\n          (\"string\" === typeof html && 0 < html.length && \"\\n\" === html[0]\n            ? target$jscomp$0.push(leadingNewline, stringToChunk(html))\n            : target$jscomp$0.push(stringToChunk(\"\" + html)));\n      }\n      \"string\" === typeof children$jscomp$8 &&\n        \"\\n\" === children$jscomp$8[0] &&\n        target$jscomp$0.push(leadingNewline);\n      return children$jscomp$8;\n    case \"img\":\n      var src = props.src,\n        srcSet = props.srcSet;\n      if (\n        !(\n          \"lazy\" === props.loading ||\n          (!src && !srcSet) ||\n          (\"string\" !== typeof src && null != src) ||\n          (\"string\" !== typeof srcSet && null != srcSet)\n        ) &&\n        \"low\" !== props.fetchPriority &&\n        !1 === !!(formatContext.tagScope & 3) &&\n        (\"string\" !== typeof src ||\n          \":\" !== src[4] ||\n          (\"d\" !== src[0] && \"D\" !== src[0]) ||\n          (\"a\" !== src[1] && \"A\" !== src[1]) ||\n          (\"t\" !== src[2] && \"T\" !== src[2]) ||\n          (\"a\" !== src[3] && \"A\" !== src[3])) &&\n        (\"string\" !== typeof srcSet ||\n          \":\" !== srcSet[4] ||\n          (\"d\" !== srcSet[0] && \"D\" !== srcSet[0]) ||\n          (\"a\" !== srcSet[1] && \"A\" !== srcSet[1]) ||\n          (\"t\" !== srcSet[2] && \"T\" !== srcSet[2]) ||\n          (\"a\" !== srcSet[3] && \"A\" !== srcSet[3]))\n      ) {\n        var sizes = \"string\" === typeof props.sizes ? props.sizes : void 0,\n          key$jscomp$0 = srcSet ? srcSet + \"\\n\" + (sizes || \"\") : src,\n          promotablePreloads = renderState.preloads.images,\n          resource$jscomp$1 = promotablePreloads.get(key$jscomp$0);\n        if (resource$jscomp$1) {\n          if (\n            \"high\" === props.fetchPriority ||\n            10 > renderState.highImagePreloads.size\n          )\n            promotablePreloads.delete(key$jscomp$0),\n              renderState.highImagePreloads.add(resource$jscomp$1);\n        } else if (\n          !resumableState.imageResources.hasOwnProperty(key$jscomp$0)\n        ) {\n          resumableState.imageResources[key$jscomp$0] = PRELOAD_NO_CREDS;\n          var input = props.crossOrigin;\n          var JSCompiler_inline_result$jscomp$8 =\n            \"string\" === typeof input\n              ? \"use-credentials\" === input\n                ? input\n                : \"\"\n              : void 0;\n          var headers = renderState.headers,\n            header;\n          headers &&\n          0 < headers.remainingCapacity &&\n          (\"high\" === props.fetchPriority ||\n            500 > headers.highImagePreloads.length) &&\n          ((header = getPreloadAsHeader(src, \"image\", {\n            imageSrcSet: props.srcSet,\n            imageSizes: props.sizes,\n            crossOrigin: JSCompiler_inline_result$jscomp$8,\n            integrity: props.integrity,\n            nonce: props.nonce,\n            type: props.type,\n            fetchPriority: props.fetchPriority,\n            referrerPolicy: props.refererPolicy\n          })),\n          0 <= (headers.remainingCapacity -= header.length + 2))\n            ? ((renderState.resets.image[key$jscomp$0] = PRELOAD_NO_CREDS),\n              headers.highImagePreloads && (headers.highImagePreloads += \", \"),\n              (headers.highImagePreloads += header))\n            : ((resource$jscomp$1 = []),\n              pushLinkImpl(resource$jscomp$1, {\n                rel: \"preload\",\n                as: \"image\",\n                href: srcSet ? void 0 : src,\n                imageSrcSet: srcSet,\n                imageSizes: sizes,\n                crossOrigin: JSCompiler_inline_result$jscomp$8,\n                integrity: props.integrity,\n                type: props.type,\n                fetchPriority: props.fetchPriority,\n                referrerPolicy: props.referrerPolicy\n              }),\n              \"high\" === props.fetchPriority ||\n              10 > renderState.highImagePreloads.size\n                ? renderState.highImagePreloads.add(resource$jscomp$1)\n                : (renderState.bulkPreloads.add(resource$jscomp$1),\n                  promotablePreloads.set(key$jscomp$0, resource$jscomp$1)));\n        }\n      }\n      return pushSelfClosing(target$jscomp$0, props, \"img\");\n    case \"base\":\n    case \"area\":\n    case \"br\":\n    case \"col\":\n    case \"embed\":\n    case \"hr\":\n    case \"keygen\":\n    case \"param\":\n    case \"source\":\n    case \"track\":\n    case \"wbr\":\n      return pushSelfClosing(target$jscomp$0, props, type);\n    case \"annotation-xml\":\n    case \"color-profile\":\n    case \"font-face\":\n    case \"font-face-src\":\n    case \"font-face-uri\":\n    case \"font-face-format\":\n    case \"font-face-name\":\n    case \"missing-glyph\":\n      break;\n    case \"head\":\n      if (2 > formatContext.insertionMode && null === renderState.headChunks) {\n        renderState.headChunks = [];\n        var JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(\n          renderState.headChunks,\n          props,\n          \"head\"\n        );\n      } else\n        JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(\n          target$jscomp$0,\n          props,\n          \"head\"\n        );\n      return JSCompiler_inline_result$jscomp$9;\n    case \"html\":\n      if (\n        0 === formatContext.insertionMode &&\n        null === renderState.htmlChunks\n      ) {\n        renderState.htmlChunks = [doctypeChunk];\n        var JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(\n          renderState.htmlChunks,\n          props,\n          \"html\"\n        );\n      } else\n        JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(\n          target$jscomp$0,\n          props,\n          \"html\"\n        );\n      return JSCompiler_inline_result$jscomp$10;\n    default:\n      if (-1 !== type.indexOf(\"-\")) {\n        target$jscomp$0.push(startChunkForTag(type));\n        var children$jscomp$9 = null,\n          innerHTML$jscomp$8 = null,\n          propKey$jscomp$11;\n        for (propKey$jscomp$11 in props)\n          if (hasOwnProperty.call(props, propKey$jscomp$11)) {\n            var propValue$jscomp$11 = props[propKey$jscomp$11];\n            if (null != propValue$jscomp$11) {\n              var attributeName = propKey$jscomp$11;\n              switch (propKey$jscomp$11) {\n                case \"children\":\n                  children$jscomp$9 = propValue$jscomp$11;\n                  break;\n                case \"dangerouslySetInnerHTML\":\n                  innerHTML$jscomp$8 = propValue$jscomp$11;\n                  break;\n                case \"style\":\n                  pushStyleAttribute(target$jscomp$0, propValue$jscomp$11);\n                  break;\n                case \"suppressContentEditableWarning\":\n                case \"suppressHydrationWarning\":\n                case \"ref\":\n                  break;\n                case \"className\":\n                  attributeName = \"class\";\n                default:\n                  if (\n                    isAttributeNameSafe(propKey$jscomp$11) &&\n                    \"function\" !== typeof propValue$jscomp$11 &&\n                    \"symbol\" !== typeof propValue$jscomp$11 &&\n                    !1 !== propValue$jscomp$11\n                  ) {\n                    if (!0 === propValue$jscomp$11) propValue$jscomp$11 = \"\";\n                    else if (\"object\" === typeof propValue$jscomp$11) continue;\n                    target$jscomp$0.push(\n                      attributeSeparator,\n                      stringToChunk(attributeName),\n                      attributeAssign,\n                      stringToChunk(escapeTextForBrowser(propValue$jscomp$11)),\n                      attributeEnd\n                    );\n                  }\n              }\n            }\n          }\n        target$jscomp$0.push(endOfStartTag);\n        pushInnerHTML(target$jscomp$0, innerHTML$jscomp$8, children$jscomp$9);\n        return children$jscomp$9;\n      }\n  }\n  return pushStartGenericElement(target$jscomp$0, props, type);\n}\nvar endTagCache = new Map();\nfunction endChunkForTag(tag) {\n  var chunk = endTagCache.get(tag);\n  void 0 === chunk &&\n    ((chunk = stringToPrecomputedChunk(\"</\" + tag + \">\")),\n    endTagCache.set(tag, chunk));\n  return chunk;\n}\nfunction writeBootstrap(destination, renderState) {\n  renderState = renderState.bootstrapChunks;\n  for (var i = 0; i < renderState.length - 1; i++)\n    writeChunk(destination, renderState[i]);\n  return i < renderState.length\n    ? ((i = renderState[i]),\n      (renderState.length = 0),\n      writeChunkAndReturn(destination, i))\n    : !0;\n}\nvar placeholder1 = stringToPrecomputedChunk('<template id=\"'),\n  placeholder2 = stringToPrecomputedChunk('\"></template>'),\n  startCompletedSuspenseBoundary = stringToPrecomputedChunk(\"\\x3c!--$--\\x3e\"),\n  startPendingSuspenseBoundary1 = stringToPrecomputedChunk(\n    '\\x3c!--$?--\\x3e<template id=\"'\n  ),\n  startPendingSuspenseBoundary2 = stringToPrecomputedChunk('\"></template>'),\n  startClientRenderedSuspenseBoundary =\n    stringToPrecomputedChunk(\"\\x3c!--$!--\\x3e\"),\n  endSuspenseBoundary = stringToPrecomputedChunk(\"\\x3c!--/$--\\x3e\"),\n  clientRenderedSuspenseBoundaryError1 = stringToPrecomputedChunk(\"<template\"),\n  clientRenderedSuspenseBoundaryErrorAttrInterstitial =\n    stringToPrecomputedChunk('\"'),\n  clientRenderedSuspenseBoundaryError1A =\n    stringToPrecomputedChunk(' data-dgst=\"');\nstringToPrecomputedChunk(' data-msg=\"');\nstringToPrecomputedChunk(' data-stck=\"');\nstringToPrecomputedChunk(' data-cstck=\"');\nvar clientRenderedSuspenseBoundaryError2 =\n  stringToPrecomputedChunk(\"></template>\");\nfunction writeStartPendingSuspenseBoundary(destination, renderState, id) {\n  writeChunk(destination, startPendingSuspenseBoundary1);\n  if (null === id)\n    throw Error(\n      \"An ID must have been assigned before we can complete the boundary.\"\n    );\n  writeChunk(destination, renderState.boundaryPrefix);\n  writeChunk(destination, stringToChunk(id.toString(16)));\n  return writeChunkAndReturn(destination, startPendingSuspenseBoundary2);\n}\nvar startSegmentHTML = stringToPrecomputedChunk('<div hidden id=\"'),\n  startSegmentHTML2 = stringToPrecomputedChunk('\">'),\n  endSegmentHTML = stringToPrecomputedChunk(\"</div>\"),\n  startSegmentSVG = stringToPrecomputedChunk(\n    '<svg aria-hidden=\"true\" style=\"display:none\" id=\"'\n  ),\n  startSegmentSVG2 = stringToPrecomputedChunk('\">'),\n  endSegmentSVG = stringToPrecomputedChunk(\"</svg>\"),\n  startSegmentMathML = stringToPrecomputedChunk(\n    '<math aria-hidden=\"true\" style=\"display:none\" id=\"'\n  ),\n  startSegmentMathML2 = stringToPrecomputedChunk('\">'),\n  endSegmentMathML = stringToPrecomputedChunk(\"</math>\"),\n  startSegmentTable = stringToPrecomputedChunk('<table hidden id=\"'),\n  startSegmentTable2 = stringToPrecomputedChunk('\">'),\n  endSegmentTable = stringToPrecomputedChunk(\"</table>\"),\n  startSegmentTableBody = stringToPrecomputedChunk('<table hidden><tbody id=\"'),\n  startSegmentTableBody2 = stringToPrecomputedChunk('\">'),\n  endSegmentTableBody = stringToPrecomputedChunk(\"</tbody></table>\"),\n  startSegmentTableRow = stringToPrecomputedChunk('<table hidden><tr id=\"'),\n  startSegmentTableRow2 = stringToPrecomputedChunk('\">'),\n  endSegmentTableRow = stringToPrecomputedChunk(\"</tr></table>\"),\n  startSegmentColGroup = stringToPrecomputedChunk(\n    '<table hidden><colgroup id=\"'\n  ),\n  startSegmentColGroup2 = stringToPrecomputedChunk('\">'),\n  endSegmentColGroup = stringToPrecomputedChunk(\"</colgroup></table>\");\nfunction writeStartSegment(destination, renderState, formatContext, id) {\n  switch (formatContext.insertionMode) {\n    case 0:\n    case 1:\n    case 2:\n      return (\n        writeChunk(destination, startSegmentHTML),\n        writeChunk(destination, renderState.segmentPrefix),\n        writeChunk(destination, stringToChunk(id.toString(16))),\n        writeChunkAndReturn(destination, startSegmentHTML2)\n      );\n    case 3:\n      return (\n        writeChunk(destination, startSegmentSVG),\n        writeChunk(destination, renderState.segmentPrefix),\n        writeChunk(destination, stringToChunk(id.toString(16))),\n        writeChunkAndReturn(destination, startSegmentSVG2)\n      );\n    case 4:\n      return (\n        writeChunk(destination, startSegmentMathML),\n        writeChunk(destination, renderState.segmentPrefix),\n        writeChunk(destination, stringToChunk(id.toString(16))),\n        writeChunkAndReturn(destination, startSegmentMathML2)\n      );\n    case 5:\n      return (\n        writeChunk(destination, startSegmentTable),\n        writeChunk(destination, renderState.segmentPrefix),\n        writeChunk(destination, stringToChunk(id.toString(16))),\n        writeChunkAndReturn(destination, startSegmentTable2)\n      );\n    case 6:\n      return (\n        writeChunk(destination, startSegmentTableBody),\n        writeChunk(destination, renderState.segmentPrefix),\n        writeChunk(destination, stringToChunk(id.toString(16))),\n        writeChunkAndReturn(destination, startSegmentTableBody2)\n      );\n    case 7:\n      return (\n        writeChunk(destination, startSegmentTableRow),\n        writeChunk(destination, renderState.segmentPrefix),\n        writeChunk(destination, stringToChunk(id.toString(16))),\n        writeChunkAndReturn(destination, startSegmentTableRow2)\n      );\n    case 8:\n      return (\n        writeChunk(destination, startSegmentColGroup),\n        writeChunk(destination, renderState.segmentPrefix),\n        writeChunk(destination, stringToChunk(id.toString(16))),\n        writeChunkAndReturn(destination, startSegmentColGroup2)\n      );\n    default:\n      throw Error(\"Unknown insertion mode. This is a bug in React.\");\n  }\n}\nfunction writeEndSegment(destination, formatContext) {\n  switch (formatContext.insertionMode) {\n    case 0:\n    case 1:\n    case 2:\n      return writeChunkAndReturn(destination, endSegmentHTML);\n    case 3:\n      return writeChunkAndReturn(destination, endSegmentSVG);\n    case 4:\n      return writeChunkAndReturn(destination, endSegmentMathML);\n    case 5:\n      return writeChunkAndReturn(destination, endSegmentTable);\n    case 6:\n      return writeChunkAndReturn(destination, endSegmentTableBody);\n    case 7:\n      return writeChunkAndReturn(destination, endSegmentTableRow);\n    case 8:\n      return writeChunkAndReturn(destination, endSegmentColGroup);\n    default:\n      throw Error(\"Unknown insertion mode. This is a bug in React.\");\n  }\n}\nvar completeSegmentScript1Full = stringToPrecomputedChunk(\n    '$RS=function(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS(\"'\n  ),\n  completeSegmentScript1Partial = stringToPrecomputedChunk('$RS(\"'),\n  completeSegmentScript2 = stringToPrecomputedChunk('\",\"'),\n  completeSegmentScriptEnd = stringToPrecomputedChunk('\")\\x3c/script>');\nstringToPrecomputedChunk('<template data-rsi=\"\" data-sid=\"');\nstringToPrecomputedChunk('\" data-pid=\"');\nvar completeBoundaryScript1Full = stringToPrecomputedChunk(\n    '$RC=function(b,c,e){c=document.getElementById(c);c.parentNode.removeChild(c);var a=document.getElementById(b);if(a){b=a.previousSibling;if(e)b.data=\"$!\",a.setAttribute(\"data-dgst\",e);else{e=b.parentNode;a=b.nextSibling;var f=0;do{if(a&&8===a.nodeType){var d=a.data;if(\"/$\"===d)if(0===f)break;else f--;else\"$\"!==d&&\"$?\"!==d&&\"$!\"!==d||f++}d=a.nextSibling;e.removeChild(a);a=d}while(a);for(;c.firstChild;)e.insertBefore(c.firstChild,a);b.data=\"$\"}b._reactRetry&&b._reactRetry()}};$RC(\"'\n  ),\n  completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC(\"'),\n  completeBoundaryWithStylesScript1FullBoth = stringToPrecomputedChunk(\n    '$RC=function(b,c,e){c=document.getElementById(c);c.parentNode.removeChild(c);var a=document.getElementById(b);if(a){b=a.previousSibling;if(e)b.data=\"$!\",a.setAttribute(\"data-dgst\",e);else{e=b.parentNode;a=b.nextSibling;var f=0;do{if(a&&8===a.nodeType){var d=a.data;if(\"/$\"===d)if(0===f)break;else f--;else\"$\"!==d&&\"$?\"!==d&&\"$!\"!==d||f++}d=a.nextSibling;e.removeChild(a);a=d}while(a);for(;c.firstChild;)e.insertBefore(c.firstChild,a);b.data=\"$\"}b._reactRetry&&b._reactRetry()}};$RM=new Map;\\n$RR=function(t,u,y){function v(n){this._p=null;n()}for(var w=$RC,p=$RM,q=new Map,r=document,g,b,h=r.querySelectorAll(\"link[data-precedence],style[data-precedence]\"),x=[],k=0;b=h[k++];)\"not all\"===b.getAttribute(\"media\")?x.push(b):(\"LINK\"===b.tagName&&p.set(b.getAttribute(\"href\"),b),q.set(b.dataset.precedence,g=b));b=0;h=[];var l,a;for(k=!0;;){if(k){var e=y[b++];if(!e){k=!1;b=0;continue}var c=!1,m=0;var d=e[m++];if(a=p.get(d)){var f=a._p;c=!0}else{a=r.createElement(\"link\");a.href=\\nd;a.rel=\"stylesheet\";for(a.dataset.precedence=l=e[m++];f=e[m++];)a.setAttribute(f,e[m++]);f=a._p=new Promise(function(n,z){a.onload=v.bind(a,n);a.onerror=v.bind(a,z)});p.set(d,a)}d=a.getAttribute(\"media\");!f||d&&!matchMedia(d).matches||h.push(f);if(c)continue}else{a=x[b++];if(!a)break;l=a.getAttribute(\"data-precedence\");a.removeAttribute(\"media\")}c=q.get(l)||g;c===g&&(g=a);q.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=r.head,c.insertBefore(a,c.firstChild))}Promise.all(h).then(w.bind(null,\\nt,u,\"\"),w.bind(null,t,u,\"Resource failed to load\"))};$RR(\"'\n  ),\n  completeBoundaryWithStylesScript1FullPartial = stringToPrecomputedChunk(\n    '$RM=new Map;\\n$RR=function(t,u,y){function v(n){this._p=null;n()}for(var w=$RC,p=$RM,q=new Map,r=document,g,b,h=r.querySelectorAll(\"link[data-precedence],style[data-precedence]\"),x=[],k=0;b=h[k++];)\"not all\"===b.getAttribute(\"media\")?x.push(b):(\"LINK\"===b.tagName&&p.set(b.getAttribute(\"href\"),b),q.set(b.dataset.precedence,g=b));b=0;h=[];var l,a;for(k=!0;;){if(k){var e=y[b++];if(!e){k=!1;b=0;continue}var c=!1,m=0;var d=e[m++];if(a=p.get(d)){var f=a._p;c=!0}else{a=r.createElement(\"link\");a.href=\\nd;a.rel=\"stylesheet\";for(a.dataset.precedence=l=e[m++];f=e[m++];)a.setAttribute(f,e[m++]);f=a._p=new Promise(function(n,z){a.onload=v.bind(a,n);a.onerror=v.bind(a,z)});p.set(d,a)}d=a.getAttribute(\"media\");!f||d&&!matchMedia(d).matches||h.push(f);if(c)continue}else{a=x[b++];if(!a)break;l=a.getAttribute(\"data-precedence\");a.removeAttribute(\"media\")}c=q.get(l)||g;c===g&&(g=a);q.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=r.head,c.insertBefore(a,c.firstChild))}Promise.all(h).then(w.bind(null,\\nt,u,\"\"),w.bind(null,t,u,\"Resource failed to load\"))};$RR(\"'\n  ),\n  completeBoundaryWithStylesScript1Partial = stringToPrecomputedChunk('$RR(\"'),\n  completeBoundaryScript2 = stringToPrecomputedChunk('\",\"'),\n  completeBoundaryScript3a = stringToPrecomputedChunk('\",'),\n  completeBoundaryScript3b = stringToPrecomputedChunk('\"'),\n  completeBoundaryScriptEnd = stringToPrecomputedChunk(\")\\x3c/script>\");\nstringToPrecomputedChunk('<template data-rci=\"\" data-bid=\"');\nstringToPrecomputedChunk('<template data-rri=\"\" data-bid=\"');\nstringToPrecomputedChunk('\" data-sid=\"');\nstringToPrecomputedChunk('\" data-sty=\"');\nvar clientRenderScript1Full = stringToPrecomputedChunk(\n    '$RX=function(b,c,d,e,f){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data=\"$!\",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),f&&(a.cstck=f),b._reactRetry&&b._reactRetry())};;$RX(\"'\n  ),\n  clientRenderScript1Partial = stringToPrecomputedChunk('$RX(\"'),\n  clientRenderScript1A = stringToPrecomputedChunk('\"'),\n  clientRenderErrorScriptArgInterstitial = stringToPrecomputedChunk(\",\"),\n  clientRenderScriptEnd = stringToPrecomputedChunk(\")\\x3c/script>\");\nstringToPrecomputedChunk('<template data-rxi=\"\" data-bid=\"');\nstringToPrecomputedChunk('\" data-dgst=\"');\nstringToPrecomputedChunk('\" data-msg=\"');\nstringToPrecomputedChunk('\" data-stck=\"');\nstringToPrecomputedChunk('\" data-cstck=\"');\nvar regexForJSStringsInInstructionScripts = /[<\\u2028\\u2029]/g;\nfunction escapeJSStringsForInstructionScripts(input) {\n  return JSON.stringify(input).replace(\n    regexForJSStringsInInstructionScripts,\n    function (match) {\n      switch (match) {\n        case \"<\":\n          return \"\\\\u003c\";\n        case \"\\u2028\":\n          return \"\\\\u2028\";\n        case \"\\u2029\":\n          return \"\\\\u2029\";\n        default:\n          throw Error(\n            \"escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React\"\n          );\n      }\n    }\n  );\n}\nvar regexForJSStringsInScripts = /[&><\\u2028\\u2029]/g;\nfunction escapeJSObjectForInstructionScripts(input) {\n  return JSON.stringify(input).replace(\n    regexForJSStringsInScripts,\n    function (match) {\n      switch (match) {\n        case \"&\":\n          return \"\\\\u0026\";\n        case \">\":\n          return \"\\\\u003e\";\n        case \"<\":\n          return \"\\\\u003c\";\n        case \"\\u2028\":\n          return \"\\\\u2028\";\n        case \"\\u2029\":\n          return \"\\\\u2029\";\n        default:\n          throw Error(\n            \"escapeJSObjectForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React\"\n          );\n      }\n    }\n  );\n}\nvar lateStyleTagResourceOpen1 = stringToPrecomputedChunk(\n    '<style media=\"not all\" data-precedence=\"'\n  ),\n  lateStyleTagResourceOpen2 = stringToPrecomputedChunk('\" data-href=\"'),\n  lateStyleTagResourceOpen3 = stringToPrecomputedChunk('\">'),\n  lateStyleTagTemplateClose = stringToPrecomputedChunk(\"</style>\"),\n  currentlyRenderingBoundaryHasStylesToHoist = !1,\n  destinationHasCapacity = !0;\nfunction flushStyleTagsLateForBoundary(styleQueue) {\n  var rules = styleQueue.rules,\n    hrefs = styleQueue.hrefs,\n    i = 0;\n  if (hrefs.length) {\n    writeChunk(this, lateStyleTagResourceOpen1);\n    writeChunk(this, styleQueue.precedence);\n    for (writeChunk(this, lateStyleTagResourceOpen2); i < hrefs.length - 1; i++)\n      writeChunk(this, hrefs[i]), writeChunk(this, spaceSeparator);\n    writeChunk(this, hrefs[i]);\n    writeChunk(this, lateStyleTagResourceOpen3);\n    for (i = 0; i < rules.length; i++) writeChunk(this, rules[i]);\n    destinationHasCapacity = writeChunkAndReturn(\n      this,\n      lateStyleTagTemplateClose\n    );\n    currentlyRenderingBoundaryHasStylesToHoist = !0;\n    rules.length = 0;\n    hrefs.length = 0;\n  }\n}\nfunction hasStylesToHoist(stylesheet) {\n  return 2 !== stylesheet.state\n    ? (currentlyRenderingBoundaryHasStylesToHoist = !0)\n    : !1;\n}\nfunction writeHoistablesForBoundary(destination, hoistableState, renderState) {\n  currentlyRenderingBoundaryHasStylesToHoist = !1;\n  destinationHasCapacity = !0;\n  hoistableState.styles.forEach(flushStyleTagsLateForBoundary, destination);\n  hoistableState.stylesheets.forEach(hasStylesToHoist);\n  currentlyRenderingBoundaryHasStylesToHoist &&\n    (renderState.stylesToHoist = !0);\n  return destinationHasCapacity;\n}\nfunction flushResource(resource) {\n  for (var i = 0; i < resource.length; i++) writeChunk(this, resource[i]);\n  resource.length = 0;\n}\nvar stylesheetFlushingQueue = [];\nfunction flushStyleInPreamble(stylesheet) {\n  pushLinkImpl(stylesheetFlushingQueue, stylesheet.props);\n  for (var i = 0; i < stylesheetFlushingQueue.length; i++)\n    writeChunk(this, stylesheetFlushingQueue[i]);\n  stylesheetFlushingQueue.length = 0;\n  stylesheet.state = 2;\n}\nvar styleTagResourceOpen1 = stringToPrecomputedChunk(\n    '<style data-precedence=\"'\n  ),\n  styleTagResourceOpen2 = stringToPrecomputedChunk('\" data-href=\"'),\n  spaceSeparator = stringToPrecomputedChunk(\" \"),\n  styleTagResourceOpen3 = stringToPrecomputedChunk('\">'),\n  styleTagResourceClose = stringToPrecomputedChunk(\"</style>\");\nfunction flushStylesInPreamble(styleQueue) {\n  var hasStylesheets = 0 < styleQueue.sheets.size;\n  styleQueue.sheets.forEach(flushStyleInPreamble, this);\n  styleQueue.sheets.clear();\n  var rules = styleQueue.rules,\n    hrefs = styleQueue.hrefs;\n  if (!hasStylesheets || hrefs.length) {\n    writeChunk(this, styleTagResourceOpen1);\n    writeChunk(this, styleQueue.precedence);\n    styleQueue = 0;\n    if (hrefs.length) {\n      for (\n        writeChunk(this, styleTagResourceOpen2);\n        styleQueue < hrefs.length - 1;\n        styleQueue++\n      )\n        writeChunk(this, hrefs[styleQueue]), writeChunk(this, spaceSeparator);\n      writeChunk(this, hrefs[styleQueue]);\n    }\n    writeChunk(this, styleTagResourceOpen3);\n    for (styleQueue = 0; styleQueue < rules.length; styleQueue++)\n      writeChunk(this, rules[styleQueue]);\n    writeChunk(this, styleTagResourceClose);\n    rules.length = 0;\n    hrefs.length = 0;\n  }\n}\nfunction preloadLateStyle(stylesheet) {\n  if (0 === stylesheet.state) {\n    stylesheet.state = 1;\n    var props = stylesheet.props;\n    pushLinkImpl(stylesheetFlushingQueue, {\n      rel: \"preload\",\n      as: \"style\",\n      href: stylesheet.props.href,\n      crossOrigin: props.crossOrigin,\n      fetchPriority: props.fetchPriority,\n      integrity: props.integrity,\n      media: props.media,\n      hrefLang: props.hrefLang,\n      referrerPolicy: props.referrerPolicy\n    });\n    for (\n      stylesheet = 0;\n      stylesheet < stylesheetFlushingQueue.length;\n      stylesheet++\n    )\n      writeChunk(this, stylesheetFlushingQueue[stylesheet]);\n    stylesheetFlushingQueue.length = 0;\n  }\n}\nfunction preloadLateStyles(styleQueue) {\n  styleQueue.sheets.forEach(preloadLateStyle, this);\n  styleQueue.sheets.clear();\n}\nvar arrayFirstOpenBracket = stringToPrecomputedChunk(\"[\"),\n  arraySubsequentOpenBracket = stringToPrecomputedChunk(\",[\"),\n  arrayInterstitial = stringToPrecomputedChunk(\",\"),\n  arrayCloseBracket = stringToPrecomputedChunk(\"]\");\nfunction writeStyleResourceDependenciesInJS(destination, hoistableState) {\n  writeChunk(destination, arrayFirstOpenBracket);\n  var nextArrayOpenBrackChunk = arrayFirstOpenBracket;\n  hoistableState.stylesheets.forEach(function (resource) {\n    if (2 !== resource.state)\n      if (3 === resource.state)\n        writeChunk(destination, nextArrayOpenBrackChunk),\n          writeChunk(\n            destination,\n            stringToChunk(\n              escapeJSObjectForInstructionScripts(\"\" + resource.props.href)\n            )\n          ),\n          writeChunk(destination, arrayCloseBracket),\n          (nextArrayOpenBrackChunk = arraySubsequentOpenBracket);\n      else {\n        writeChunk(destination, nextArrayOpenBrackChunk);\n        var precedence = resource.props[\"data-precedence\"],\n          props = resource.props,\n          coercedHref = sanitizeURL(\"\" + resource.props.href);\n        writeChunk(\n          destination,\n          stringToChunk(escapeJSObjectForInstructionScripts(coercedHref))\n        );\n        precedence = \"\" + precedence;\n        writeChunk(destination, arrayInterstitial);\n        writeChunk(\n          destination,\n          stringToChunk(escapeJSObjectForInstructionScripts(precedence))\n        );\n        for (var propKey in props)\n          if (\n            hasOwnProperty.call(props, propKey) &&\n            ((precedence = props[propKey]), null != precedence)\n          )\n            switch (propKey) {\n              case \"href\":\n              case \"rel\":\n              case \"precedence\":\n              case \"data-precedence\":\n                break;\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                throw Error(\n                  \"link is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\"\n                );\n              default:\n                writeStyleResourceAttributeInJS(\n                  destination,\n                  propKey,\n                  precedence\n                );\n            }\n        writeChunk(destination, arrayCloseBracket);\n        nextArrayOpenBrackChunk = arraySubsequentOpenBracket;\n        resource.state = 3;\n      }\n  });\n  writeChunk(destination, arrayCloseBracket);\n}\nfunction writeStyleResourceAttributeInJS(destination, name, value) {\n  var attributeName = name.toLowerCase();\n  switch (typeof value) {\n    case \"function\":\n    case \"symbol\":\n      return;\n  }\n  switch (name) {\n    case \"innerHTML\":\n    case \"dangerouslySetInnerHTML\":\n    case \"suppressContentEditableWarning\":\n    case \"suppressHydrationWarning\":\n    case \"style\":\n    case \"ref\":\n      return;\n    case \"className\":\n      attributeName = \"class\";\n      name = \"\" + value;\n      break;\n    case \"hidden\":\n      if (!1 === value) return;\n      name = \"\";\n      break;\n    case \"src\":\n    case \"href\":\n      value = sanitizeURL(value);\n      name = \"\" + value;\n      break;\n    default:\n      if (\n        (2 < name.length &&\n          (\"o\" === name[0] || \"O\" === name[0]) &&\n          (\"n\" === name[1] || \"N\" === name[1])) ||\n        !isAttributeNameSafe(name)\n      )\n        return;\n      name = \"\" + value;\n  }\n  writeChunk(destination, arrayInterstitial);\n  writeChunk(\n    destination,\n    stringToChunk(escapeJSObjectForInstructionScripts(attributeName))\n  );\n  writeChunk(destination, arrayInterstitial);\n  writeChunk(\n    destination,\n    stringToChunk(escapeJSObjectForInstructionScripts(name))\n  );\n}\nfunction createHoistableState() {\n  return { styles: new Set(), stylesheets: new Set() };\n}\nfunction prefetchDNS(href) {\n  var request = resolveRequest();\n  if (request) {\n    var resumableState = request.resumableState,\n      renderState = request.renderState;\n    if (\"string\" === typeof href && href) {\n      if (!resumableState.dnsResources.hasOwnProperty(href)) {\n        resumableState.dnsResources[href] = null;\n        resumableState = renderState.headers;\n        var header, JSCompiler_temp;\n        if (\n          (JSCompiler_temp =\n            resumableState && 0 < resumableState.remainingCapacity)\n        )\n          JSCompiler_temp =\n            ((header =\n              \"<\" +\n              (\"\" + href).replace(\n                regexForHrefInLinkHeaderURLContext,\n                escapeHrefForLinkHeaderURLContextReplacer\n              ) +\n              \">; rel=dns-prefetch\"),\n            0 <= (resumableState.remainingCapacity -= header.length + 2));\n        JSCompiler_temp\n          ? ((renderState.resets.dns[href] = null),\n            resumableState.preconnects && (resumableState.preconnects += \", \"),\n            (resumableState.preconnects += header))\n          : ((header = []),\n            pushLinkImpl(header, { href: href, rel: \"dns-prefetch\" }),\n            renderState.preconnects.add(header));\n      }\n      enqueueFlush(request);\n    }\n  } else previousDispatcher.D(href);\n}\nfunction preconnect(href, crossOrigin) {\n  var request = resolveRequest();\n  if (request) {\n    var resumableState = request.resumableState,\n      renderState = request.renderState;\n    if (\"string\" === typeof href && href) {\n      var bucket =\n        \"use-credentials\" === crossOrigin\n          ? \"credentials\"\n          : \"string\" === typeof crossOrigin\n            ? \"anonymous\"\n            : \"default\";\n      if (!resumableState.connectResources[bucket].hasOwnProperty(href)) {\n        resumableState.connectResources[bucket][href] = null;\n        resumableState = renderState.headers;\n        var header, JSCompiler_temp;\n        if (\n          (JSCompiler_temp =\n            resumableState && 0 < resumableState.remainingCapacity)\n        ) {\n          JSCompiler_temp =\n            \"<\" +\n            (\"\" + href).replace(\n              regexForHrefInLinkHeaderURLContext,\n              escapeHrefForLinkHeaderURLContextReplacer\n            ) +\n            \">; rel=preconnect\";\n          if (\"string\" === typeof crossOrigin) {\n            var escapedCrossOrigin = (\"\" + crossOrigin).replace(\n              regexForLinkHeaderQuotedParamValueContext,\n              escapeStringForLinkHeaderQuotedParamValueContextReplacer\n            );\n            JSCompiler_temp += '; crossorigin=\"' + escapedCrossOrigin + '\"';\n          }\n          JSCompiler_temp =\n            ((header = JSCompiler_temp),\n            0 <= (resumableState.remainingCapacity -= header.length + 2));\n        }\n        JSCompiler_temp\n          ? ((renderState.resets.connect[bucket][href] = null),\n            resumableState.preconnects && (resumableState.preconnects += \", \"),\n            (resumableState.preconnects += header))\n          : ((bucket = []),\n            pushLinkImpl(bucket, {\n              rel: \"preconnect\",\n              href: href,\n              crossOrigin: crossOrigin\n            }),\n            renderState.preconnects.add(bucket));\n      }\n      enqueueFlush(request);\n    }\n  } else previousDispatcher.C(href, crossOrigin);\n}\nfunction preload(href, as, options) {\n  var request = resolveRequest();\n  if (request) {\n    var resumableState = request.resumableState,\n      renderState = request.renderState;\n    if (as && href) {\n      switch (as) {\n        case \"image\":\n          if (options) {\n            var imageSrcSet = options.imageSrcSet;\n            var imageSizes = options.imageSizes;\n            var fetchPriority = options.fetchPriority;\n          }\n          var key = imageSrcSet\n            ? imageSrcSet + \"\\n\" + (imageSizes || \"\")\n            : href;\n          if (resumableState.imageResources.hasOwnProperty(key)) return;\n          resumableState.imageResources[key] = PRELOAD_NO_CREDS;\n          resumableState = renderState.headers;\n          var header;\n          resumableState &&\n          0 < resumableState.remainingCapacity &&\n          \"high\" === fetchPriority &&\n          ((header = getPreloadAsHeader(href, as, options)),\n          0 <= (resumableState.remainingCapacity -= header.length + 2))\n            ? ((renderState.resets.image[key] = PRELOAD_NO_CREDS),\n              resumableState.highImagePreloads &&\n                (resumableState.highImagePreloads += \", \"),\n              (resumableState.highImagePreloads += header))\n            : ((resumableState = []),\n              pushLinkImpl(\n                resumableState,\n                assign(\n                  { rel: \"preload\", href: imageSrcSet ? void 0 : href, as: as },\n                  options\n                )\n              ),\n              \"high\" === fetchPriority\n                ? renderState.highImagePreloads.add(resumableState)\n                : (renderState.bulkPreloads.add(resumableState),\n                  renderState.preloads.images.set(key, resumableState)));\n          break;\n        case \"style\":\n          if (resumableState.styleResources.hasOwnProperty(href)) return;\n          imageSrcSet = [];\n          pushLinkImpl(\n            imageSrcSet,\n            assign({ rel: \"preload\", href: href, as: as }, options)\n          );\n          resumableState.styleResources[href] =\n            !options ||\n            (\"string\" !== typeof options.crossOrigin &&\n              \"string\" !== typeof options.integrity)\n              ? PRELOAD_NO_CREDS\n              : [options.crossOrigin, options.integrity];\n          renderState.preloads.stylesheets.set(href, imageSrcSet);\n          renderState.bulkPreloads.add(imageSrcSet);\n          break;\n        case \"script\":\n          if (resumableState.scriptResources.hasOwnProperty(href)) return;\n          imageSrcSet = [];\n          renderState.preloads.scripts.set(href, imageSrcSet);\n          renderState.bulkPreloads.add(imageSrcSet);\n          pushLinkImpl(\n            imageSrcSet,\n            assign({ rel: \"preload\", href: href, as: as }, options)\n          );\n          resumableState.scriptResources[href] =\n            !options ||\n            (\"string\" !== typeof options.crossOrigin &&\n              \"string\" !== typeof options.integrity)\n              ? PRELOAD_NO_CREDS\n              : [options.crossOrigin, options.integrity];\n          break;\n        default:\n          if (resumableState.unknownResources.hasOwnProperty(as)) {\n            if (\n              ((imageSrcSet = resumableState.unknownResources[as]),\n              imageSrcSet.hasOwnProperty(href))\n            )\n              return;\n          } else\n            (imageSrcSet = {}),\n              (resumableState.unknownResources[as] = imageSrcSet);\n          imageSrcSet[href] = PRELOAD_NO_CREDS;\n          if (\n            (resumableState = renderState.headers) &&\n            0 < resumableState.remainingCapacity &&\n            \"font\" === as &&\n            ((key = getPreloadAsHeader(href, as, options)),\n            0 <= (resumableState.remainingCapacity -= key.length + 2))\n          )\n            (renderState.resets.font[href] = PRELOAD_NO_CREDS),\n              resumableState.fontPreloads &&\n                (resumableState.fontPreloads += \", \"),\n              (resumableState.fontPreloads += key);\n          else\n            switch (\n              ((resumableState = []),\n              (href = assign({ rel: \"preload\", href: href, as: as }, options)),\n              pushLinkImpl(resumableState, href),\n              as)\n            ) {\n              case \"font\":\n                renderState.fontPreloads.add(resumableState);\n                break;\n              default:\n                renderState.bulkPreloads.add(resumableState);\n            }\n      }\n      enqueueFlush(request);\n    }\n  } else previousDispatcher.L(href, as, options);\n}\nfunction preloadModule(href, options) {\n  var request = resolveRequest();\n  if (request) {\n    var resumableState = request.resumableState,\n      renderState = request.renderState;\n    if (href) {\n      var as =\n        options && \"string\" === typeof options.as ? options.as : \"script\";\n      switch (as) {\n        case \"script\":\n          if (resumableState.moduleScriptResources.hasOwnProperty(href)) return;\n          as = [];\n          resumableState.moduleScriptResources[href] =\n            !options ||\n            (\"string\" !== typeof options.crossOrigin &&\n              \"string\" !== typeof options.integrity)\n              ? PRELOAD_NO_CREDS\n              : [options.crossOrigin, options.integrity];\n          renderState.preloads.moduleScripts.set(href, as);\n          break;\n        default:\n          if (resumableState.moduleUnknownResources.hasOwnProperty(as)) {\n            var resources = resumableState.unknownResources[as];\n            if (resources.hasOwnProperty(href)) return;\n          } else\n            (resources = {}),\n              (resumableState.moduleUnknownResources[as] = resources);\n          as = [];\n          resources[href] = PRELOAD_NO_CREDS;\n      }\n      pushLinkImpl(as, assign({ rel: \"modulepreload\", href: href }, options));\n      renderState.bulkPreloads.add(as);\n      enqueueFlush(request);\n    }\n  } else previousDispatcher.m(href, options);\n}\nfunction preinitStyle(href, precedence, options) {\n  var request = resolveRequest();\n  if (request) {\n    var resumableState = request.resumableState,\n      renderState = request.renderState;\n    if (href) {\n      precedence = precedence || \"default\";\n      var styleQueue = renderState.styles.get(precedence),\n        resourceState = resumableState.styleResources.hasOwnProperty(href)\n          ? resumableState.styleResources[href]\n          : void 0;\n      null !== resourceState &&\n        ((resumableState.styleResources[href] = null),\n        styleQueue ||\n          ((styleQueue = {\n            precedence: stringToChunk(escapeTextForBrowser(precedence)),\n            rules: [],\n            hrefs: [],\n            sheets: new Map()\n          }),\n          renderState.styles.set(precedence, styleQueue)),\n        (precedence = {\n          state: 0,\n          props: assign(\n            { rel: \"stylesheet\", href: href, \"data-precedence\": precedence },\n            options\n          )\n        }),\n        resourceState &&\n          (2 === resourceState.length &&\n            adoptPreloadCredentials(precedence.props, resourceState),\n          (renderState = renderState.preloads.stylesheets.get(href)) &&\n          0 < renderState.length\n            ? (renderState.length = 0)\n            : (precedence.state = 1)),\n        styleQueue.sheets.set(href, precedence),\n        enqueueFlush(request));\n    }\n  } else previousDispatcher.S(href, precedence, options);\n}\nfunction preinitScript(src, options) {\n  var request = resolveRequest();\n  if (request) {\n    var resumableState = request.resumableState,\n      renderState = request.renderState;\n    if (src) {\n      var resourceState = resumableState.scriptResources.hasOwnProperty(src)\n        ? resumableState.scriptResources[src]\n        : void 0;\n      null !== resourceState &&\n        ((resumableState.scriptResources[src] = null),\n        (options = assign({ src: src, async: !0 }, options)),\n        resourceState &&\n          (2 === resourceState.length &&\n            adoptPreloadCredentials(options, resourceState),\n          (src = renderState.preloads.scripts.get(src))) &&\n          (src.length = 0),\n        (src = []),\n        renderState.scripts.add(src),\n        pushScriptImpl(src, options),\n        enqueueFlush(request));\n    }\n  } else previousDispatcher.X(src, options);\n}\nfunction preinitModuleScript(src, options) {\n  var request = resolveRequest();\n  if (request) {\n    var resumableState = request.resumableState,\n      renderState = request.renderState;\n    if (src) {\n      var resourceState = resumableState.moduleScriptResources.hasOwnProperty(\n        src\n      )\n        ? resumableState.moduleScriptResources[src]\n        : void 0;\n      null !== resourceState &&\n        ((resumableState.moduleScriptResources[src] = null),\n        (options = assign({ src: src, type: \"module\", async: !0 }, options)),\n        resourceState &&\n          (2 === resourceState.length &&\n            adoptPreloadCredentials(options, resourceState),\n          (src = renderState.preloads.moduleScripts.get(src))) &&\n          (src.length = 0),\n        (src = []),\n        renderState.scripts.add(src),\n        pushScriptImpl(src, options),\n        enqueueFlush(request));\n    }\n  } else previousDispatcher.M(src, options);\n}\nfunction adoptPreloadCredentials(target, preloadState) {\n  null == target.crossOrigin && (target.crossOrigin = preloadState[0]);\n  null == target.integrity && (target.integrity = preloadState[1]);\n}\nfunction getPreloadAsHeader(href, as, params) {\n  href = (\"\" + href).replace(\n    regexForHrefInLinkHeaderURLContext,\n    escapeHrefForLinkHeaderURLContextReplacer\n  );\n  as = (\"\" + as).replace(\n    regexForLinkHeaderQuotedParamValueContext,\n    escapeStringForLinkHeaderQuotedParamValueContextReplacer\n  );\n  as = \"<\" + href + '>; rel=preload; as=\"' + as + '\"';\n  for (var paramName in params)\n    hasOwnProperty.call(params, paramName) &&\n      ((href = params[paramName]),\n      \"string\" === typeof href &&\n        (as +=\n          \"; \" +\n          paramName.toLowerCase() +\n          '=\"' +\n          (\"\" + href).replace(\n            regexForLinkHeaderQuotedParamValueContext,\n            escapeStringForLinkHeaderQuotedParamValueContextReplacer\n          ) +\n          '\"'));\n  return as;\n}\nvar regexForHrefInLinkHeaderURLContext = /[<>\\r\\n]/g;\nfunction escapeHrefForLinkHeaderURLContextReplacer(match) {\n  switch (match) {\n    case \"<\":\n      return \"%3C\";\n    case \">\":\n      return \"%3E\";\n    case \"\\n\":\n      return \"%0A\";\n    case \"\\r\":\n      return \"%0D\";\n    default:\n      throw Error(\n        \"escapeLinkHrefForHeaderContextReplacer encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React\"\n      );\n  }\n}\nvar regexForLinkHeaderQuotedParamValueContext = /[\"';,\\r\\n]/g;\nfunction escapeStringForLinkHeaderQuotedParamValueContextReplacer(match) {\n  switch (match) {\n    case '\"':\n      return \"%22\";\n    case \"'\":\n      return \"%27\";\n    case \";\":\n      return \"%3B\";\n    case \",\":\n      return \"%2C\";\n    case \"\\n\":\n      return \"%0A\";\n    case \"\\r\":\n      return \"%0D\";\n    default:\n      throw Error(\n        \"escapeStringForLinkHeaderQuotedParamValueContextReplacer encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React\"\n      );\n  }\n}\nfunction hoistStyleQueueDependency(styleQueue) {\n  this.styles.add(styleQueue);\n}\nfunction hoistStylesheetDependency(stylesheet) {\n  this.stylesheets.add(stylesheet);\n}\nvar bind = Function.prototype.bind,\n  supportsRequestStorage = \"function\" === typeof AsyncLocalStorage,\n  requestStorage = supportsRequestStorage ? new AsyncLocalStorage() : null,\n  REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\nfunction getComponentNameFromType(type) {\n  if (null == type) return null;\n  if (\"function\" === typeof type)\n    return type.$$typeof === REACT_CLIENT_REFERENCE\n      ? null\n      : type.displayName || type.name || null;\n  if (\"string\" === typeof type) return type;\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return \"Fragment\";\n    case REACT_PORTAL_TYPE:\n      return \"Portal\";\n    case REACT_PROFILER_TYPE:\n      return \"Profiler\";\n    case REACT_STRICT_MODE_TYPE:\n      return \"StrictMode\";\n    case REACT_SUSPENSE_TYPE:\n      return \"Suspense\";\n    case REACT_SUSPENSE_LIST_TYPE:\n      return \"SuspenseList\";\n  }\n  if (\"object\" === typeof type)\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        return (type.displayName || \"Context\") + \".Provider\";\n      case REACT_CONSUMER_TYPE:\n        return (type._context.displayName || \"Context\") + \".Consumer\";\n      case REACT_FORWARD_REF_TYPE:\n        var innerType = type.render;\n        type = type.displayName;\n        type ||\n          ((type = innerType.displayName || innerType.name || \"\"),\n          (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n        return type;\n      case REACT_MEMO_TYPE:\n        return (\n          (innerType = type.displayName || null),\n          null !== innerType\n            ? innerType\n            : getComponentNameFromType(type.type) || \"Memo\"\n        );\n      case REACT_LAZY_TYPE:\n        innerType = type._payload;\n        type = type._init;\n        try {\n          return getComponentNameFromType(type(innerType));\n        } catch (x) {}\n    }\n  return null;\n}\nvar emptyContextObject = {},\n  currentActiveSnapshot = null;\nfunction popToNearestCommonAncestor(prev, next) {\n  if (prev !== next) {\n    prev.context._currentValue = prev.parentValue;\n    prev = prev.parent;\n    var parentNext = next.parent;\n    if (null === prev) {\n      if (null !== parentNext)\n        throw Error(\n          \"The stacks must reach the root at the same time. This is a bug in React.\"\n        );\n    } else {\n      if (null === parentNext)\n        throw Error(\n          \"The stacks must reach the root at the same time. This is a bug in React.\"\n        );\n      popToNearestCommonAncestor(prev, parentNext);\n    }\n    next.context._currentValue = next.value;\n  }\n}\nfunction popAllPrevious(prev) {\n  prev.context._currentValue = prev.parentValue;\n  prev = prev.parent;\n  null !== prev && popAllPrevious(prev);\n}\nfunction pushAllNext(next) {\n  var parentNext = next.parent;\n  null !== parentNext && pushAllNext(parentNext);\n  next.context._currentValue = next.value;\n}\nfunction popPreviousToCommonLevel(prev, next) {\n  prev.context._currentValue = prev.parentValue;\n  prev = prev.parent;\n  if (null === prev)\n    throw Error(\n      \"The depth must equal at least at zero before reaching the root. This is a bug in React.\"\n    );\n  prev.depth === next.depth\n    ? popToNearestCommonAncestor(prev, next)\n    : popPreviousToCommonLevel(prev, next);\n}\nfunction popNextToCommonLevel(prev, next) {\n  var parentNext = next.parent;\n  if (null === parentNext)\n    throw Error(\n      \"The depth must equal at least at zero before reaching the root. This is a bug in React.\"\n    );\n  prev.depth === parentNext.depth\n    ? popToNearestCommonAncestor(prev, parentNext)\n    : popNextToCommonLevel(prev, parentNext);\n  next.context._currentValue = next.value;\n}\nfunction switchContext(newSnapshot) {\n  var prev = currentActiveSnapshot;\n  prev !== newSnapshot &&\n    (null === prev\n      ? pushAllNext(newSnapshot)\n      : null === newSnapshot\n        ? popAllPrevious(prev)\n        : prev.depth === newSnapshot.depth\n          ? popToNearestCommonAncestor(prev, newSnapshot)\n          : prev.depth > newSnapshot.depth\n            ? popPreviousToCommonLevel(prev, newSnapshot)\n            : popNextToCommonLevel(prev, newSnapshot),\n    (currentActiveSnapshot = newSnapshot));\n}\nvar classComponentUpdater = {\n    isMounted: function () {\n      return !1;\n    },\n    enqueueSetState: function (inst, payload) {\n      inst = inst._reactInternals;\n      null !== inst.queue && inst.queue.push(payload);\n    },\n    enqueueReplaceState: function (inst, payload) {\n      inst = inst._reactInternals;\n      inst.replace = !0;\n      inst.queue = [payload];\n    },\n    enqueueForceUpdate: function () {}\n  },\n  emptyTreeContext = { id: 1, overflow: \"\" };\nfunction pushTreeContext(baseContext, totalChildren, index) {\n  var baseIdWithLeadingBit = baseContext.id;\n  baseContext = baseContext.overflow;\n  var baseLength = 32 - clz32(baseIdWithLeadingBit) - 1;\n  baseIdWithLeadingBit &= ~(1 << baseLength);\n  index += 1;\n  var length = 32 - clz32(totalChildren) + baseLength;\n  if (30 < length) {\n    var numberOfOverflowBits = baseLength - (baseLength % 5);\n    length = (\n      baseIdWithLeadingBit &\n      ((1 << numberOfOverflowBits) - 1)\n    ).toString(32);\n    baseIdWithLeadingBit >>= numberOfOverflowBits;\n    baseLength -= numberOfOverflowBits;\n    return {\n      id:\n        (1 << (32 - clz32(totalChildren) + baseLength)) |\n        (index << baseLength) |\n        baseIdWithLeadingBit,\n      overflow: length + baseContext\n    };\n  }\n  return {\n    id: (1 << length) | (index << baseLength) | baseIdWithLeadingBit,\n    overflow: baseContext\n  };\n}\nvar clz32 = Math.clz32 ? Math.clz32 : clz32Fallback,\n  log = Math.log,\n  LN2 = Math.LN2;\nfunction clz32Fallback(x) {\n  x >>>= 0;\n  return 0 === x ? 32 : (31 - ((log(x) / LN2) | 0)) | 0;\n}\nvar SuspenseException = Error(\n  \"Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\\n\\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`\"\n);\nfunction noop$2() {}\nfunction trackUsedThenable(thenableState, thenable, index) {\n  index = thenableState[index];\n  void 0 === index\n    ? thenableState.push(thenable)\n    : index !== thenable && (thenable.then(noop$2, noop$2), (thenable = index));\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      \"string\" === typeof thenable.status\n        ? thenable.then(noop$2, noop$2)\n        : ((thenableState = thenable),\n          (thenableState.status = \"pending\"),\n          thenableState.then(\n            function (fulfilledValue) {\n              if (\"pending\" === thenable.status) {\n                var fulfilledThenable = thenable;\n                fulfilledThenable.status = \"fulfilled\";\n                fulfilledThenable.value = fulfilledValue;\n              }\n            },\n            function (error) {\n              if (\"pending\" === thenable.status) {\n                var rejectedThenable = thenable;\n                rejectedThenable.status = \"rejected\";\n                rejectedThenable.reason = error;\n              }\n            }\n          ));\n      switch (thenable.status) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n      suspendedThenable = thenable;\n      throw SuspenseException;\n  }\n}\nvar suspendedThenable = null;\nfunction getSuspendedThenable() {\n  if (null === suspendedThenable)\n    throw Error(\n      \"Expected a suspended thenable. This is a bug in React. Please file an issue.\"\n    );\n  var thenable = suspendedThenable;\n  suspendedThenable = null;\n  return thenable;\n}\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  currentlyRenderingComponent = null,\n  currentlyRenderingTask = null,\n  currentlyRenderingRequest = null,\n  currentlyRenderingKeyPath = null,\n  firstWorkInProgressHook = null,\n  workInProgressHook = null,\n  isReRender = !1,\n  didScheduleRenderPhaseUpdate = !1,\n  localIdCounter = 0,\n  actionStateCounter = 0,\n  actionStateMatchingIndex = -1,\n  thenableIndexCounter = 0,\n  thenableState = null,\n  renderPhaseUpdates = null,\n  numberOfReRenders = 0;\nfunction resolveCurrentlyRenderingComponent() {\n  if (null === currentlyRenderingComponent)\n    throw Error(\n      \"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.\"\n    );\n  return currentlyRenderingComponent;\n}\nfunction createHook() {\n  if (0 < numberOfReRenders)\n    throw Error(\"Rendered more hooks than during the previous render\");\n  return { memoizedState: null, queue: null, next: null };\n}\nfunction createWorkInProgressHook() {\n  null === workInProgressHook\n    ? null === firstWorkInProgressHook\n      ? ((isReRender = !1),\n        (firstWorkInProgressHook = workInProgressHook = createHook()))\n      : ((isReRender = !0), (workInProgressHook = firstWorkInProgressHook))\n    : null === workInProgressHook.next\n      ? ((isReRender = !1),\n        (workInProgressHook = workInProgressHook.next = createHook()))\n      : ((isReRender = !0), (workInProgressHook = workInProgressHook.next));\n  return workInProgressHook;\n}\nfunction getThenableStateAfterSuspending() {\n  var state = thenableState;\n  thenableState = null;\n  return state;\n}\nfunction resetHooksState() {\n  currentlyRenderingKeyPath =\n    currentlyRenderingRequest =\n    currentlyRenderingTask =\n    currentlyRenderingComponent =\n      null;\n  didScheduleRenderPhaseUpdate = !1;\n  firstWorkInProgressHook = null;\n  numberOfReRenders = 0;\n  workInProgressHook = renderPhaseUpdates = null;\n}\nfunction basicStateReducer(state, action) {\n  return \"function\" === typeof action ? action(state) : action;\n}\nfunction useReducer(reducer, initialArg, init) {\n  currentlyRenderingComponent = resolveCurrentlyRenderingComponent();\n  workInProgressHook = createWorkInProgressHook();\n  if (isReRender) {\n    var queue = workInProgressHook.queue;\n    initialArg = queue.dispatch;\n    if (\n      null !== renderPhaseUpdates &&\n      ((init = renderPhaseUpdates.get(queue)), void 0 !== init)\n    ) {\n      renderPhaseUpdates.delete(queue);\n      queue = workInProgressHook.memoizedState;\n      do (queue = reducer(queue, init.action)), (init = init.next);\n      while (null !== init);\n      workInProgressHook.memoizedState = queue;\n      return [queue, initialArg];\n    }\n    return [workInProgressHook.memoizedState, initialArg];\n  }\n  reducer =\n    reducer === basicStateReducer\n      ? \"function\" === typeof initialArg\n        ? initialArg()\n        : initialArg\n      : void 0 !== init\n        ? init(initialArg)\n        : initialArg;\n  workInProgressHook.memoizedState = reducer;\n  reducer = workInProgressHook.queue = { last: null, dispatch: null };\n  reducer = reducer.dispatch = dispatchAction.bind(\n    null,\n    currentlyRenderingComponent,\n    reducer\n  );\n  return [workInProgressHook.memoizedState, reducer];\n}\nfunction useMemo(nextCreate, deps) {\n  currentlyRenderingComponent = resolveCurrentlyRenderingComponent();\n  workInProgressHook = createWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  if (null !== workInProgressHook) {\n    var prevState = workInProgressHook.memoizedState;\n    if (null !== prevState && null !== deps) {\n      var prevDeps = prevState[1];\n      a: if (null === prevDeps) prevDeps = !1;\n      else {\n        for (var i = 0; i < prevDeps.length && i < deps.length; i++)\n          if (!objectIs(deps[i], prevDeps[i])) {\n            prevDeps = !1;\n            break a;\n          }\n        prevDeps = !0;\n      }\n      if (prevDeps) return prevState[0];\n    }\n  }\n  nextCreate = nextCreate();\n  workInProgressHook.memoizedState = [nextCreate, deps];\n  return nextCreate;\n}\nfunction dispatchAction(componentIdentity, queue, action) {\n  if (25 <= numberOfReRenders)\n    throw Error(\n      \"Too many re-renders. React limits the number of renders to prevent an infinite loop.\"\n    );\n  if (componentIdentity === currentlyRenderingComponent)\n    if (\n      ((didScheduleRenderPhaseUpdate = !0),\n      (componentIdentity = { action: action, next: null }),\n      null === renderPhaseUpdates && (renderPhaseUpdates = new Map()),\n      (action = renderPhaseUpdates.get(queue)),\n      void 0 === action)\n    )\n      renderPhaseUpdates.set(queue, componentIdentity);\n    else {\n      for (queue = action; null !== queue.next; ) queue = queue.next;\n      queue.next = componentIdentity;\n    }\n}\nfunction unsupportedStartTransition() {\n  throw Error(\"startTransition cannot be called during server rendering.\");\n}\nfunction unsupportedSetOptimisticState() {\n  throw Error(\"Cannot update optimistic state while rendering.\");\n}\nfunction useActionState(action, initialState, permalink) {\n  resolveCurrentlyRenderingComponent();\n  var actionStateHookIndex = actionStateCounter++,\n    request = currentlyRenderingRequest;\n  if (\"function\" === typeof action.$$FORM_ACTION) {\n    var nextPostbackStateKey = null,\n      componentKeyPath = currentlyRenderingKeyPath;\n    request = request.formState;\n    var isSignatureEqual = action.$$IS_SIGNATURE_EQUAL;\n    if (null !== request && \"function\" === typeof isSignatureEqual) {\n      var postbackKey = request[1];\n      isSignatureEqual.call(action, request[2], request[3]) &&\n        ((nextPostbackStateKey =\n          void 0 !== permalink\n            ? \"p\" + permalink\n            : \"k\" +\n              murmurhash3_32_gc(\n                JSON.stringify([componentKeyPath, null, actionStateHookIndex]),\n                0\n              )),\n        postbackKey === nextPostbackStateKey &&\n          ((actionStateMatchingIndex = actionStateHookIndex),\n          (initialState = request[0])));\n    }\n    var boundAction = action.bind(null, initialState);\n    action = function (payload) {\n      boundAction(payload);\n    };\n    \"function\" === typeof boundAction.$$FORM_ACTION &&\n      (action.$$FORM_ACTION = function (prefix) {\n        prefix = boundAction.$$FORM_ACTION(prefix);\n        void 0 !== permalink &&\n          ((permalink += \"\"), (prefix.action = permalink));\n        var formData = prefix.data;\n        formData &&\n          (null === nextPostbackStateKey &&\n            (nextPostbackStateKey =\n              void 0 !== permalink\n                ? \"p\" + permalink\n                : \"k\" +\n                  murmurhash3_32_gc(\n                    JSON.stringify([\n                      componentKeyPath,\n                      null,\n                      actionStateHookIndex\n                    ]),\n                    0\n                  )),\n          formData.append(\"$ACTION_KEY\", nextPostbackStateKey));\n        return prefix;\n      });\n    return [initialState, action, !1];\n  }\n  var boundAction$22 = action.bind(null, initialState);\n  return [\n    initialState,\n    function (payload) {\n      boundAction$22(payload);\n    },\n    !1\n  ];\n}\nfunction unwrapThenable(thenable) {\n  var index = thenableIndexCounter;\n  thenableIndexCounter += 1;\n  null === thenableState && (thenableState = []);\n  return trackUsedThenable(thenableState, thenable, index);\n}\nfunction unsupportedRefresh() {\n  throw Error(\"Cache cannot be refreshed during server rendering.\");\n}\nfunction noop$1() {}\nvar HooksDispatcher = {\n  readContext: function (context) {\n    return context._currentValue;\n  },\n  use: function (usable) {\n    if (null !== usable && \"object\" === typeof usable) {\n      if (\"function\" === typeof usable.then) return unwrapThenable(usable);\n      if (usable.$$typeof === REACT_CONTEXT_TYPE) return usable._currentValue;\n    }\n    throw Error(\"An unsupported type was passed to use(): \" + String(usable));\n  },\n  useContext: function (context) {\n    resolveCurrentlyRenderingComponent();\n    return context._currentValue;\n  },\n  useMemo: useMemo,\n  useReducer: useReducer,\n  useRef: function (initialValue) {\n    currentlyRenderingComponent = resolveCurrentlyRenderingComponent();\n    workInProgressHook = createWorkInProgressHook();\n    var previousRef = workInProgressHook.memoizedState;\n    return null === previousRef\n      ? ((initialValue = { current: initialValue }),\n        (workInProgressHook.memoizedState = initialValue))\n      : previousRef;\n  },\n  useState: function (initialState) {\n    return useReducer(basicStateReducer, initialState);\n  },\n  useInsertionEffect: noop$1,\n  useLayoutEffect: noop$1,\n  useCallback: function (callback, deps) {\n    return useMemo(function () {\n      return callback;\n    }, deps);\n  },\n  useImperativeHandle: noop$1,\n  useEffect: noop$1,\n  useDebugValue: noop$1,\n  useDeferredValue: function (value, initialValue) {\n    resolveCurrentlyRenderingComponent();\n    return void 0 !== initialValue ? initialValue : value;\n  },\n  useTransition: function () {\n    resolveCurrentlyRenderingComponent();\n    return [!1, unsupportedStartTransition];\n  },\n  useId: function () {\n    var JSCompiler_inline_result = currentlyRenderingTask.treeContext;\n    var overflow = JSCompiler_inline_result.overflow;\n    JSCompiler_inline_result = JSCompiler_inline_result.id;\n    JSCompiler_inline_result =\n      (\n        JSCompiler_inline_result &\n        ~(1 << (32 - clz32(JSCompiler_inline_result) - 1))\n      ).toString(32) + overflow;\n    var resumableState = currentResumableState;\n    if (null === resumableState)\n      throw Error(\n        \"Invalid hook call. Hooks can only be called inside of the body of a function component.\"\n      );\n    overflow = localIdCounter++;\n    JSCompiler_inline_result =\n      \":\" + resumableState.idPrefix + \"R\" + JSCompiler_inline_result;\n    0 < overflow && (JSCompiler_inline_result += \"H\" + overflow.toString(32));\n    return JSCompiler_inline_result + \":\";\n  },\n  useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n    if (void 0 === getServerSnapshot)\n      throw Error(\n        \"Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.\"\n      );\n    return getServerSnapshot();\n  },\n  useCacheRefresh: function () {\n    return unsupportedRefresh;\n  },\n  useMemoCache: function (size) {\n    for (var data = Array(size), i = 0; i < size; i++)\n      data[i] = REACT_MEMO_CACHE_SENTINEL;\n    return data;\n  },\n  useHostTransitionStatus: function () {\n    resolveCurrentlyRenderingComponent();\n    return sharedNotPendingObject;\n  },\n  useOptimistic: function (passthrough) {\n    resolveCurrentlyRenderingComponent();\n    return [passthrough, unsupportedSetOptimisticState];\n  }\n};\nHooksDispatcher.useFormState = useActionState;\nHooksDispatcher.useActionState = useActionState;\nvar currentResumableState = null,\n  DefaultAsyncDispatcher = {\n    getCacheForType: function () {\n      throw Error(\"Not implemented.\");\n    }\n  },\n  prefix,\n  suffix;\nfunction describeBuiltInComponentFrame(name) {\n  if (void 0 === prefix)\n    try {\n      throw Error();\n    } catch (x) {\n      var match = x.stack.trim().match(/\\n( *(at )?)/);\n      prefix = (match && match[1]) || \"\";\n      suffix =\n        -1 < x.stack.indexOf(\"\\n    at\")\n          ? \" (<anonymous>)\"\n          : -1 < x.stack.indexOf(\"@\")\n            ? \"@unknown:0:0\"\n            : \"\";\n    }\n  return \"\\n\" + prefix + name + suffix;\n}\nvar reentry = !1;\nfunction describeNativeComponentFrame(fn, construct) {\n  if (!fn || reentry) return \"\";\n  reentry = !0;\n  var previousPrepareStackTrace = Error.prepareStackTrace;\n  Error.prepareStackTrace = void 0;\n  try {\n    var RunInRootFrame = {\n      DetermineComponentFrameRoot: function () {\n        try {\n          if (construct) {\n            var Fake = function () {\n              throw Error();\n            };\n            Object.defineProperty(Fake.prototype, \"props\", {\n              set: function () {\n                throw Error();\n              }\n            });\n            if (\"object\" === typeof Reflect && Reflect.construct) {\n              try {\n                Reflect.construct(Fake, []);\n              } catch (x) {\n                var control = x;\n              }\n              Reflect.construct(fn, [], Fake);\n            } else {\n              try {\n                Fake.call();\n              } catch (x$24) {\n                control = x$24;\n              }\n              fn.call(Fake.prototype);\n            }\n          } else {\n            try {\n              throw Error();\n            } catch (x$25) {\n              control = x$25;\n            }\n            (Fake = fn()) &&\n              \"function\" === typeof Fake.catch &&\n              Fake.catch(function () {});\n          }\n        } catch (sample) {\n          if (sample && control && \"string\" === typeof sample.stack)\n            return [sample.stack, control.stack];\n        }\n        return [null, null];\n      }\n    };\n    RunInRootFrame.DetermineComponentFrameRoot.displayName =\n      \"DetermineComponentFrameRoot\";\n    var namePropDescriptor = Object.getOwnPropertyDescriptor(\n      RunInRootFrame.DetermineComponentFrameRoot,\n      \"name\"\n    );\n    namePropDescriptor &&\n      namePropDescriptor.configurable &&\n      Object.defineProperty(\n        RunInRootFrame.DetermineComponentFrameRoot,\n        \"name\",\n        { value: \"DetermineComponentFrameRoot\" }\n      );\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n      sampleStack = _RunInRootFrame$Deter[0],\n      controlStack = _RunInRootFrame$Deter[1];\n    if (sampleStack && controlStack) {\n      var sampleLines = sampleStack.split(\"\\n\"),\n        controlLines = controlStack.split(\"\\n\");\n      for (\n        namePropDescriptor = RunInRootFrame = 0;\n        RunInRootFrame < sampleLines.length &&\n        !sampleLines[RunInRootFrame].includes(\"DetermineComponentFrameRoot\");\n\n      )\n        RunInRootFrame++;\n      for (\n        ;\n        namePropDescriptor < controlLines.length &&\n        !controlLines[namePropDescriptor].includes(\n          \"DetermineComponentFrameRoot\"\n        );\n\n      )\n        namePropDescriptor++;\n      if (\n        RunInRootFrame === sampleLines.length ||\n        namePropDescriptor === controlLines.length\n      )\n        for (\n          RunInRootFrame = sampleLines.length - 1,\n            namePropDescriptor = controlLines.length - 1;\n          1 <= RunInRootFrame &&\n          0 <= namePropDescriptor &&\n          sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor];\n\n        )\n          namePropDescriptor--;\n      for (\n        ;\n        1 <= RunInRootFrame && 0 <= namePropDescriptor;\n        RunInRootFrame--, namePropDescriptor--\n      )\n        if (sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {\n          if (1 !== RunInRootFrame || 1 !== namePropDescriptor) {\n            do\n              if (\n                (RunInRootFrame--,\n                namePropDescriptor--,\n                0 > namePropDescriptor ||\n                  sampleLines[RunInRootFrame] !==\n                    controlLines[namePropDescriptor])\n              ) {\n                var frame =\n                  \"\\n\" +\n                  sampleLines[RunInRootFrame].replace(\" at new \", \" at \");\n                fn.displayName &&\n                  frame.includes(\"<anonymous>\") &&\n                  (frame = frame.replace(\"<anonymous>\", fn.displayName));\n                return frame;\n              }\n            while (1 <= RunInRootFrame && 0 <= namePropDescriptor);\n          }\n          break;\n        }\n    }\n  } finally {\n    (reentry = !1), (Error.prepareStackTrace = previousPrepareStackTrace);\n  }\n  return (previousPrepareStackTrace = fn ? fn.displayName || fn.name : \"\")\n    ? describeBuiltInComponentFrame(previousPrepareStackTrace)\n    : \"\";\n}\nfunction describeComponentStackByType(type) {\n  if (\"string\" === typeof type) return describeBuiltInComponentFrame(type);\n  if (\"function\" === typeof type)\n    return type.prototype && type.prototype.isReactComponent\n      ? ((type = describeNativeComponentFrame(type, !0)), type)\n      : describeNativeComponentFrame(type, !1);\n  if (\"object\" === typeof type && null !== type) {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeNativeComponentFrame(type.render, !1);\n      case REACT_MEMO_TYPE:\n        return describeNativeComponentFrame(type.type, !1);\n      case REACT_LAZY_TYPE:\n        var lazyComponent = type,\n          payload = lazyComponent._payload;\n        lazyComponent = lazyComponent._init;\n        try {\n          type = lazyComponent(payload);\n        } catch (x) {\n          return describeBuiltInComponentFrame(\"Lazy\");\n        }\n        return describeComponentStackByType(type);\n    }\n    if (\"string\" === typeof type.name)\n      return (\n        (payload = type.env),\n        describeBuiltInComponentFrame(\n          type.name + (payload ? \" [\" + payload + \"]\" : \"\")\n        )\n      );\n  }\n  switch (type) {\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame(\"SuspenseList\");\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame(\"Suspense\");\n  }\n  return \"\";\n}\nfunction defaultErrorHandler(error) {\n  if (\n    \"object\" === typeof error &&\n    null !== error &&\n    \"string\" === typeof error.environmentName\n  ) {\n    var JSCompiler_inline_result = error.environmentName;\n    error = [error].slice(0);\n    \"string\" === typeof error[0]\n      ? error.splice(\n          0,\n          1,\n          \"\\u001b[0m\\u001b[7m%c%s\\u001b[0m%c \" + error[0],\n          \"background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px\",\n          \" \" + JSCompiler_inline_result + \" \",\n          \"\"\n        )\n      : error.splice(\n          0,\n          0,\n          \"\\u001b[0m\\u001b[7m%c%s\\u001b[0m%c \",\n          \"background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px\",\n          \" \" + JSCompiler_inline_result + \" \",\n          \"\"\n        );\n    error.unshift(console);\n    JSCompiler_inline_result = bind.apply(console.error, error);\n    JSCompiler_inline_result();\n  } else console.error(error);\n  return null;\n}\nfunction noop() {}\nfunction RequestInstance(\n  resumableState,\n  renderState,\n  rootFormatContext,\n  progressiveChunkSize,\n  onError,\n  onAllReady,\n  onShellReady,\n  onShellError,\n  onFatalError,\n  onPostpone,\n  formState\n) {\n  var abortSet = new Set();\n  this.destination = null;\n  this.flushScheduled = !1;\n  this.resumableState = resumableState;\n  this.renderState = renderState;\n  this.rootFormatContext = rootFormatContext;\n  this.progressiveChunkSize =\n    void 0 === progressiveChunkSize ? 12800 : progressiveChunkSize;\n  this.status = 10;\n  this.fatalError = null;\n  this.pendingRootTasks = this.allPendingTasks = this.nextSegmentId = 0;\n  this.completedRootSegment = null;\n  this.abortableTasks = abortSet;\n  this.pingedTasks = [];\n  this.clientRenderedBoundaries = [];\n  this.completedBoundaries = [];\n  this.partialBoundaries = [];\n  this.trackedPostpones = null;\n  this.onError = void 0 === onError ? defaultErrorHandler : onError;\n  this.onPostpone = void 0 === onPostpone ? noop : onPostpone;\n  this.onAllReady = void 0 === onAllReady ? noop : onAllReady;\n  this.onShellReady = void 0 === onShellReady ? noop : onShellReady;\n  this.onShellError = void 0 === onShellError ? noop : onShellError;\n  this.onFatalError = void 0 === onFatalError ? noop : onFatalError;\n  this.formState = void 0 === formState ? null : formState;\n}\nfunction createRequest(\n  children,\n  resumableState,\n  renderState,\n  rootFormatContext,\n  progressiveChunkSize,\n  onError,\n  onAllReady,\n  onShellReady,\n  onShellError,\n  onFatalError,\n  onPostpone,\n  formState\n) {\n  resumableState = new RequestInstance(\n    resumableState,\n    renderState,\n    rootFormatContext,\n    progressiveChunkSize,\n    onError,\n    onAllReady,\n    onShellReady,\n    onShellError,\n    onFatalError,\n    onPostpone,\n    formState\n  );\n  renderState = createPendingSegment(\n    resumableState,\n    0,\n    null,\n    rootFormatContext,\n    !1,\n    !1\n  );\n  renderState.parentFlushed = !0;\n  children = createRenderTask(\n    resumableState,\n    null,\n    children,\n    -1,\n    null,\n    renderState,\n    null,\n    resumableState.abortableTasks,\n    null,\n    rootFormatContext,\n    null,\n    emptyTreeContext,\n    null,\n    !1\n  );\n  pushComponentStack(children);\n  resumableState.pingedTasks.push(children);\n  return resumableState;\n}\nfunction createPrerenderRequest(\n  children,\n  resumableState,\n  renderState,\n  rootFormatContext,\n  progressiveChunkSize,\n  onError,\n  onAllReady,\n  onShellReady,\n  onShellError,\n  onFatalError,\n  onPostpone\n) {\n  children = createRequest(\n    children,\n    resumableState,\n    renderState,\n    rootFormatContext,\n    progressiveChunkSize,\n    onError,\n    onAllReady,\n    onShellReady,\n    onShellError,\n    onFatalError,\n    onPostpone,\n    void 0\n  );\n  children.trackedPostpones = {\n    workingMap: new Map(),\n    rootNodes: [],\n    rootSlots: null\n  };\n  return children;\n}\nvar currentRequest = null;\nfunction resolveRequest() {\n  if (currentRequest) return currentRequest;\n  if (supportsRequestStorage) {\n    var store = requestStorage.getStore();\n    if (store) return store;\n  }\n  return null;\n}\nfunction pingTask(request, task) {\n  request.pingedTasks.push(task);\n  1 === request.pingedTasks.length &&\n    ((request.flushScheduled = null !== request.destination),\n    null !== request.trackedPostpones || 10 === request.status\n      ? scheduleMicrotask(function () {\n          return performWork(request);\n        })\n      : setTimeoutOrImmediate(function () {\n          return performWork(request);\n        }, 0));\n}\nfunction createSuspenseBoundary(request, fallbackAbortableTasks) {\n  return {\n    status: 0,\n    rootSegmentID: -1,\n    parentFlushed: !1,\n    pendingTasks: 0,\n    completedSegments: [],\n    byteSize: 0,\n    fallbackAbortableTasks: fallbackAbortableTasks,\n    errorDigest: null,\n    contentState: createHoistableState(),\n    fallbackState: createHoistableState(),\n    trackedContentKeyPath: null,\n    trackedFallbackNode: null\n  };\n}\nfunction createRenderTask(\n  request,\n  thenableState,\n  node,\n  childIndex,\n  blockedBoundary,\n  blockedSegment,\n  hoistableState,\n  abortSet,\n  keyPath,\n  formatContext,\n  context,\n  treeContext,\n  componentStack,\n  isFallback\n) {\n  request.allPendingTasks++;\n  null === blockedBoundary\n    ? request.pendingRootTasks++\n    : blockedBoundary.pendingTasks++;\n  var task = {\n    replay: null,\n    node: node,\n    childIndex: childIndex,\n    ping: function () {\n      return pingTask(request, task);\n    },\n    blockedBoundary: blockedBoundary,\n    blockedSegment: blockedSegment,\n    hoistableState: hoistableState,\n    abortSet: abortSet,\n    keyPath: keyPath,\n    formatContext: formatContext,\n    context: context,\n    treeContext: treeContext,\n    componentStack: componentStack,\n    thenableState: thenableState,\n    isFallback: isFallback\n  };\n  abortSet.add(task);\n  return task;\n}\nfunction createReplayTask(\n  request,\n  thenableState,\n  replay,\n  node,\n  childIndex,\n  blockedBoundary,\n  hoistableState,\n  abortSet,\n  keyPath,\n  formatContext,\n  context,\n  treeContext,\n  componentStack,\n  isFallback\n) {\n  request.allPendingTasks++;\n  null === blockedBoundary\n    ? request.pendingRootTasks++\n    : blockedBoundary.pendingTasks++;\n  replay.pendingTasks++;\n  var task = {\n    replay: replay,\n    node: node,\n    childIndex: childIndex,\n    ping: function () {\n      return pingTask(request, task);\n    },\n    blockedBoundary: blockedBoundary,\n    blockedSegment: null,\n    hoistableState: hoistableState,\n    abortSet: abortSet,\n    keyPath: keyPath,\n    formatContext: formatContext,\n    context: context,\n    treeContext: treeContext,\n    componentStack: componentStack,\n    thenableState: thenableState,\n    isFallback: isFallback\n  };\n  abortSet.add(task);\n  return task;\n}\nfunction createPendingSegment(\n  request,\n  index,\n  boundary,\n  parentFormatContext,\n  lastPushedText,\n  textEmbedded\n) {\n  return {\n    status: 0,\n    id: -1,\n    index: index,\n    parentFlushed: !1,\n    chunks: [],\n    children: [],\n    parentFormatContext: parentFormatContext,\n    boundary: boundary,\n    lastPushedText: lastPushedText,\n    textEmbedded: textEmbedded\n  };\n}\nfunction pushComponentStack(task) {\n  var node = task.node;\n  if (\"object\" === typeof node && null !== node)\n    switch (node.$$typeof) {\n      case REACT_ELEMENT_TYPE:\n        task.componentStack = { parent: task.componentStack, type: node.type };\n    }\n}\nfunction getThrownInfo(node$jscomp$0) {\n  var errorInfo = {};\n  node$jscomp$0 &&\n    Object.defineProperty(errorInfo, \"componentStack\", {\n      configurable: !0,\n      enumerable: !0,\n      get: function () {\n        try {\n          var info = \"\",\n            node = node$jscomp$0;\n          do\n            (info += describeComponentStackByType(node.type)),\n              (node = node.parent);\n          while (node);\n          var JSCompiler_inline_result = info;\n        } catch (x) {\n          JSCompiler_inline_result =\n            \"\\nError generating stack: \" + x.message + \"\\n\" + x.stack;\n        }\n        Object.defineProperty(errorInfo, \"componentStack\", {\n          value: JSCompiler_inline_result\n        });\n        return JSCompiler_inline_result;\n      }\n    });\n  return errorInfo;\n}\nfunction logRecoverableError(request, error, errorInfo) {\n  request = request.onError;\n  error = request(error, errorInfo);\n  if (null == error || \"string\" === typeof error) return error;\n}\nfunction fatalError(request, error) {\n  var onShellError = request.onShellError,\n    onFatalError = request.onFatalError;\n  onShellError(error);\n  onFatalError(error);\n  null !== request.destination\n    ? ((request.status = 14), closeWithError(request.destination, error))\n    : ((request.status = 13), (request.fatalError = error));\n}\nfunction renderWithHooks(request, task, keyPath, Component, props, secondArg) {\n  var prevThenableState = task.thenableState;\n  task.thenableState = null;\n  currentlyRenderingComponent = {};\n  currentlyRenderingTask = task;\n  currentlyRenderingRequest = request;\n  currentlyRenderingKeyPath = keyPath;\n  actionStateCounter = localIdCounter = 0;\n  actionStateMatchingIndex = -1;\n  thenableIndexCounter = 0;\n  thenableState = prevThenableState;\n  for (request = Component(props, secondArg); didScheduleRenderPhaseUpdate; )\n    (didScheduleRenderPhaseUpdate = !1),\n      (actionStateCounter = localIdCounter = 0),\n      (actionStateMatchingIndex = -1),\n      (thenableIndexCounter = 0),\n      (numberOfReRenders += 1),\n      (workInProgressHook = null),\n      (request = Component(props, secondArg));\n  resetHooksState();\n  return request;\n}\nfunction finishFunctionComponent(\n  request,\n  task,\n  keyPath,\n  children,\n  hasId,\n  actionStateCount,\n  actionStateMatchingIndex\n) {\n  var didEmitActionStateMarkers = !1;\n  if (0 !== actionStateCount && null !== request.formState) {\n    var segment = task.blockedSegment;\n    if (null !== segment) {\n      didEmitActionStateMarkers = !0;\n      segment = segment.chunks;\n      for (var i = 0; i < actionStateCount; i++)\n        i === actionStateMatchingIndex\n          ? segment.push(formStateMarkerIsMatching)\n          : segment.push(formStateMarkerIsNotMatching);\n    }\n  }\n  actionStateCount = task.keyPath;\n  task.keyPath = keyPath;\n  hasId\n    ? ((keyPath = task.treeContext),\n      (task.treeContext = pushTreeContext(keyPath, 1, 0)),\n      renderNode(request, task, children, -1),\n      (task.treeContext = keyPath))\n    : didEmitActionStateMarkers\n      ? renderNode(request, task, children, -1)\n      : renderNodeDestructive(request, task, children, -1);\n  task.keyPath = actionStateCount;\n}\nfunction renderElement(request, task, keyPath, type, props, ref) {\n  if (\"function\" === typeof type)\n    if (type.prototype && type.prototype.isReactComponent) {\n      var newProps = props;\n      if (\"ref\" in props) {\n        newProps = {};\n        for (var propName in props)\n          \"ref\" !== propName && (newProps[propName] = props[propName]);\n      }\n      var defaultProps = type.defaultProps;\n      if (defaultProps) {\n        newProps === props && (newProps = assign({}, newProps, props));\n        for (var propName$33 in defaultProps)\n          void 0 === newProps[propName$33] &&\n            (newProps[propName$33] = defaultProps[propName$33]);\n      }\n      props = newProps;\n      newProps = emptyContextObject;\n      defaultProps = type.contextType;\n      \"object\" === typeof defaultProps &&\n        null !== defaultProps &&\n        (newProps = defaultProps._currentValue);\n      newProps = new type(props, newProps);\n      var initialState = void 0 !== newProps.state ? newProps.state : null;\n      newProps.updater = classComponentUpdater;\n      newProps.props = props;\n      newProps.state = initialState;\n      defaultProps = { queue: [], replace: !1 };\n      newProps._reactInternals = defaultProps;\n      ref = type.contextType;\n      newProps.context =\n        \"object\" === typeof ref && null !== ref\n          ? ref._currentValue\n          : emptyContextObject;\n      ref = type.getDerivedStateFromProps;\n      \"function\" === typeof ref &&\n        ((ref = ref(props, initialState)),\n        (initialState =\n          null === ref || void 0 === ref\n            ? initialState\n            : assign({}, initialState, ref)),\n        (newProps.state = initialState));\n      if (\n        \"function\" !== typeof type.getDerivedStateFromProps &&\n        \"function\" !== typeof newProps.getSnapshotBeforeUpdate &&\n        (\"function\" === typeof newProps.UNSAFE_componentWillMount ||\n          \"function\" === typeof newProps.componentWillMount)\n      )\n        if (\n          ((type = newProps.state),\n          \"function\" === typeof newProps.componentWillMount &&\n            newProps.componentWillMount(),\n          \"function\" === typeof newProps.UNSAFE_componentWillMount &&\n            newProps.UNSAFE_componentWillMount(),\n          type !== newProps.state &&\n            classComponentUpdater.enqueueReplaceState(\n              newProps,\n              newProps.state,\n              null\n            ),\n          null !== defaultProps.queue && 0 < defaultProps.queue.length)\n        )\n          if (\n            ((type = defaultProps.queue),\n            (ref = defaultProps.replace),\n            (defaultProps.queue = null),\n            (defaultProps.replace = !1),\n            ref && 1 === type.length)\n          )\n            newProps.state = type[0];\n          else {\n            defaultProps = ref ? type[0] : newProps.state;\n            initialState = !0;\n            for (ref = ref ? 1 : 0; ref < type.length; ref++)\n              (propName$33 = type[ref]),\n                (propName$33 =\n                  \"function\" === typeof propName$33\n                    ? propName$33.call(newProps, defaultProps, props, void 0)\n                    : propName$33),\n                null != propName$33 &&\n                  (initialState\n                    ? ((initialState = !1),\n                      (defaultProps = assign({}, defaultProps, propName$33)))\n                    : assign(defaultProps, propName$33));\n            newProps.state = defaultProps;\n          }\n        else defaultProps.queue = null;\n      type = newProps.render();\n      if (12 === request.status) throw null;\n      props = task.keyPath;\n      task.keyPath = keyPath;\n      renderNodeDestructive(request, task, type, -1);\n      task.keyPath = props;\n    } else {\n      type = renderWithHooks(request, task, keyPath, type, props, void 0);\n      if (12 === request.status) throw null;\n      finishFunctionComponent(\n        request,\n        task,\n        keyPath,\n        type,\n        0 !== localIdCounter,\n        actionStateCounter,\n        actionStateMatchingIndex\n      );\n    }\n  else if (\"string\" === typeof type)\n    if (((newProps = task.blockedSegment), null === newProps))\n      (newProps = props.children),\n        (defaultProps = task.formatContext),\n        (initialState = task.keyPath),\n        (task.formatContext = getChildFormatContext(defaultProps, type, props)),\n        (task.keyPath = keyPath),\n        renderNode(request, task, newProps, -1),\n        (task.formatContext = defaultProps),\n        (task.keyPath = initialState);\n    else {\n      initialState = pushStartInstance(\n        newProps.chunks,\n        type,\n        props,\n        request.resumableState,\n        request.renderState,\n        task.hoistableState,\n        task.formatContext,\n        newProps.lastPushedText,\n        task.isFallback\n      );\n      newProps.lastPushedText = !1;\n      defaultProps = task.formatContext;\n      ref = task.keyPath;\n      task.formatContext = getChildFormatContext(defaultProps, type, props);\n      task.keyPath = keyPath;\n      renderNode(request, task, initialState, -1);\n      task.formatContext = defaultProps;\n      task.keyPath = ref;\n      a: {\n        task = newProps.chunks;\n        request = request.resumableState;\n        switch (type) {\n          case \"title\":\n          case \"style\":\n          case \"script\":\n          case \"area\":\n          case \"base\":\n          case \"br\":\n          case \"col\":\n          case \"embed\":\n          case \"hr\":\n          case \"img\":\n          case \"input\":\n          case \"keygen\":\n          case \"link\":\n          case \"meta\":\n          case \"param\":\n          case \"source\":\n          case \"track\":\n          case \"wbr\":\n            break a;\n          case \"body\":\n            if (1 >= defaultProps.insertionMode) {\n              request.hasBody = !0;\n              break a;\n            }\n            break;\n          case \"html\":\n            if (0 === defaultProps.insertionMode) {\n              request.hasHtml = !0;\n              break a;\n            }\n        }\n        task.push(endChunkForTag(type));\n      }\n      newProps.lastPushedText = !1;\n    }\n  else {\n    switch (type) {\n      case REACT_LEGACY_HIDDEN_TYPE:\n      case REACT_DEBUG_TRACING_MODE_TYPE:\n      case REACT_STRICT_MODE_TYPE:\n      case REACT_PROFILER_TYPE:\n      case REACT_FRAGMENT_TYPE:\n        type = task.keyPath;\n        task.keyPath = keyPath;\n        renderNodeDestructive(request, task, props.children, -1);\n        task.keyPath = type;\n        return;\n      case REACT_OFFSCREEN_TYPE:\n        \"hidden\" !== props.mode &&\n          ((type = task.keyPath),\n          (task.keyPath = keyPath),\n          renderNodeDestructive(request, task, props.children, -1),\n          (task.keyPath = type));\n        return;\n      case REACT_SUSPENSE_LIST_TYPE:\n        type = task.keyPath;\n        task.keyPath = keyPath;\n        renderNodeDestructive(request, task, props.children, -1);\n        task.keyPath = type;\n        return;\n      case REACT_SCOPE_TYPE:\n        throw Error(\"ReactDOMServer does not yet support scope components.\");\n      case REACT_SUSPENSE_TYPE:\n        a: if (null !== task.replay) {\n          type = task.keyPath;\n          task.keyPath = keyPath;\n          keyPath = props.children;\n          try {\n            renderNode(request, task, keyPath, -1);\n          } finally {\n            task.keyPath = type;\n          }\n        } else {\n          type = task.keyPath;\n          var parentBoundary = task.blockedBoundary,\n            parentHoistableState = task.hoistableState;\n          ref = task.blockedSegment;\n          propName$33 = props.fallback;\n          props = props.children;\n          var fallbackAbortSet = new Set();\n          propName = createSuspenseBoundary(request, fallbackAbortSet);\n          null !== request.trackedPostpones &&\n            (propName.trackedContentKeyPath = keyPath);\n          var boundarySegment = createPendingSegment(\n            request,\n            ref.chunks.length,\n            propName,\n            task.formatContext,\n            !1,\n            !1\n          );\n          ref.children.push(boundarySegment);\n          ref.lastPushedText = !1;\n          var contentRootSegment = createPendingSegment(\n            request,\n            0,\n            null,\n            task.formatContext,\n            !1,\n            !1\n          );\n          contentRootSegment.parentFlushed = !0;\n          if (null !== request.trackedPostpones) {\n            newProps = [keyPath[0], \"Suspense Fallback\", keyPath[2]];\n            defaultProps = [newProps[1], newProps[2], [], null];\n            request.trackedPostpones.workingMap.set(newProps, defaultProps);\n            propName.trackedFallbackNode = defaultProps;\n            task.blockedSegment = boundarySegment;\n            task.keyPath = newProps;\n            boundarySegment.status = 6;\n            try {\n              renderNode(request, task, propName$33, -1),\n                boundarySegment.lastPushedText &&\n                  boundarySegment.textEmbedded &&\n                  boundarySegment.chunks.push(textSeparator),\n                (boundarySegment.status = 1);\n            } catch (thrownValue) {\n              throw (\n                ((boundarySegment.status = 12 === request.status ? 3 : 4),\n                thrownValue)\n              );\n            } finally {\n              (task.blockedSegment = ref), (task.keyPath = type);\n            }\n            task = createRenderTask(\n              request,\n              null,\n              props,\n              -1,\n              propName,\n              contentRootSegment,\n              propName.contentState,\n              task.abortSet,\n              keyPath,\n              task.formatContext,\n              task.context,\n              task.treeContext,\n              task.componentStack,\n              task.isFallback\n            );\n            pushComponentStack(task);\n            request.pingedTasks.push(task);\n          } else {\n            task.blockedBoundary = propName;\n            task.hoistableState = propName.contentState;\n            task.blockedSegment = contentRootSegment;\n            task.keyPath = keyPath;\n            contentRootSegment.status = 6;\n            try {\n              if (\n                (renderNode(request, task, props, -1),\n                contentRootSegment.lastPushedText &&\n                  contentRootSegment.textEmbedded &&\n                  contentRootSegment.chunks.push(textSeparator),\n                (contentRootSegment.status = 1),\n                queueCompletedSegment(propName, contentRootSegment),\n                0 === propName.pendingTasks && 0 === propName.status)\n              ) {\n                propName.status = 1;\n                break a;\n              }\n            } catch (thrownValue$28) {\n              (propName.status = 4),\n                12 === request.status\n                  ? ((contentRootSegment.status = 3),\n                    (newProps = request.fatalError))\n                  : ((contentRootSegment.status = 4),\n                    (newProps = thrownValue$28)),\n                (defaultProps = getThrownInfo(task.componentStack)),\n                (initialState = logRecoverableError(\n                  request,\n                  newProps,\n                  defaultProps\n                )),\n                (propName.errorDigest = initialState),\n                untrackBoundary(request, propName);\n            } finally {\n              (task.blockedBoundary = parentBoundary),\n                (task.hoistableState = parentHoistableState),\n                (task.blockedSegment = ref),\n                (task.keyPath = type);\n            }\n            task = createRenderTask(\n              request,\n              null,\n              propName$33,\n              -1,\n              parentBoundary,\n              boundarySegment,\n              propName.fallbackState,\n              fallbackAbortSet,\n              [keyPath[0], \"Suspense Fallback\", keyPath[2]],\n              task.formatContext,\n              task.context,\n              task.treeContext,\n              task.componentStack,\n              !0\n            );\n            pushComponentStack(task);\n            request.pingedTasks.push(task);\n          }\n        }\n        return;\n    }\n    if (\"object\" === typeof type && null !== type)\n      switch (type.$$typeof) {\n        case REACT_FORWARD_REF_TYPE:\n          if (\"ref\" in props)\n            for (boundarySegment in ((newProps = {}), props))\n              \"ref\" !== boundarySegment &&\n                (newProps[boundarySegment] = props[boundarySegment]);\n          else newProps = props;\n          type = renderWithHooks(\n            request,\n            task,\n            keyPath,\n            type.render,\n            newProps,\n            ref\n          );\n          finishFunctionComponent(\n            request,\n            task,\n            keyPath,\n            type,\n            0 !== localIdCounter,\n            actionStateCounter,\n            actionStateMatchingIndex\n          );\n          return;\n        case REACT_MEMO_TYPE:\n          renderElement(request, task, keyPath, type.type, props, ref);\n          return;\n        case REACT_PROVIDER_TYPE:\n        case REACT_CONTEXT_TYPE:\n          defaultProps = props.children;\n          newProps = task.keyPath;\n          props = props.value;\n          initialState = type._currentValue;\n          type._currentValue = props;\n          ref = currentActiveSnapshot;\n          currentActiveSnapshot = type = {\n            parent: ref,\n            depth: null === ref ? 0 : ref.depth + 1,\n            context: type,\n            parentValue: initialState,\n            value: props\n          };\n          task.context = type;\n          task.keyPath = keyPath;\n          renderNodeDestructive(request, task, defaultProps, -1);\n          request = currentActiveSnapshot;\n          if (null === request)\n            throw Error(\n              \"Tried to pop a Context at the root of the app. This is a bug in React.\"\n            );\n          request.context._currentValue = request.parentValue;\n          request = currentActiveSnapshot = request.parent;\n          task.context = request;\n          task.keyPath = newProps;\n          return;\n        case REACT_CONSUMER_TYPE:\n          props = props.children;\n          type = props(type._context._currentValue);\n          props = task.keyPath;\n          task.keyPath = keyPath;\n          renderNodeDestructive(request, task, type, -1);\n          task.keyPath = props;\n          return;\n        case REACT_LAZY_TYPE:\n          newProps = type._init;\n          type = newProps(type._payload);\n          if (12 === request.status) throw null;\n          renderElement(request, task, keyPath, type, props, ref);\n          return;\n      }\n    throw Error(\n      \"Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: \" +\n        ((null == type ? type : typeof type) + \".\")\n    );\n  }\n}\nfunction resumeNode(request, task, segmentId, node, childIndex) {\n  var prevReplay = task.replay,\n    blockedBoundary = task.blockedBoundary,\n    resumedSegment = createPendingSegment(\n      request,\n      0,\n      null,\n      task.formatContext,\n      !1,\n      !1\n    );\n  resumedSegment.id = segmentId;\n  resumedSegment.parentFlushed = !0;\n  try {\n    (task.replay = null),\n      (task.blockedSegment = resumedSegment),\n      renderNode(request, task, node, childIndex),\n      (resumedSegment.status = 1),\n      null === blockedBoundary\n        ? (request.completedRootSegment = resumedSegment)\n        : (queueCompletedSegment(blockedBoundary, resumedSegment),\n          blockedBoundary.parentFlushed &&\n            request.partialBoundaries.push(blockedBoundary));\n  } finally {\n    (task.replay = prevReplay), (task.blockedSegment = null);\n  }\n}\nfunction renderNodeDestructive(request, task, node, childIndex) {\n  null !== task.replay && \"number\" === typeof task.replay.slots\n    ? resumeNode(request, task, task.replay.slots, node, childIndex)\n    : ((task.node = node),\n      (task.childIndex = childIndex),\n      (node = task.componentStack),\n      pushComponentStack(task),\n      retryNode(request, task),\n      (task.componentStack = node));\n}\nfunction retryNode(request, task) {\n  var node = task.node,\n    childIndex = task.childIndex;\n  if (null !== node) {\n    if (\"object\" === typeof node) {\n      switch (node.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          var type = node.type,\n            key = node.key,\n            props = node.props;\n          node = props.ref;\n          var ref = void 0 !== node ? node : null;\n          var name = getComponentNameFromType(type),\n            keyOrIndex =\n              null == key ? (-1 === childIndex ? 0 : childIndex) : key;\n          key = [task.keyPath, name, keyOrIndex];\n          if (null !== task.replay)\n            a: {\n              var replay = task.replay;\n              childIndex = replay.nodes;\n              for (node = 0; node < childIndex.length; node++) {\n                var node$jscomp$0 = childIndex[node];\n                if (keyOrIndex === node$jscomp$0[1]) {\n                  if (4 === node$jscomp$0.length) {\n                    if (null !== name && name !== node$jscomp$0[0])\n                      throw Error(\n                        \"Expected the resume to render <\" +\n                          node$jscomp$0[0] +\n                          \"> in this slot but instead it rendered <\" +\n                          name +\n                          \">. The tree doesn't match so React will fallback to client rendering.\"\n                      );\n                    var childNodes = node$jscomp$0[2];\n                    name = node$jscomp$0[3];\n                    keyOrIndex = task.node;\n                    task.replay = {\n                      nodes: childNodes,\n                      slots: name,\n                      pendingTasks: 1\n                    };\n                    try {\n                      renderElement(request, task, key, type, props, ref);\n                      if (\n                        1 === task.replay.pendingTasks &&\n                        0 < task.replay.nodes.length\n                      )\n                        throw Error(\n                          \"Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering.\"\n                        );\n                      task.replay.pendingTasks--;\n                    } catch (x) {\n                      if (\n                        \"object\" === typeof x &&\n                        null !== x &&\n                        (x === SuspenseException ||\n                          \"function\" === typeof x.then)\n                      )\n                        throw (\n                          (task.node === keyOrIndex && (task.replay = replay),\n                          x)\n                        );\n                      task.replay.pendingTasks--;\n                      props = getThrownInfo(task.componentStack);\n                      key = task.blockedBoundary;\n                      type = x;\n                      props = logRecoverableError(request, type, props);\n                      abortRemainingReplayNodes(\n                        request,\n                        key,\n                        childNodes,\n                        name,\n                        type,\n                        props\n                      );\n                    }\n                    task.replay = replay;\n                  } else {\n                    if (type !== REACT_SUSPENSE_TYPE)\n                      throw Error(\n                        \"Expected the resume to render <Suspense> in this slot but instead it rendered <\" +\n                          (getComponentNameFromType(type) || \"Unknown\") +\n                          \">. The tree doesn't match so React will fallback to client rendering.\"\n                      );\n                    b: {\n                      replay = void 0;\n                      type = node$jscomp$0[5];\n                      ref = node$jscomp$0[2];\n                      name = node$jscomp$0[3];\n                      keyOrIndex =\n                        null === node$jscomp$0[4] ? [] : node$jscomp$0[4][2];\n                      node$jscomp$0 =\n                        null === node$jscomp$0[4] ? null : node$jscomp$0[4][3];\n                      var prevKeyPath = task.keyPath,\n                        previousReplaySet = task.replay,\n                        parentBoundary = task.blockedBoundary,\n                        parentHoistableState = task.hoistableState,\n                        content = props.children;\n                      props = props.fallback;\n                      var fallbackAbortSet = new Set(),\n                        resumedBoundary = createSuspenseBoundary(\n                          request,\n                          fallbackAbortSet\n                        );\n                      resumedBoundary.parentFlushed = !0;\n                      resumedBoundary.rootSegmentID = type;\n                      task.blockedBoundary = resumedBoundary;\n                      task.hoistableState = resumedBoundary.contentState;\n                      task.keyPath = key;\n                      task.replay = {\n                        nodes: ref,\n                        slots: name,\n                        pendingTasks: 1\n                      };\n                      try {\n                        renderNode(request, task, content, -1);\n                        if (\n                          1 === task.replay.pendingTasks &&\n                          0 < task.replay.nodes.length\n                        )\n                          throw Error(\n                            \"Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering.\"\n                          );\n                        task.replay.pendingTasks--;\n                        if (\n                          0 === resumedBoundary.pendingTasks &&\n                          0 === resumedBoundary.status\n                        ) {\n                          resumedBoundary.status = 1;\n                          request.completedBoundaries.push(resumedBoundary);\n                          break b;\n                        }\n                      } catch (error) {\n                        (resumedBoundary.status = 4),\n                          (childNodes = getThrownInfo(task.componentStack)),\n                          (replay = logRecoverableError(\n                            request,\n                            error,\n                            childNodes\n                          )),\n                          (resumedBoundary.errorDigest = replay),\n                          task.replay.pendingTasks--,\n                          request.clientRenderedBoundaries.push(\n                            resumedBoundary\n                          );\n                      } finally {\n                        (task.blockedBoundary = parentBoundary),\n                          (task.hoistableState = parentHoistableState),\n                          (task.replay = previousReplaySet),\n                          (task.keyPath = prevKeyPath);\n                      }\n                      task = createReplayTask(\n                        request,\n                        null,\n                        {\n                          nodes: keyOrIndex,\n                          slots: node$jscomp$0,\n                          pendingTasks: 0\n                        },\n                        props,\n                        -1,\n                        parentBoundary,\n                        resumedBoundary.fallbackState,\n                        fallbackAbortSet,\n                        [key[0], \"Suspense Fallback\", key[2]],\n                        task.formatContext,\n                        task.context,\n                        task.treeContext,\n                        task.componentStack,\n                        !0\n                      );\n                      pushComponentStack(task);\n                      request.pingedTasks.push(task);\n                    }\n                  }\n                  childIndex.splice(node, 1);\n                  break a;\n                }\n              }\n            }\n          else renderElement(request, task, key, type, props, ref);\n          return;\n        case REACT_PORTAL_TYPE:\n          throw Error(\n            \"Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.\"\n          );\n        case REACT_LAZY_TYPE:\n          childNodes = node._init;\n          node = childNodes(node._payload);\n          if (12 === request.status) throw null;\n          renderNodeDestructive(request, task, node, childIndex);\n          return;\n      }\n      if (isArrayImpl(node)) {\n        renderChildrenArray(request, task, node, childIndex);\n        return;\n      }\n      null === node || \"object\" !== typeof node\n        ? (childNodes = null)\n        : ((childNodes =\n            (MAYBE_ITERATOR_SYMBOL && node[MAYBE_ITERATOR_SYMBOL]) ||\n            node[\"@@iterator\"]),\n          (childNodes = \"function\" === typeof childNodes ? childNodes : null));\n      if (childNodes && (childNodes = childNodes.call(node))) {\n        node = childNodes.next();\n        if (!node.done) {\n          props = [];\n          do props.push(node.value), (node = childNodes.next());\n          while (!node.done);\n          renderChildrenArray(request, task, props, childIndex);\n        }\n        return;\n      }\n      if (\"function\" === typeof node.then)\n        return (\n          (task.thenableState = null),\n          renderNodeDestructive(request, task, unwrapThenable(node), childIndex)\n        );\n      if (node.$$typeof === REACT_CONTEXT_TYPE)\n        return renderNodeDestructive(\n          request,\n          task,\n          node._currentValue,\n          childIndex\n        );\n      childIndex = Object.prototype.toString.call(node);\n      throw Error(\n        \"Objects are not valid as a React child (found: \" +\n          (\"[object Object]\" === childIndex\n            ? \"object with keys {\" + Object.keys(node).join(\", \") + \"}\"\n            : childIndex) +\n          \"). If you meant to render a collection of children, use an array instead.\"\n      );\n    }\n    if (\"string\" === typeof node)\n      (childIndex = task.blockedSegment),\n        null !== childIndex &&\n          (childIndex.lastPushedText = pushTextInstance(\n            childIndex.chunks,\n            node,\n            request.renderState,\n            childIndex.lastPushedText\n          ));\n    else if (\"number\" === typeof node || \"bigint\" === typeof node)\n      (childIndex = task.blockedSegment),\n        null !== childIndex &&\n          (childIndex.lastPushedText = pushTextInstance(\n            childIndex.chunks,\n            \"\" + node,\n            request.renderState,\n            childIndex.lastPushedText\n          ));\n  }\n}\nfunction renderChildrenArray(request, task, children, childIndex) {\n  var prevKeyPath = task.keyPath;\n  if (\n    -1 !== childIndex &&\n    ((task.keyPath = [task.keyPath, \"Fragment\", childIndex]),\n    null !== task.replay)\n  ) {\n    for (\n      var replay = task.replay, replayNodes = replay.nodes, j = 0;\n      j < replayNodes.length;\n      j++\n    ) {\n      var node = replayNodes[j];\n      if (node[1] === childIndex) {\n        childIndex = node[2];\n        node = node[3];\n        task.replay = { nodes: childIndex, slots: node, pendingTasks: 1 };\n        try {\n          renderChildrenArray(request, task, children, -1);\n          if (1 === task.replay.pendingTasks && 0 < task.replay.nodes.length)\n            throw Error(\n              \"Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering.\"\n            );\n          task.replay.pendingTasks--;\n        } catch (x) {\n          if (\n            \"object\" === typeof x &&\n            null !== x &&\n            (x === SuspenseException || \"function\" === typeof x.then)\n          )\n            throw x;\n          task.replay.pendingTasks--;\n          children = getThrownInfo(task.componentStack);\n          var boundary = task.blockedBoundary,\n            error = x;\n          children = logRecoverableError(request, error, children);\n          abortRemainingReplayNodes(\n            request,\n            boundary,\n            childIndex,\n            node,\n            error,\n            children\n          );\n        }\n        task.replay = replay;\n        replayNodes.splice(j, 1);\n        break;\n      }\n    }\n    task.keyPath = prevKeyPath;\n    return;\n  }\n  replay = task.treeContext;\n  replayNodes = children.length;\n  if (\n    null !== task.replay &&\n    ((j = task.replay.slots), null !== j && \"object\" === typeof j)\n  ) {\n    for (childIndex = 0; childIndex < replayNodes; childIndex++)\n      (node = children[childIndex]),\n        (task.treeContext = pushTreeContext(replay, replayNodes, childIndex)),\n        (boundary = j[childIndex]),\n        \"number\" === typeof boundary\n          ? (resumeNode(request, task, boundary, node, childIndex),\n            delete j[childIndex])\n          : renderNode(request, task, node, childIndex);\n    task.treeContext = replay;\n    task.keyPath = prevKeyPath;\n    return;\n  }\n  for (j = 0; j < replayNodes; j++)\n    (childIndex = children[j]),\n      (task.treeContext = pushTreeContext(replay, replayNodes, j)),\n      renderNode(request, task, childIndex, j);\n  task.treeContext = replay;\n  task.keyPath = prevKeyPath;\n}\nfunction untrackBoundary(request, boundary) {\n  request = request.trackedPostpones;\n  null !== request &&\n    ((boundary = boundary.trackedContentKeyPath),\n    null !== boundary &&\n      ((boundary = request.workingMap.get(boundary)),\n      void 0 !== boundary &&\n        ((boundary.length = 4), (boundary[2] = []), (boundary[3] = null))));\n}\nfunction spawnNewSuspendedReplayTask(request, task, thenableState) {\n  return createReplayTask(\n    request,\n    thenableState,\n    task.replay,\n    task.node,\n    task.childIndex,\n    task.blockedBoundary,\n    task.hoistableState,\n    task.abortSet,\n    task.keyPath,\n    task.formatContext,\n    task.context,\n    task.treeContext,\n    task.componentStack,\n    task.isFallback\n  );\n}\nfunction spawnNewSuspendedRenderTask(request, task, thenableState) {\n  var segment = task.blockedSegment,\n    newSegment = createPendingSegment(\n      request,\n      segment.chunks.length,\n      null,\n      task.formatContext,\n      segment.lastPushedText,\n      !0\n    );\n  segment.children.push(newSegment);\n  segment.lastPushedText = !1;\n  return createRenderTask(\n    request,\n    thenableState,\n    task.node,\n    task.childIndex,\n    task.blockedBoundary,\n    newSegment,\n    task.hoistableState,\n    task.abortSet,\n    task.keyPath,\n    task.formatContext,\n    task.context,\n    task.treeContext,\n    task.componentStack,\n    task.isFallback\n  );\n}\nfunction renderNode(request, task, node, childIndex) {\n  var previousFormatContext = task.formatContext,\n    previousContext = task.context,\n    previousKeyPath = task.keyPath,\n    previousTreeContext = task.treeContext,\n    previousComponentStack = task.componentStack,\n    segment = task.blockedSegment;\n  if (null === segment)\n    try {\n      return renderNodeDestructive(request, task, node, childIndex);\n    } catch (thrownValue) {\n      if (\n        (resetHooksState(),\n        (node =\n          thrownValue === SuspenseException\n            ? getSuspendedThenable()\n            : thrownValue),\n        \"object\" === typeof node && null !== node)\n      ) {\n        if (\"function\" === typeof node.then) {\n          childIndex = getThenableStateAfterSuspending();\n          request = spawnNewSuspendedReplayTask(request, task, childIndex).ping;\n          node.then(request, request);\n          task.formatContext = previousFormatContext;\n          task.context = previousContext;\n          task.keyPath = previousKeyPath;\n          task.treeContext = previousTreeContext;\n          task.componentStack = previousComponentStack;\n          switchContext(previousContext);\n          return;\n        }\n        if (\"Maximum call stack size exceeded\" === node.message) {\n          node = getThenableStateAfterSuspending();\n          node = spawnNewSuspendedReplayTask(request, task, node);\n          request.pingedTasks.push(node);\n          task.formatContext = previousFormatContext;\n          task.context = previousContext;\n          task.keyPath = previousKeyPath;\n          task.treeContext = previousTreeContext;\n          task.componentStack = previousComponentStack;\n          switchContext(previousContext);\n          return;\n        }\n      }\n    }\n  else {\n    var childrenLength = segment.children.length,\n      chunkLength = segment.chunks.length;\n    try {\n      return renderNodeDestructive(request, task, node, childIndex);\n    } catch (thrownValue$48) {\n      if (\n        (resetHooksState(),\n        (segment.children.length = childrenLength),\n        (segment.chunks.length = chunkLength),\n        (node =\n          thrownValue$48 === SuspenseException\n            ? getSuspendedThenable()\n            : thrownValue$48),\n        \"object\" === typeof node && null !== node)\n      ) {\n        if (\"function\" === typeof node.then) {\n          childIndex = getThenableStateAfterSuspending();\n          request = spawnNewSuspendedRenderTask(request, task, childIndex).ping;\n          node.then(request, request);\n          task.formatContext = previousFormatContext;\n          task.context = previousContext;\n          task.keyPath = previousKeyPath;\n          task.treeContext = previousTreeContext;\n          task.componentStack = previousComponentStack;\n          switchContext(previousContext);\n          return;\n        }\n        if (\"Maximum call stack size exceeded\" === node.message) {\n          node = getThenableStateAfterSuspending();\n          node = spawnNewSuspendedRenderTask(request, task, node);\n          request.pingedTasks.push(node);\n          task.formatContext = previousFormatContext;\n          task.context = previousContext;\n          task.keyPath = previousKeyPath;\n          task.treeContext = previousTreeContext;\n          task.componentStack = previousComponentStack;\n          switchContext(previousContext);\n          return;\n        }\n      }\n    }\n  }\n  task.formatContext = previousFormatContext;\n  task.context = previousContext;\n  task.keyPath = previousKeyPath;\n  task.treeContext = previousTreeContext;\n  switchContext(previousContext);\n  throw node;\n}\nfunction abortTaskSoft(task) {\n  var boundary = task.blockedBoundary;\n  task = task.blockedSegment;\n  null !== task && ((task.status = 3), finishedTask(this, boundary, task));\n}\nfunction abortRemainingReplayNodes(\n  request$jscomp$0,\n  boundary,\n  nodes,\n  slots,\n  error,\n  errorDigest$jscomp$0\n) {\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    if (4 === node.length)\n      abortRemainingReplayNodes(\n        request$jscomp$0,\n        boundary,\n        node[2],\n        node[3],\n        error,\n        errorDigest$jscomp$0\n      );\n    else {\n      node = node[5];\n      var request = request$jscomp$0,\n        errorDigest = errorDigest$jscomp$0,\n        resumedBoundary = createSuspenseBoundary(request, new Set());\n      resumedBoundary.parentFlushed = !0;\n      resumedBoundary.rootSegmentID = node;\n      resumedBoundary.status = 4;\n      resumedBoundary.errorDigest = errorDigest;\n      resumedBoundary.parentFlushed &&\n        request.clientRenderedBoundaries.push(resumedBoundary);\n    }\n  }\n  nodes.length = 0;\n  if (null !== slots) {\n    if (null === boundary)\n      throw Error(\n        \"We should not have any resumable nodes in the shell. This is a bug in React.\"\n      );\n    4 !== boundary.status &&\n      ((boundary.status = 4),\n      (boundary.errorDigest = errorDigest$jscomp$0),\n      boundary.parentFlushed &&\n        request$jscomp$0.clientRenderedBoundaries.push(boundary));\n    if (\"object\" === typeof slots) for (var index in slots) delete slots[index];\n  }\n}\nfunction abortTask(task, request, error) {\n  var boundary = task.blockedBoundary,\n    segment = task.blockedSegment;\n  if (null !== segment) {\n    if (6 === segment.status) return;\n    segment.status = 3;\n  }\n  segment = getThrownInfo(task.componentStack);\n  if (null === boundary) {\n    if (13 !== request.status && 14 !== request.status) {\n      boundary = task.replay;\n      if (null === boundary) {\n        logRecoverableError(request, error, segment);\n        fatalError(request, error);\n        return;\n      }\n      boundary.pendingTasks--;\n      0 === boundary.pendingTasks &&\n        0 < boundary.nodes.length &&\n        ((task = logRecoverableError(request, error, segment)),\n        abortRemainingReplayNodes(\n          request,\n          null,\n          boundary.nodes,\n          boundary.slots,\n          error,\n          task\n        ));\n      request.pendingRootTasks--;\n      0 === request.pendingRootTasks && completeShell(request);\n    }\n  } else\n    boundary.pendingTasks--,\n      4 !== boundary.status &&\n        ((boundary.status = 4),\n        (task = logRecoverableError(request, error, segment)),\n        (boundary.status = 4),\n        (boundary.errorDigest = task),\n        untrackBoundary(request, boundary),\n        boundary.parentFlushed &&\n          request.clientRenderedBoundaries.push(boundary)),\n      boundary.fallbackAbortableTasks.forEach(function (fallbackTask) {\n        return abortTask(fallbackTask, request, error);\n      }),\n      boundary.fallbackAbortableTasks.clear();\n  request.allPendingTasks--;\n  0 === request.allPendingTasks && completeAll(request);\n}\nfunction safelyEmitEarlyPreloads(request, shellComplete) {\n  try {\n    var renderState = request.renderState,\n      onHeaders = renderState.onHeaders;\n    if (onHeaders) {\n      var headers = renderState.headers;\n      if (headers) {\n        renderState.headers = null;\n        var linkHeader = headers.preconnects;\n        headers.fontPreloads &&\n          (linkHeader && (linkHeader += \", \"),\n          (linkHeader += headers.fontPreloads));\n        headers.highImagePreloads &&\n          (linkHeader && (linkHeader += \", \"),\n          (linkHeader += headers.highImagePreloads));\n        if (!shellComplete) {\n          var queueIter = renderState.styles.values(),\n            queueStep = queueIter.next();\n          b: for (\n            ;\n            0 < headers.remainingCapacity && !queueStep.done;\n            queueStep = queueIter.next()\n          )\n            for (\n              var sheetIter = queueStep.value.sheets.values(),\n                sheetStep = sheetIter.next();\n              0 < headers.remainingCapacity && !sheetStep.done;\n              sheetStep = sheetIter.next()\n            ) {\n              var sheet = sheetStep.value,\n                props = sheet.props,\n                key = props.href,\n                props$jscomp$0 = sheet.props,\n                header = getPreloadAsHeader(props$jscomp$0.href, \"style\", {\n                  crossOrigin: props$jscomp$0.crossOrigin,\n                  integrity: props$jscomp$0.integrity,\n                  nonce: props$jscomp$0.nonce,\n                  type: props$jscomp$0.type,\n                  fetchPriority: props$jscomp$0.fetchPriority,\n                  referrerPolicy: props$jscomp$0.referrerPolicy,\n                  media: props$jscomp$0.media\n                });\n              if (0 <= (headers.remainingCapacity -= header.length + 2))\n                (renderState.resets.style[key] = PRELOAD_NO_CREDS),\n                  linkHeader && (linkHeader += \", \"),\n                  (linkHeader += header),\n                  (renderState.resets.style[key] =\n                    \"string\" === typeof props.crossOrigin ||\n                    \"string\" === typeof props.integrity\n                      ? [props.crossOrigin, props.integrity]\n                      : PRELOAD_NO_CREDS);\n              else break b;\n            }\n        }\n        linkHeader ? onHeaders({ Link: linkHeader }) : onHeaders({});\n      }\n    }\n  } catch (error) {\n    logRecoverableError(request, error, {});\n  }\n}\nfunction completeShell(request) {\n  null === request.trackedPostpones && safelyEmitEarlyPreloads(request, !0);\n  request.onShellError = noop;\n  request = request.onShellReady;\n  request();\n}\nfunction completeAll(request) {\n  safelyEmitEarlyPreloads(\n    request,\n    null === request.trackedPostpones\n      ? !0\n      : null === request.completedRootSegment ||\n          5 !== request.completedRootSegment.status\n  );\n  request = request.onAllReady;\n  request();\n}\nfunction queueCompletedSegment(boundary, segment) {\n  if (\n    0 === segment.chunks.length &&\n    1 === segment.children.length &&\n    null === segment.children[0].boundary &&\n    -1 === segment.children[0].id\n  ) {\n    var childSegment = segment.children[0];\n    childSegment.id = segment.id;\n    childSegment.parentFlushed = !0;\n    1 === childSegment.status && queueCompletedSegment(boundary, childSegment);\n  } else boundary.completedSegments.push(segment);\n}\nfunction finishedTask(request, boundary, segment) {\n  if (null === boundary) {\n    if (null !== segment && segment.parentFlushed) {\n      if (null !== request.completedRootSegment)\n        throw Error(\n          \"There can only be one root segment. This is a bug in React.\"\n        );\n      request.completedRootSegment = segment;\n    }\n    request.pendingRootTasks--;\n    0 === request.pendingRootTasks && completeShell(request);\n  } else\n    boundary.pendingTasks--,\n      4 !== boundary.status &&\n        (0 === boundary.pendingTasks\n          ? (0 === boundary.status && (boundary.status = 1),\n            null !== segment &&\n              segment.parentFlushed &&\n              1 === segment.status &&\n              queueCompletedSegment(boundary, segment),\n            boundary.parentFlushed &&\n              request.completedBoundaries.push(boundary),\n            1 === boundary.status &&\n              (boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request),\n              boundary.fallbackAbortableTasks.clear()))\n          : null !== segment &&\n            segment.parentFlushed &&\n            1 === segment.status &&\n            (queueCompletedSegment(boundary, segment),\n            1 === boundary.completedSegments.length &&\n              boundary.parentFlushed &&\n              request.partialBoundaries.push(boundary)));\n  request.allPendingTasks--;\n  0 === request.allPendingTasks && completeAll(request);\n}\nfunction performWork(request$jscomp$2) {\n  if (14 !== request$jscomp$2.status && 13 !== request$jscomp$2.status) {\n    var prevContext = currentActiveSnapshot,\n      prevDispatcher = ReactSharedInternals.H;\n    ReactSharedInternals.H = HooksDispatcher;\n    var prevAsyncDispatcher = ReactSharedInternals.A;\n    ReactSharedInternals.A = DefaultAsyncDispatcher;\n    var prevRequest = currentRequest;\n    currentRequest = request$jscomp$2;\n    var prevResumableState = currentResumableState;\n    currentResumableState = request$jscomp$2.resumableState;\n    try {\n      var pingedTasks = request$jscomp$2.pingedTasks,\n        i;\n      for (i = 0; i < pingedTasks.length; i++) {\n        var task = pingedTasks[i],\n          request = request$jscomp$2,\n          segment = task.blockedSegment;\n        if (null === segment) {\n          var request$jscomp$0 = request;\n          if (0 !== task.replay.pendingTasks) {\n            switchContext(task.context);\n            try {\n              \"number\" === typeof task.replay.slots\n                ? resumeNode(\n                    request$jscomp$0,\n                    task,\n                    task.replay.slots,\n                    task.node,\n                    task.childIndex\n                  )\n                : retryNode(request$jscomp$0, task);\n              if (\n                1 === task.replay.pendingTasks &&\n                0 < task.replay.nodes.length\n              )\n                throw Error(\n                  \"Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering.\"\n                );\n              task.replay.pendingTasks--;\n              task.abortSet.delete(task);\n              finishedTask(request$jscomp$0, task.blockedBoundary, null);\n            } catch (thrownValue) {\n              resetHooksState();\n              var x =\n                thrownValue === SuspenseException\n                  ? getSuspendedThenable()\n                  : thrownValue;\n              if (\n                \"object\" === typeof x &&\n                null !== x &&\n                \"function\" === typeof x.then\n              ) {\n                var ping = task.ping;\n                x.then(ping, ping);\n                task.thenableState = getThenableStateAfterSuspending();\n              } else {\n                task.replay.pendingTasks--;\n                task.abortSet.delete(task);\n                var errorInfo = getThrownInfo(task.componentStack);\n                request = void 0;\n                var request$jscomp$1 = request$jscomp$0,\n                  boundary = task.blockedBoundary,\n                  error$jscomp$0 =\n                    12 === request$jscomp$0.status\n                      ? request$jscomp$0.fatalError\n                      : x,\n                  replayNodes = task.replay.nodes,\n                  resumeSlots = task.replay.slots;\n                request = logRecoverableError(\n                  request$jscomp$1,\n                  error$jscomp$0,\n                  errorInfo\n                );\n                abortRemainingReplayNodes(\n                  request$jscomp$1,\n                  boundary,\n                  replayNodes,\n                  resumeSlots,\n                  error$jscomp$0,\n                  request\n                );\n                request$jscomp$0.pendingRootTasks--;\n                0 === request$jscomp$0.pendingRootTasks &&\n                  completeShell(request$jscomp$0);\n                request$jscomp$0.allPendingTasks--;\n                0 === request$jscomp$0.allPendingTasks &&\n                  completeAll(request$jscomp$0);\n              }\n            } finally {\n            }\n          }\n        } else if (\n          ((request$jscomp$0 = void 0),\n          (request$jscomp$1 = segment),\n          0 === request$jscomp$1.status)\n        ) {\n          request$jscomp$1.status = 6;\n          switchContext(task.context);\n          var childrenLength = request$jscomp$1.children.length,\n            chunkLength = request$jscomp$1.chunks.length;\n          try {\n            retryNode(request, task),\n              request$jscomp$1.lastPushedText &&\n                request$jscomp$1.textEmbedded &&\n                request$jscomp$1.chunks.push(textSeparator),\n              task.abortSet.delete(task),\n              (request$jscomp$1.status = 1),\n              finishedTask(request, task.blockedBoundary, request$jscomp$1);\n          } catch (thrownValue) {\n            resetHooksState();\n            request$jscomp$1.children.length = childrenLength;\n            request$jscomp$1.chunks.length = chunkLength;\n            var x$jscomp$0 =\n              thrownValue === SuspenseException\n                ? getSuspendedThenable()\n                : 12 === request.status\n                  ? request.fatalError\n                  : thrownValue;\n            if (\n              \"object\" === typeof x$jscomp$0 &&\n              null !== x$jscomp$0 &&\n              \"function\" === typeof x$jscomp$0.then\n            ) {\n              request$jscomp$1.status = 0;\n              task.thenableState = getThenableStateAfterSuspending();\n              var ping$jscomp$0 = task.ping;\n              x$jscomp$0.then(ping$jscomp$0, ping$jscomp$0);\n            } else {\n              var errorInfo$jscomp$0 = getThrownInfo(task.componentStack);\n              task.abortSet.delete(task);\n              request$jscomp$1.status = 4;\n              var boundary$jscomp$0 = task.blockedBoundary;\n              request$jscomp$0 = logRecoverableError(\n                request,\n                x$jscomp$0,\n                errorInfo$jscomp$0\n              );\n              null === boundary$jscomp$0\n                ? fatalError(request, x$jscomp$0)\n                : (boundary$jscomp$0.pendingTasks--,\n                  4 !== boundary$jscomp$0.status &&\n                    ((boundary$jscomp$0.status = 4),\n                    (boundary$jscomp$0.errorDigest = request$jscomp$0),\n                    untrackBoundary(request, boundary$jscomp$0),\n                    boundary$jscomp$0.parentFlushed &&\n                      request.clientRenderedBoundaries.push(\n                        boundary$jscomp$0\n                      )));\n              request.allPendingTasks--;\n              0 === request.allPendingTasks && completeAll(request);\n            }\n          } finally {\n          }\n        }\n      }\n      pingedTasks.splice(0, i);\n      null !== request$jscomp$2.destination &&\n        flushCompletedQueues(request$jscomp$2, request$jscomp$2.destination);\n    } catch (error) {\n      logRecoverableError(request$jscomp$2, error, {}),\n        fatalError(request$jscomp$2, error);\n    } finally {\n      (currentResumableState = prevResumableState),\n        (ReactSharedInternals.H = prevDispatcher),\n        (ReactSharedInternals.A = prevAsyncDispatcher),\n        prevDispatcher === HooksDispatcher && switchContext(prevContext),\n        (currentRequest = prevRequest);\n    }\n  }\n}\nfunction flushSubtree(request, destination, segment, hoistableState) {\n  segment.parentFlushed = !0;\n  switch (segment.status) {\n    case 0:\n      segment.id = request.nextSegmentId++;\n    case 5:\n      return (\n        (hoistableState = segment.id),\n        (segment.lastPushedText = !1),\n        (segment.textEmbedded = !1),\n        (request = request.renderState),\n        writeChunk(destination, placeholder1),\n        writeChunk(destination, request.placeholderPrefix),\n        (request = stringToChunk(hoistableState.toString(16))),\n        writeChunk(destination, request),\n        writeChunkAndReturn(destination, placeholder2)\n      );\n    case 1:\n      segment.status = 2;\n      var r = !0,\n        chunks = segment.chunks,\n        chunkIdx = 0;\n      segment = segment.children;\n      for (var childIdx = 0; childIdx < segment.length; childIdx++) {\n        for (r = segment[childIdx]; chunkIdx < r.index; chunkIdx++)\n          writeChunk(destination, chunks[chunkIdx]);\n        r = flushSegment(request, destination, r, hoistableState);\n      }\n      for (; chunkIdx < chunks.length - 1; chunkIdx++)\n        writeChunk(destination, chunks[chunkIdx]);\n      chunkIdx < chunks.length &&\n        (r = writeChunkAndReturn(destination, chunks[chunkIdx]));\n      return r;\n    default:\n      throw Error(\n        \"Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.\"\n      );\n  }\n}\nfunction flushSegment(request, destination, segment, hoistableState) {\n  var boundary = segment.boundary;\n  if (null === boundary)\n    return flushSubtree(request, destination, segment, hoistableState);\n  boundary.parentFlushed = !0;\n  if (4 === boundary.status)\n    (boundary = boundary.errorDigest),\n      writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary),\n      writeChunk(destination, clientRenderedSuspenseBoundaryError1),\n      boundary &&\n        (writeChunk(destination, clientRenderedSuspenseBoundaryError1A),\n        writeChunk(destination, stringToChunk(escapeTextForBrowser(boundary))),\n        writeChunk(\n          destination,\n          clientRenderedSuspenseBoundaryErrorAttrInterstitial\n        )),\n      writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2),\n      flushSubtree(request, destination, segment, hoistableState);\n  else if (1 !== boundary.status)\n    0 === boundary.status && (boundary.rootSegmentID = request.nextSegmentId++),\n      0 < boundary.completedSegments.length &&\n        request.partialBoundaries.push(boundary),\n      writeStartPendingSuspenseBoundary(\n        destination,\n        request.renderState,\n        boundary.rootSegmentID\n      ),\n      hoistableState &&\n        ((boundary = boundary.fallbackState),\n        boundary.styles.forEach(hoistStyleQueueDependency, hoistableState),\n        boundary.stylesheets.forEach(\n          hoistStylesheetDependency,\n          hoistableState\n        )),\n      flushSubtree(request, destination, segment, hoistableState);\n  else if (boundary.byteSize > request.progressiveChunkSize)\n    (boundary.rootSegmentID = request.nextSegmentId++),\n      request.completedBoundaries.push(boundary),\n      writeStartPendingSuspenseBoundary(\n        destination,\n        request.renderState,\n        boundary.rootSegmentID\n      ),\n      flushSubtree(request, destination, segment, hoistableState);\n  else {\n    hoistableState &&\n      ((segment = boundary.contentState),\n      segment.styles.forEach(hoistStyleQueueDependency, hoistableState),\n      segment.stylesheets.forEach(hoistStylesheetDependency, hoistableState));\n    writeChunkAndReturn(destination, startCompletedSuspenseBoundary);\n    segment = boundary.completedSegments;\n    if (1 !== segment.length)\n      throw Error(\n        \"A previously unvisited boundary must have exactly one root segment. This is a bug in React.\"\n      );\n    flushSegment(request, destination, segment[0], hoistableState);\n  }\n  return writeChunkAndReturn(destination, endSuspenseBoundary);\n}\nfunction flushSegmentContainer(request, destination, segment, hoistableState) {\n  writeStartSegment(\n    destination,\n    request.renderState,\n    segment.parentFormatContext,\n    segment.id\n  );\n  flushSegment(request, destination, segment, hoistableState);\n  return writeEndSegment(destination, segment.parentFormatContext);\n}\nfunction flushCompletedBoundary(request, destination, boundary) {\n  for (\n    var completedSegments = boundary.completedSegments, i = 0;\n    i < completedSegments.length;\n    i++\n  )\n    flushPartiallyCompletedSegment(\n      request,\n      destination,\n      boundary,\n      completedSegments[i]\n    );\n  completedSegments.length = 0;\n  writeHoistablesForBoundary(\n    destination,\n    boundary.contentState,\n    request.renderState\n  );\n  completedSegments = request.resumableState;\n  request = request.renderState;\n  i = boundary.rootSegmentID;\n  boundary = boundary.contentState;\n  var requiresStyleInsertion = request.stylesToHoist;\n  request.stylesToHoist = !1;\n  writeChunk(destination, request.startInlineScript);\n  requiresStyleInsertion\n    ? 0 === (completedSegments.instructions & 2)\n      ? ((completedSegments.instructions |= 10),\n        writeChunk(destination, completeBoundaryWithStylesScript1FullBoth))\n      : 0 === (completedSegments.instructions & 8)\n        ? ((completedSegments.instructions |= 8),\n          writeChunk(destination, completeBoundaryWithStylesScript1FullPartial))\n        : writeChunk(destination, completeBoundaryWithStylesScript1Partial)\n    : 0 === (completedSegments.instructions & 2)\n      ? ((completedSegments.instructions |= 2),\n        writeChunk(destination, completeBoundaryScript1Full))\n      : writeChunk(destination, completeBoundaryScript1Partial);\n  completedSegments = stringToChunk(i.toString(16));\n  writeChunk(destination, request.boundaryPrefix);\n  writeChunk(destination, completedSegments);\n  writeChunk(destination, completeBoundaryScript2);\n  writeChunk(destination, request.segmentPrefix);\n  writeChunk(destination, completedSegments);\n  requiresStyleInsertion\n    ? (writeChunk(destination, completeBoundaryScript3a),\n      writeStyleResourceDependenciesInJS(destination, boundary))\n    : writeChunk(destination, completeBoundaryScript3b);\n  boundary = writeChunkAndReturn(destination, completeBoundaryScriptEnd);\n  return writeBootstrap(destination, request) && boundary;\n}\nfunction flushPartiallyCompletedSegment(\n  request,\n  destination,\n  boundary,\n  segment\n) {\n  if (2 === segment.status) return !0;\n  var hoistableState = boundary.contentState,\n    segmentID = segment.id;\n  if (-1 === segmentID) {\n    if (-1 === (segment.id = boundary.rootSegmentID))\n      throw Error(\n        \"A root segment ID must have been assigned by now. This is a bug in React.\"\n      );\n    return flushSegmentContainer(request, destination, segment, hoistableState);\n  }\n  if (segmentID === boundary.rootSegmentID)\n    return flushSegmentContainer(request, destination, segment, hoistableState);\n  flushSegmentContainer(request, destination, segment, hoistableState);\n  boundary = request.resumableState;\n  request = request.renderState;\n  writeChunk(destination, request.startInlineScript);\n  0 === (boundary.instructions & 1)\n    ? ((boundary.instructions |= 1),\n      writeChunk(destination, completeSegmentScript1Full))\n    : writeChunk(destination, completeSegmentScript1Partial);\n  writeChunk(destination, request.segmentPrefix);\n  segmentID = stringToChunk(segmentID.toString(16));\n  writeChunk(destination, segmentID);\n  writeChunk(destination, completeSegmentScript2);\n  writeChunk(destination, request.placeholderPrefix);\n  writeChunk(destination, segmentID);\n  destination = writeChunkAndReturn(destination, completeSegmentScriptEnd);\n  return destination;\n}\nfunction flushCompletedQueues(request, destination) {\n  currentView = new Uint8Array(2048);\n  writtenBytes = 0;\n  try {\n    if (!(0 < request.pendingRootTasks)) {\n      var i,\n        completedRootSegment = request.completedRootSegment;\n      if (null !== completedRootSegment) {\n        if (5 === completedRootSegment.status) return;\n        var renderState = request.renderState,\n          htmlChunks = renderState.htmlChunks,\n          headChunks = renderState.headChunks,\n          i$jscomp$0;\n        if (htmlChunks) {\n          for (i$jscomp$0 = 0; i$jscomp$0 < htmlChunks.length; i$jscomp$0++)\n            writeChunk(destination, htmlChunks[i$jscomp$0]);\n          if (headChunks)\n            for (i$jscomp$0 = 0; i$jscomp$0 < headChunks.length; i$jscomp$0++)\n              writeChunk(destination, headChunks[i$jscomp$0]);\n          else\n            writeChunk(destination, startChunkForTag(\"head\")),\n              writeChunk(destination, endOfStartTag);\n        } else if (headChunks)\n          for (i$jscomp$0 = 0; i$jscomp$0 < headChunks.length; i$jscomp$0++)\n            writeChunk(destination, headChunks[i$jscomp$0]);\n        var charsetChunks = renderState.charsetChunks;\n        for (i$jscomp$0 = 0; i$jscomp$0 < charsetChunks.length; i$jscomp$0++)\n          writeChunk(destination, charsetChunks[i$jscomp$0]);\n        charsetChunks.length = 0;\n        renderState.preconnects.forEach(flushResource, destination);\n        renderState.preconnects.clear();\n        var viewportChunks = renderState.viewportChunks;\n        for (i$jscomp$0 = 0; i$jscomp$0 < viewportChunks.length; i$jscomp$0++)\n          writeChunk(destination, viewportChunks[i$jscomp$0]);\n        viewportChunks.length = 0;\n        renderState.fontPreloads.forEach(flushResource, destination);\n        renderState.fontPreloads.clear();\n        renderState.highImagePreloads.forEach(flushResource, destination);\n        renderState.highImagePreloads.clear();\n        renderState.styles.forEach(flushStylesInPreamble, destination);\n        var importMapChunks = renderState.importMapChunks;\n        for (i$jscomp$0 = 0; i$jscomp$0 < importMapChunks.length; i$jscomp$0++)\n          writeChunk(destination, importMapChunks[i$jscomp$0]);\n        importMapChunks.length = 0;\n        renderState.bootstrapScripts.forEach(flushResource, destination);\n        renderState.scripts.forEach(flushResource, destination);\n        renderState.scripts.clear();\n        renderState.bulkPreloads.forEach(flushResource, destination);\n        renderState.bulkPreloads.clear();\n        var hoistableChunks = renderState.hoistableChunks;\n        for (i$jscomp$0 = 0; i$jscomp$0 < hoistableChunks.length; i$jscomp$0++)\n          writeChunk(destination, hoistableChunks[i$jscomp$0]);\n        hoistableChunks.length = 0;\n        htmlChunks &&\n          null === headChunks &&\n          writeChunk(destination, endChunkForTag(\"head\"));\n        flushSegment(request, destination, completedRootSegment, null);\n        request.completedRootSegment = null;\n        writeBootstrap(destination, request.renderState);\n      }\n      var renderState$jscomp$0 = request.renderState;\n      completedRootSegment = 0;\n      var viewportChunks$jscomp$0 = renderState$jscomp$0.viewportChunks;\n      for (\n        completedRootSegment = 0;\n        completedRootSegment < viewportChunks$jscomp$0.length;\n        completedRootSegment++\n      )\n        writeChunk(destination, viewportChunks$jscomp$0[completedRootSegment]);\n      viewportChunks$jscomp$0.length = 0;\n      renderState$jscomp$0.preconnects.forEach(flushResource, destination);\n      renderState$jscomp$0.preconnects.clear();\n      renderState$jscomp$0.fontPreloads.forEach(flushResource, destination);\n      renderState$jscomp$0.fontPreloads.clear();\n      renderState$jscomp$0.highImagePreloads.forEach(\n        flushResource,\n        destination\n      );\n      renderState$jscomp$0.highImagePreloads.clear();\n      renderState$jscomp$0.styles.forEach(preloadLateStyles, destination);\n      renderState$jscomp$0.scripts.forEach(flushResource, destination);\n      renderState$jscomp$0.scripts.clear();\n      renderState$jscomp$0.bulkPreloads.forEach(flushResource, destination);\n      renderState$jscomp$0.bulkPreloads.clear();\n      var hoistableChunks$jscomp$0 = renderState$jscomp$0.hoistableChunks;\n      for (\n        completedRootSegment = 0;\n        completedRootSegment < hoistableChunks$jscomp$0.length;\n        completedRootSegment++\n      )\n        writeChunk(destination, hoistableChunks$jscomp$0[completedRootSegment]);\n      hoistableChunks$jscomp$0.length = 0;\n      var clientRenderedBoundaries = request.clientRenderedBoundaries;\n      for (i = 0; i < clientRenderedBoundaries.length; i++) {\n        var boundary = clientRenderedBoundaries[i];\n        renderState$jscomp$0 = destination;\n        var resumableState = request.resumableState,\n          renderState$jscomp$1 = request.renderState,\n          id = boundary.rootSegmentID,\n          errorDigest = boundary.errorDigest;\n        writeChunk(\n          renderState$jscomp$0,\n          renderState$jscomp$1.startInlineScript\n        );\n        0 === (resumableState.instructions & 4)\n          ? ((resumableState.instructions |= 4),\n            writeChunk(renderState$jscomp$0, clientRenderScript1Full))\n          : writeChunk(renderState$jscomp$0, clientRenderScript1Partial);\n        writeChunk(renderState$jscomp$0, renderState$jscomp$1.boundaryPrefix);\n        writeChunk(renderState$jscomp$0, stringToChunk(id.toString(16)));\n        writeChunk(renderState$jscomp$0, clientRenderScript1A);\n        errorDigest &&\n          (writeChunk(\n            renderState$jscomp$0,\n            clientRenderErrorScriptArgInterstitial\n          ),\n          writeChunk(\n            renderState$jscomp$0,\n            stringToChunk(\n              escapeJSStringsForInstructionScripts(errorDigest || \"\")\n            )\n          ));\n        var JSCompiler_inline_result = writeChunkAndReturn(\n          renderState$jscomp$0,\n          clientRenderScriptEnd\n        );\n        if (!JSCompiler_inline_result) {\n          request.destination = null;\n          i++;\n          clientRenderedBoundaries.splice(0, i);\n          return;\n        }\n      }\n      clientRenderedBoundaries.splice(0, i);\n      var completedBoundaries = request.completedBoundaries;\n      for (i = 0; i < completedBoundaries.length; i++)\n        if (\n          !flushCompletedBoundary(request, destination, completedBoundaries[i])\n        ) {\n          request.destination = null;\n          i++;\n          completedBoundaries.splice(0, i);\n          return;\n        }\n      completedBoundaries.splice(0, i);\n      completeWriting(destination);\n      currentView = new Uint8Array(2048);\n      writtenBytes = 0;\n      var partialBoundaries = request.partialBoundaries;\n      for (i = 0; i < partialBoundaries.length; i++) {\n        var boundary$51 = partialBoundaries[i];\n        a: {\n          clientRenderedBoundaries = request;\n          boundary = destination;\n          var completedSegments = boundary$51.completedSegments;\n          for (\n            JSCompiler_inline_result = 0;\n            JSCompiler_inline_result < completedSegments.length;\n            JSCompiler_inline_result++\n          )\n            if (\n              !flushPartiallyCompletedSegment(\n                clientRenderedBoundaries,\n                boundary,\n                boundary$51,\n                completedSegments[JSCompiler_inline_result]\n              )\n            ) {\n              JSCompiler_inline_result++;\n              completedSegments.splice(0, JSCompiler_inline_result);\n              var JSCompiler_inline_result$jscomp$0 = !1;\n              break a;\n            }\n          completedSegments.splice(0, JSCompiler_inline_result);\n          JSCompiler_inline_result$jscomp$0 = writeHoistablesForBoundary(\n            boundary,\n            boundary$51.contentState,\n            clientRenderedBoundaries.renderState\n          );\n        }\n        if (!JSCompiler_inline_result$jscomp$0) {\n          request.destination = null;\n          i++;\n          partialBoundaries.splice(0, i);\n          return;\n        }\n      }\n      partialBoundaries.splice(0, i);\n      var largeBoundaries = request.completedBoundaries;\n      for (i = 0; i < largeBoundaries.length; i++)\n        if (!flushCompletedBoundary(request, destination, largeBoundaries[i])) {\n          request.destination = null;\n          i++;\n          largeBoundaries.splice(0, i);\n          return;\n        }\n      largeBoundaries.splice(0, i);\n    }\n  } finally {\n    0 === request.allPendingTasks &&\n    0 === request.pingedTasks.length &&\n    0 === request.clientRenderedBoundaries.length &&\n    0 === request.completedBoundaries.length\n      ? ((request.flushScheduled = !1),\n        (i = request.resumableState),\n        i.hasBody && writeChunk(destination, endChunkForTag(\"body\")),\n        i.hasHtml && writeChunk(destination, endChunkForTag(\"html\")),\n        completeWriting(destination),\n        (request.status = 14),\n        destination.close(),\n        (request.destination = null))\n      : completeWriting(destination);\n  }\n}\nfunction startWork(request) {\n  request.flushScheduled = null !== request.destination;\n  supportsRequestStorage\n    ? scheduleMicrotask(function () {\n        return requestStorage.run(request, performWork, request);\n      })\n    : scheduleMicrotask(function () {\n        return performWork(request);\n      });\n  setTimeoutOrImmediate(function () {\n    10 === request.status && (request.status = 11);\n    null === request.trackedPostpones &&\n      (supportsRequestStorage\n        ? requestStorage.run(\n            request,\n            enqueueEarlyPreloadsAfterInitialWork,\n            request\n          )\n        : enqueueEarlyPreloadsAfterInitialWork(request));\n  }, 0);\n}\nfunction enqueueEarlyPreloadsAfterInitialWork(request) {\n  safelyEmitEarlyPreloads(request, 0 === request.pendingRootTasks);\n}\nfunction enqueueFlush(request) {\n  !1 === request.flushScheduled &&\n    0 === request.pingedTasks.length &&\n    null !== request.destination &&\n    ((request.flushScheduled = !0),\n    setTimeoutOrImmediate(function () {\n      var destination = request.destination;\n      destination\n        ? flushCompletedQueues(request, destination)\n        : (request.flushScheduled = !1);\n    }, 0));\n}\nfunction startFlowing(request, destination) {\n  if (13 === request.status)\n    (request.status = 14), closeWithError(destination, request.fatalError);\n  else if (14 !== request.status && null === request.destination) {\n    request.destination = destination;\n    try {\n      flushCompletedQueues(request, destination);\n    } catch (error) {\n      logRecoverableError(request, error, {}), fatalError(request, error);\n    }\n  }\n}\nfunction abort(request, reason) {\n  if (11 === request.status || 10 === request.status) request.status = 12;\n  try {\n    var abortableTasks = request.abortableTasks;\n    if (0 < abortableTasks.size) {\n      var error =\n        void 0 === reason\n          ? Error(\"The render was aborted by the server without a reason.\")\n          : \"object\" === typeof reason &&\n              null !== reason &&\n              \"function\" === typeof reason.then\n            ? Error(\"The render was aborted by the server with a promise.\")\n            : reason;\n      request.fatalError = error;\n      abortableTasks.forEach(function (task) {\n        return abortTask(task, request, error);\n      });\n      abortableTasks.clear();\n    }\n    null !== request.destination &&\n      flushCompletedQueues(request, request.destination);\n  } catch (error$53) {\n    logRecoverableError(request, error$53, {}), fatalError(request, error$53);\n  }\n}\nfunction ensureCorrectIsomorphicReactVersion() {\n  var isomorphicReactPackageVersion = React.version;\n  if (\"19.0.0-rc-02c0e824-20241028\" !== isomorphicReactPackageVersion)\n    throw Error(\n      'Incompatible React versions: The \"react\" and \"react-dom\" packages must have the exact same version. Instead got:\\n  - react:      ' +\n        (isomorphicReactPackageVersion +\n          \"\\n  - react-dom:  19.0.0-rc-02c0e824-20241028\\nLearn more: https://react.dev/warnings/version-mismatch\")\n    );\n}\nensureCorrectIsomorphicReactVersion();\nensureCorrectIsomorphicReactVersion();\nexports.prerender = function (children, options) {\n  return new Promise(function (resolve, reject) {\n    var onHeaders = options ? options.onHeaders : void 0,\n      onHeadersImpl;\n    onHeaders &&\n      (onHeadersImpl = function (headersDescriptor) {\n        onHeaders(new Headers(headersDescriptor));\n      });\n    var resources = createResumableState(\n        options ? options.identifierPrefix : void 0,\n        options ? options.unstable_externalRuntimeSrc : void 0,\n        options ? options.bootstrapScriptContent : void 0,\n        options ? options.bootstrapScripts : void 0,\n        options ? options.bootstrapModules : void 0\n      ),\n      request = createPrerenderRequest(\n        children,\n        resources,\n        createRenderState(\n          resources,\n          void 0,\n          options ? options.unstable_externalRuntimeSrc : void 0,\n          options ? options.importMap : void 0,\n          onHeadersImpl,\n          options ? options.maxHeadersLength : void 0\n        ),\n        createRootFormatContext(options ? options.namespaceURI : void 0),\n        options ? options.progressiveChunkSize : void 0,\n        options ? options.onError : void 0,\n        function () {\n          var result = {\n            prelude: new ReadableStream(\n              {\n                type: \"bytes\",\n                pull: function (controller) {\n                  startFlowing(request, controller);\n                },\n                cancel: function (reason) {\n                  request.destination = null;\n                  abort(request, reason);\n                }\n              },\n              { highWaterMark: 0 }\n            )\n          };\n          resolve(result);\n        },\n        void 0,\n        void 0,\n        reject,\n        options ? options.onPostpone : void 0\n      );\n    if (options && options.signal) {\n      var signal = options.signal;\n      if (signal.aborted) abort(request, signal.reason);\n      else {\n        var listener = function () {\n          abort(request, signal.reason);\n          signal.removeEventListener(\"abort\", listener);\n        };\n        signal.addEventListener(\"abort\", listener);\n      }\n    }\n    startWork(request);\n  });\n};\nexports.renderToReadableStream = function (children, options) {\n  return new Promise(function (resolve, reject) {\n    var onFatalError,\n      onAllReady,\n      allReady = new Promise(function (res, rej) {\n        onAllReady = res;\n        onFatalError = rej;\n      }),\n      onHeaders = options ? options.onHeaders : void 0,\n      onHeadersImpl;\n    onHeaders &&\n      (onHeadersImpl = function (headersDescriptor) {\n        onHeaders(new Headers(headersDescriptor));\n      });\n    var resumableState = createResumableState(\n        options ? options.identifierPrefix : void 0,\n        options ? options.unstable_externalRuntimeSrc : void 0,\n        options ? options.bootstrapScriptContent : void 0,\n        options ? options.bootstrapScripts : void 0,\n        options ? options.bootstrapModules : void 0\n      ),\n      request = createRequest(\n        children,\n        resumableState,\n        createRenderState(\n          resumableState,\n          options ? options.nonce : void 0,\n          options ? options.unstable_externalRuntimeSrc : void 0,\n          options ? options.importMap : void 0,\n          onHeadersImpl,\n          options ? options.maxHeadersLength : void 0\n        ),\n        createRootFormatContext(options ? options.namespaceURI : void 0),\n        options ? options.progressiveChunkSize : void 0,\n        options ? options.onError : void 0,\n        onAllReady,\n        function () {\n          var stream = new ReadableStream(\n            {\n              type: \"bytes\",\n              pull: function (controller) {\n                startFlowing(request, controller);\n              },\n              cancel: function (reason) {\n                request.destination = null;\n                abort(request, reason);\n              }\n            },\n            { highWaterMark: 0 }\n          );\n          stream.allReady = allReady;\n          resolve(stream);\n        },\n        function (error) {\n          allReady.catch(function () {});\n          reject(error);\n        },\n        onFatalError,\n        options ? options.onPostpone : void 0,\n        options ? options.formState : void 0\n      );\n    if (options && options.signal) {\n      var signal = options.signal;\n      if (signal.aborted) abort(request, signal.reason);\n      else {\n        var listener = function () {\n          abort(request, signal.reason);\n          signal.removeEventListener(\"abort\", listener);\n        };\n        signal.addEventListener(\"abort\", listener);\n      }\n    }\n    startWork(request);\n  });\n};\n\n// This is a patch added by Next.js\nconst setTimeoutOrImmediate =\n  typeof globalThis['set' + 'Immediate'] === 'function' &&\n  // edge runtime sandbox defines a stub for setImmediate\n  // (see 'addStub' in packages/next/src/server/web/sandbox/context.ts)\n  // but it's made non-enumerable, so we can detect it\n  globalThis.propertyIsEnumerable('setImmediate')\n    ? globalThis['set' + 'Immediate']\n    : setTimeout;\n\nexports.version = \"19.0.0-rc-02c0e824-20241028\";\n","/**\n * @license React\n * react-dom.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"next/dist/compiled/react\");\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nfunction noop() {}\nvar Internals = {\n    d: {\n      f: noop,\n      r: function () {\n        throw Error(formatProdErrorMessage(522));\n      },\n      D: noop,\n      C: noop,\n      L: noop,\n      m: noop,\n      X: noop,\n      S: noop,\n      M: noop\n    },\n    p: 0,\n    findDOMNode: null\n  },\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\nfunction createPortal$1(children, containerInfo, implementation) {\n  var key =\n    3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: REACT_PORTAL_TYPE,\n    key: null == key ? null : \"\" + key,\n    children: children,\n    containerInfo: containerInfo,\n    implementation: implementation\n  };\n}\nvar ReactSharedInternals =\n  React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\nfunction getCrossOriginStringAs(as, input) {\n  if (\"font\" === as) return \"\";\n  if (\"string\" === typeof input)\n    return \"use-credentials\" === input ? input : \"\";\n}\nexports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  Internals;\nexports.createPortal = function (children, container) {\n  var key =\n    2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  if (\n    !container ||\n    (1 !== container.nodeType &&\n      9 !== container.nodeType &&\n      11 !== container.nodeType)\n  )\n    throw Error(formatProdErrorMessage(299));\n  return createPortal$1(children, container, null, key);\n};\nexports.flushSync = function (fn) {\n  var previousTransition = ReactSharedInternals.T,\n    previousUpdatePriority = Internals.p;\n  try {\n    if (((ReactSharedInternals.T = null), (Internals.p = 2), fn)) return fn();\n  } finally {\n    (ReactSharedInternals.T = previousTransition),\n      (Internals.p = previousUpdatePriority),\n      Internals.d.f();\n  }\n};\nexports.preconnect = function (href, options) {\n  \"string\" === typeof href &&\n    (options\n      ? ((options = options.crossOrigin),\n        (options =\n          \"string\" === typeof options\n            ? \"use-credentials\" === options\n              ? options\n              : \"\"\n            : void 0))\n      : (options = null),\n    Internals.d.C(href, options));\n};\nexports.prefetchDNS = function (href) {\n  \"string\" === typeof href && Internals.d.D(href);\n};\nexports.preinit = function (href, options) {\n  if (\"string\" === typeof href && options && \"string\" === typeof options.as) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin),\n      integrity =\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      fetchPriority =\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0;\n    \"style\" === as\n      ? Internals.d.S(\n          href,\n          \"string\" === typeof options.precedence ? options.precedence : void 0,\n          {\n            crossOrigin: crossOrigin,\n            integrity: integrity,\n            fetchPriority: fetchPriority\n          }\n        )\n      : \"script\" === as &&\n        Internals.d.X(href, {\n          crossOrigin: crossOrigin,\n          integrity: integrity,\n          fetchPriority: fetchPriority,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n  }\n};\nexports.preinitModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (\"object\" === typeof options && null !== options) {\n      if (null == options.as || \"script\" === options.as) {\n        var crossOrigin = getCrossOriginStringAs(\n          options.as,\n          options.crossOrigin\n        );\n        Internals.d.M(href, {\n          crossOrigin: crossOrigin,\n          integrity:\n            \"string\" === typeof options.integrity ? options.integrity : void 0,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n      }\n    } else null == options && Internals.d.M(href);\n};\nexports.preload = function (href, options) {\n  if (\n    \"string\" === typeof href &&\n    \"object\" === typeof options &&\n    null !== options &&\n    \"string\" === typeof options.as\n  ) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin);\n    Internals.d.L(href, as, {\n      crossOrigin: crossOrigin,\n      integrity:\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      nonce: \"string\" === typeof options.nonce ? options.nonce : void 0,\n      type: \"string\" === typeof options.type ? options.type : void 0,\n      fetchPriority:\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0,\n      referrerPolicy:\n        \"string\" === typeof options.referrerPolicy\n          ? options.referrerPolicy\n          : void 0,\n      imageSrcSet:\n        \"string\" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,\n      imageSizes:\n        \"string\" === typeof options.imageSizes ? options.imageSizes : void 0,\n      media: \"string\" === typeof options.media ? options.media : void 0\n    });\n  }\n};\nexports.preloadModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (options) {\n      var crossOrigin = getCrossOriginStringAs(options.as, options.crossOrigin);\n      Internals.d.m(href, {\n        as:\n          \"string\" === typeof options.as && \"script\" !== options.as\n            ? options.as\n            : void 0,\n        crossOrigin: crossOrigin,\n        integrity:\n          \"string\" === typeof options.integrity ? options.integrity : void 0\n      });\n    } else Internals.d.m(href);\n};\nexports.requestFormReset = function (form) {\n  Internals.d.r(form);\n};\nexports.unstable_batchedUpdates = function (fn, a) {\n  return fn(a);\n};\nexports.useFormState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useFormState(action, initialState, permalink);\n};\nexports.useFormStatus = function () {\n  return ReactSharedInternals.H.useHostTransitionStatus();\n};\nexports.version = \"19.0.0-rc-02c0e824-20241028\";\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","'use strict';\n\nvar s;\nif (process.env.NODE_ENV === 'production') {\n  s = require('./cjs/react-dom-server.edge.production.js');\n} else {\n  s = require('./cjs/react-dom-server.edge.development.js');\n}\n\nexports.version = s.version;\nexports.prerender = s.prerender;\nexports.resumeAndPrerender = s.resumeAndPrerender;\n","/**\n * @license React\n * react-server-dom-webpack-client.edge.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar ReactDOM = require(\"react-dom\"),\n  decoderOptions = { stream: !0 };\nfunction resolveClientReference(bundlerConfig, metadata) {\n  if (bundlerConfig) {\n    var moduleExports = bundlerConfig[metadata[0]];\n    if ((bundlerConfig = moduleExports && moduleExports[metadata[2]]))\n      moduleExports = bundlerConfig.name;\n    else {\n      bundlerConfig = moduleExports && moduleExports[\"*\"];\n      if (!bundlerConfig)\n        throw Error(\n          'Could not find the module \"' +\n            metadata[0] +\n            '\" in the React Server Consumer Manifest. This is probably a bug in the React Server Components bundler.'\n        );\n      moduleExports = metadata[2];\n    }\n    return 4 === metadata.length\n      ? [bundlerConfig.id, bundlerConfig.chunks, moduleExports, 1]\n      : [bundlerConfig.id, bundlerConfig.chunks, moduleExports];\n  }\n  return metadata;\n}\nfunction resolveServerReference(bundlerConfig, id) {\n  var name = \"\",\n    resolvedModuleData = bundlerConfig[id];\n  if (resolvedModuleData) name = resolvedModuleData.name;\n  else {\n    var idx = id.lastIndexOf(\"#\");\n    -1 !== idx &&\n      ((name = id.slice(idx + 1)),\n      (resolvedModuleData = bundlerConfig[id.slice(0, idx)]));\n    if (!resolvedModuleData)\n      throw Error(\n        'Could not find the module \"' +\n          id +\n          '\" in the React Server Manifest. This is probably a bug in the React Server Components bundler.'\n      );\n  }\n  return resolvedModuleData.async\n    ? [resolvedModuleData.id, resolvedModuleData.chunks, name, 1]\n    : [resolvedModuleData.id, resolvedModuleData.chunks, name];\n}\nvar chunkCache = new Map();\nfunction requireAsyncModule(id) {\n  var promise = globalThis.__next_require__(id);\n  if (\"function\" !== typeof promise.then || \"fulfilled\" === promise.status)\n    return null;\n  promise.then(\n    function (value) {\n      promise.status = \"fulfilled\";\n      promise.value = value;\n    },\n    function (reason) {\n      promise.status = \"rejected\";\n      promise.reason = reason;\n    }\n  );\n  return promise;\n}\nfunction ignoreReject() {}\nfunction preloadModule(metadata) {\n  for (var chunks = metadata[1], promises = [], i = 0; i < chunks.length; ) {\n    var chunkId = chunks[i++];\n    chunks[i++];\n    var entry = chunkCache.get(chunkId);\n    if (void 0 === entry) {\n      entry = __webpack_chunk_load__(chunkId);\n      promises.push(entry);\n      var resolve = chunkCache.set.bind(chunkCache, chunkId, null);\n      entry.then(resolve, ignoreReject);\n      chunkCache.set(chunkId, entry);\n    } else null !== entry && promises.push(entry);\n  }\n  return 4 === metadata.length\n    ? 0 === promises.length\n      ? requireAsyncModule(metadata[0])\n      : Promise.all(promises).then(function () {\n          return requireAsyncModule(metadata[0]);\n        })\n    : 0 < promises.length\n      ? Promise.all(promises)\n      : null;\n}\nfunction requireModule(metadata) {\n  var moduleExports = globalThis.__next_require__(metadata[0]);\n  if (4 === metadata.length && \"function\" === typeof moduleExports.then)\n    if (\"fulfilled\" === moduleExports.status)\n      moduleExports = moduleExports.value;\n    else throw moduleExports.reason;\n  return \"*\" === metadata[2]\n    ? moduleExports\n    : \"\" === metadata[2]\n      ? moduleExports.__esModule\n        ? moduleExports.default\n        : moduleExports\n      : moduleExports[metadata[2]];\n}\nfunction prepareDestinationWithChunks(moduleLoading, chunks, nonce$jscomp$0) {\n  if (null !== moduleLoading)\n    for (var i = 1; i < chunks.length; i += 2) {\n      var nonce = nonce$jscomp$0,\n        JSCompiler_temp_const = ReactDOMSharedInternals.d,\n        JSCompiler_temp_const$jscomp$0 = JSCompiler_temp_const.X,\n        JSCompiler_temp_const$jscomp$1 = moduleLoading.prefix + chunks[i];\n      var JSCompiler_inline_result = moduleLoading.crossOrigin;\n      JSCompiler_inline_result =\n        \"string\" === typeof JSCompiler_inline_result\n          ? \"use-credentials\" === JSCompiler_inline_result\n            ? JSCompiler_inline_result\n            : \"\"\n          : void 0;\n      JSCompiler_temp_const$jscomp$0.call(\n        JSCompiler_temp_const,\n        JSCompiler_temp_const$jscomp$1,\n        { crossOrigin: JSCompiler_inline_result, nonce: nonce }\n      );\n    }\n}\nvar ReactDOMSharedInternals =\n    ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ASYNC_ITERATOR = Symbol.asyncIterator,\n  isArrayImpl = Array.isArray,\n  getPrototypeOf = Object.getPrototypeOf,\n  ObjectPrototype = Object.prototype,\n  knownServerReferences = new WeakMap();\nfunction serializeNumber(number) {\n  return Number.isFinite(number)\n    ? 0 === number && -Infinity === 1 / number\n      ? \"$-0\"\n      : number\n    : Infinity === number\n      ? \"$Infinity\"\n      : -Infinity === number\n        ? \"$-Infinity\"\n        : \"$NaN\";\n}\nfunction processReply(\n  root,\n  formFieldPrefix,\n  temporaryReferences,\n  resolve,\n  reject\n) {\n  function serializeTypedArray(tag, typedArray) {\n    typedArray = new Blob([\n      new Uint8Array(\n        typedArray.buffer,\n        typedArray.byteOffset,\n        typedArray.byteLength\n      )\n    ]);\n    var blobId = nextPartId++;\n    null === formData && (formData = new FormData());\n    formData.append(formFieldPrefix + blobId, typedArray);\n    return \"$\" + tag + blobId.toString(16);\n  }\n  function serializeBinaryReader(reader) {\n    function progress(entry) {\n      entry.done\n        ? ((entry = nextPartId++),\n          data.append(formFieldPrefix + entry, new Blob(buffer)),\n          data.append(\n            formFieldPrefix + streamId,\n            '\"$o' + entry.toString(16) + '\"'\n          ),\n          data.append(formFieldPrefix + streamId, \"C\"),\n          pendingParts--,\n          0 === pendingParts && resolve(data))\n        : (buffer.push(entry.value),\n          reader.read(new Uint8Array(1024)).then(progress, reject));\n    }\n    null === formData && (formData = new FormData());\n    var data = formData;\n    pendingParts++;\n    var streamId = nextPartId++,\n      buffer = [];\n    reader.read(new Uint8Array(1024)).then(progress, reject);\n    return \"$r\" + streamId.toString(16);\n  }\n  function serializeReader(reader) {\n    function progress(entry) {\n      if (entry.done)\n        data.append(formFieldPrefix + streamId, \"C\"),\n          pendingParts--,\n          0 === pendingParts && resolve(data);\n      else\n        try {\n          var partJSON = JSON.stringify(entry.value, resolveToJSON);\n          data.append(formFieldPrefix + streamId, partJSON);\n          reader.read().then(progress, reject);\n        } catch (x) {\n          reject(x);\n        }\n    }\n    null === formData && (formData = new FormData());\n    var data = formData;\n    pendingParts++;\n    var streamId = nextPartId++;\n    reader.read().then(progress, reject);\n    return \"$R\" + streamId.toString(16);\n  }\n  function serializeReadableStream(stream) {\n    try {\n      var binaryReader = stream.getReader({ mode: \"byob\" });\n    } catch (x) {\n      return serializeReader(stream.getReader());\n    }\n    return serializeBinaryReader(binaryReader);\n  }\n  function serializeAsyncIterable(iterable, iterator) {\n    function progress(entry) {\n      if (entry.done) {\n        if (void 0 === entry.value)\n          data.append(formFieldPrefix + streamId, \"C\");\n        else\n          try {\n            var partJSON = JSON.stringify(entry.value, resolveToJSON);\n            data.append(formFieldPrefix + streamId, \"C\" + partJSON);\n          } catch (x) {\n            reject(x);\n            return;\n          }\n        pendingParts--;\n        0 === pendingParts && resolve(data);\n      } else\n        try {\n          var partJSON$22 = JSON.stringify(entry.value, resolveToJSON);\n          data.append(formFieldPrefix + streamId, partJSON$22);\n          iterator.next().then(progress, reject);\n        } catch (x$23) {\n          reject(x$23);\n        }\n    }\n    null === formData && (formData = new FormData());\n    var data = formData;\n    pendingParts++;\n    var streamId = nextPartId++;\n    iterable = iterable === iterator;\n    iterator.next().then(progress, reject);\n    return \"$\" + (iterable ? \"x\" : \"X\") + streamId.toString(16);\n  }\n  function resolveToJSON(key, value) {\n    if (null === value) return null;\n    if (\"object\" === typeof value) {\n      switch (value.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          if (void 0 !== temporaryReferences && -1 === key.indexOf(\":\")) {\n            var parentReference = writtenObjects.get(this);\n            if (void 0 !== parentReference)\n              return (\n                temporaryReferences.set(parentReference + \":\" + key, value),\n                \"$T\"\n              );\n          }\n          throw Error(\n            \"React Element cannot be passed to Server Functions from the Client without a temporary reference set. Pass a TemporaryReferenceSet to the options.\"\n          );\n        case REACT_LAZY_TYPE:\n          parentReference = value._payload;\n          var init = value._init;\n          null === formData && (formData = new FormData());\n          pendingParts++;\n          try {\n            var resolvedModel = init(parentReference),\n              lazyId = nextPartId++,\n              partJSON = serializeModel(resolvedModel, lazyId);\n            formData.append(formFieldPrefix + lazyId, partJSON);\n            return \"$\" + lazyId.toString(16);\n          } catch (x) {\n            if (\n              \"object\" === typeof x &&\n              null !== x &&\n              \"function\" === typeof x.then\n            ) {\n              pendingParts++;\n              var lazyId$24 = nextPartId++;\n              parentReference = function () {\n                try {\n                  var partJSON$25 = serializeModel(value, lazyId$24),\n                    data$26 = formData;\n                  data$26.append(formFieldPrefix + lazyId$24, partJSON$25);\n                  pendingParts--;\n                  0 === pendingParts && resolve(data$26);\n                } catch (reason) {\n                  reject(reason);\n                }\n              };\n              x.then(parentReference, parentReference);\n              return \"$\" + lazyId$24.toString(16);\n            }\n            reject(x);\n            return null;\n          } finally {\n            pendingParts--;\n          }\n      }\n      if (\"function\" === typeof value.then) {\n        null === formData && (formData = new FormData());\n        pendingParts++;\n        var promiseId = nextPartId++;\n        value.then(function (partValue) {\n          try {\n            var partJSON$28 = serializeModel(partValue, promiseId);\n            partValue = formData;\n            partValue.append(formFieldPrefix + promiseId, partJSON$28);\n            pendingParts--;\n            0 === pendingParts && resolve(partValue);\n          } catch (reason) {\n            reject(reason);\n          }\n        }, reject);\n        return \"$@\" + promiseId.toString(16);\n      }\n      parentReference = writtenObjects.get(value);\n      if (void 0 !== parentReference)\n        if (modelRoot === value) modelRoot = null;\n        else return parentReference;\n      else\n        -1 === key.indexOf(\":\") &&\n          ((parentReference = writtenObjects.get(this)),\n          void 0 !== parentReference &&\n            ((key = parentReference + \":\" + key),\n            writtenObjects.set(value, key),\n            void 0 !== temporaryReferences &&\n              temporaryReferences.set(key, value)));\n      if (isArrayImpl(value)) return value;\n      if (value instanceof FormData) {\n        null === formData && (formData = new FormData());\n        var data$32 = formData;\n        key = nextPartId++;\n        var prefix = formFieldPrefix + key + \"_\";\n        value.forEach(function (originalValue, originalKey) {\n          data$32.append(prefix + originalKey, originalValue);\n        });\n        return \"$K\" + key.toString(16);\n      }\n      if (value instanceof Map)\n        return (\n          (key = nextPartId++),\n          (parentReference = serializeModel(Array.from(value), key)),\n          null === formData && (formData = new FormData()),\n          formData.append(formFieldPrefix + key, parentReference),\n          \"$Q\" + key.toString(16)\n        );\n      if (value instanceof Set)\n        return (\n          (key = nextPartId++),\n          (parentReference = serializeModel(Array.from(value), key)),\n          null === formData && (formData = new FormData()),\n          formData.append(formFieldPrefix + key, parentReference),\n          \"$W\" + key.toString(16)\n        );\n      if (value instanceof ArrayBuffer)\n        return (\n          (key = new Blob([value])),\n          (parentReference = nextPartId++),\n          null === formData && (formData = new FormData()),\n          formData.append(formFieldPrefix + parentReference, key),\n          \"$A\" + parentReference.toString(16)\n        );\n      if (value instanceof Int8Array) return serializeTypedArray(\"O\", value);\n      if (value instanceof Uint8Array) return serializeTypedArray(\"o\", value);\n      if (value instanceof Uint8ClampedArray)\n        return serializeTypedArray(\"U\", value);\n      if (value instanceof Int16Array) return serializeTypedArray(\"S\", value);\n      if (value instanceof Uint16Array) return serializeTypedArray(\"s\", value);\n      if (value instanceof Int32Array) return serializeTypedArray(\"L\", value);\n      if (value instanceof Uint32Array) return serializeTypedArray(\"l\", value);\n      if (value instanceof Float32Array) return serializeTypedArray(\"G\", value);\n      if (value instanceof Float64Array) return serializeTypedArray(\"g\", value);\n      if (value instanceof BigInt64Array)\n        return serializeTypedArray(\"M\", value);\n      if (value instanceof BigUint64Array)\n        return serializeTypedArray(\"m\", value);\n      if (value instanceof DataView) return serializeTypedArray(\"V\", value);\n      if (\"function\" === typeof Blob && value instanceof Blob)\n        return (\n          null === formData && (formData = new FormData()),\n          (key = nextPartId++),\n          formData.append(formFieldPrefix + key, value),\n          \"$B\" + key.toString(16)\n        );\n      if ((key = getIteratorFn(value)))\n        return (\n          (parentReference = key.call(value)),\n          parentReference === value\n            ? ((key = nextPartId++),\n              (parentReference = serializeModel(\n                Array.from(parentReference),\n                key\n              )),\n              null === formData && (formData = new FormData()),\n              formData.append(formFieldPrefix + key, parentReference),\n              \"$i\" + key.toString(16))\n            : Array.from(parentReference)\n        );\n      if (\n        \"function\" === typeof ReadableStream &&\n        value instanceof ReadableStream\n      )\n        return serializeReadableStream(value);\n      key = value[ASYNC_ITERATOR];\n      if (\"function\" === typeof key)\n        return serializeAsyncIterable(value, key.call(value));\n      key = getPrototypeOf(value);\n      if (\n        key !== ObjectPrototype &&\n        (null === key || null !== getPrototypeOf(key))\n      ) {\n        if (void 0 === temporaryReferences)\n          throw Error(\n            \"Only plain objects, and a few built-ins, can be passed to Server Actions. Classes or null prototypes are not supported.\"\n          );\n        return \"$T\";\n      }\n      return value;\n    }\n    if (\"string\" === typeof value) {\n      if (\"Z\" === value[value.length - 1] && this[key] instanceof Date)\n        return \"$D\" + value;\n      key = \"$\" === value[0] ? \"$\" + value : value;\n      return key;\n    }\n    if (\"boolean\" === typeof value) return value;\n    if (\"number\" === typeof value) return serializeNumber(value);\n    if (\"undefined\" === typeof value) return \"$undefined\";\n    if (\"function\" === typeof value) {\n      parentReference = knownServerReferences.get(value);\n      if (void 0 !== parentReference)\n        return (\n          (key = JSON.stringify(parentReference, resolveToJSON)),\n          null === formData && (formData = new FormData()),\n          (parentReference = nextPartId++),\n          formData.set(formFieldPrefix + parentReference, key),\n          \"$F\" + parentReference.toString(16)\n        );\n      if (\n        void 0 !== temporaryReferences &&\n        -1 === key.indexOf(\":\") &&\n        ((parentReference = writtenObjects.get(this)),\n        void 0 !== parentReference)\n      )\n        return (\n          temporaryReferences.set(parentReference + \":\" + key, value), \"$T\"\n        );\n      throw Error(\n        \"Client Functions cannot be passed directly to Server Functions. Only Functions passed from the Server can be passed back again.\"\n      );\n    }\n    if (\"symbol\" === typeof value) {\n      if (\n        void 0 !== temporaryReferences &&\n        -1 === key.indexOf(\":\") &&\n        ((parentReference = writtenObjects.get(this)),\n        void 0 !== parentReference)\n      )\n        return (\n          temporaryReferences.set(parentReference + \":\" + key, value), \"$T\"\n        );\n      throw Error(\n        \"Symbols cannot be passed to a Server Function without a temporary reference set. Pass a TemporaryReferenceSet to the options.\"\n      );\n    }\n    if (\"bigint\" === typeof value) return \"$n\" + value.toString(10);\n    throw Error(\n      \"Type \" +\n        typeof value +\n        \" is not supported as an argument to a Server Function.\"\n    );\n  }\n  function serializeModel(model, id) {\n    \"object\" === typeof model &&\n      null !== model &&\n      ((id = \"$\" + id.toString(16)),\n      writtenObjects.set(model, id),\n      void 0 !== temporaryReferences && temporaryReferences.set(id, model));\n    modelRoot = model;\n    return JSON.stringify(model, resolveToJSON);\n  }\n  var nextPartId = 1,\n    pendingParts = 0,\n    formData = null,\n    writtenObjects = new WeakMap(),\n    modelRoot = root,\n    json = serializeModel(root, 0);\n  null === formData\n    ? resolve(json)\n    : (formData.set(formFieldPrefix + \"0\", json),\n      0 === pendingParts && resolve(formData));\n  return function () {\n    0 < pendingParts &&\n      ((pendingParts = 0),\n      null === formData ? resolve(json) : resolve(formData));\n  };\n}\nvar boundCache = new WeakMap();\nfunction encodeFormData(reference) {\n  var resolve,\n    reject,\n    thenable = new Promise(function (res, rej) {\n      resolve = res;\n      reject = rej;\n    });\n  processReply(\n    reference,\n    \"\",\n    void 0,\n    function (body) {\n      if (\"string\" === typeof body) {\n        var data = new FormData();\n        data.append(\"0\", body);\n        body = data;\n      }\n      thenable.status = \"fulfilled\";\n      thenable.value = body;\n      resolve(body);\n    },\n    function (e) {\n      thenable.status = \"rejected\";\n      thenable.reason = e;\n      reject(e);\n    }\n  );\n  return thenable;\n}\nfunction defaultEncodeFormAction(identifierPrefix) {\n  var reference = knownServerReferences.get(this);\n  if (!reference)\n    throw Error(\n      \"Tried to encode a Server Action from a different instance than the encoder is from. This is a bug in React.\"\n    );\n  var data = null;\n  if (null !== reference.bound) {\n    data = boundCache.get(reference);\n    data ||\n      ((data = encodeFormData(reference)), boundCache.set(reference, data));\n    if (\"rejected\" === data.status) throw data.reason;\n    if (\"fulfilled\" !== data.status) throw data;\n    reference = data.value;\n    var prefixedData = new FormData();\n    reference.forEach(function (value, key) {\n      prefixedData.append(\"$ACTION_\" + identifierPrefix + \":\" + key, value);\n    });\n    data = prefixedData;\n    reference = \"$ACTION_REF_\" + identifierPrefix;\n  } else reference = \"$ACTION_ID_\" + reference.id;\n  return {\n    name: reference,\n    method: \"POST\",\n    encType: \"multipart/form-data\",\n    data: data\n  };\n}\nfunction isSignatureEqual(referenceId, numberOfBoundArgs) {\n  var reference = knownServerReferences.get(this);\n  if (!reference)\n    throw Error(\n      \"Tried to encode a Server Action from a different instance than the encoder is from. This is a bug in React.\"\n    );\n  if (reference.id !== referenceId) return !1;\n  var boundPromise = reference.bound;\n  if (null === boundPromise) return 0 === numberOfBoundArgs;\n  switch (boundPromise.status) {\n    case \"fulfilled\":\n      return boundPromise.value.length === numberOfBoundArgs;\n    case \"pending\":\n      throw boundPromise;\n    case \"rejected\":\n      throw boundPromise.reason;\n    default:\n      throw (\n        (\"string\" !== typeof boundPromise.status &&\n          ((boundPromise.status = \"pending\"),\n          boundPromise.then(\n            function (boundArgs) {\n              boundPromise.status = \"fulfilled\";\n              boundPromise.value = boundArgs;\n            },\n            function (error) {\n              boundPromise.status = \"rejected\";\n              boundPromise.reason = error;\n            }\n          )),\n        boundPromise)\n      );\n  }\n}\nfunction registerServerReference(proxy, reference$jscomp$0, encodeFormAction) {\n  Object.defineProperties(proxy, {\n    $$FORM_ACTION: {\n      value:\n        void 0 === encodeFormAction\n          ? defaultEncodeFormAction\n          : function () {\n              var reference = knownServerReferences.get(this);\n              if (!reference)\n                throw Error(\n                  \"Tried to encode a Server Action from a different instance than the encoder is from. This is a bug in React.\"\n                );\n              var boundPromise = reference.bound;\n              null === boundPromise && (boundPromise = Promise.resolve([]));\n              return encodeFormAction(reference.id, boundPromise);\n            }\n    },\n    $$IS_SIGNATURE_EQUAL: { value: isSignatureEqual },\n    bind: { value: bind }\n  });\n  knownServerReferences.set(proxy, reference$jscomp$0);\n}\nvar FunctionBind = Function.prototype.bind,\n  ArraySlice = Array.prototype.slice;\nfunction bind() {\n  var newFn = FunctionBind.apply(this, arguments),\n    reference = knownServerReferences.get(this);\n  if (reference) {\n    var args = ArraySlice.call(arguments, 1),\n      boundPromise = null;\n    boundPromise =\n      null !== reference.bound\n        ? Promise.resolve(reference.bound).then(function (boundArgs) {\n            return boundArgs.concat(args);\n          })\n        : Promise.resolve(args);\n    Object.defineProperties(newFn, {\n      $$FORM_ACTION: { value: this.$$FORM_ACTION },\n      $$IS_SIGNATURE_EQUAL: { value: isSignatureEqual },\n      bind: { value: bind }\n    });\n    knownServerReferences.set(newFn, { id: reference.id, bound: boundPromise });\n  }\n  return newFn;\n}\nfunction createBoundServerReference(metaData, callServer, encodeFormAction) {\n  function action() {\n    var args = Array.prototype.slice.call(arguments);\n    return bound\n      ? \"fulfilled\" === bound.status\n        ? callServer(id, bound.value.concat(args))\n        : Promise.resolve(bound).then(function (boundArgs) {\n            return callServer(id, boundArgs.concat(args));\n          })\n      : callServer(id, args);\n  }\n  var id = metaData.id,\n    bound = metaData.bound;\n  registerServerReference(action, { id: id, bound: bound }, encodeFormAction);\n  return action;\n}\nfunction createServerReference$1(id, callServer, encodeFormAction) {\n  function action() {\n    var args = Array.prototype.slice.call(arguments);\n    return callServer(id, args);\n  }\n  registerServerReference(action, { id: id, bound: null }, encodeFormAction);\n  return action;\n}\nfunction ReactPromise(status, value, reason, response) {\n  this.status = status;\n  this.value = value;\n  this.reason = reason;\n  this._response = response;\n}\nReactPromise.prototype = Object.create(Promise.prototype);\nReactPromise.prototype.then = function (resolve, reject) {\n  switch (this.status) {\n    case \"resolved_model\":\n      initializeModelChunk(this);\n      break;\n    case \"resolved_module\":\n      initializeModuleChunk(this);\n  }\n  switch (this.status) {\n    case \"fulfilled\":\n      resolve(this.value);\n      break;\n    case \"pending\":\n    case \"blocked\":\n      resolve &&\n        (null === this.value && (this.value = []), this.value.push(resolve));\n      reject &&\n        (null === this.reason && (this.reason = []), this.reason.push(reject));\n      break;\n    default:\n      reject && reject(this.reason);\n  }\n};\nfunction readChunk(chunk) {\n  switch (chunk.status) {\n    case \"resolved_model\":\n      initializeModelChunk(chunk);\n      break;\n    case \"resolved_module\":\n      initializeModuleChunk(chunk);\n  }\n  switch (chunk.status) {\n    case \"fulfilled\":\n      return chunk.value;\n    case \"pending\":\n    case \"blocked\":\n      throw chunk;\n    default:\n      throw chunk.reason;\n  }\n}\nfunction createPendingChunk(response) {\n  return new ReactPromise(\"pending\", null, null, response);\n}\nfunction wakeChunk(listeners, value) {\n  for (var i = 0; i < listeners.length; i++) (0, listeners[i])(value);\n}\nfunction wakeChunkIfInitialized(chunk, resolveListeners, rejectListeners) {\n  switch (chunk.status) {\n    case \"fulfilled\":\n      wakeChunk(resolveListeners, chunk.value);\n      break;\n    case \"pending\":\n    case \"blocked\":\n      if (chunk.value)\n        for (var i = 0; i < resolveListeners.length; i++)\n          chunk.value.push(resolveListeners[i]);\n      else chunk.value = resolveListeners;\n      if (chunk.reason) {\n        if (rejectListeners)\n          for (\n            resolveListeners = 0;\n            resolveListeners < rejectListeners.length;\n            resolveListeners++\n          )\n            chunk.reason.push(rejectListeners[resolveListeners]);\n      } else chunk.reason = rejectListeners;\n      break;\n    case \"rejected\":\n      rejectListeners && wakeChunk(rejectListeners, chunk.reason);\n  }\n}\nfunction triggerErrorOnChunk(chunk, error) {\n  if (\"pending\" !== chunk.status && \"blocked\" !== chunk.status)\n    chunk.reason.error(error);\n  else {\n    var listeners = chunk.reason;\n    chunk.status = \"rejected\";\n    chunk.reason = error;\n    null !== listeners && wakeChunk(listeners, error);\n  }\n}\nfunction createResolvedIteratorResultChunk(response, value, done) {\n  return new ReactPromise(\n    \"resolved_model\",\n    (done ? '{\"done\":true,\"value\":' : '{\"done\":false,\"value\":') + value + \"}\",\n    null,\n    response\n  );\n}\nfunction resolveIteratorResultChunk(chunk, value, done) {\n  resolveModelChunk(\n    chunk,\n    (done ? '{\"done\":true,\"value\":' : '{\"done\":false,\"value\":') + value + \"}\"\n  );\n}\nfunction resolveModelChunk(chunk, value) {\n  if (\"pending\" !== chunk.status) chunk.reason.enqueueModel(value);\n  else {\n    var resolveListeners = chunk.value,\n      rejectListeners = chunk.reason;\n    chunk.status = \"resolved_model\";\n    chunk.value = value;\n    null !== resolveListeners &&\n      (initializeModelChunk(chunk),\n      wakeChunkIfInitialized(chunk, resolveListeners, rejectListeners));\n  }\n}\nfunction resolveModuleChunk(chunk, value) {\n  if (\"pending\" === chunk.status || \"blocked\" === chunk.status) {\n    var resolveListeners = chunk.value,\n      rejectListeners = chunk.reason;\n    chunk.status = \"resolved_module\";\n    chunk.value = value;\n    null !== resolveListeners &&\n      (initializeModuleChunk(chunk),\n      wakeChunkIfInitialized(chunk, resolveListeners, rejectListeners));\n  }\n}\nvar initializingHandler = null;\nfunction initializeModelChunk(chunk) {\n  var prevHandler = initializingHandler;\n  initializingHandler = null;\n  var resolvedModel = chunk.value;\n  chunk.status = \"blocked\";\n  chunk.value = null;\n  chunk.reason = null;\n  try {\n    var value = JSON.parse(resolvedModel, chunk._response._fromJSON),\n      resolveListeners = chunk.value;\n    null !== resolveListeners &&\n      ((chunk.value = null),\n      (chunk.reason = null),\n      wakeChunk(resolveListeners, value));\n    if (null !== initializingHandler) {\n      if (initializingHandler.errored) throw initializingHandler.value;\n      if (0 < initializingHandler.deps) {\n        initializingHandler.value = value;\n        initializingHandler.chunk = chunk;\n        return;\n      }\n    }\n    chunk.status = \"fulfilled\";\n    chunk.value = value;\n  } catch (error) {\n    (chunk.status = \"rejected\"), (chunk.reason = error);\n  } finally {\n    initializingHandler = prevHandler;\n  }\n}\nfunction initializeModuleChunk(chunk) {\n  try {\n    var value = requireModule(chunk.value);\n    chunk.status = \"fulfilled\";\n    chunk.value = value;\n  } catch (error) {\n    (chunk.status = \"rejected\"), (chunk.reason = error);\n  }\n}\nfunction reportGlobalError(response, error) {\n  response._chunks.forEach(function (chunk) {\n    \"pending\" === chunk.status && triggerErrorOnChunk(chunk, error);\n  });\n}\nfunction createLazyChunkWrapper(chunk) {\n  return { $$typeof: REACT_LAZY_TYPE, _payload: chunk, _init: readChunk };\n}\nfunction getChunk(response, id) {\n  var chunks = response._chunks,\n    chunk = chunks.get(id);\n  chunk || ((chunk = createPendingChunk(response)), chunks.set(id, chunk));\n  return chunk;\n}\nfunction waitForReference(\n  referencedChunk,\n  parentObject,\n  key,\n  response,\n  map,\n  path\n) {\n  function fulfill(value) {\n    for (var i = 1; i < path.length; i++) {\n      for (; value.$$typeof === REACT_LAZY_TYPE; )\n        if (((value = value._payload), value === handler.chunk))\n          value = handler.value;\n        else if (\"fulfilled\" === value.status) value = value.value;\n        else {\n          path.splice(0, i - 1);\n          value.then(fulfill, reject);\n          return;\n        }\n      value = value[path[i]];\n    }\n    i = map(response, value, parentObject, key);\n    parentObject[key] = i;\n    \"\" === key && null === handler.value && (handler.value = i);\n    if (\n      parentObject[0] === REACT_ELEMENT_TYPE &&\n      \"object\" === typeof handler.value &&\n      null !== handler.value &&\n      handler.value.$$typeof === REACT_ELEMENT_TYPE\n    )\n      switch (((value = handler.value), key)) {\n        case \"3\":\n          value.props = i;\n      }\n    handler.deps--;\n    0 === handler.deps &&\n      ((i = handler.chunk),\n      null !== i &&\n        \"blocked\" === i.status &&\n        ((value = i.value),\n        (i.status = \"fulfilled\"),\n        (i.value = handler.value),\n        null !== value && wakeChunk(value, handler.value)));\n  }\n  function reject(error) {\n    if (!handler.errored) {\n      handler.errored = !0;\n      handler.value = error;\n      var chunk = handler.chunk;\n      null !== chunk &&\n        \"blocked\" === chunk.status &&\n        triggerErrorOnChunk(chunk, error);\n    }\n  }\n  if (initializingHandler) {\n    var handler = initializingHandler;\n    handler.deps++;\n  } else\n    handler = initializingHandler = {\n      parent: null,\n      chunk: null,\n      value: null,\n      deps: 1,\n      errored: !1\n    };\n  referencedChunk.then(fulfill, reject);\n  return null;\n}\nfunction loadServerReference(response, metaData, parentObject, key) {\n  if (!response._serverReferenceConfig)\n    return createBoundServerReference(\n      metaData,\n      response._callServer,\n      response._encodeFormAction\n    );\n  var serverReference = resolveServerReference(\n    response._serverReferenceConfig,\n    metaData.id\n  );\n  if ((response = preloadModule(serverReference)))\n    metaData.bound && (response = Promise.all([response, metaData.bound]));\n  else if (metaData.bound) response = Promise.resolve(metaData.bound);\n  else return requireModule(serverReference);\n  if (initializingHandler) {\n    var handler = initializingHandler;\n    handler.deps++;\n  } else\n    handler = initializingHandler = {\n      parent: null,\n      chunk: null,\n      value: null,\n      deps: 1,\n      errored: !1\n    };\n  response.then(\n    function () {\n      var resolvedValue = requireModule(serverReference);\n      if (metaData.bound) {\n        var boundArgs = metaData.bound.value.slice(0);\n        boundArgs.unshift(null);\n        resolvedValue = resolvedValue.bind.apply(resolvedValue, boundArgs);\n      }\n      parentObject[key] = resolvedValue;\n      \"\" === key && null === handler.value && (handler.value = resolvedValue);\n      if (\n        parentObject[0] === REACT_ELEMENT_TYPE &&\n        \"object\" === typeof handler.value &&\n        null !== handler.value &&\n        handler.value.$$typeof === REACT_ELEMENT_TYPE\n      )\n        switch (((boundArgs = handler.value), key)) {\n          case \"3\":\n            boundArgs.props = resolvedValue;\n        }\n      handler.deps--;\n      0 === handler.deps &&\n        ((resolvedValue = handler.chunk),\n        null !== resolvedValue &&\n          \"blocked\" === resolvedValue.status &&\n          ((boundArgs = resolvedValue.value),\n          (resolvedValue.status = \"fulfilled\"),\n          (resolvedValue.value = handler.value),\n          null !== boundArgs && wakeChunk(boundArgs, handler.value)));\n    },\n    function (error) {\n      if (!handler.errored) {\n        handler.errored = !0;\n        handler.value = error;\n        var chunk = handler.chunk;\n        null !== chunk &&\n          \"blocked\" === chunk.status &&\n          triggerErrorOnChunk(chunk, error);\n      }\n    }\n  );\n  return null;\n}\nfunction getOutlinedModel(response, reference, parentObject, key, map) {\n  reference = reference.split(\":\");\n  var id = parseInt(reference[0], 16);\n  id = getChunk(response, id);\n  switch (id.status) {\n    case \"resolved_model\":\n      initializeModelChunk(id);\n      break;\n    case \"resolved_module\":\n      initializeModuleChunk(id);\n  }\n  switch (id.status) {\n    case \"fulfilled\":\n      var value = id.value;\n      for (id = 1; id < reference.length; id++) {\n        for (; value.$$typeof === REACT_LAZY_TYPE; )\n          if (((value = value._payload), \"fulfilled\" === value.status))\n            value = value.value;\n          else\n            return waitForReference(\n              value,\n              parentObject,\n              key,\n              response,\n              map,\n              reference.slice(id - 1)\n            );\n        value = value[reference[id]];\n      }\n      return map(response, value, parentObject, key);\n    case \"pending\":\n    case \"blocked\":\n      return waitForReference(id, parentObject, key, response, map, reference);\n    default:\n      return (\n        initializingHandler\n          ? ((initializingHandler.errored = !0),\n            (initializingHandler.value = id.reason))\n          : (initializingHandler = {\n              parent: null,\n              chunk: null,\n              value: id.reason,\n              deps: 0,\n              errored: !0\n            }),\n        null\n      );\n  }\n}\nfunction createMap(response, model) {\n  return new Map(model);\n}\nfunction createSet(response, model) {\n  return new Set(model);\n}\nfunction createBlob(response, model) {\n  return new Blob(model.slice(1), { type: model[0] });\n}\nfunction createFormData(response, model) {\n  response = new FormData();\n  for (var i = 0; i < model.length; i++)\n    response.append(model[i][0], model[i][1]);\n  return response;\n}\nfunction extractIterator(response, model) {\n  return model[Symbol.iterator]();\n}\nfunction createModel(response, model) {\n  return model;\n}\nfunction parseModelString(response, parentObject, key, value) {\n  if (\"$\" === value[0]) {\n    if (\"$\" === value)\n      return (\n        null !== initializingHandler &&\n          \"0\" === key &&\n          (initializingHandler = {\n            parent: initializingHandler,\n            chunk: null,\n            value: null,\n            deps: 0,\n            errored: !1\n          }),\n        REACT_ELEMENT_TYPE\n      );\n    switch (value[1]) {\n      case \"$\":\n        return value.slice(1);\n      case \"L\":\n        return (\n          (parentObject = parseInt(value.slice(2), 16)),\n          (response = getChunk(response, parentObject)),\n          createLazyChunkWrapper(response)\n        );\n      case \"@\":\n        if (2 === value.length) return new Promise(function () {});\n        parentObject = parseInt(value.slice(2), 16);\n        return getChunk(response, parentObject);\n      case \"S\":\n        return Symbol.for(value.slice(2));\n      case \"F\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(\n            response,\n            value,\n            parentObject,\n            key,\n            loadServerReference\n          )\n        );\n      case \"T\":\n        parentObject = \"$\" + value.slice(2);\n        response = response._tempRefs;\n        if (null == response)\n          throw Error(\n            \"Missing a temporary reference set but the RSC response returned a temporary reference. Pass a temporaryReference option with the set that was used with the reply.\"\n          );\n        return response.get(parentObject);\n      case \"Q\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, parentObject, key, createMap)\n        );\n      case \"W\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, parentObject, key, createSet)\n        );\n      case \"B\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, parentObject, key, createBlob)\n        );\n      case \"K\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, parentObject, key, createFormData)\n        );\n      case \"Z\":\n        return resolveErrorProd();\n      case \"i\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, parentObject, key, extractIterator)\n        );\n      case \"I\":\n        return Infinity;\n      case \"-\":\n        return \"$-0\" === value ? -0 : -Infinity;\n      case \"N\":\n        return NaN;\n      case \"u\":\n        return;\n      case \"D\":\n        return new Date(Date.parse(value.slice(2)));\n      case \"n\":\n        return BigInt(value.slice(2));\n      default:\n        return (\n          (value = value.slice(1)),\n          getOutlinedModel(response, value, parentObject, key, createModel)\n        );\n    }\n  }\n  return value;\n}\nfunction missingCall() {\n  throw Error(\n    'Trying to call a function from \"use server\" but the callServer option was not implemented in your router runtime.'\n  );\n}\nfunction ResponseInstance(\n  bundlerConfig,\n  serverReferenceConfig,\n  moduleLoading,\n  callServer,\n  encodeFormAction,\n  nonce,\n  temporaryReferences\n) {\n  var chunks = new Map();\n  this._bundlerConfig = bundlerConfig;\n  this._serverReferenceConfig = serverReferenceConfig;\n  this._moduleLoading = moduleLoading;\n  this._callServer = void 0 !== callServer ? callServer : missingCall;\n  this._encodeFormAction = encodeFormAction;\n  this._nonce = nonce;\n  this._chunks = chunks;\n  this._stringDecoder = new TextDecoder();\n  this._fromJSON = null;\n  this._rowLength = this._rowTag = this._rowID = this._rowState = 0;\n  this._buffer = [];\n  this._tempRefs = temporaryReferences;\n  this._fromJSON = createFromJSONCallback(this);\n}\nfunction resolveBuffer(response, id, buffer) {\n  var chunks = response._chunks,\n    chunk = chunks.get(id);\n  chunk && \"pending\" !== chunk.status\n    ? chunk.reason.enqueueValue(buffer)\n    : chunks.set(id, new ReactPromise(\"fulfilled\", buffer, null, response));\n}\nfunction resolveModule(response, id, model) {\n  var chunks = response._chunks,\n    chunk = chunks.get(id);\n  model = JSON.parse(model, response._fromJSON);\n  var clientReference = resolveClientReference(response._bundlerConfig, model);\n  prepareDestinationWithChunks(\n    response._moduleLoading,\n    model[1],\n    response._nonce\n  );\n  if ((model = preloadModule(clientReference))) {\n    if (chunk) {\n      var blockedChunk = chunk;\n      blockedChunk.status = \"blocked\";\n    } else\n      (blockedChunk = new ReactPromise(\"blocked\", null, null, response)),\n        chunks.set(id, blockedChunk);\n    model.then(\n      function () {\n        return resolveModuleChunk(blockedChunk, clientReference);\n      },\n      function (error) {\n        return triggerErrorOnChunk(blockedChunk, error);\n      }\n    );\n  } else\n    chunk\n      ? resolveModuleChunk(chunk, clientReference)\n      : chunks.set(\n          id,\n          new ReactPromise(\"resolved_module\", clientReference, null, response)\n        );\n}\nfunction resolveStream(response, id, stream, controller) {\n  var chunks = response._chunks,\n    chunk = chunks.get(id);\n  chunk\n    ? \"pending\" === chunk.status &&\n      ((response = chunk.value),\n      (chunk.status = \"fulfilled\"),\n      (chunk.value = stream),\n      (chunk.reason = controller),\n      null !== response && wakeChunk(response, chunk.value))\n    : chunks.set(\n        id,\n        new ReactPromise(\"fulfilled\", stream, controller, response)\n      );\n}\nfunction startReadableStream(response, id, type) {\n  var controller = null;\n  type = new ReadableStream({\n    type: type,\n    start: function (c) {\n      controller = c;\n    }\n  });\n  var previousBlockedChunk = null;\n  resolveStream(response, id, type, {\n    enqueueValue: function (value) {\n      null === previousBlockedChunk\n        ? controller.enqueue(value)\n        : previousBlockedChunk.then(function () {\n            controller.enqueue(value);\n          });\n    },\n    enqueueModel: function (json) {\n      if (null === previousBlockedChunk) {\n        var chunk = new ReactPromise(\"resolved_model\", json, null, response);\n        initializeModelChunk(chunk);\n        \"fulfilled\" === chunk.status\n          ? controller.enqueue(chunk.value)\n          : (chunk.then(\n              function (v) {\n                return controller.enqueue(v);\n              },\n              function (e) {\n                return controller.error(e);\n              }\n            ),\n            (previousBlockedChunk = chunk));\n      } else {\n        chunk = previousBlockedChunk;\n        var chunk$52 = createPendingChunk(response);\n        chunk$52.then(\n          function (v) {\n            return controller.enqueue(v);\n          },\n          function (e) {\n            return controller.error(e);\n          }\n        );\n        previousBlockedChunk = chunk$52;\n        chunk.then(function () {\n          previousBlockedChunk === chunk$52 && (previousBlockedChunk = null);\n          resolveModelChunk(chunk$52, json);\n        });\n      }\n    },\n    close: function () {\n      if (null === previousBlockedChunk) controller.close();\n      else {\n        var blockedChunk = previousBlockedChunk;\n        previousBlockedChunk = null;\n        blockedChunk.then(function () {\n          return controller.close();\n        });\n      }\n    },\n    error: function (error) {\n      if (null === previousBlockedChunk) controller.error(error);\n      else {\n        var blockedChunk = previousBlockedChunk;\n        previousBlockedChunk = null;\n        blockedChunk.then(function () {\n          return controller.error(error);\n        });\n      }\n    }\n  });\n}\nfunction asyncIterator() {\n  return this;\n}\nfunction createIterator(next) {\n  next = { next: next };\n  next[ASYNC_ITERATOR] = asyncIterator;\n  return next;\n}\nfunction startAsyncIterable(response, id, iterator) {\n  var buffer = [],\n    closed = !1,\n    nextWriteIndex = 0,\n    $jscomp$compprop0 = {};\n  $jscomp$compprop0 =\n    (($jscomp$compprop0[ASYNC_ITERATOR] = function () {\n      var nextReadIndex = 0;\n      return createIterator(function (arg) {\n        if (void 0 !== arg)\n          throw Error(\n            \"Values cannot be passed to next() of AsyncIterables passed to Client Components.\"\n          );\n        if (nextReadIndex === buffer.length) {\n          if (closed)\n            return new ReactPromise(\n              \"fulfilled\",\n              { done: !0, value: void 0 },\n              null,\n              response\n            );\n          buffer[nextReadIndex] = createPendingChunk(response);\n        }\n        return buffer[nextReadIndex++];\n      });\n    }),\n    $jscomp$compprop0);\n  resolveStream(\n    response,\n    id,\n    iterator ? $jscomp$compprop0[ASYNC_ITERATOR]() : $jscomp$compprop0,\n    {\n      enqueueValue: function (value) {\n        if (nextWriteIndex === buffer.length)\n          buffer[nextWriteIndex] = new ReactPromise(\n            \"fulfilled\",\n            { done: !1, value: value },\n            null,\n            response\n          );\n        else {\n          var chunk = buffer[nextWriteIndex],\n            resolveListeners = chunk.value,\n            rejectListeners = chunk.reason;\n          chunk.status = \"fulfilled\";\n          chunk.value = { done: !1, value: value };\n          null !== resolveListeners &&\n            wakeChunkIfInitialized(chunk, resolveListeners, rejectListeners);\n        }\n        nextWriteIndex++;\n      },\n      enqueueModel: function (value) {\n        nextWriteIndex === buffer.length\n          ? (buffer[nextWriteIndex] = createResolvedIteratorResultChunk(\n              response,\n              value,\n              !1\n            ))\n          : resolveIteratorResultChunk(buffer[nextWriteIndex], value, !1);\n        nextWriteIndex++;\n      },\n      close: function (value) {\n        closed = !0;\n        nextWriteIndex === buffer.length\n          ? (buffer[nextWriteIndex] = createResolvedIteratorResultChunk(\n              response,\n              value,\n              !0\n            ))\n          : resolveIteratorResultChunk(buffer[nextWriteIndex], value, !0);\n        for (nextWriteIndex++; nextWriteIndex < buffer.length; )\n          resolveIteratorResultChunk(\n            buffer[nextWriteIndex++],\n            '\"$undefined\"',\n            !0\n          );\n      },\n      error: function (error) {\n        closed = !0;\n        for (\n          nextWriteIndex === buffer.length &&\n          (buffer[nextWriteIndex] = createPendingChunk(response));\n          nextWriteIndex < buffer.length;\n\n        )\n          triggerErrorOnChunk(buffer[nextWriteIndex++], error);\n      }\n    }\n  );\n}\nfunction resolveErrorProd() {\n  var error = Error(\n    \"An error occurred in the Server Components render. The specific message is omitted in production builds to avoid leaking sensitive details. A digest property is included on this error instance which may provide additional details about the nature of the error.\"\n  );\n  error.stack = \"Error: \" + error.message;\n  return error;\n}\nfunction mergeBuffer(buffer, lastChunk) {\n  for (var l = buffer.length, byteLength = lastChunk.length, i = 0; i < l; i++)\n    byteLength += buffer[i].byteLength;\n  byteLength = new Uint8Array(byteLength);\n  for (var i$53 = (i = 0); i$53 < l; i$53++) {\n    var chunk = buffer[i$53];\n    byteLength.set(chunk, i);\n    i += chunk.byteLength;\n  }\n  byteLength.set(lastChunk, i);\n  return byteLength;\n}\nfunction resolveTypedArray(\n  response,\n  id,\n  buffer,\n  lastChunk,\n  constructor,\n  bytesPerElement\n) {\n  buffer =\n    0 === buffer.length && 0 === lastChunk.byteOffset % bytesPerElement\n      ? lastChunk\n      : mergeBuffer(buffer, lastChunk);\n  constructor = new constructor(\n    buffer.buffer,\n    buffer.byteOffset,\n    buffer.byteLength / bytesPerElement\n  );\n  resolveBuffer(response, id, constructor);\n}\nfunction processFullBinaryRow(response, id, tag, buffer, chunk) {\n  switch (tag) {\n    case 65:\n      resolveBuffer(response, id, mergeBuffer(buffer, chunk).buffer);\n      return;\n    case 79:\n      resolveTypedArray(response, id, buffer, chunk, Int8Array, 1);\n      return;\n    case 111:\n      resolveBuffer(\n        response,\n        id,\n        0 === buffer.length ? chunk : mergeBuffer(buffer, chunk)\n      );\n      return;\n    case 85:\n      resolveTypedArray(response, id, buffer, chunk, Uint8ClampedArray, 1);\n      return;\n    case 83:\n      resolveTypedArray(response, id, buffer, chunk, Int16Array, 2);\n      return;\n    case 115:\n      resolveTypedArray(response, id, buffer, chunk, Uint16Array, 2);\n      return;\n    case 76:\n      resolveTypedArray(response, id, buffer, chunk, Int32Array, 4);\n      return;\n    case 108:\n      resolveTypedArray(response, id, buffer, chunk, Uint32Array, 4);\n      return;\n    case 71:\n      resolveTypedArray(response, id, buffer, chunk, Float32Array, 4);\n      return;\n    case 103:\n      resolveTypedArray(response, id, buffer, chunk, Float64Array, 8);\n      return;\n    case 77:\n      resolveTypedArray(response, id, buffer, chunk, BigInt64Array, 8);\n      return;\n    case 109:\n      resolveTypedArray(response, id, buffer, chunk, BigUint64Array, 8);\n      return;\n    case 86:\n      resolveTypedArray(response, id, buffer, chunk, DataView, 1);\n      return;\n  }\n  for (\n    var stringDecoder = response._stringDecoder, row = \"\", i = 0;\n    i < buffer.length;\n    i++\n  )\n    row += stringDecoder.decode(buffer[i], decoderOptions);\n  buffer = row += stringDecoder.decode(chunk);\n  switch (tag) {\n    case 73:\n      resolveModule(response, id, buffer);\n      break;\n    case 72:\n      id = buffer[0];\n      buffer = buffer.slice(1);\n      response = JSON.parse(buffer, response._fromJSON);\n      buffer = ReactDOMSharedInternals.d;\n      switch (id) {\n        case \"D\":\n          buffer.D(response);\n          break;\n        case \"C\":\n          \"string\" === typeof response\n            ? buffer.C(response)\n            : buffer.C(response[0], response[1]);\n          break;\n        case \"L\":\n          id = response[0];\n          tag = response[1];\n          3 === response.length\n            ? buffer.L(id, tag, response[2])\n            : buffer.L(id, tag);\n          break;\n        case \"m\":\n          \"string\" === typeof response\n            ? buffer.m(response)\n            : buffer.m(response[0], response[1]);\n          break;\n        case \"X\":\n          \"string\" === typeof response\n            ? buffer.X(response)\n            : buffer.X(response[0], response[1]);\n          break;\n        case \"S\":\n          \"string\" === typeof response\n            ? buffer.S(response)\n            : buffer.S(\n                response[0],\n                0 === response[1] ? void 0 : response[1],\n                3 === response.length ? response[2] : void 0\n              );\n          break;\n        case \"M\":\n          \"string\" === typeof response\n            ? buffer.M(response)\n            : buffer.M(response[0], response[1]);\n      }\n      break;\n    case 69:\n      tag = JSON.parse(buffer);\n      buffer = resolveErrorProd();\n      buffer.digest = tag.digest;\n      tag = response._chunks;\n      (chunk = tag.get(id))\n        ? triggerErrorOnChunk(chunk, buffer)\n        : tag.set(id, new ReactPromise(\"rejected\", null, buffer, response));\n      break;\n    case 84:\n      tag = response._chunks;\n      (chunk = tag.get(id)) && \"pending\" !== chunk.status\n        ? chunk.reason.enqueueValue(buffer)\n        : tag.set(id, new ReactPromise(\"fulfilled\", buffer, null, response));\n      break;\n    case 68:\n    case 87:\n      throw Error(\n        \"Failed to read a RSC payload created by a development version of React on the server while using a production version on the client. Always use matching versions on the server and the client.\"\n      );\n    case 82:\n      startReadableStream(response, id, void 0);\n      break;\n    case 114:\n      startReadableStream(response, id, \"bytes\");\n      break;\n    case 88:\n      startAsyncIterable(response, id, !1);\n      break;\n    case 120:\n      startAsyncIterable(response, id, !0);\n      break;\n    case 67:\n      (response = response._chunks.get(id)) &&\n        \"fulfilled\" === response.status &&\n        response.reason.close(\"\" === buffer ? '\"$undefined\"' : buffer);\n      break;\n    default:\n      (tag = response._chunks),\n        (chunk = tag.get(id))\n          ? resolveModelChunk(chunk, buffer)\n          : tag.set(\n              id,\n              new ReactPromise(\"resolved_model\", buffer, null, response)\n            );\n  }\n}\nfunction createFromJSONCallback(response) {\n  return function (key, value) {\n    if (\"string\" === typeof value)\n      return parseModelString(response, this, key, value);\n    if (\"object\" === typeof value && null !== value) {\n      if (value[0] === REACT_ELEMENT_TYPE) {\n        if (\n          ((key = {\n            $$typeof: REACT_ELEMENT_TYPE,\n            type: value[1],\n            key: value[2],\n            ref: null,\n            props: value[3]\n          }),\n          null !== initializingHandler)\n        )\n          if (\n            ((value = initializingHandler),\n            (initializingHandler = value.parent),\n            value.errored)\n          )\n            (key = new ReactPromise(\"rejected\", null, value.value, response)),\n              (key = createLazyChunkWrapper(key));\n          else if (0 < value.deps) {\n            var blockedChunk = new ReactPromise(\n              \"blocked\",\n              null,\n              null,\n              response\n            );\n            value.value = key;\n            value.chunk = blockedChunk;\n            key = createLazyChunkWrapper(blockedChunk);\n          }\n      } else key = value;\n      return key;\n    }\n    return value;\n  };\n}\nfunction noServerCall() {\n  throw Error(\n    \"Server Functions cannot be called during initial render. This would create a fetch waterfall. Try to use a Server Component to pass data to Client Components instead.\"\n  );\n}\nfunction createResponseFromOptions(options) {\n  return new ResponseInstance(\n    options.serverConsumerManifest.moduleMap,\n    options.serverConsumerManifest.serverModuleMap,\n    options.serverConsumerManifest.moduleLoading,\n    noServerCall,\n    options.encodeFormAction,\n    \"string\" === typeof options.nonce ? options.nonce : void 0,\n    options && options.temporaryReferences\n      ? options.temporaryReferences\n      : void 0\n  );\n}\nfunction startReadingFromStream(response, stream) {\n  function progress(_ref) {\n    var value = _ref.value;\n    if (_ref.done) reportGlobalError(response, Error(\"Connection closed.\"));\n    else {\n      var i = 0,\n        rowState = response._rowState;\n      _ref = response._rowID;\n      for (\n        var rowTag = response._rowTag,\n          rowLength = response._rowLength,\n          buffer = response._buffer,\n          chunkLength = value.length;\n        i < chunkLength;\n\n      ) {\n        var lastIdx = -1;\n        switch (rowState) {\n          case 0:\n            lastIdx = value[i++];\n            58 === lastIdx\n              ? (rowState = 1)\n              : (_ref =\n                  (_ref << 4) | (96 < lastIdx ? lastIdx - 87 : lastIdx - 48));\n            continue;\n          case 1:\n            rowState = value[i];\n            84 === rowState ||\n            65 === rowState ||\n            79 === rowState ||\n            111 === rowState ||\n            85 === rowState ||\n            83 === rowState ||\n            115 === rowState ||\n            76 === rowState ||\n            108 === rowState ||\n            71 === rowState ||\n            103 === rowState ||\n            77 === rowState ||\n            109 === rowState ||\n            86 === rowState\n              ? ((rowTag = rowState), (rowState = 2), i++)\n              : (64 < rowState && 91 > rowState) ||\n                  35 === rowState ||\n                  114 === rowState ||\n                  120 === rowState\n                ? ((rowTag = rowState), (rowState = 3), i++)\n                : ((rowTag = 0), (rowState = 3));\n            continue;\n          case 2:\n            lastIdx = value[i++];\n            44 === lastIdx\n              ? (rowState = 4)\n              : (rowLength =\n                  (rowLength << 4) |\n                  (96 < lastIdx ? lastIdx - 87 : lastIdx - 48));\n            continue;\n          case 3:\n            lastIdx = value.indexOf(10, i);\n            break;\n          case 4:\n            (lastIdx = i + rowLength), lastIdx > value.length && (lastIdx = -1);\n        }\n        var offset = value.byteOffset + i;\n        if (-1 < lastIdx)\n          (rowLength = new Uint8Array(value.buffer, offset, lastIdx - i)),\n            processFullBinaryRow(response, _ref, rowTag, buffer, rowLength),\n            (i = lastIdx),\n            3 === rowState && i++,\n            (rowLength = _ref = rowTag = rowState = 0),\n            (buffer.length = 0);\n        else {\n          value = new Uint8Array(value.buffer, offset, value.byteLength - i);\n          buffer.push(value);\n          rowLength -= value.byteLength;\n          break;\n        }\n      }\n      response._rowState = rowState;\n      response._rowID = _ref;\n      response._rowTag = rowTag;\n      response._rowLength = rowLength;\n      return reader.read().then(progress).catch(error);\n    }\n  }\n  function error(e) {\n    reportGlobalError(response, e);\n  }\n  var reader = stream.getReader();\n  reader.read().then(progress).catch(error);\n}\nexports.createFromFetch = function (promiseForResponse, options) {\n  var response = createResponseFromOptions(options);\n  promiseForResponse.then(\n    function (r) {\n      startReadingFromStream(response, r.body);\n    },\n    function (e) {\n      reportGlobalError(response, e);\n    }\n  );\n  return getChunk(response, 0);\n};\nexports.createFromReadableStream = function (stream, options) {\n  options = createResponseFromOptions(options);\n  startReadingFromStream(options, stream);\n  return getChunk(options, 0);\n};\nexports.createServerReference = function (id) {\n  return createServerReference$1(id, noServerCall);\n};\nexports.createTemporaryReferenceSet = function () {\n  return new Map();\n};\nexports.encodeReply = function (value, options) {\n  return new Promise(function (resolve, reject) {\n    var abort = processReply(\n      value,\n      \"\",\n      options && options.temporaryReferences\n        ? options.temporaryReferences\n        : void 0,\n      resolve,\n      reject\n    );\n    if (options && options.signal) {\n      var signal = options.signal;\n      if (signal.aborted) abort(signal.reason);\n      else {\n        var listener = function () {\n          abort(signal.reason);\n          signal.removeEventListener(\"abort\", listener);\n        };\n        signal.addEventListener(\"abort\", listener);\n      }\n    }\n  });\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-server-dom-webpack-client.edge.production.js');\n} else {\n  module.exports = require('./cjs/react-server-dom-webpack-client.edge.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","/**\n * @license React\n * react.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ReactNoopUpdateQueue = {\n    isMounted: function () {\n      return !1;\n    },\n    enqueueForceUpdate: function () {},\n    enqueueReplaceState: function () {},\n    enqueueSetState: function () {}\n  },\n  assign = Object.assign,\n  emptyObject = {};\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nComponent.prototype.isReactComponent = {};\nComponent.prototype.setState = function (partialState, callback) {\n  if (\n    \"object\" !== typeof partialState &&\n    \"function\" !== typeof partialState &&\n    null != partialState\n  )\n    throw Error(\n      \"takes an object of state variables to update or a function which returns an object of state variables.\"\n    );\n  this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n};\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n};\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nvar pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = !0;\nvar isArrayImpl = Array.isArray,\n  ReactSharedInternals = { H: null, A: null, T: null, S: null },\n  hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  _ref = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== _ref ? _ref : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(\n    oldElement.type,\n    newKey,\n    null,\n    void 0,\n    void 0,\n    void 0,\n    oldElement.props\n  );\n}\nfunction isValidElement(object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n  return (\n    \"$\" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return \"object\" === typeof element && null !== element && null != element.key\n    ? escape(\"\" + element.key)\n    : index.toString(36);\n}\nfunction noop$1() {}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      switch (\n        (\"string\" === typeof thenable.status\n          ? thenable.then(noop$1, noop$1)\n          : ((thenable.status = \"pending\"),\n            thenable.then(\n              function (fulfilledValue) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"fulfilled\"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"rejected\"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if (\"undefined\" === type || \"boolean\" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        \"\" === nameSoFar ? \".\" + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = \"\"),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n          mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? \"\"\n                  : (\"\" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      \"$&/\"\n                    ) + \"/\") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (\"object\" === type) {\n    if (\"function\" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      \"Objects are not valid as a React child (found: \" +\n        (\"[object Object]\" === array\n          ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n          : array) +\n        \"). If you meant to render a collection of children, use an array instead.\"\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, \"\", \"\", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nfunction noop() {}\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children))\n      throw Error(\n        \"React.Children.only expected to receive a single React element child.\"\n      );\n    return children;\n  }\n};\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.act = function () {\n  throw Error(\"act(...) is not supported in production builds of React.\");\n};\nexports.cache = function (fn) {\n  return function () {\n    return fn.apply(null, arguments);\n  };\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(\n      \"The argument must be a React element, but you passed \" + element + \".\"\n    );\n  var props = assign({}, element.props),\n    key = element.key,\n    owner = void 0;\n  if (null != config)\n    for (propName in (void 0 !== config.ref && (owner = void 0),\n    void 0 !== config.key && (key = \"\" + config.key),\n    config))\n      !hasOwnProperty.call(config, propName) ||\n        \"key\" === propName ||\n        \"__self\" === propName ||\n        \"__source\" === propName ||\n        (\"ref\" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, null, void 0, void 0, owner, props);\n};\nexports.createContext = function (defaultValue) {\n  defaultValue = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null\n  };\n  defaultValue.Provider = defaultValue;\n  defaultValue.Consumer = {\n    $$typeof: REACT_CONSUMER_TYPE,\n    _context: defaultValue\n  };\n  return defaultValue;\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        \"key\" !== propName &&\n        \"__self\" !== propName &&\n        \"__source\" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, null, void 0, void 0, null, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.startTransition = function (scope) {\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  try {\n    var returnValue = scope(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    \"object\" === typeof returnValue &&\n      null !== returnValue &&\n      \"function\" === typeof returnValue.then &&\n      returnValue.then(noop, reportGlobalError);\n  } catch (error) {\n    reportGlobalError(error);\n  } finally {\n    ReactSharedInternals.T = prevTransition;\n  }\n};\nexports.unstable_useCacheRefresh = function () {\n  return ReactSharedInternals.H.useCacheRefresh();\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useActionState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useActionState(action, initialState, permalink);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useContext = function (Context) {\n  return ReactSharedInternals.H.useContext(Context);\n};\nexports.useDebugValue = function () {};\nexports.useDeferredValue = function (value, initialValue) {\n  return ReactSharedInternals.H.useDeferredValue(value, initialValue);\n};\nexports.useEffect = function (create, deps) {\n  return ReactSharedInternals.H.useEffect(create, deps);\n};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useImperativeHandle = function (ref, create, deps) {\n  return ReactSharedInternals.H.useImperativeHandle(ref, create, deps);\n};\nexports.useInsertionEffect = function (create, deps) {\n  return ReactSharedInternals.H.useInsertionEffect(create, deps);\n};\nexports.useLayoutEffect = function (create, deps) {\n  return ReactSharedInternals.H.useLayoutEffect(create, deps);\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.useOptimistic = function (passthrough, reducer) {\n  return ReactSharedInternals.H.useOptimistic(passthrough, reducer);\n};\nexports.useReducer = function (reducer, initialArg, init) {\n  return ReactSharedInternals.H.useReducer(reducer, initialArg, init);\n};\nexports.useRef = function (initialValue) {\n  return ReactSharedInternals.H.useRef(initialValue);\n};\nexports.useState = function (initialState) {\n  return ReactSharedInternals.H.useState(initialState);\n};\nexports.useSyncExternalStore = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot\n) {\n  return ReactSharedInternals.H.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot\n  );\n};\nexports.useTransition = function () {\n  return ReactSharedInternals.H.useTransition();\n};\nexports.version = \"19.0.0-rc-02c0e824-20241028\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","(()=>{\"use strict\";var e={328:e=>{function hash(e){var r=5381,_=e.length;while(_){r=r*33^e.charCodeAt(--_)}return r>>>0}e.exports=hash}};var r={};function __nccwpck_require__(_){var a=r[_];if(a!==undefined){return a.exports}var t=r[_]={exports:{}};var i=true;try{e[_](t,t.exports,__nccwpck_require__);i=false}finally{if(i)delete r[_]}return t.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var _=__nccwpck_require__(328);module.exports=_})();","import { bold, green, magenta, red, yellow, white } from '../../lib/picocolors';\nexport const prefixes = {\n    wait: white(bold('○')),\n    error: red(bold('⨯')),\n    warn: yellow(bold('⚠')),\n    ready: '▲',\n    info: white(bold(' ')),\n    event: green(bold('✓')),\n    trace: magenta(bold('»'))\n};\nconst LOGGING_METHOD = {\n    log: 'log',\n    warn: 'warn',\n    error: 'error'\n};\nfunction prefixedLog(prefixType, ...message) {\n    if ((message[0] === '' || message[0] === undefined) && message.length === 1) {\n        message.shift();\n    }\n    const consoleMethod = prefixType in LOGGING_METHOD ? LOGGING_METHOD[prefixType] : 'log';\n    const prefix = prefixes[prefixType];\n    // If there's no message, don't print the prefix but a new line\n    if (message.length === 0) {\n        console[consoleMethod]('');\n    } else {\n        // Ensure if there's ANSI escape codes it's concatenated into one string.\n        // Chrome DevTool can only handle color if it's in one string.\n        if (message.length === 1 && typeof message[0] === 'string') {\n            console[consoleMethod](' ' + prefix + ' ' + message[0]);\n        } else {\n            console[consoleMethod](' ' + prefix, ...message);\n        }\n    }\n}\nexport function bootstrap(...message) {\n    // logging format: ' <prefix> <message>'\n    // e.g. ' ✓ Compiled successfully'\n    // Add spaces to align with the indent of other logs\n    console.log('   ' + message.join(' '));\n}\nexport function wait(...message) {\n    prefixedLog('wait', ...message);\n}\nexport function error(...message) {\n    prefixedLog('error', ...message);\n}\nexport function warn(...message) {\n    prefixedLog('warn', ...message);\n}\nexport function ready(...message) {\n    prefixedLog('ready', ...message);\n}\nexport function info(...message) {\n    prefixedLog('info', ...message);\n}\nexport function event(...message) {\n    prefixedLog('event', ...message);\n}\nexport function trace(...message) {\n    prefixedLog('trace', ...message);\n}\nconst warnOnceMessages = new Set();\nexport function warnOnce(...message) {\n    if (!warnOnceMessages.has(message[0])) {\n        warnOnceMessages.add(message.join(' '));\n        warn(...message);\n    }\n}\n\n//# sourceMappingURL=log.js.map","const ERROR_MESSAGE = 'Internal Error: do not use legacy react-dom/server APIs. If you encountered this error, please open an issue on the Next.js repo.';\nfunction error() {\n    throw new Error(ERROR_MESSAGE);\n}\nvar b;\nif (process.env.NODE_ENV === 'production') {\n    b = require('next/dist/compiled/react-dom/cjs/react-dom-server.edge.production.js');\n} else {\n    b = require('next/dist/compiled/react-dom/cjs/react-dom-server.edge.development.js');\n}\nexports.version = b.version;\nexports.renderToReadableStream = b.renderToReadableStream;\nexports.renderToString = error;\nexports.renderToStaticMarkup = error;\nif (b.resume) {\n    exports.resume = b.resume;\n}\n\n//# sourceMappingURL=react-dom-server-edge.js.map","import { startTransition, useCallback } from 'react'\nimport {\n  ACTION_SERVER_ACTION,\n  type ReducerActions,\n  type ServerActionDispatcher,\n} from './components/router-reducer/router-reducer-types'\n\nlet globalServerActionDispatcher = null as ServerActionDispatcher | null\n\nexport function useServerActionDispatcher(\n  dispatch: React.Dispatch<ReducerActions>\n) {\n  const serverActionDispatcher: ServerActionDispatcher = useCallback(\n    (actionPayload) => {\n      startTransition(() => {\n        dispatch({\n          ...actionPayload,\n          type: ACTION_SERVER_ACTION,\n        })\n      })\n    },\n    [dispatch]\n  )\n  globalServerActionDispatcher = serverActionDispatcher\n}\n\nexport async function callServer(actionId: string, actionArgs: any[]) {\n  const actionDispatcher = globalServerActionDispatcher\n\n  if (!actionDispatcher) {\n    throw new Error('Invariant: missing action dispatcher.')\n  }\n\n  return new Promise((resolve, reject) => {\n    actionDispatcher({\n      actionId,\n      actionArgs,\n      resolve,\n      reject,\n    })\n  })\n}\n","const basePath = process.env.__NEXT_ROUTER_BASEPATH || ''\nconst pathname = `${basePath}/__nextjs_source-map`\n\nexport const findSourceMapURL =\n  process.env.NODE_ENV === 'development'\n    ? function findSourceMapURL(filename: string): string | null {\n        if (filename === '') {\n          return null\n        }\n\n        const url = new URL(pathname, document.location.origin)\n\n        url.searchParams.set(\n          'filename',\n          filename.replace(\n            new RegExp(`^${document.location.origin}${basePath}`),\n            ''\n          )\n        )\n\n        return url.href\n      }\n    : undefined\n","export const RSC_HEADER = 'RSC' as const\nexport const ACTION_HEADER = 'Next-Action' as const\n// TODO: Instead of sending the full router state, we only need to send the\n// segment path. Saves bytes. Then we could also use this field for segment\n// prefetches, which also need to specify a particular segment.\nexport const NEXT_ROUTER_STATE_TREE_HEADER = 'Next-Router-State-Tree' as const\nexport const NEXT_ROUTER_PREFETCH_HEADER = 'Next-Router-Prefetch' as const\n// This contains the path to the segment being prefetched.\n// TODO: If we change Next-Router-State-Tree to be a segment path, we can use\n// that instead. Then Next-Router-Prefetch and Next-Router-Segment-Prefetch can\n// be merged into a single enum.\nexport const NEXT_ROUTER_SEGMENT_PREFETCH_HEADER =\n  'Next-Router-Segment-Prefetch' as const\nexport const NEXT_HMR_REFRESH_HEADER = 'Next-HMR-Refresh' as const\nexport const NEXT_URL = 'Next-Url' as const\nexport const RSC_CONTENT_TYPE_HEADER = 'text/x-component' as const\n\nexport const FLIGHT_HEADERS = [\n  RSC_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_HMR_REFRESH_HEADER,\n  NEXT_ROUTER_SEGMENT_PREFETCH_HEADER,\n] as const\n\nexport const NEXT_RSC_UNION_QUERY = '_rsc' as const\n\nexport const NEXT_ROUTER_STALE_TIME_HEADER = 'x-nextjs-stale-time' as const\nexport const NEXT_DID_POSTPONE_HEADER = 'x-nextjs-postponed' as const\nexport const NEXT_IS_PRERENDER_HEADER = 'x-nextjs-prerender' as const\n","import type { Dispatch } from 'react'\nimport React, { use } from 'react'\nimport { useCallback } from 'react'\nimport type {\n  AppRouterState,\n  ReducerActions,\n  ReducerState,\n} from './router-reducer/router-reducer-types'\nimport type { AppRouterActionQueue } from '../../shared/lib/router/action-queue'\nimport { isThenable } from '../../shared/lib/is-thenable'\n\nexport function useUnwrapState(state: ReducerState): AppRouterState {\n  // reducer actions can be async, so sometimes we need to suspend until the state is resolved\n  if (isThenable(state)) {\n    const result = use(state)\n    return result\n  }\n\n  return state\n}\n\nexport function useReducer(\n  actionQueue: AppRouterActionQueue\n): [ReducerState, Dispatch<ReducerActions>] {\n  const [state, setState] = React.useState<ReducerState>(actionQueue.state)\n\n  const dispatch = useCallback(\n    (action: ReducerActions) => {\n      actionQueue.dispatch(action, setState)\n    },\n    [actionQueue]\n  )\n\n  return [state, dispatch]\n}\n","import { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { parsePath } from '../shared/lib/router/utils/parse-path'\n\n/**\n * Normalizes the trailing slash of a path according to the `trailingSlash` option\n * in `next.config.js`.\n */\nexport const normalizePathTrailingSlash = (path: string) => {\n  if (!path.startsWith('/') || process.env.__NEXT_MANUAL_TRAILING_SLASH) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  if (process.env.__NEXT_TRAILING_SLASH) {\n    if (/\\.[^/]+\\/?$/.test(pathname)) {\n      return `${removeTrailingSlash(pathname)}${query}${hash}`\n    } else if (pathname.endsWith('/')) {\n      return `${pathname}${query}${hash}`\n    } else {\n      return `${pathname}/${query}${hash}`\n    }\n  }\n\n  return `${removeTrailingSlash(pathname)}${query}${hash}`\n}\n","import { addPathPrefix } from '../shared/lib/router/utils/add-path-prefix'\nimport { normalizePathTrailingSlash } from './normalize-trailing-slash'\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nexport function addBasePath(path: string, required?: boolean): string {\n  return normalizePathTrailingSlash(\n    process.env.__NEXT_MANUAL_CLIENT_BASE_PATH && !required\n      ? path\n      : addPathPrefix(path, basePath)\n  )\n}\n","import { useEffect, useRef, useState } from 'react'\nimport { createPortal } from 'react-dom'\nimport type { FlightRouterState } from '../../server/app-render/types'\n\nconst ANNOUNCER_TYPE = 'next-route-announcer'\nconst ANNOUNCER_ID = '__next-route-announcer__'\n\nfunction getAnnouncerNode() {\n  const existingAnnouncer = document.getElementsByName(ANNOUNCER_TYPE)[0]\n  if (existingAnnouncer?.shadowRoot?.childNodes[0]) {\n    return existingAnnouncer.shadowRoot.childNodes[0] as HTMLElement\n  } else {\n    const container = document.createElement(ANNOUNCER_TYPE)\n    container.style.cssText = 'position:absolute'\n    const announcer = document.createElement('div')\n    announcer.ariaLive = 'assertive'\n    announcer.id = ANNOUNCER_ID\n    announcer.role = 'alert'\n    announcer.style.cssText =\n      'position:absolute;border:0;height:1px;margin:-1px;padding:0;width:1px;clip:rect(0 0 0 0);overflow:hidden;white-space:nowrap;word-wrap:normal'\n\n    // Use shadow DOM here to avoid any potential CSS bleed\n    const shadow = container.attachShadow({ mode: 'open' })\n    shadow.appendChild(announcer)\n    document.body.appendChild(container)\n    return announcer\n  }\n}\n\nexport function AppRouterAnnouncer({ tree }: { tree: FlightRouterState }) {\n  const [portalNode, setPortalNode] = useState<HTMLElement | null>(null)\n\n  useEffect(() => {\n    const announcer = getAnnouncerNode()\n    setPortalNode(announcer)\n    return () => {\n      const container = document.getElementsByTagName(ANNOUNCER_TYPE)[0]\n      if (container?.isConnected) {\n        document.body.removeChild(container)\n      }\n    }\n  }, [])\n\n  const [routeAnnouncement, setRouteAnnouncement] = useState('')\n  const previousTitle = useRef<string | undefined>(undefined)\n\n  useEffect(() => {\n    let currentTitle = ''\n    if (document.title) {\n      currentTitle = document.title\n    } else {\n      const pageHeader = document.querySelector('h1')\n      if (pageHeader) {\n        currentTitle = pageHeader.innerText || pageHeader.textContent || ''\n      }\n    }\n\n    // Only announce the title change, but not for the first load because screen\n    // readers do that automatically.\n    if (\n      previousTitle.current !== undefined &&\n      previousTitle.current !== currentTitle\n    ) {\n      setRouteAnnouncement(currentTitle)\n    }\n    previousTitle.current = currentTitle\n  }, [tree])\n\n  return portalNode ? createPortal(routeAnnouncement, portalNode) : null\n}\n","import type { FlightRouterState } from '../../../../server/app-render/types'\nimport type { CacheNode } from '../../../../shared/lib/app-router-context.shared-runtime'\nimport { createRouterCacheKey } from '../create-router-cache-key'\n\nexport function findHeadInCache(\n  cache: CacheNode,\n  parallelRoutes: FlightRouterState[1]\n): [CacheNode, string] | null {\n  return findHeadInCacheImpl(cache, parallelRoutes, '')\n}\n\nfunction findHeadInCacheImpl(\n  cache: CacheNode,\n  parallelRoutes: FlightRouterState[1],\n  keyPrefix: string\n): [CacheNode, string] | null {\n  const isLastItem = Object.keys(parallelRoutes).length === 0\n  if (isLastItem) {\n    // Returns the entire Cache Node of the segment whose head we will render.\n    return [cache, keyPrefix]\n  }\n  for (const key in parallelRoutes) {\n    const [segment, childParallelRoutes] = parallelRoutes[key]\n    const childSegmentMap = cache.parallelRoutes.get(key)\n    if (!childSegmentMap) {\n      continue\n    }\n\n    const cacheKey = createRouterCacheKey(segment)\n\n    const cacheNode = childSegmentMap.get(cacheKey)\n    if (!cacheNode) {\n      continue\n    }\n\n    const item = findHeadInCacheImpl(\n      cacheNode,\n      childParallelRoutes,\n      keyPrefix + '/' + cacheKey\n    )\n    if (item) {\n      return item\n    }\n  }\n\n  return null\n}\n","import { hasBasePath } from './has-base-path'\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nexport function removeBasePath(path: string): string {\n  if (process.env.__NEXT_MANUAL_CLIENT_BASE_PATH) {\n    if (!hasBasePath(path)) {\n      return path\n    }\n  }\n\n  // Can't trim the basePath if it has zero length!\n  if (basePath.length === 0) return path\n\n  path = path.slice(basePath.length)\n  if (!path.startsWith('/')) path = `/${path}`\n  return path\n}\n","import { pathHasPrefix } from '../shared/lib/router/utils/path-has-prefix'\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nexport function hasBasePath(path: string): boolean {\n  return pathHasPrefix(path, basePath)\n}\n","'use client'\n\nimport React, {\n  use,\n  useEffect,\n  useMemo,\n  useCallback,\n  startTransition,\n  useInsertionEffect,\n  useDeferredValue,\n} from 'react'\nimport {\n  AppRouterContext,\n  LayoutRouterContext,\n  GlobalLayoutRouterContext,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport type {\n  CacheNode,\n  AppRouterInstance,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport {\n  ACTION_HMR_REFRESH,\n  ACTION_NAVIGATE,\n  ACTION_PREFETCH,\n  ACTION_REFRESH,\n  ACTION_RESTORE,\n  ACTION_SERVER_PATCH,\n  PrefetchKind,\n} from './router-reducer/router-reducer-types'\nimport type {\n  AppRouterState,\n  ReducerActions,\n  RouterChangeByServerResponse,\n  RouterNavigate,\n} from './router-reducer/router-reducer-types'\nimport { createHrefFromUrl } from './router-reducer/create-href-from-url'\nimport {\n  SearchParamsContext,\n  PathnameContext,\n  PathParamsContext,\n} from '../../shared/lib/hooks-client-context.shared-runtime'\nimport { useReducer, useUnwrapState } from './use-reducer'\nimport { ErrorBoundary, type ErrorComponent } from './error-boundary'\nimport { isBot } from '../../shared/lib/router/utils/is-bot'\nimport { addBasePath } from '../add-base-path'\nimport { AppRouterAnnouncer } from './app-router-announcer'\nimport { RedirectBoundary } from './redirect-boundary'\nimport { findHeadInCache } from './router-reducer/reducers/find-head-in-cache'\nimport { unresolvedThenable } from './unresolved-thenable'\nimport { removeBasePath } from '../remove-base-path'\nimport { hasBasePath } from '../has-base-path'\nimport { getSelectedParams } from './router-reducer/compute-changed-path'\nimport type { FlightRouterState } from '../../server/app-render/types'\nimport { useNavFailureHandler } from './nav-failure-handler'\nimport { useServerActionDispatcher } from '../app-call-server'\nimport type { AppRouterActionQueue } from '../../shared/lib/router/action-queue'\nimport {\n  getRedirectTypeFromError,\n  getURLFromRedirectError,\n  isRedirectError,\n  RedirectType,\n} from './redirect'\n\nconst globalMutable: {\n  pendingMpaPath?: string\n} = {}\n\nfunction isExternalURL(url: URL) {\n  return url.origin !== window.location.origin\n}\n\nfunction HistoryUpdater({\n  appRouterState,\n}: {\n  appRouterState: AppRouterState\n}) {\n  useInsertionEffect(() => {\n    if (process.env.__NEXT_APP_NAV_FAIL_HANDLING) {\n      // clear pending URL as navigation is no longer\n      // in flight\n      window.next.__pendingUrl = undefined\n    }\n\n    const { tree, pushRef, canonicalUrl } = appRouterState\n    const historyState = {\n      ...(pushRef.preserveCustomHistoryState ? window.history.state : {}),\n      // Identifier is shortened intentionally.\n      // __NA is used to identify if the history entry can be handled by the app-router.\n      // __N is used to identify if the history entry can be handled by the old router.\n      __NA: true,\n      __PRIVATE_NEXTJS_INTERNALS_TREE: tree,\n    }\n    if (\n      pushRef.pendingPush &&\n      // Skip pushing an additional history entry if the canonicalUrl is the same as the current url.\n      // This mirrors the browser behavior for normal navigation.\n      createHrefFromUrl(new URL(window.location.href)) !== canonicalUrl\n    ) {\n      // This intentionally mutates React state, pushRef is overwritten to ensure additional push/replace calls do not trigger an additional history entry.\n      pushRef.pendingPush = false\n      window.history.pushState(historyState, '', canonicalUrl)\n    } else {\n      window.history.replaceState(historyState, '', canonicalUrl)\n    }\n  }, [appRouterState])\n  return null\n}\n\nexport function createEmptyCacheNode(): CacheNode {\n  return {\n    lazyData: null,\n    rsc: null,\n    prefetchRsc: null,\n    head: null,\n    prefetchHead: null,\n    parallelRoutes: new Map(),\n    loading: null,\n  }\n}\n\n/**\n * Server response that only patches the cache and tree.\n */\nfunction useChangeByServerResponse(\n  dispatch: React.Dispatch<ReducerActions>\n): RouterChangeByServerResponse {\n  return useCallback(\n    ({ previousTree, serverResponse }) => {\n      startTransition(() => {\n        dispatch({\n          type: ACTION_SERVER_PATCH,\n          previousTree,\n          serverResponse,\n        })\n      })\n    },\n    [dispatch]\n  )\n}\n\nfunction useNavigate(dispatch: React.Dispatch<ReducerActions>): RouterNavigate {\n  return useCallback(\n    (href, navigateType, shouldScroll) => {\n      const url = new URL(addBasePath(href), location.href)\n\n      if (process.env.__NEXT_APP_NAV_FAIL_HANDLING) {\n        window.next.__pendingUrl = url\n      }\n\n      return dispatch({\n        type: ACTION_NAVIGATE,\n        url,\n        isExternalUrl: isExternalURL(url),\n        locationSearch: location.search,\n        shouldScroll: shouldScroll ?? true,\n        navigateType,\n        allowAliasing: true,\n      })\n    },\n    [dispatch]\n  )\n}\n\nfunction copyNextJsInternalHistoryState(data: any) {\n  if (data == null) data = {}\n  const currentState = window.history.state\n  const __NA = currentState?.__NA\n  if (__NA) {\n    data.__NA = __NA\n  }\n  const __PRIVATE_NEXTJS_INTERNALS_TREE =\n    currentState?.__PRIVATE_NEXTJS_INTERNALS_TREE\n  if (__PRIVATE_NEXTJS_INTERNALS_TREE) {\n    data.__PRIVATE_NEXTJS_INTERNALS_TREE = __PRIVATE_NEXTJS_INTERNALS_TREE\n  }\n\n  return data\n}\n\nfunction Head({\n  headCacheNode,\n}: {\n  headCacheNode: CacheNode | null\n}): React.ReactNode {\n  // If this segment has a `prefetchHead`, it's the statically prefetched data.\n  // We should use that on initial render instead of `head`. Then we'll switch\n  // to `head` when the dynamic response streams in.\n  const head = headCacheNode !== null ? headCacheNode.head : null\n  const prefetchHead =\n    headCacheNode !== null ? headCacheNode.prefetchHead : null\n\n  // If no prefetch data is available, then we go straight to rendering `head`.\n  const resolvedPrefetchRsc = prefetchHead !== null ? prefetchHead : head\n\n  // We use `useDeferredValue` to handle switching between the prefetched and\n  // final values. The second argument is returned on initial render, then it\n  // re-renders with the first argument.\n  //\n  // @ts-expect-error The second argument to `useDeferredValue` is only\n  // available in the experimental builds. When its disabled, it will always\n  // return `head`.\n  return useDeferredValue(head, resolvedPrefetchRsc)\n}\n\n/**\n * The global router that wraps the application components.\n */\nfunction Router({\n  actionQueue,\n  assetPrefix,\n}: {\n  actionQueue: AppRouterActionQueue\n  assetPrefix: string\n}) {\n  const [state, dispatch] = useReducer(actionQueue)\n  const { canonicalUrl } = useUnwrapState(state)\n  // Add memoized pathname/query for useSearchParams and usePathname.\n  const { searchParams, pathname } = useMemo(() => {\n    const url = new URL(\n      canonicalUrl,\n      typeof window === 'undefined' ? 'http://n' : window.location.href\n    )\n\n    return {\n      // This is turned into a readonly class in `useSearchParams`\n      searchParams: url.searchParams,\n      pathname: hasBasePath(url.pathname)\n        ? removeBasePath(url.pathname)\n        : url.pathname,\n    }\n  }, [canonicalUrl])\n\n  const changeByServerResponse = useChangeByServerResponse(dispatch)\n  const navigate = useNavigate(dispatch)\n  useServerActionDispatcher(dispatch)\n\n  /**\n   * The app router that is exposed through `useRouter`. It's only concerned with dispatching actions to the reducer, does not hold state.\n   */\n  const appRouter = useMemo<AppRouterInstance>(() => {\n    const routerInstance: AppRouterInstance = {\n      back: () => window.history.back(),\n      forward: () => window.history.forward(),\n      prefetch: (href, options) => {\n        // Don't prefetch for bots as they don't navigate.\n        if (isBot(window.navigator.userAgent)) {\n          return\n        }\n\n        let url: URL\n        try {\n          url = new URL(addBasePath(href), window.location.href)\n        } catch (_) {\n          throw new Error(\n            `Cannot prefetch '${href}' because it cannot be converted to a URL.`\n          )\n        }\n\n        // Don't prefetch during development (improves compilation performance)\n        if (process.env.NODE_ENV === 'development') {\n          return\n        }\n\n        // External urls can't be prefetched in the same way.\n        if (isExternalURL(url)) {\n          return\n        }\n        startTransition(() => {\n          dispatch({\n            type: ACTION_PREFETCH,\n            url,\n            kind: options?.kind ?? PrefetchKind.FULL,\n          })\n        })\n      },\n      replace: (href, options = {}) => {\n        startTransition(() => {\n          navigate(href, 'replace', options.scroll ?? true)\n        })\n      },\n      push: (href, options = {}) => {\n        startTransition(() => {\n          navigate(href, 'push', options.scroll ?? true)\n        })\n      },\n      refresh: () => {\n        startTransition(() => {\n          dispatch({\n            type: ACTION_REFRESH,\n            origin: window.location.origin,\n          })\n        })\n      },\n      hmrRefresh: () => {\n        if (process.env.NODE_ENV !== 'development') {\n          throw new Error(\n            'hmrRefresh can only be used in development mode. Please use refresh instead.'\n          )\n        } else {\n          startTransition(() => {\n            dispatch({\n              type: ACTION_HMR_REFRESH,\n              origin: window.location.origin,\n            })\n          })\n        }\n      },\n    }\n\n    return routerInstance\n  }, [dispatch, navigate])\n\n  useEffect(() => {\n    // Exists for debugging purposes. Don't use in application code.\n    if (window.next) {\n      window.next.router = appRouter\n    }\n  }, [appRouter])\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const { cache, prefetchCache, tree } = useUnwrapState(state)\n\n    // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      // Add `window.nd` for debugging purposes.\n      // This is not meant for use in applications as concurrent rendering will affect the cache/tree/router.\n      // @ts-ignore this is for debugging\n      window.nd = {\n        router: appRouter,\n        cache,\n        prefetchCache,\n        tree,\n      }\n    }, [appRouter, cache, prefetchCache, tree])\n  }\n\n  useEffect(() => {\n    // If the app is restored from bfcache, it's possible that\n    // pushRef.mpaNavigation is true, which would mean that any re-render of this component\n    // would trigger the mpa navigation logic again from the lines below.\n    // This will restore the router to the initial state in the event that the app is restored from bfcache.\n    function handlePageShow(event: PageTransitionEvent) {\n      if (\n        !event.persisted ||\n        !window.history.state?.__PRIVATE_NEXTJS_INTERNALS_TREE\n      ) {\n        return\n      }\n\n      // Clear the pendingMpaPath value so that a subsequent MPA navigation to the same URL can be triggered.\n      // This is necessary because if the browser restored from bfcache, the pendingMpaPath would still be set to the value\n      // of the last MPA navigation.\n      globalMutable.pendingMpaPath = undefined\n\n      dispatch({\n        type: ACTION_RESTORE,\n        url: new URL(window.location.href),\n        tree: window.history.state.__PRIVATE_NEXTJS_INTERNALS_TREE,\n      })\n    }\n\n    window.addEventListener('pageshow', handlePageShow)\n\n    return () => {\n      window.removeEventListener('pageshow', handlePageShow)\n    }\n  }, [dispatch])\n\n  useEffect(() => {\n    // Ensure that any redirect errors that bubble up outside of the RedirectBoundary\n    // are caught and handled by the router.\n    function handleUnhandledRedirect(\n      event: ErrorEvent | PromiseRejectionEvent\n    ) {\n      const error = 'reason' in event ? event.reason : event.error\n      if (isRedirectError(error)) {\n        event.preventDefault()\n        const url = getURLFromRedirectError(error)\n        const redirectType = getRedirectTypeFromError(error)\n        if (redirectType === RedirectType.push) {\n          appRouter.push(url, {})\n        } else {\n          appRouter.replace(url, {})\n        }\n      }\n    }\n    window.addEventListener('error', handleUnhandledRedirect)\n    window.addEventListener('unhandledrejection', handleUnhandledRedirect)\n\n    return () => {\n      window.removeEventListener('error', handleUnhandledRedirect)\n      window.removeEventListener('unhandledrejection', handleUnhandledRedirect)\n    }\n  }, [appRouter])\n\n  // When mpaNavigation flag is set do a hard navigation to the new url.\n  // Infinitely suspend because we don't actually want to rerender any child\n  // components with the new URL and any entangled state updates shouldn't\n  // commit either (eg: useTransition isPending should stay true until the page\n  // unloads).\n  //\n  // This is a side effect in render. Don't try this at home, kids. It's\n  // probably safe because we know this is a singleton component and it's never\n  // in <Offscreen>. At least I hope so. (It will run twice in dev strict mode,\n  // but that's... fine?)\n  const { pushRef } = useUnwrapState(state)\n  if (pushRef.mpaNavigation) {\n    // if there's a re-render, we don't want to trigger another redirect if one is already in flight to the same URL\n    if (globalMutable.pendingMpaPath !== canonicalUrl) {\n      const location = window.location\n      if (pushRef.pendingPush) {\n        location.assign(canonicalUrl)\n      } else {\n        location.replace(canonicalUrl)\n      }\n\n      globalMutable.pendingMpaPath = canonicalUrl\n    }\n    // TODO-APP: Should we listen to navigateerror here to catch failed\n    // navigations somehow? And should we call window.stop() if a SPA navigation\n    // should interrupt an MPA one?\n    use(unresolvedThenable)\n  }\n\n  useEffect(() => {\n    const originalPushState = window.history.pushState.bind(window.history)\n    const originalReplaceState = window.history.replaceState.bind(\n      window.history\n    )\n\n    // Ensure the canonical URL in the Next.js Router is updated when the URL is changed so that `usePathname` and `useSearchParams` hold the pushed values.\n    const applyUrlFromHistoryPushReplace = (\n      url: string | URL | null | undefined\n    ) => {\n      const href = window.location.href\n      const tree: FlightRouterState | undefined =\n        window.history.state?.__PRIVATE_NEXTJS_INTERNALS_TREE\n\n      startTransition(() => {\n        dispatch({\n          type: ACTION_RESTORE,\n          url: new URL(url ?? href, href),\n          tree,\n        })\n      })\n    }\n\n    /**\n     * Patch pushState to ensure external changes to the history are reflected in the Next.js Router.\n     * Ensures Next.js internal history state is copied to the new history entry.\n     * Ensures usePathname and useSearchParams hold the newly provided url.\n     */\n    window.history.pushState = function pushState(\n      data: any,\n      _unused: string,\n      url?: string | URL | null\n    ): void {\n      // Avoid a loop when Next.js internals trigger pushState/replaceState\n      if (data?.__NA || data?._N) {\n        return originalPushState(data, _unused, url)\n      }\n\n      data = copyNextJsInternalHistoryState(data)\n\n      if (url) {\n        applyUrlFromHistoryPushReplace(url)\n      }\n\n      return originalPushState(data, _unused, url)\n    }\n\n    /**\n     * Patch replaceState to ensure external changes to the history are reflected in the Next.js Router.\n     * Ensures Next.js internal history state is copied to the new history entry.\n     * Ensures usePathname and useSearchParams hold the newly provided url.\n     */\n    window.history.replaceState = function replaceState(\n      data: any,\n      _unused: string,\n      url?: string | URL | null\n    ): void {\n      // Avoid a loop when Next.js internals trigger pushState/replaceState\n      if (data?.__NA || data?._N) {\n        return originalReplaceState(data, _unused, url)\n      }\n      data = copyNextJsInternalHistoryState(data)\n\n      if (url) {\n        applyUrlFromHistoryPushReplace(url)\n      }\n      return originalReplaceState(data, _unused, url)\n    }\n\n    /**\n     * Handle popstate event, this is used to handle back/forward in the browser.\n     * By default dispatches ACTION_RESTORE, however if the history entry was not pushed/replaced by app-router it will reload the page.\n     * That case can happen when the old router injected the history entry.\n     */\n    const onPopState = (event: PopStateEvent) => {\n      if (!event.state) {\n        // TODO-APP: this case only happens when pushState/replaceState was called outside of Next.js. It should probably reload the page in this case.\n        return\n      }\n\n      // This case happens when the history entry was pushed by the `pages` router.\n      if (!event.state.__NA) {\n        window.location.reload()\n        return\n      }\n\n      // TODO-APP: Ideally the back button should not use startTransition as it should apply the updates synchronously\n      // Without startTransition works if the cache is there for this path\n      startTransition(() => {\n        dispatch({\n          type: ACTION_RESTORE,\n          url: new URL(window.location.href),\n          tree: event.state.__PRIVATE_NEXTJS_INTERNALS_TREE,\n        })\n      })\n    }\n\n    // Register popstate event to call onPopstate.\n    window.addEventListener('popstate', onPopState)\n    return () => {\n      window.history.pushState = originalPushState\n      window.history.replaceState = originalReplaceState\n      window.removeEventListener('popstate', onPopState)\n    }\n  }, [dispatch])\n\n  const { cache, tree, nextUrl, focusAndScrollRef, buildId } =\n    useUnwrapState(state)\n\n  const matchingHead = useMemo(() => {\n    return findHeadInCache(cache, tree[1])\n  }, [cache, tree])\n\n  // Add memoized pathParams for useParams.\n  const pathParams = useMemo(() => {\n    return getSelectedParams(tree)\n  }, [tree])\n\n  const layoutRouterContext = useMemo(() => {\n    return {\n      childNodes: cache.parallelRoutes,\n      tree,\n      // Root node always has `url`\n      // Provided in AppTreeContext to ensure it can be overwritten in layout-router\n      url: canonicalUrl,\n      loading: cache.loading,\n    }\n  }, [cache.parallelRoutes, tree, canonicalUrl, cache.loading])\n\n  const globalLayoutRouterContext = useMemo(() => {\n    return {\n      buildId,\n      changeByServerResponse,\n      tree,\n      focusAndScrollRef,\n      nextUrl,\n    }\n  }, [buildId, changeByServerResponse, tree, focusAndScrollRef, nextUrl])\n\n  let head\n  if (matchingHead !== null) {\n    // The head is wrapped in an extra component so we can use\n    // `useDeferredValue` to swap between the prefetched and final versions of\n    // the head. (This is what LayoutRouter does for segment data, too.)\n    //\n    // The `key` is used to remount the component whenever the head moves to\n    // a different segment.\n    const [headCacheNode, headKey] = matchingHead\n    head = <Head key={headKey} headCacheNode={headCacheNode} />\n  } else {\n    head = null\n  }\n\n  let content = (\n    <RedirectBoundary>\n      {head}\n      {cache.rsc}\n      <AppRouterAnnouncer tree={tree} />\n    </RedirectBoundary>\n  )\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof window !== 'undefined') {\n      const DevRootNotFoundBoundary: typeof import('./dev-root-not-found-boundary').DevRootNotFoundBoundary =\n        require('./dev-root-not-found-boundary').DevRootNotFoundBoundary\n      content = <DevRootNotFoundBoundary>{content}</DevRootNotFoundBoundary>\n    }\n    const HotReloader: typeof import('./react-dev-overlay/app/hot-reloader-client').default =\n      require('./react-dev-overlay/app/hot-reloader-client').default\n\n    content = <HotReloader assetPrefix={assetPrefix}>{content}</HotReloader>\n  }\n\n  return (\n    <>\n      <HistoryUpdater appRouterState={useUnwrapState(state)} />\n      <RuntimeStyles />\n      <PathParamsContext.Provider value={pathParams}>\n        <PathnameContext.Provider value={pathname}>\n          <SearchParamsContext.Provider value={searchParams}>\n            <GlobalLayoutRouterContext.Provider\n              value={globalLayoutRouterContext}\n            >\n              <AppRouterContext.Provider value={appRouter}>\n                <LayoutRouterContext.Provider value={layoutRouterContext}>\n                  {content}\n                </LayoutRouterContext.Provider>\n              </AppRouterContext.Provider>\n            </GlobalLayoutRouterContext.Provider>\n          </SearchParamsContext.Provider>\n        </PathnameContext.Provider>\n      </PathParamsContext.Provider>\n    </>\n  )\n}\n\nexport default function AppRouter({\n  actionQueue,\n  globalErrorComponentAndStyles: [globalErrorComponent, globalErrorStyles],\n  assetPrefix,\n}: {\n  actionQueue: AppRouterActionQueue\n  globalErrorComponentAndStyles: [ErrorComponent, React.ReactNode | undefined]\n  assetPrefix: string\n}) {\n  useNavFailureHandler()\n\n  return (\n    <ErrorBoundary\n      errorComponent={globalErrorComponent}\n      errorStyles={globalErrorStyles}\n    >\n      <Router actionQueue={actionQueue} assetPrefix={assetPrefix} />\n    </ErrorBoundary>\n  )\n}\n\nconst runtimeStyles = new Set<string>()\nlet runtimeStyleChanged = new Set<() => void>()\n\nglobalThis._N_E_STYLE_LOAD = function (href: string) {\n  let len = runtimeStyles.size\n  runtimeStyles.add(href)\n  if (runtimeStyles.size !== len) {\n    runtimeStyleChanged.forEach((cb) => cb())\n  }\n  // TODO figure out how to get a promise here\n  // But maybe it's not necessary as react would block rendering until it's loaded\n  return Promise.resolve()\n}\n\nfunction RuntimeStyles() {\n  const [, forceUpdate] = React.useState(0)\n  const renderedStylesSize = runtimeStyles.size\n  useEffect(() => {\n    const changed = () => forceUpdate((c) => c + 1)\n    runtimeStyleChanged.add(changed)\n    if (renderedStylesSize !== runtimeStyles.size) {\n      changed()\n    }\n    return () => {\n      runtimeStyleChanged.delete(changed)\n    }\n  }, [renderedStylesSize, forceUpdate])\n\n  const dplId = process.env.NEXT_DEPLOYMENT_ID\n    ? `?dpl=${process.env.NEXT_DEPLOYMENT_ID}`\n    : ''\n  return [...runtimeStyles].map((href, i) => (\n    <link\n      key={i}\n      rel=\"stylesheet\"\n      href={`${href}${dplId}`}\n      // @ts-ignore\n      precedence=\"next\"\n      // TODO figure out crossOrigin and nonce\n      // crossOrigin={TODO}\n      // nonce={TODO}\n    />\n  ))\n}\n","import { BailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { workAsyncStorage } from '../../server/app-render/work-async-storage.external'\n\nexport function bailoutToClientRendering(reason: string): void | never {\n  const workStore = workAsyncStorage.getStore()\n\n  if (workStore?.forceStatic) return\n\n  if (workStore?.isStaticGeneration) throw new BailoutToCSRError(reason)\n}\n","'use client'\n\nimport type { ParsedUrlQuery } from 'querystring'\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\nimport type { Params } from '../../server/request/params'\n\n/**\n * When the Page is a client component we send the params and searchParams to this client wrapper\n * where they are turned into dynamically tracked values before being passed to the actual Page component.\n *\n * additionally we may send promises representing the params and searchParams. We don't ever use these passed\n * values but it can be necessary for the sender to send a Promise that doesn't resolve in certain situations.\n * It is up to the caller to decide if the promises are needed.\n */\nexport function ClientPageRoot({\n  Component,\n  searchParams,\n  params,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  promises,\n}: {\n  Component: React.ComponentType<any>\n  searchParams: ParsedUrlQuery\n  params: Params\n  promises?: Array<Promise<any>>\n}) {\n  if (typeof window === 'undefined') {\n    const { workAsyncStorage } =\n      require('../../server/app-render/work-async-storage.external') as typeof import('../../server/app-render/work-async-storage.external')\n\n    let clientSearchParams: Promise<ParsedUrlQuery>\n    let clientParams: Promise<Params>\n    // We are going to instrument the searchParams prop with tracking for the\n    // appropriate context. We wrap differently in prerendering vs rendering\n    const store = workAsyncStorage.getStore()\n    if (!store) {\n      throw new InvariantError(\n        'Expected workStore to exist when handling searchParams in a client Page.'\n      )\n    }\n\n    const { createSearchParamsFromClient } =\n      require('../../server/request/search-params') as typeof import('../../server/request/search-params')\n    clientSearchParams = createSearchParamsFromClient(searchParams, store)\n\n    const { createParamsFromClient } =\n      require('../../server/request/params') as typeof import('../../server/request/params')\n    clientParams = createParamsFromClient(params, store)\n\n    return <Component params={clientParams} searchParams={clientSearchParams} />\n  } else {\n    const { createRenderSearchParamsFromClient } =\n      require('../../server/request/search-params.browser') as typeof import('../../server/request/search-params.browser')\n    const clientSearchParams = createRenderSearchParamsFromClient(searchParams)\n    const { createRenderParamsFromClient } =\n      require('../../server/request/params.browser') as typeof import('../../server/request/params.browser')\n    const clientParams = createRenderParamsFromClient(params)\n\n    return <Component params={clientParams} searchParams={clientSearchParams} />\n  }\n}\n","'use client'\n\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\nimport type { Params } from '../../server/request/params'\n\n/**\n * When the Page is a client component we send the params to this client wrapper\n * where they are turned into dynamically tracked values before being passed to the actual Segment component.\n *\n * additionally we may send a promise representing params. We don't ever use this passed\n * value but it can be necessary for the sender to send a Promise that doesn't resolve in certain situations\n * such as when dynamicIO is enabled. It is up to the caller to decide if the promises are needed.\n */\nexport function ClientSegmentRoot({\n  Component,\n  slots,\n  params,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  promise,\n}: {\n  Component: React.ComponentType<any>\n  slots: { [key: string]: React.ReactNode }\n  params: Params\n  promise?: Promise<any>\n}) {\n  if (typeof window === 'undefined') {\n    const { workAsyncStorage } =\n      require('../../server/app-render/work-async-storage.external') as typeof import('../../server/app-render/work-async-storage.external')\n\n    let clientParams: Promise<Params>\n    // We are going to instrument the searchParams prop with tracking for the\n    // appropriate context. We wrap differently in prerendering vs rendering\n    const store = workAsyncStorage.getStore()\n    if (!store) {\n      throw new InvariantError(\n        'Expected workStore to exist when handling params in a client segment such as a Layout or Template.'\n      )\n    }\n\n    const { createParamsFromClient } =\n      require('../../server/request/params') as typeof import('../../server/request/params')\n    clientParams = createParamsFromClient(params, store)\n\n    return <Component {...slots} params={clientParams} />\n  } else {\n    const { createRenderParamsFromClient } =\n      require('../../server/request/params.browser') as typeof import('../../server/request/params.browser')\n    const clientParams = createRenderParamsFromClient(params)\n    return <Component {...slots} params={clientParams} />\n  }\n}\n","'use client'\n\nimport React, { type JSX } from 'react'\nimport { useUntrackedPathname } from './navigation-untracked'\nimport { isNextRouterError } from './is-next-router-error'\nimport { handleHardNavError } from './nav-failure-handler'\nimport { workAsyncStorage } from '../../server/app-render/work-async-storage.external'\n\nconst styles = {\n  error: {\n    // https://github.com/sindresorhus/modern-normalize/blob/main/modern-normalize.css#L38-L52\n    fontFamily:\n      'system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"',\n    height: '100vh',\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    fontSize: '14px',\n    fontWeight: 400,\n    lineHeight: '28px',\n    margin: '0 8px',\n  },\n} as const\n\nexport type ErrorComponent = React.ComponentType<{\n  error: Error\n  reset: () => void\n}>\n\nexport interface ErrorBoundaryProps {\n  children?: React.ReactNode\n  errorComponent: ErrorComponent | undefined\n  errorStyles?: React.ReactNode | undefined\n  errorScripts?: React.ReactNode | undefined\n}\n\ninterface ErrorBoundaryHandlerProps extends ErrorBoundaryProps {\n  pathname: string | null\n  errorComponent: ErrorComponent\n}\n\ninterface ErrorBoundaryHandlerState {\n  error: Error | null\n  previousPathname: string | null\n}\n\n// if we are revalidating we want to re-throw the error so the\n// function crashes so we can maintain our previous cache\n// instead of caching the error page\nfunction HandleISRError({ error }: { error: any }) {\n  const store = workAsyncStorage.getStore()\n  if (store?.isRevalidate || store?.isStaticGeneration) {\n    console.error(error)\n    throw error\n  }\n\n  return null\n}\n\nexport class ErrorBoundaryHandler extends React.Component<\n  ErrorBoundaryHandlerProps,\n  ErrorBoundaryHandlerState\n> {\n  constructor(props: ErrorBoundaryHandlerProps) {\n    super(props)\n    this.state = { error: null, previousPathname: this.props.pathname }\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    if (isNextRouterError(error)) {\n      // Re-throw if an expected internal Next.js router error occurs\n      // this means it should be handled by a different boundary (such as a NotFound boundary in a parent segment)\n      throw error\n    }\n\n    return { error }\n  }\n\n  static getDerivedStateFromProps(\n    props: ErrorBoundaryHandlerProps,\n    state: ErrorBoundaryHandlerState\n  ): ErrorBoundaryHandlerState | null {\n    const { error } = state\n\n    // if we encounter an error while\n    // a navigation is pending we shouldn't render\n    // the error boundary and instead should fallback\n    // to a hard navigation to attempt recovering\n    if (process.env.__NEXT_APP_NAV_FAIL_HANDLING) {\n      if (error && handleHardNavError(error)) {\n        // clear error so we don't render anything\n        return {\n          error: null,\n          previousPathname: props.pathname,\n        }\n      }\n    }\n\n    /**\n     * Handles reset of the error boundary when a navigation happens.\n     * Ensures the error boundary does not stay enabled when navigating to a new page.\n     * Approach of setState in render is safe as it checks the previous pathname and then overrides\n     * it as outlined in https://react.dev/reference/react/useState#storing-information-from-previous-renders\n     */\n    if (props.pathname !== state.previousPathname && state.error) {\n      return {\n        error: null,\n        previousPathname: props.pathname,\n      }\n    }\n    return {\n      error: state.error,\n      previousPathname: props.pathname,\n    }\n  }\n\n  reset = () => {\n    this.setState({ error: null })\n  }\n\n  // Explicit type is needed to avoid the generated `.d.ts` having a wide return type that could be specific to the `@types/react` version.\n  render(): React.ReactNode {\n    if (this.state.error) {\n      return (\n        <>\n          <HandleISRError error={this.state.error} />\n          {this.props.errorStyles}\n          {this.props.errorScripts}\n          <this.props.errorComponent\n            error={this.state.error}\n            reset={this.reset}\n          />\n        </>\n      )\n    }\n\n    return this.props.children\n  }\n}\n\nexport function GlobalError({ error }: { error: any }) {\n  const digest: string | undefined = error?.digest\n  return (\n    <html id=\"__next_error__\">\n      <head></head>\n      <body>\n        <HandleISRError error={error} />\n        <div style={styles.error}>\n          <div>\n            <h2 style={styles.text}>\n              {`Application error: a ${\n                digest ? 'server' : 'client'\n              }-side exception has occurred (see the ${\n                digest ? 'server logs' : 'browser console'\n              } for more information).`}\n            </h2>\n            {digest ? <p style={styles.text}>{`Digest: ${digest}`}</p> : null}\n          </div>\n        </div>\n      </body>\n    </html>\n  )\n}\n\n// Exported so that the import signature in the loaders can be identical to user\n// supplied custom global error signatures.\nexport default GlobalError\n\n/**\n * Handles errors through `getDerivedStateFromError`.\n * Renders the provided error component and provides a way to `reset` the error boundary state.\n */\n\n/**\n * Renders error boundary with the provided \"errorComponent\" property as the fallback.\n * If no \"errorComponent\" property is provided it renders the children without an error boundary.\n */\nexport function ErrorBoundary({\n  errorComponent,\n  errorStyles,\n  errorScripts,\n  children,\n}: ErrorBoundaryProps & {\n  children: React.ReactNode\n}): JSX.Element {\n  // When we're rendering the missing params shell, this will return null. This\n  // is because we won't be rendering any not found boundaries or error\n  // boundaries for the missing params shell. When this runs on the client\n  // (where these errors can occur), we will get the correct pathname.\n  const pathname = useUntrackedPathname()\n  if (errorComponent) {\n    return (\n      <ErrorBoundaryHandler\n        pathname={pathname}\n        errorComponent={errorComponent}\n        errorStyles={errorStyles}\n        errorScripts={errorScripts}\n      >\n        {children}\n      </ErrorBoundaryHandler>\n    )\n  }\n\n  return <>{children}</>\n}\n","import { isNotFoundError, type NotFoundError } from './not-found'\nimport { isRedirectError, type RedirectError } from './redirect'\n\n/**\n * Returns true if the error is a navigation signal error. These errors are\n * thrown by user code to perform navigation operations and interrupt the React\n * render.\n */\nexport function isNextRouterError(\n  error: unknown\n): error is RedirectError | NotFoundError {\n  return isRedirectError(error) || isNotFoundError(error)\n}\n","/**\n * Run function with `scroll-behavior: auto` applied to `<html/>`.\n * This css change will be reverted after the function finishes.\n */\nexport function handleSmoothScroll(\n  fn: () => void,\n  options: { dontForceLayout?: boolean; onlyHashChange?: boolean } = {}\n) {\n  // if only the hash is changed, we don't need to disable smooth scrolling\n  // we only care to prevent smooth scrolling when navigating to a new page to avoid jarring UX\n  if (options.onlyHashChange) {\n    fn()\n    return\n  }\n  const htmlElement = document.documentElement\n  const existing = htmlElement.style.scrollBehavior\n  htmlElement.style.scrollBehavior = 'auto'\n  if (!options.dontForceLayout) {\n    // In Chrome-based browsers we need to force reflow before calling `scrollTo`.\n    // Otherwise it will not pickup the change in scrollBehavior\n    // More info here: https://github.com/vercel/next.js/issues/40719#issuecomment-1336248042\n    htmlElement.getClientRects()\n  }\n  fn()\n  htmlElement.style.scrollBehavior = existing\n}\n","import type { Segment } from '../../../../server/app-render/types'\n\nexport function getSegmentValue(segment: Segment) {\n  return Array.isArray(segment) ? segment[1] : segment\n}\n","import type { FlightRouterState } from '../../../../server/app-render/types'\nimport { isInterceptionRouteAppPath } from '../../../../server/lib/interception-routes'\n\nexport function hasInterceptionRouteInCurrentTree([\n  segment,\n  parallelRoutes,\n]: FlightRouterState): boolean {\n  // If we have a dynamic segment, it's marked as an interception route by the presence of the `i` suffix.\n  if (Array.isArray(segment) && (segment[2] === 'di' || segment[2] === 'ci')) {\n    return true\n  }\n\n  // If segment is not an array, apply the existing string-based check\n  if (typeof segment === 'string' && isInterceptionRouteAppPath(segment)) {\n    return true\n  }\n\n  // Iterate through parallelRoutes if they exist\n  if (parallelRoutes) {\n    for (const key in parallelRoutes) {\n      if (hasInterceptionRouteInCurrentTree(parallelRoutes[key])) {\n        return true\n      }\n    }\n  }\n\n  return false\n}\n","'use client'\n\nimport type {\n  ChildSegmentMap,\n  LazyCacheNode,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport type {\n  FlightRouterState,\n  FlightSegmentPath,\n  Segment,\n} from '../../server/app-render/types'\nimport type { ErrorComponent } from './error-boundary'\nimport type { FocusAndScrollRef } from './router-reducer/router-reducer-types'\n\nimport React, {\n  useContext,\n  use,\n  startTransition,\n  Suspense,\n  useDeferredValue,\n  type JSX,\n} from 'react'\nimport ReactDOM from 'react-dom'\nimport {\n  LayoutRouterContext,\n  GlobalLayoutRouterContext,\n  TemplateContext,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport { fetchServerResponse } from './router-reducer/fetch-server-response'\nimport { unresolvedThenable } from './unresolved-thenable'\nimport { ErrorBoundary } from './error-boundary'\nimport { matchSegment } from './match-segments'\nimport { handleSmoothScroll } from '../../shared/lib/router/utils/handle-smooth-scroll'\nimport { RedirectBoundary } from './redirect-boundary'\nimport { NotFoundBoundary } from './not-found-boundary'\nimport { getSegmentValue } from './router-reducer/reducers/get-segment-value'\nimport { createRouterCacheKey } from './router-reducer/create-router-cache-key'\nimport { hasInterceptionRouteInCurrentTree } from './router-reducer/reducers/has-interception-route-in-current-tree'\n\n/**\n * Add refetch marker to router state at the point of the current layout segment.\n * This ensures the response returned is not further down than the current layout segment.\n */\nfunction walkAddRefetch(\n  segmentPathToWalk: FlightSegmentPath | undefined,\n  treeToRecreate: FlightRouterState\n): FlightRouterState {\n  if (segmentPathToWalk) {\n    const [segment, parallelRouteKey] = segmentPathToWalk\n    const isLast = segmentPathToWalk.length === 2\n\n    if (matchSegment(treeToRecreate[0], segment)) {\n      if (treeToRecreate[1].hasOwnProperty(parallelRouteKey)) {\n        if (isLast) {\n          const subTree = walkAddRefetch(\n            undefined,\n            treeToRecreate[1][parallelRouteKey]\n          )\n          return [\n            treeToRecreate[0],\n            {\n              ...treeToRecreate[1],\n              [parallelRouteKey]: [\n                subTree[0],\n                subTree[1],\n                subTree[2],\n                'refetch',\n              ],\n            },\n          ]\n        }\n\n        return [\n          treeToRecreate[0],\n          {\n            ...treeToRecreate[1],\n            [parallelRouteKey]: walkAddRefetch(\n              segmentPathToWalk.slice(2),\n              treeToRecreate[1][parallelRouteKey]\n            ),\n          },\n        ]\n      }\n    }\n  }\n\n  return treeToRecreate\n}\n\nconst __DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = (\n  ReactDOM as any\n).__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE\n\n// TODO-APP: Replace with new React API for finding dom nodes without a `ref` when available\n/**\n * Wraps ReactDOM.findDOMNode with additional logic to hide React Strict Mode warning\n */\nfunction findDOMNode(\n  instance: React.ReactInstance | null | undefined\n): Element | Text | null {\n  // Tree-shake for server bundle\n  if (typeof window === 'undefined') return null\n\n  // __DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE.findDOMNode is null during module init.\n  // We need to lazily reference it.\n  const internal_reactDOMfindDOMNode =\n    __DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE.findDOMNode\n  return internal_reactDOMfindDOMNode(instance)\n}\n\nconst rectProperties = [\n  'bottom',\n  'height',\n  'left',\n  'right',\n  'top',\n  'width',\n  'x',\n  'y',\n] as const\n/**\n * Check if a HTMLElement is hidden or fixed/sticky position\n */\nfunction shouldSkipElement(element: HTMLElement) {\n  // we ignore fixed or sticky positioned elements since they'll likely pass the \"in-viewport\" check\n  // and will result in a situation we bail on scroll because of something like a fixed nav,\n  // even though the actual page content is offscreen\n  if (['sticky', 'fixed'].includes(getComputedStyle(element).position)) {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn(\n        'Skipping auto-scroll behavior due to `position: sticky` or `position: fixed` on element:',\n        element\n      )\n    }\n    return true\n  }\n\n  // Uses `getBoundingClientRect` to check if the element is hidden instead of `offsetParent`\n  // because `offsetParent` doesn't consider document/body\n  const rect = element.getBoundingClientRect()\n  return rectProperties.every((item) => rect[item] === 0)\n}\n\n/**\n * Check if the top corner of the HTMLElement is in the viewport.\n */\nfunction topOfElementInViewport(element: HTMLElement, viewportHeight: number) {\n  const rect = element.getBoundingClientRect()\n  return rect.top >= 0 && rect.top <= viewportHeight\n}\n\n/**\n * Find the DOM node for a hash fragment.\n * If `top` the page has to scroll to the top of the page. This mirrors the browser's behavior.\n * If the hash fragment is an id, the page has to scroll to the element with that id.\n * If the hash fragment is a name, the page has to scroll to the first element with that name.\n */\nfunction getHashFragmentDomNode(hashFragment: string) {\n  // If the hash fragment is `top` the page has to scroll to the top of the page.\n  if (hashFragment === 'top') {\n    return document.body\n  }\n\n  // If the hash fragment is an id, the page has to scroll to the element with that id.\n  return (\n    document.getElementById(hashFragment) ??\n    // If the hash fragment is a name, the page has to scroll to the first element with that name.\n    document.getElementsByName(hashFragment)[0]\n  )\n}\ninterface ScrollAndFocusHandlerProps {\n  focusAndScrollRef: FocusAndScrollRef\n  children: React.ReactNode\n  segmentPath: FlightSegmentPath\n}\nclass InnerScrollAndFocusHandler extends React.Component<ScrollAndFocusHandlerProps> {\n  handlePotentialScroll = () => {\n    // Handle scroll and focus, it's only applied once in the first useEffect that triggers that changed.\n    const { focusAndScrollRef, segmentPath } = this.props\n\n    if (focusAndScrollRef.apply) {\n      // segmentPaths is an array of segment paths that should be scrolled to\n      // if the current segment path is not in the array, the scroll is not applied\n      // unless the array is empty, in which case the scroll is always applied\n      if (\n        focusAndScrollRef.segmentPaths.length !== 0 &&\n        !focusAndScrollRef.segmentPaths.some((scrollRefSegmentPath) =>\n          segmentPath.every((segment, index) =>\n            matchSegment(segment, scrollRefSegmentPath[index])\n          )\n        )\n      ) {\n        return\n      }\n\n      let domNode:\n        | ReturnType<typeof getHashFragmentDomNode>\n        | ReturnType<typeof findDOMNode> = null\n      const hashFragment = focusAndScrollRef.hashFragment\n\n      if (hashFragment) {\n        domNode = getHashFragmentDomNode(hashFragment)\n      }\n\n      // `findDOMNode` is tricky because it returns just the first child if the component is a fragment.\n      // This already caused a bug where the first child was a <link/> in head.\n      if (!domNode) {\n        domNode = findDOMNode(this)\n      }\n\n      // If there is no DOM node this layout-router level is skipped. It'll be handled higher-up in the tree.\n      if (!(domNode instanceof Element)) {\n        return\n      }\n\n      // Verify if the element is a HTMLElement and if we want to consider it for scroll behavior.\n      // If the element is skipped, try to select the next sibling and try again.\n      while (!(domNode instanceof HTMLElement) || shouldSkipElement(domNode)) {\n        // No siblings found that match the criteria are found, so handle scroll higher up in the tree instead.\n        if (domNode.nextElementSibling === null) {\n          return\n        }\n        domNode = domNode.nextElementSibling\n      }\n\n      // State is mutated to ensure that the focus and scroll is applied only once.\n      focusAndScrollRef.apply = false\n      focusAndScrollRef.hashFragment = null\n      focusAndScrollRef.segmentPaths = []\n\n      handleSmoothScroll(\n        () => {\n          // In case of hash scroll, we only need to scroll the element into view\n          if (hashFragment) {\n            ;(domNode as HTMLElement).scrollIntoView()\n\n            return\n          }\n          // Store the current viewport height because reading `clientHeight` causes a reflow,\n          // and it won't change during this function.\n          const htmlElement = document.documentElement\n          const viewportHeight = htmlElement.clientHeight\n\n          // If the element's top edge is already in the viewport, exit early.\n          if (topOfElementInViewport(domNode as HTMLElement, viewportHeight)) {\n            return\n          }\n\n          // Otherwise, try scrolling go the top of the document to be backward compatible with pages\n          // scrollIntoView() called on `<html/>` element scrolls horizontally on chrome and firefox (that shouldn't happen)\n          // We could use it to scroll horizontally following RTL but that also seems to be broken - it will always scroll left\n          // scrollLeft = 0 also seems to ignore RTL and manually checking for RTL is too much hassle so we will scroll just vertically\n          htmlElement.scrollTop = 0\n\n          // Scroll to domNode if domNode is not in viewport when scrolled to top of document\n          if (!topOfElementInViewport(domNode as HTMLElement, viewportHeight)) {\n            // Scroll into view doesn't scroll horizontally by default when not needed\n            ;(domNode as HTMLElement).scrollIntoView()\n          }\n        },\n        {\n          // We will force layout by querying domNode position\n          dontForceLayout: true,\n          onlyHashChange: focusAndScrollRef.onlyHashChange,\n        }\n      )\n\n      // Mutate after scrolling so that it can be read by `handleSmoothScroll`\n      focusAndScrollRef.onlyHashChange = false\n\n      // Set focus on the element\n      domNode.focus()\n    }\n  }\n\n  componentDidMount() {\n    this.handlePotentialScroll()\n  }\n\n  componentDidUpdate() {\n    // Because this property is overwritten in handlePotentialScroll it's fine to always run it when true as it'll be set to false for subsequent renders.\n    if (this.props.focusAndScrollRef.apply) {\n      this.handlePotentialScroll()\n    }\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nfunction ScrollAndFocusHandler({\n  segmentPath,\n  children,\n}: {\n  segmentPath: FlightSegmentPath\n  children: React.ReactNode\n}) {\n  const context = useContext(GlobalLayoutRouterContext)\n  if (!context) {\n    throw new Error('invariant global layout router not mounted')\n  }\n\n  return (\n    <InnerScrollAndFocusHandler\n      segmentPath={segmentPath}\n      focusAndScrollRef={context.focusAndScrollRef}\n    >\n      {children}\n    </InnerScrollAndFocusHandler>\n  )\n}\n\n/**\n * InnerLayoutRouter handles rendering the provided segment based on the cache.\n */\nfunction InnerLayoutRouter({\n  parallelRouterKey,\n  url,\n  childNodes,\n  segmentPath,\n  tree,\n  // TODO-APP: implement `<Offscreen>` when available.\n  // isActive,\n  cacheKey,\n}: {\n  parallelRouterKey: string\n  url: string\n  childNodes: ChildSegmentMap\n  segmentPath: FlightSegmentPath\n  tree: FlightRouterState\n  isActive: boolean\n  cacheKey: ReturnType<typeof createRouterCacheKey>\n}) {\n  const context = useContext(GlobalLayoutRouterContext)\n  if (!context) {\n    throw new Error('invariant global layout router not mounted')\n  }\n\n  const { buildId, changeByServerResponse, tree: fullTree } = context\n\n  // Read segment path from the parallel router cache node.\n  let childNode = childNodes.get(cacheKey)\n\n  // When data is not available during rendering client-side we need to fetch\n  // it from the server.\n  if (childNode === undefined) {\n    const newLazyCacheNode: LazyCacheNode = {\n      lazyData: null,\n      rsc: null,\n      prefetchRsc: null,\n      head: null,\n      prefetchHead: null,\n      parallelRoutes: new Map(),\n      loading: null,\n    }\n\n    /**\n     * Flight data fetch kicked off during render and put into the cache.\n     */\n    childNode = newLazyCacheNode\n    childNodes.set(cacheKey, newLazyCacheNode)\n  }\n\n  // `rsc` represents the renderable node for this segment.\n\n  // If this segment has a `prefetchRsc`, it's the statically prefetched data.\n  // We should use that on initial render instead of `rsc`. Then we'll switch\n  // to `rsc` when the dynamic response streams in.\n  //\n  // If no prefetch data is available, then we go straight to rendering `rsc`.\n  const resolvedPrefetchRsc =\n    childNode.prefetchRsc !== null ? childNode.prefetchRsc : childNode.rsc\n\n  // We use `useDeferredValue` to handle switching between the prefetched and\n  // final values. The second argument is returned on initial render, then it\n  // re-renders with the first argument.\n  //\n  // @ts-expect-error The second argument to `useDeferredValue` is only\n  // available in the experimental builds. When its disabled, it will always\n  // return `rsc`.\n  const rsc: any = useDeferredValue(childNode.rsc, resolvedPrefetchRsc)\n\n  // `rsc` is either a React node or a promise for a React node, except we\n  // special case `null` to represent that this segment's data is missing. If\n  // it's a promise, we need to unwrap it so we can determine whether or not the\n  // data is missing.\n  const resolvedRsc: React.ReactNode =\n    typeof rsc === 'object' && rsc !== null && typeof rsc.then === 'function'\n      ? use(rsc)\n      : rsc\n\n  if (!resolvedRsc) {\n    // The data for this segment is not available, and there's no pending\n    // navigation that will be able to fulfill it. We need to fetch more from\n    // the server and patch the cache.\n\n    // Check if there's already a pending request.\n    let lazyData = childNode.lazyData\n    if (lazyData === null) {\n      /**\n       * Router state with refetch marker added\n       */\n      // TODO-APP: remove ''\n      const refetchTree = walkAddRefetch(['', ...segmentPath], fullTree)\n      const includeNextUrl = hasInterceptionRouteInCurrentTree(fullTree)\n      childNode.lazyData = lazyData = fetchServerResponse(\n        new URL(url, location.origin),\n        {\n          flightRouterState: refetchTree,\n          nextUrl: includeNextUrl ? context.nextUrl : null,\n          buildId,\n        }\n      ).then((serverResponse) => {\n        startTransition(() => {\n          changeByServerResponse({\n            previousTree: fullTree,\n            serverResponse,\n          })\n        })\n\n        return serverResponse\n      })\n    }\n    // Suspend infinitely as `changeByServerResponse` will cause a different part of the tree to be rendered.\n    // A falsey `resolvedRsc` indicates missing data -- we should not commit that branch, and we need to wait for the data to arrive.\n    use(unresolvedThenable) as never\n  }\n\n  // If we get to this point, then we know we have something we can render.\n  const subtree = (\n    // The layout router context narrows down tree and childNodes at each level.\n    <LayoutRouterContext.Provider\n      value={{\n        tree: tree[1][parallelRouterKey],\n        childNodes: childNode.parallelRoutes,\n        // TODO-APP: overriding of url for parallel routes\n        url: url,\n        loading: childNode.loading,\n      }}\n    >\n      {resolvedRsc}\n    </LayoutRouterContext.Provider>\n  )\n  // Ensure root layout is not wrapped in a div as the root layout renders `<html>`\n  return subtree\n}\n\n/**\n * Renders suspense boundary with the provided \"loading\" property as the fallback.\n * If no loading property is provided it renders the children without a suspense boundary.\n */\nfunction LoadingBoundary({\n  children,\n  hasLoading,\n  loading,\n  loadingStyles,\n  loadingScripts,\n}: {\n  children: React.ReactNode\n  hasLoading: boolean\n  loading?: React.ReactNode\n  loadingStyles?: React.ReactNode\n  loadingScripts?: React.ReactNode\n}): JSX.Element {\n  // We have an explicit prop for checking if `loading` is provided, to disambiguate between a loading\n  // component that returns `null` / `undefined`, vs not having a loading component at all.\n  if (hasLoading) {\n    return (\n      <Suspense\n        fallback={\n          <>\n            {loadingStyles}\n            {loadingScripts}\n            {loading}\n          </>\n        }\n      >\n        {children}\n      </Suspense>\n    )\n  }\n\n  return <>{children}</>\n}\n\n/**\n * OuterLayoutRouter handles the current segment as well as <Offscreen> rendering of other segments.\n * It can be rendered next to each other with a different `parallelRouterKey`, allowing for Parallel routes.\n */\nexport default function OuterLayoutRouter({\n  parallelRouterKey,\n  segmentPath,\n  error,\n  errorStyles,\n  errorScripts,\n  templateStyles,\n  templateScripts,\n  template,\n  notFound,\n  notFoundStyles,\n}: {\n  parallelRouterKey: string\n  segmentPath: FlightSegmentPath\n  error: ErrorComponent | undefined\n  errorStyles: React.ReactNode | undefined\n  errorScripts: React.ReactNode | undefined\n  templateStyles: React.ReactNode | undefined\n  templateScripts: React.ReactNode | undefined\n  template: React.ReactNode\n  notFound: React.ReactNode | undefined\n  notFoundStyles: React.ReactNode | undefined\n}) {\n  const context = useContext(LayoutRouterContext)\n  if (!context) {\n    throw new Error('invariant expected layout router to be mounted')\n  }\n\n  const { childNodes, tree, url, loading } = context\n\n  // Get the current parallelRouter cache node\n  let childNodesForParallelRouter = childNodes.get(parallelRouterKey)\n  // If the parallel router cache node does not exist yet, create it.\n  // This writes to the cache when there is no item in the cache yet. It never *overwrites* existing cache items which is why it's safe in concurrent mode.\n  if (!childNodesForParallelRouter) {\n    childNodesForParallelRouter = new Map()\n    childNodes.set(parallelRouterKey, childNodesForParallelRouter)\n  }\n\n  // Get the active segment in the tree\n  // The reason arrays are used in the data format is that these are transferred from the server to the browser so it's optimized to save bytes.\n  const treeSegment = tree[1][parallelRouterKey][0]\n\n  // If segment is an array it's a dynamic route and we want to read the dynamic route value as the segment to get from the cache.\n  const currentChildSegmentValue = getSegmentValue(treeSegment)\n\n  /**\n   * Decides which segments to keep rendering, all segments that are not active will be wrapped in `<Offscreen>`.\n   */\n  // TODO-APP: Add handling of `<Offscreen>` when it's available.\n  const preservedSegments: Segment[] = [treeSegment]\n\n  return (\n    <>\n      {preservedSegments.map((preservedSegment) => {\n        const preservedSegmentValue = getSegmentValue(preservedSegment)\n        const cacheKey = createRouterCacheKey(preservedSegment)\n\n        return (\n          /*\n            - Error boundary\n              - Only renders error boundary if error component is provided.\n              - Rendered for each segment to ensure they have their own error state.\n            - Loading boundary\n              - Only renders suspense boundary if loading components is provided.\n              - Rendered for each segment to ensure they have their own loading state.\n              - Passed to the router during rendering to ensure it can be immediately rendered when suspending on a Flight fetch.\n          */\n          <TemplateContext.Provider\n            key={createRouterCacheKey(preservedSegment, true)}\n            value={\n              <ScrollAndFocusHandler segmentPath={segmentPath}>\n                <ErrorBoundary\n                  errorComponent={error}\n                  errorStyles={errorStyles}\n                  errorScripts={errorScripts}\n                >\n                  <LoadingBoundary\n                    hasLoading={Boolean(loading)}\n                    loading={loading?.[0]}\n                    loadingStyles={loading?.[1]}\n                    loadingScripts={loading?.[2]}\n                  >\n                    <NotFoundBoundary\n                      notFound={notFound}\n                      notFoundStyles={notFoundStyles}\n                    >\n                      <RedirectBoundary>\n                        <InnerLayoutRouter\n                          parallelRouterKey={parallelRouterKey}\n                          url={url}\n                          tree={tree}\n                          childNodes={childNodesForParallelRouter!}\n                          segmentPath={segmentPath}\n                          cacheKey={cacheKey}\n                          isActive={\n                            currentChildSegmentValue === preservedSegmentValue\n                          }\n                        />\n                      </RedirectBoundary>\n                    </NotFoundBoundary>\n                  </LoadingBoundary>\n                </ErrorBoundary>\n              </ScrollAndFocusHandler>\n            }\n          >\n            {templateStyles}\n            {templateScripts}\n            {template}\n          </TemplateContext.Provider>\n        )\n      })}\n    </>\n  )\n}\n","import { getSegmentParam } from '../../server/app-render/get-segment-param'\nimport type { Segment } from '../../server/app-render/types'\n\nexport const matchSegment = (\n  existingSegment: Segment,\n  segment: Segment\n): boolean => {\n  // segment is either Array or string\n  if (typeof existingSegment === 'string') {\n    if (typeof segment === 'string') {\n      // Common case: segment is just a string\n      return existingSegment === segment\n    }\n    return false\n  }\n\n  if (typeof segment === 'string') {\n    return false\n  }\n  return existingSegment[0] === segment[0] && existingSegment[1] === segment[1]\n}\n\n/*\n * This function is used to determine if an existing segment can be overridden by the incoming segment.\n */\nexport const canSegmentBeOverridden = (\n  existingSegment: Segment,\n  segment: Segment\n): boolean => {\n  if (Array.isArray(existingSegment) || !Array.isArray(segment)) {\n    return false\n  }\n\n  return getSegmentParam(existingSegment)?.param === segment[0]\n}\n","import { useEffect } from 'react'\nimport { createHrefFromUrl } from './router-reducer/create-href-from-url'\n\nexport function handleHardNavError(error: unknown): boolean {\n  if (\n    error &&\n    typeof window !== 'undefined' &&\n    window.next.__pendingUrl &&\n    createHrefFromUrl(new URL(window.location.href)) !==\n      createHrefFromUrl(window.next.__pendingUrl)\n  ) {\n    console.error(\n      `Error occurred during navigation, falling back to hard navigation`,\n      error\n    )\n    window.location.href = window.next.__pendingUrl.toString()\n    return true\n  }\n  return false\n}\n\nexport function useNavFailureHandler() {\n  if (process.env.__NEXT_APP_NAV_FAIL_HANDLING) {\n    // this if is only for DCE of the feature flag not conditional\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      const uncaughtExceptionHandler = (\n        evt: ErrorEvent | PromiseRejectionEvent\n      ) => {\n        const error = 'reason' in evt ? evt.reason : evt.error\n        // if we have an unhandled exception/rejection during\n        // a navigation we fall back to a hard navigation to\n        // attempt recovering to a good state\n        handleHardNavError(error)\n      }\n      window.addEventListener('unhandledrejection', uncaughtExceptionHandler)\n      window.addEventListener('error', uncaughtExceptionHandler)\n      return () => {\n        window.removeEventListener('error', uncaughtExceptionHandler)\n        window.removeEventListener(\n          'unhandledrejection',\n          uncaughtExceptionHandler\n        )\n      }\n    }, [])\n  }\n}\n","import { useContext } from 'react'\nimport { PathnameContext } from '../../shared/lib/hooks-client-context.shared-runtime'\n\n/**\n * This checks to see if the current render has any unknown route parameters.\n * It's used to trigger a different render path in the error boundary.\n *\n * @returns true if there are any unknown route parameters, false otherwise\n */\nfunction hasFallbackRouteParams() {\n  if (typeof window === 'undefined') {\n    // AsyncLocalStorage should not be included in the client bundle.\n    const { workAsyncStorage } =\n      require('../../server/app-render/work-async-storage.external') as typeof import('../../server/app-render/work-async-storage.external')\n\n    const workStore = workAsyncStorage.getStore()\n    if (!workStore) return false\n\n    const { fallbackRouteParams } = workStore\n    if (!fallbackRouteParams || fallbackRouteParams.size === 0) return false\n\n    return true\n  }\n\n  return false\n}\n\n/**\n * This returns a `null` value if there are any unknown route parameters, and\n * otherwise returns the pathname from the context. This is an alternative to\n * `usePathname` that is used in the error boundary to avoid rendering the\n * error boundary when there are unknown route parameters. This doesn't throw\n * when accessed with unknown route parameters.\n *\n * @returns\n *\n * @internal\n */\nexport function useUntrackedPathname(): string | null {\n  // If there are any unknown route parameters we would typically throw\n  // an error, but this internal method allows us to return a null value instead\n  // for components that do not propagate the pathname to the static shell (like\n  // the error boundary).\n  if (hasFallbackRouteParams()) {\n    return null\n  }\n\n  // This shouldn't cause any issues related to conditional rendering because\n  // the environment will be consistent for the render.\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useContext(PathnameContext)\n}\n","'use client'\n\nimport React, { useContext } from 'react'\nimport { useUntrackedPathname } from './navigation-untracked'\nimport { isNotFoundError } from './not-found'\nimport { warnOnce } from '../../shared/lib/utils/warn-once'\nimport { MissingSlotContext } from '../../shared/lib/app-router-context.shared-runtime'\n\ninterface NotFoundBoundaryProps {\n  notFound?: React.ReactNode\n  notFoundStyles?: React.ReactNode\n  asNotFound?: boolean\n  children: React.ReactNode\n  missingSlots?: Set<string>\n}\n\ninterface NotFoundErrorBoundaryProps extends NotFoundBoundaryProps {\n  pathname: string | null\n  missingSlots?: Set<string>\n}\n\ninterface NotFoundErrorBoundaryState {\n  notFoundTriggered: boolean\n  previousPathname: string | null\n}\n\nclass NotFoundErrorBoundary extends React.Component<\n  NotFoundErrorBoundaryProps,\n  NotFoundErrorBoundaryState\n> {\n  constructor(props: NotFoundErrorBoundaryProps) {\n    super(props)\n    this.state = {\n      notFoundTriggered: !!props.asNotFound,\n      previousPathname: props.pathname,\n    }\n  }\n\n  componentDidCatch(): void {\n    if (\n      process.env.NODE_ENV === 'development' &&\n      this.props.missingSlots &&\n      // A missing children slot is the typical not-found case, so no need to warn\n      !this.props.missingSlots.has('children')\n    ) {\n      let warningMessage =\n        'No default component was found for a parallel route rendered on this page. Falling back to nearest NotFound boundary.\\n' +\n        'Learn more: https://nextjs.org/docs/app/building-your-application/routing/parallel-routes#defaultjs\\n\\n'\n\n      if (this.props.missingSlots.size > 0) {\n        const formattedSlots = Array.from(this.props.missingSlots)\n          .sort((a, b) => a.localeCompare(b))\n          .map((slot) => `@${slot}`)\n          .join(', ')\n\n        warningMessage += 'Missing slots: ' + formattedSlots\n      }\n\n      warnOnce(warningMessage)\n    }\n  }\n\n  static getDerivedStateFromError(error: any) {\n    if (isNotFoundError(error)) {\n      return {\n        notFoundTriggered: true,\n      }\n    }\n    // Re-throw if error is not for 404\n    throw error\n  }\n\n  static getDerivedStateFromProps(\n    props: NotFoundErrorBoundaryProps,\n    state: NotFoundErrorBoundaryState\n  ): NotFoundErrorBoundaryState | null {\n    /**\n     * Handles reset of the error boundary when a navigation happens.\n     * Ensures the error boundary does not stay enabled when navigating to a new page.\n     * Approach of setState in render is safe as it checks the previous pathname and then overrides\n     * it as outlined in https://react.dev/reference/react/useState#storing-information-from-previous-renders\n     */\n    if (props.pathname !== state.previousPathname && state.notFoundTriggered) {\n      return {\n        notFoundTriggered: false,\n        previousPathname: props.pathname,\n      }\n    }\n    return {\n      notFoundTriggered: state.notFoundTriggered,\n      previousPathname: props.pathname,\n    }\n  }\n\n  render() {\n    if (this.state.notFoundTriggered) {\n      return (\n        <>\n          <meta name=\"robots\" content=\"noindex\" />\n          {process.env.NODE_ENV === 'development' && (\n            <meta name=\"next-error\" content=\"not-found\" />\n          )}\n          {this.props.notFoundStyles}\n          {this.props.notFound}\n        </>\n      )\n    }\n\n    return this.props.children\n  }\n}\n\nexport function NotFoundBoundary({\n  notFound,\n  notFoundStyles,\n  asNotFound,\n  children,\n}: NotFoundBoundaryProps) {\n  // When we're rendering the missing params shell, this will return null. This\n  // is because we won't be rendering any not found boundaries or error\n  // boundaries for the missing params shell. When this runs on the client\n  // (where these error can occur), we will get the correct pathname.\n  const pathname = useUntrackedPathname()\n  const missingSlots = useContext(MissingSlotContext)\n\n  if (notFound) {\n    return (\n      <NotFoundErrorBoundary\n        pathname={pathname}\n        notFound={notFound}\n        notFoundStyles={notFoundStyles}\n        asNotFound={asNotFound}\n        missingSlots={missingSlots}\n      >\n        {children}\n      </NotFoundErrorBoundary>\n    )\n  }\n\n  return <>{children}</>\n}\n","import { isDynamicServerError } from '../../client/components/hooks-server-context';\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr';\nimport { isNextRouterError } from '../../client/components/is-next-router-error';\nimport { isDynamicPostpone } from '../../server/app-render/dynamic-rendering';\nexport const isDynamicUsageError = (err)=>isDynamicServerError(err) || isBailoutToCSRError(err) || isNextRouterError(err) || isDynamicPostpone(err);\n\n//# sourceMappingURL=is-dynamic-usage-error.js.map","const REACT_POSTPONE_TYPE = Symbol.for('react.postpone');\nexport function isPostpone(error) {\n    return typeof error === 'object' && error !== null && error.$$typeof === REACT_POSTPONE_TYPE;\n}\n\n//# sourceMappingURL=is-postpone.js.map","import { isDynamicUsageError } from '../../export/helpers/is-dynamic-usage-error'\nimport { isPostpone } from '../../server/lib/router-utils/is-postpone'\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { isNextRouterError } from './is-next-router-error'\n\n/**\n * This function should be used to rethrow internal Next.js errors so that they can be handled by the framework.\n * When wrapping an API that uses errors to interrupt control flow, you should use this function before you do any error handling.\n * This function will rethrow the error if it is a Next.js error so it can be handled, otherwise it will do nothing.\n *\n * Read more: [Next.js Docs: `unstable_rethrow`](https://nextjs.org/docs/app/api-reference/functions/unstable_rethrow)\n */\nexport function unstable_rethrow(error: unknown): void {\n  if (\n    isNextRouterError(error) ||\n    isBailoutToCSRError(error) ||\n    isDynamicUsageError(error) ||\n    isPostpone(error)\n  ) {\n    throw error\n  }\n\n  if (error instanceof Error && 'cause' in error) {\n    unstable_rethrow(error.cause)\n  }\n}\n","/** @internal */\nclass ReadonlyURLSearchParamsError extends Error {\n  constructor() {\n    super(\n      'Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams'\n    )\n  }\n}\n\nclass ReadonlyURLSearchParams extends URLSearchParams {\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  append() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  delete() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  set() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  sort() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n}\n\nexport { redirect, permanentRedirect, RedirectType } from './redirect'\nexport { notFound } from './not-found'\nexport { unstable_rethrow } from './unstable-rethrow'\nexport { ReadonlyURLSearchParams }\n","import type { FlightRouterState } from '../../server/app-render/types'\nimport type { Params } from '../../server/request/params'\n\nimport { useContext, useMemo } from 'react'\nimport {\n  AppRouterContext,\n  LayoutRouterContext,\n  type AppRouterInstance,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport {\n  SearchParamsContext,\n  PathnameContext,\n  PathParamsContext,\n} from '../../shared/lib/hooks-client-context.shared-runtime'\nimport { getSegmentValue } from './router-reducer/reducers/get-segment-value'\nimport { PAGE_SEGMENT_KEY, DEFAULT_SEGMENT_KEY } from '../../shared/lib/segment'\nimport { ReadonlyURLSearchParams } from './navigation.react-server'\nimport { useDynamicRouteParams } from '../../server/app-render/dynamic-rendering'\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you *read* the current URL's search parameters.\n *\n * Learn more about [`URLSearchParams` on MDN](https://developer.mozilla.org/docs/Web/API/URLSearchParams)\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useSearchParams } from 'next/navigation'\n *\n * export default function Page() {\n *   const searchParams = useSearchParams()\n *   searchParams.get('foo') // returns 'bar' when ?foo=bar\n *   // ...\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSearchParams`](https://nextjs.org/docs/app/api-reference/functions/use-search-params)\n */\n// Client components API\nexport function useSearchParams(): ReadonlyURLSearchParams {\n  const searchParams = useContext(SearchParamsContext)\n\n  // In the case where this is `null`, the compat types added in\n  // `next-env.d.ts` will add a new overload that changes the return type to\n  // include `null`.\n  const readonlySearchParams = useMemo(() => {\n    if (!searchParams) {\n      // When the router is not ready in pages, we won't have the search params\n      // available.\n      return null\n    }\n\n    return new ReadonlyURLSearchParams(searchParams)\n  }, [searchParams]) as ReadonlyURLSearchParams\n\n  if (typeof window === 'undefined') {\n    // AsyncLocalStorage should not be included in the client bundle.\n    const { bailoutToClientRendering } =\n      require('./bailout-to-client-rendering') as typeof import('./bailout-to-client-rendering')\n    // TODO-APP: handle dynamic = 'force-static' here and on the client\n    bailoutToClientRendering('useSearchParams()')\n  }\n\n  return readonlySearchParams\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the current URL's pathname.\n *\n * @example\n * ```ts\n * \"use client\"\n * import { usePathname } from 'next/navigation'\n *\n * export default function Page() {\n *  const pathname = usePathname() // returns \"/dashboard\" on /dashboard?foo=bar\n *  // ...\n * }\n * ```\n *\n * Read more: [Next.js Docs: `usePathname`](https://nextjs.org/docs/app/api-reference/functions/use-pathname)\n */\n// Client components API\nexport function usePathname(): string {\n  useDynamicRouteParams('usePathname()')\n\n  // In the case where this is `null`, the compat types added in `next-env.d.ts`\n  // will add a new overload that changes the return type to include `null`.\n  return useContext(PathnameContext) as string\n}\n\n// Client components API\nexport {\n  ServerInsertedHTMLContext,\n  useServerInsertedHTML,\n} from '../../shared/lib/server-inserted-html.shared-runtime'\n\n/**\n *\n * This hook allows you to programmatically change routes inside [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components).\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useRouter } from 'next/navigation'\n *\n * export default function Page() {\n *  const router = useRouter()\n *  // ...\n *  router.push('/dashboard') // Navigate to /dashboard\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useRouter`](https://nextjs.org/docs/app/api-reference/functions/use-router)\n */\n// Client components API\nexport function useRouter(): AppRouterInstance {\n  const router = useContext(AppRouterContext)\n  if (router === null) {\n    throw new Error('invariant expected app router to be mounted')\n  }\n\n  return router\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read a route's dynamic params filled in by the current URL.\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useParams } from 'next/navigation'\n *\n * export default function Page() {\n *   // on /dashboard/[team] where pathname is /dashboard/nextjs\n *   const { team } = useParams() // team === \"nextjs\"\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useParams`](https://nextjs.org/docs/app/api-reference/functions/use-params)\n */\n// Client components API\nexport function useParams<T extends Params = Params>(): T {\n  useDynamicRouteParams('useParams()')\n\n  return useContext(PathParamsContext) as T\n}\n\n/** Get the canonical parameters from the current level to the leaf node. */\n// Client components API\nfunction getSelectedLayoutSegmentPath(\n  tree: FlightRouterState,\n  parallelRouteKey: string,\n  first = true,\n  segmentPath: string[] = []\n): string[] {\n  let node: FlightRouterState\n  if (first) {\n    // Use the provided parallel route key on the first parallel route\n    node = tree[1][parallelRouteKey]\n  } else {\n    // After first parallel route prefer children, if there's no children pick the first parallel route.\n    const parallelRoutes = tree[1]\n    node = parallelRoutes.children ?? Object.values(parallelRoutes)[0]\n  }\n\n  if (!node) return segmentPath\n  const segment = node[0]\n\n  let segmentValue = getSegmentValue(segment)\n\n  if (!segmentValue || segmentValue.startsWith(PAGE_SEGMENT_KEY)) {\n    return segmentPath\n  }\n\n  segmentPath.push(segmentValue)\n\n  return getSelectedLayoutSegmentPath(\n    node,\n    parallelRouteKey,\n    false,\n    segmentPath\n  )\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the active route segments **below** the Layout it is called from.\n *\n * @example\n * ```ts\n * 'use client'\n *\n * import { useSelectedLayoutSegments } from 'next/navigation'\n *\n * export default function ExampleClientComponent() {\n *   const segments = useSelectedLayoutSegments()\n *\n *   return (\n *     <ul>\n *       {segments.map((segment, index) => (\n *         <li key={index}>{segment}</li>\n *       ))}\n *     </ul>\n *   )\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSelectedLayoutSegments`](https://nextjs.org/docs/app/api-reference/functions/use-selected-layout-segments)\n */\n// Client components API\nexport function useSelectedLayoutSegments(\n  parallelRouteKey: string = 'children'\n): string[] {\n  useDynamicRouteParams('useSelectedLayoutSegments()')\n\n  const context = useContext(LayoutRouterContext)\n  // @ts-expect-error This only happens in `pages`. Type is overwritten in navigation.d.ts\n  if (!context) return null\n\n  return getSelectedLayoutSegmentPath(context.tree, parallelRouteKey)\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the active route segment **one level below** the Layout it is called from.\n *\n * @example\n * ```ts\n * 'use client'\n * import { useSelectedLayoutSegment } from 'next/navigation'\n *\n * export default function ExampleClientComponent() {\n *   const segment = useSelectedLayoutSegment()\n *\n *   return <p>Active segment: {segment}</p>\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSelectedLayoutSegment`](https://nextjs.org/docs/app/api-reference/functions/use-selected-layout-segment)\n */\n// Client components API\nexport function useSelectedLayoutSegment(\n  parallelRouteKey: string = 'children'\n): string | null {\n  useDynamicRouteParams('useSelectedLayoutSegment()')\n\n  const selectedLayoutSegments = useSelectedLayoutSegments(parallelRouteKey)\n\n  if (!selectedLayoutSegments || selectedLayoutSegments.length === 0) {\n    return null\n  }\n\n  const selectedLayoutSegment =\n    parallelRouteKey === 'children'\n      ? selectedLayoutSegments[0]\n      : selectedLayoutSegments[selectedLayoutSegments.length - 1]\n\n  // if the default slot is showing, we return null since it's not technically \"selected\" (it's a fallback)\n  // and returning an internal value like `__DEFAULT__` would be confusing.\n  return selectedLayoutSegment === DEFAULT_SEGMENT_KEY\n    ? null\n    : selectedLayoutSegment\n}\n\n// Shared components APIs\nexport {\n  notFound,\n  redirect,\n  permanentRedirect,\n  RedirectType,\n  ReadonlyURLSearchParams,\n  unstable_rethrow,\n} from './navigation.react-server'\n","'use client'\nimport React, { useEffect } from 'react'\nimport type { AppRouterInstance } from '../../shared/lib/app-router-context.shared-runtime'\nimport { useRouter } from './navigation'\nimport {\n  RedirectType,\n  getRedirectTypeFromError,\n  getURLFromRedirectError,\n  isRedirectError,\n} from './redirect'\n\ninterface RedirectBoundaryProps {\n  router: AppRouterInstance\n  children: React.ReactNode\n}\n\nfunction HandleRedirect({\n  redirect,\n  reset,\n  redirectType,\n}: {\n  redirect: string\n  redirectType: RedirectType\n  reset: () => void\n}) {\n  const router = useRouter()\n\n  useEffect(() => {\n    React.startTransition(() => {\n      if (redirectType === RedirectType.push) {\n        router.push(redirect, {})\n      } else {\n        router.replace(redirect, {})\n      }\n      reset()\n    })\n  }, [redirect, redirectType, reset, router])\n\n  return null\n}\n\nexport class RedirectErrorBoundary extends React.Component<\n  RedirectBoundaryProps,\n  { redirect: string | null; redirectType: RedirectType | null }\n> {\n  constructor(props: RedirectBoundaryProps) {\n    super(props)\n    this.state = { redirect: null, redirectType: null }\n  }\n\n  static getDerivedStateFromError(error: any) {\n    if (isRedirectError(error)) {\n      const url = getURLFromRedirectError(error)\n      const redirectType = getRedirectTypeFromError(error)\n      return { redirect: url, redirectType }\n    }\n    // Re-throw if error is not for redirect\n    throw error\n  }\n\n  // Explicit type is needed to avoid the generated `.d.ts` having a wide return type that could be specific to the `@types/react` version.\n  render(): React.ReactNode {\n    const { redirect, redirectType } = this.state\n    if (redirect !== null && redirectType !== null) {\n      return (\n        <HandleRedirect\n          redirect={redirect}\n          redirectType={redirectType}\n          reset={() => this.setState({ redirect: null })}\n        />\n      )\n    }\n\n    return this.props.children\n  }\n}\n\nexport function RedirectBoundary({ children }: { children: React.ReactNode }) {\n  const router = useRouter()\n  return (\n    <RedirectErrorBoundary router={router}>{children}</RedirectErrorBoundary>\n  )\n}\n","export enum RedirectStatusCode {\n  SeeOther = 303,\n  TemporaryRedirect = 307,\n  PermanentRedirect = 308,\n}\n","import { actionAsyncStorage } from '../../server/app-render/action-async-storage.external'\nimport { RedirectStatusCode } from './redirect-status-code'\n\nconst REDIRECT_ERROR_CODE = 'NEXT_REDIRECT'\n\nexport enum RedirectType {\n  push = 'push',\n  replace = 'replace',\n}\n\nexport type RedirectError = Error & {\n  digest: `${typeof REDIRECT_ERROR_CODE};${RedirectType};${string};${RedirectStatusCode};`\n}\n\nexport function getRedirectError(\n  url: string,\n  type: RedirectType,\n  statusCode: RedirectStatusCode = RedirectStatusCode.TemporaryRedirect\n): RedirectError {\n  const error = new Error(REDIRECT_ERROR_CODE) as RedirectError\n  error.digest = `${REDIRECT_ERROR_CODE};${type};${url};${statusCode};`\n  return error\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 307/303 to the caller.\n * - In a Server Action, type defaults to 'push' and 'replace' elsewhere.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function redirect(\n  /** The URL to redirect to */\n  url: string,\n  type?: RedirectType\n): never {\n  const actionStore = actionAsyncStorage.getStore()\n  const redirectType =\n    type || (actionStore?.isAction ? RedirectType.push : RedirectType.replace)\n  throw getRedirectError(\n    url,\n    redirectType,\n    RedirectStatusCode.TemporaryRedirect\n  )\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 308/303 to the caller.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function permanentRedirect(\n  /** The URL to redirect to */\n  url: string,\n  type: RedirectType = RedirectType.replace\n): never {\n  throw getRedirectError(url, type, RedirectStatusCode.PermanentRedirect)\n}\n\n/**\n * Checks an error to determine if it's an error generated by the\n * `redirect(url)` helper.\n *\n * @param error the error that may reference a redirect error\n * @returns true if the error is a redirect error\n */\nexport function isRedirectError(error: unknown): error is RedirectError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n\n  const digest = error.digest.split(';')\n  const [errorCode, type] = digest\n  const destination = digest.slice(2, -2).join(';')\n  const status = digest.at(-2)\n\n  const statusCode = Number(status)\n\n  return (\n    errorCode === REDIRECT_ERROR_CODE &&\n    (type === 'replace' || type === 'push') &&\n    typeof destination === 'string' &&\n    !isNaN(statusCode) &&\n    statusCode in RedirectStatusCode\n  )\n}\n\n/**\n * Returns the encoded URL from the error if it's a RedirectError, null\n * otherwise. Note that this does not validate the URL returned.\n *\n * @param error the error that may be a redirect error\n * @return the url if the error was a redirect error\n */\nexport function getURLFromRedirectError(error: RedirectError): string\nexport function getURLFromRedirectError(error: unknown): string | null {\n  if (!isRedirectError(error)) return null\n\n  // Slices off the beginning of the digest that contains the code and the\n  // separating ';'.\n  return error.digest.split(';').slice(2, -2).join(';')\n}\n\nexport function getRedirectTypeFromError(error: RedirectError): RedirectType {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return error.digest.split(';', 2)[1] as RedirectType\n}\n\nexport function getRedirectStatusCodeFromError(error: RedirectError): number {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return Number(error.digest.split(';').at(-2))\n}\n","'use client'\n\nimport React, { useContext, type JSX } from 'react'\nimport { TemplateContext } from '../../shared/lib/app-router-context.shared-runtime'\n\nexport default function RenderFromTemplateContext(): JSX.Element {\n  const children = useContext(TemplateContext)\n  return <>{children}</>\n}\n","import type {\n  FlightRouterState,\n  Segment,\n} from '../../../server/app-render/types'\nimport { INTERCEPTION_ROUTE_MARKERS } from '../../../server/lib/interception-routes'\nimport type { Params } from '../../../server/request/params'\nimport {\n  isGroupSegment,\n  DEFAULT_SEGMENT_KEY,\n  PAGE_SEGMENT_KEY,\n} from '../../../shared/lib/segment'\nimport { matchSegment } from '../match-segments'\n\nconst removeLeadingSlash = (segment: string): string => {\n  return segment[0] === '/' ? segment.slice(1) : segment\n}\n\nconst segmentToPathname = (segment: Segment): string => {\n  if (typeof segment === 'string') {\n    // 'children' is not a valid path -- it's technically a parallel route that corresponds with the current segment's page\n    // if we don't skip it, then the computed pathname might be something like `/children` which doesn't make sense.\n    if (segment === 'children') return ''\n\n    return segment\n  }\n\n  return segment[1]\n}\n\nfunction normalizeSegments(segments: string[]): string {\n  return (\n    segments.reduce((acc, segment) => {\n      segment = removeLeadingSlash(segment)\n      if (segment === '' || isGroupSegment(segment)) {\n        return acc\n      }\n\n      return `${acc}/${segment}`\n    }, '') || '/'\n  )\n}\n\nexport function extractPathFromFlightRouterState(\n  flightRouterState: FlightRouterState\n): string | undefined {\n  const segment = Array.isArray(flightRouterState[0])\n    ? flightRouterState[0][1]\n    : flightRouterState[0]\n\n  if (\n    segment === DEFAULT_SEGMENT_KEY ||\n    INTERCEPTION_ROUTE_MARKERS.some((m) => segment.startsWith(m))\n  )\n    return undefined\n\n  if (segment.startsWith(PAGE_SEGMENT_KEY)) return ''\n\n  const segments = [segmentToPathname(segment)]\n  const parallelRoutes = flightRouterState[1] ?? {}\n\n  const childrenPath = parallelRoutes.children\n    ? extractPathFromFlightRouterState(parallelRoutes.children)\n    : undefined\n\n  if (childrenPath !== undefined) {\n    segments.push(childrenPath)\n  } else {\n    for (const [key, value] of Object.entries(parallelRoutes)) {\n      if (key === 'children') continue\n\n      const childPath = extractPathFromFlightRouterState(value)\n\n      if (childPath !== undefined) {\n        segments.push(childPath)\n      }\n    }\n  }\n\n  return normalizeSegments(segments)\n}\n\nfunction computeChangedPathImpl(\n  treeA: FlightRouterState,\n  treeB: FlightRouterState\n): string | null {\n  const [segmentA, parallelRoutesA] = treeA\n  const [segmentB, parallelRoutesB] = treeB\n\n  const normalizedSegmentA = segmentToPathname(segmentA)\n  const normalizedSegmentB = segmentToPathname(segmentB)\n\n  if (\n    INTERCEPTION_ROUTE_MARKERS.some(\n      (m) =>\n        normalizedSegmentA.startsWith(m) || normalizedSegmentB.startsWith(m)\n    )\n  ) {\n    return ''\n  }\n\n  if (!matchSegment(segmentA, segmentB)) {\n    // once we find where the tree changed, we compute the rest of the path by traversing the tree\n    return extractPathFromFlightRouterState(treeB) ?? ''\n  }\n\n  for (const parallelRouterKey in parallelRoutesA) {\n    if (parallelRoutesB[parallelRouterKey]) {\n      const changedPath = computeChangedPathImpl(\n        parallelRoutesA[parallelRouterKey],\n        parallelRoutesB[parallelRouterKey]\n      )\n      if (changedPath !== null) {\n        return `${segmentToPathname(segmentB)}/${changedPath}`\n      }\n    }\n  }\n\n  return null\n}\n\nexport function computeChangedPath(\n  treeA: FlightRouterState,\n  treeB: FlightRouterState\n): string | null {\n  const changedPath = computeChangedPathImpl(treeA, treeB)\n\n  if (changedPath == null || changedPath === '/') {\n    return changedPath\n  }\n\n  // lightweight normalization to remove route groups\n  return normalizeSegments(changedPath.split('/'))\n}\n\n/**\n * Recursively extracts dynamic parameters from FlightRouterState.\n */\nexport function getSelectedParams(\n  currentTree: FlightRouterState,\n  params: Params = {}\n): Params {\n  const parallelRoutes = currentTree[1]\n\n  for (const parallelRoute of Object.values(parallelRoutes)) {\n    const segment = parallelRoute[0]\n    const isDynamicParameter = Array.isArray(segment)\n    const segmentValue = isDynamicParameter ? segment[1] : segment\n    if (!segmentValue || segmentValue.startsWith(PAGE_SEGMENT_KEY)) continue\n\n    // Ensure catchAll and optional catchall are turned into an array\n    const isCatchAll =\n      isDynamicParameter && (segment[2] === 'c' || segment[2] === 'oc')\n\n    if (isCatchAll) {\n      params[segment[0]] = segment[1].split('/')\n    } else if (isDynamicParameter) {\n      params[segment[0]] = segment[1]\n    }\n\n    params = getSelectedParams(parallelRoute, params)\n  }\n\n  return params\n}\n","export function createHrefFromUrl(\n  url: Pick<URL, 'pathname' | 'search' | 'hash'>,\n  includeHash: boolean = true\n): string {\n  return url.pathname + url.search + (includeHash ? url.hash : '')\n}\n","import type { Segment } from '../../../server/app-render/types'\nimport { PAGE_SEGMENT_KEY } from '../../../shared/lib/segment'\n\nexport function createRouterCacheKey(\n  segment: Segment,\n  withoutSearchParameters: boolean = false\n) {\n  // if the segment is an array, it means it's a dynamic segment\n  // for example, ['lang', 'en', 'd']. We need to convert it to a string to store it as a cache node key.\n  if (Array.isArray(segment)) {\n    return `${segment[0]}|${segment[1]}|${segment[2]}`\n  }\n\n  // Page segments might have search parameters, ie __PAGE__?foo=bar\n  // When `withoutSearchParameters` is true, we only want to return the page segment\n  if (withoutSearchParameters && segment.startsWith(PAGE_SEGMENT_KEY)) {\n    return PAGE_SEGMENT_KEY\n  }\n\n  return segment\n}\n","'use client'\n\n// @ts-ignore\n// eslint-disable-next-line import/no-extraneous-dependencies\n// import { createFromFetch } from 'react-server-dom-webpack/client'\nconst { createFromFetch } = (\n  !!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')\n) as typeof import('react-server-dom-webpack/client')\n\nimport type {\n  FlightRouterState,\n  NavigationFlightResponse,\n} from '../../../server/app-render/types'\nimport {\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_RSC_UNION_QUERY,\n  NEXT_URL,\n  RSC_HEADER,\n  RSC_CONTENT_TYPE_HEADER,\n  NEXT_HMR_REFRESH_HEADER,\n  NEXT_DID_POSTPONE_HEADER,\n  NEXT_ROUTER_STALE_TIME_HEADER,\n} from '../app-router-headers'\nimport { callServer } from '../../app-call-server'\nimport { findSourceMapURL } from '../../app-find-source-map-url'\nimport { PrefetchKind } from './router-reducer-types'\nimport { hexHash } from '../../../shared/lib/hash'\nimport {\n  normalizeFlightData,\n  type NormalizedFlightData,\n} from '../../flight-data-helpers'\n\nexport interface FetchServerResponseOptions {\n  readonly flightRouterState: FlightRouterState\n  readonly nextUrl: string | null\n  readonly buildId: string\n  readonly prefetchKind?: PrefetchKind\n  readonly isHmrRefresh?: boolean\n}\n\nexport type FetchServerResponseResult = {\n  flightData: NormalizedFlightData[] | string\n  canonicalUrl: URL | undefined\n  couldBeIntercepted: boolean\n  prerendered: boolean\n  postponed: boolean\n  staleTime: number\n}\n\nfunction urlToUrlWithoutFlightMarker(url: string): URL {\n  const urlWithoutFlightParameters = new URL(url, location.origin)\n  urlWithoutFlightParameters.searchParams.delete(NEXT_RSC_UNION_QUERY)\n  if (process.env.NODE_ENV === 'production') {\n    if (\n      process.env.__NEXT_CONFIG_OUTPUT === 'export' &&\n      urlWithoutFlightParameters.pathname.endsWith('.txt')\n    ) {\n      const { pathname } = urlWithoutFlightParameters\n      const length = pathname.endsWith('/index.txt') ? 10 : 4\n      // Slice off `/index.txt` or `.txt` from the end of the pathname\n      urlWithoutFlightParameters.pathname = pathname.slice(0, -length)\n    }\n  }\n  return urlWithoutFlightParameters\n}\n\nfunction doMpaNavigation(url: string): FetchServerResponseResult {\n  return {\n    flightData: urlToUrlWithoutFlightMarker(url).toString(),\n    canonicalUrl: undefined,\n    couldBeIntercepted: false,\n    prerendered: false,\n    postponed: false,\n    staleTime: -1,\n  }\n}\n\n/**\n * Fetch the flight data for the provided url. Takes in the current router state\n * to decide what to render server-side.\n */\nexport async function fetchServerResponse(\n  url: URL,\n  options: FetchServerResponseOptions\n): Promise<FetchServerResponseResult> {\n  const { flightRouterState, nextUrl, buildId, prefetchKind } = options\n\n  const headers: {\n    [RSC_HEADER]: '1'\n    [NEXT_ROUTER_STATE_TREE_HEADER]: string\n    [NEXT_URL]?: string\n    [NEXT_ROUTER_PREFETCH_HEADER]?: '1'\n    'x-deployment-id'?: string\n    [NEXT_HMR_REFRESH_HEADER]?: '1'\n    // A header that is only added in test mode to assert on fetch priority\n    'Next-Test-Fetch-Priority'?: RequestInit['priority']\n  } = {\n    // Enable flight response\n    [RSC_HEADER]: '1',\n    // Provide the current router state\n    [NEXT_ROUTER_STATE_TREE_HEADER]: encodeURIComponent(\n      JSON.stringify(flightRouterState)\n    ),\n  }\n\n  /**\n   * Three cases:\n   * - `prefetchKind` is `undefined`, it means it's a normal navigation, so we want to prefetch the page data fully\n   * - `prefetchKind` is `full` - we want to prefetch the whole page so same as above\n   * - `prefetchKind` is `auto` - if the page is dynamic, prefetch the page data partially, if static prefetch the page data fully\n   */\n  if (prefetchKind === PrefetchKind.AUTO) {\n    headers[NEXT_ROUTER_PREFETCH_HEADER] = '1'\n  }\n\n  if (process.env.NODE_ENV === 'development' && options.isHmrRefresh) {\n    headers[NEXT_HMR_REFRESH_HEADER] = '1'\n  }\n\n  if (nextUrl) {\n    headers[NEXT_URL] = nextUrl\n  }\n\n  if (process.env.NEXT_DEPLOYMENT_ID) {\n    headers['x-deployment-id'] = process.env.NEXT_DEPLOYMENT_ID\n  }\n\n  const uniqueCacheQuery = hexHash(\n    [\n      headers[NEXT_ROUTER_PREFETCH_HEADER] || '0',\n      headers[NEXT_ROUTER_STATE_TREE_HEADER],\n      headers[NEXT_URL],\n    ].join(',')\n  )\n\n  try {\n    let fetchUrl = new URL(url)\n    if (process.env.NODE_ENV === 'production') {\n      if (process.env.__NEXT_CONFIG_OUTPUT === 'export') {\n        if (fetchUrl.pathname.endsWith('/')) {\n          fetchUrl.pathname += 'index.txt'\n        } else {\n          fetchUrl.pathname += '.txt'\n        }\n      }\n    }\n\n    // Add unique cache query to avoid caching conflicts on CDN which don't respect the Vary header\n    fetchUrl.searchParams.set(NEXT_RSC_UNION_QUERY, uniqueCacheQuery)\n\n    // When creating a \"temporary\" prefetch (the \"on-demand\" prefetch that gets created on navigation, if one doesn't exist)\n    // we send the request with a \"high\" priority as it's in response to a user interaction that could be blocking a transition.\n    // Otherwise, all other prefetches are sent with a \"low\" priority.\n    // We use \"auto\" for in all other cases to match the existing default, as this function is shared outside of prefetching.\n    const fetchPriority = prefetchKind\n      ? prefetchKind === PrefetchKind.TEMPORARY\n        ? 'high'\n        : 'low'\n      : 'auto'\n\n    if (process.env.__NEXT_TEST_MODE) {\n      headers['Next-Test-Fetch-Priority'] = fetchPriority\n    }\n\n    const res = await fetch(fetchUrl, {\n      // Backwards compat for older browsers. `same-origin` is the default in modern browsers.\n      credentials: 'same-origin',\n      headers,\n      priority: fetchPriority,\n    })\n\n    const responseUrl = urlToUrlWithoutFlightMarker(res.url)\n    const canonicalUrl = res.redirected ? responseUrl : undefined\n\n    const contentType = res.headers.get('content-type') || ''\n    const interception = !!res.headers.get('vary')?.includes(NEXT_URL)\n    const postponed = !!res.headers.get(NEXT_DID_POSTPONE_HEADER)\n    const staleTimeHeader = res.headers.get(NEXT_ROUTER_STALE_TIME_HEADER)\n    const staleTime =\n      staleTimeHeader !== null ? parseInt(staleTimeHeader, 10) : -1\n    let isFlightResponse = contentType.startsWith(RSC_CONTENT_TYPE_HEADER)\n\n    if (process.env.NODE_ENV === 'production') {\n      if (process.env.__NEXT_CONFIG_OUTPUT === 'export') {\n        if (!isFlightResponse) {\n          isFlightResponse = contentType.startsWith('text/plain')\n        }\n      }\n    }\n\n    // If fetch returns something different than flight response handle it like a mpa navigation\n    // If the fetch was not 200, we also handle it like a mpa navigation\n    if (!isFlightResponse || !res.ok) {\n      // in case the original URL came with a hash, preserve it before redirecting to the new URL\n      if (url.hash) {\n        responseUrl.hash = url.hash\n      }\n\n      return doMpaNavigation(responseUrl.toString())\n    }\n\n    // We may navigate to a page that requires a different Webpack runtime.\n    // In prod, every page will have the same Webpack runtime.\n    // In dev, the Webpack runtime is minimal for each page.\n    // We need to ensure the Webpack runtime is updated before executing client-side JS of the new page.\n    if (process.env.NODE_ENV !== 'production' && !process.env.TURBOPACK) {\n      await require('../react-dev-overlay/app/hot-reloader-client').waitForWebpackRuntimeHotUpdate()\n    }\n\n    // Handle the `fetch` readable stream that can be unwrapped by `React.use`.\n    const response: NavigationFlightResponse = await createFromFetch(\n      Promise.resolve(res),\n      { callServer, findSourceMapURL }\n    )\n\n    if (buildId !== response.b) {\n      return doMpaNavigation(res.url)\n    }\n\n    return {\n      flightData: normalizeFlightData(response.f),\n      canonicalUrl: canonicalUrl,\n      couldBeIntercepted: interception,\n      prerendered: response.S,\n      postponed,\n      staleTime,\n    }\n  } catch (err) {\n    console.error(\n      `Failed to fetch RSC payload for ${url}. Falling back to browser navigation.`,\n      err\n    )\n    // If fetch fails handle it like a mpa navigation\n    // TODO-APP: Add a test for the case where a CORS request fails, e.g. external url redirect coming from the response.\n    // See https://github.com/vercel/next.js/issues/43605#issuecomment-1451617521 for a reproduction.\n    return {\n      flightData: url.toString(),\n      canonicalUrl: undefined,\n      couldBeIntercepted: false,\n      prerendered: false,\n      postponed: false,\n      staleTime: -1,\n    }\n  }\n}\n","import type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport type {\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../../../server/app-render/types'\nimport type { FetchServerResponseResult } from './fetch-server-response'\n\nexport const ACTION_REFRESH = 'refresh'\nexport const ACTION_NAVIGATE = 'navigate'\nexport const ACTION_RESTORE = 'restore'\nexport const ACTION_SERVER_PATCH = 'server-patch'\nexport const ACTION_PREFETCH = 'prefetch'\nexport const ACTION_HMR_REFRESH = 'hmr-refresh'\nexport const ACTION_SERVER_ACTION = 'server-action'\n\nexport type RouterChangeByServerResponse = ({\n  previousTree,\n  serverResponse,\n}: {\n  previousTree: FlightRouterState\n  serverResponse: FetchServerResponseResult\n}) => void\n\nexport type RouterNavigate = (\n  href: string,\n  navigateType: 'push' | 'replace',\n  shouldScroll: boolean\n) => void\n\nexport interface Mutable {\n  mpaNavigation?: boolean\n  patchedTree?: FlightRouterState\n  canonicalUrl?: string\n  scrollableSegments?: FlightSegmentPath[]\n  pendingPush?: boolean\n  cache?: CacheNode\n  prefetchCache?: AppRouterState['prefetchCache']\n  hashFragment?: string\n  shouldScroll?: boolean\n  preserveCustomHistoryState?: boolean\n  onlyHashChange?: boolean\n}\n\nexport interface ServerActionMutable extends Mutable {\n  inFlightServerAction?: Promise<any> | null\n}\n\n/**\n * Refresh triggers a refresh of the full page data.\n * - fetches the Flight data and fills rsc at the root of the cache.\n * - The router state is updated at the root.\n */\nexport interface RefreshAction {\n  type: typeof ACTION_REFRESH\n  origin: Location['origin']\n}\n\nexport interface HmrRefreshAction {\n  type: typeof ACTION_HMR_REFRESH\n  origin: Location['origin']\n}\n\nexport type ServerActionDispatcher = (\n  args: Omit<\n    ServerActionAction,\n    'type' | 'mutable' | 'navigate' | 'changeByServerResponse' | 'cache'\n  >\n) => void\n\nexport interface ServerActionAction {\n  type: typeof ACTION_SERVER_ACTION\n  actionId: string\n  actionArgs: any[]\n  resolve: (value: any) => void\n  reject: (reason?: any) => void\n}\n\n/**\n * Navigate triggers a navigation to the provided url. It supports two types: `push` and `replace`.\n *\n * `navigateType`:\n * - `push` - pushes a new history entry in the browser history\n * - `replace` - replaces the current history entry in the browser history\n *\n * Navigate has multiple cache heuristics:\n * - page was prefetched\n *  - Apply router state tree from prefetch\n *  - Apply Flight data from prefetch to the cache\n *  - If Flight data is a string, it's a redirect and the state is updated to trigger a redirect\n *  - Check if hard navigation is needed\n *    - Hard navigation happens when a dynamic parameter below the common layout changed\n *    - When hard navigation is needed the cache is invalidated below the flightSegmentPath\n *    - The missing cache nodes of the page will be fetched in layout-router and trigger the SERVER_PATCH action\n *  - If hard navigation is not needed\n *    - The cache is reused\n *    - If any cache nodes are missing they'll be fetched in layout-router and trigger the SERVER_PATCH action\n * - page was not prefetched\n *  - The navigate was called from `next/router` (`router.push()` / `router.replace()`) / `next/link` without prefetched data available (e.g. the prefetch didn't come back from the server before clicking the link)\n *    - Flight data is fetched in the reducer (suspends the reducer)\n *    - Router state tree is created based on Flight data\n *    - Cache is filled based on the Flight data\n *\n * Above steps explain 3 cases:\n * - `soft` - Reuses the existing cache and fetches missing nodes in layout-router.\n * - `hard` - Creates a new cache where cache nodes are removed below the common layout and fetches missing nodes in layout-router.\n * - `optimistic` (explicit no prefetch) - Creates a new cache and kicks off the data fetch in the reducer. The data fetch is awaited in the layout-router.\n */\nexport interface NavigateAction {\n  type: typeof ACTION_NAVIGATE\n  url: URL\n  isExternalUrl: boolean\n  locationSearch: Location['search']\n  navigateType: 'push' | 'replace'\n  shouldScroll: boolean\n  allowAliasing: boolean\n}\n\n/**\n * Restore applies the provided router state.\n * - Used for `popstate` (back/forward navigation) where a known router state has to be applied.\n * - Also used when syncing the router state with `pushState`/`replaceState` calls.\n * - Router state is applied as-is from the history state, if available.\n * - If the history state does not contain the router state, the existing router state is used.\n * - If any cache node is missing it will be fetched in layout-router during rendering and the server-patch case.\n * - If existing cache nodes match these are used.\n */\nexport interface RestoreAction {\n  type: typeof ACTION_RESTORE\n  url: URL\n  tree: FlightRouterState | undefined\n}\n\n/**\n * Server-patch applies the provided Flight data to the cache and router tree.\n * - Only triggered in layout-router.\n * - Creates a new cache and router state with the Flight data applied.\n */\nexport interface ServerPatchAction {\n  type: typeof ACTION_SERVER_PATCH\n  serverResponse: FetchServerResponseResult\n  previousTree: FlightRouterState\n}\n\n/**\n * PrefetchKind defines the type of prefetching that should be done.\n * - `auto` - if the page is dynamic, prefetch the page data partially, if static prefetch the page data fully.\n * - `full` - prefetch the page data fully.\n * - `temporary` - a temporary prefetch entry is added to the cache, this is used when prefetch={false} is used in next/link or when you push a route programmatically.\n */\n\nexport enum PrefetchKind {\n  AUTO = 'auto',\n  FULL = 'full',\n  TEMPORARY = 'temporary',\n}\n\n/**\n * Prefetch adds the provided FlightData to the prefetch cache\n * - Creates the router state tree based on the patch in FlightData\n * - Adds the FlightData to the prefetch cache\n * - In ACTION_NAVIGATE the prefetch cache is checked and the router state tree and FlightData are applied.\n */\nexport interface PrefetchAction {\n  type: typeof ACTION_PREFETCH\n  url: URL\n  kind: PrefetchKind\n}\n\nexport interface PushRef {\n  /**\n   * If the app-router should push a new history entry in app-router's useEffect()\n   */\n  pendingPush: boolean\n  /**\n   * Multi-page navigation through location.href.\n   */\n  mpaNavigation: boolean\n  /**\n   * Skip applying the router state to the browser history state.\n   */\n  preserveCustomHistoryState: boolean\n}\n\nexport type FocusAndScrollRef = {\n  /**\n   * If focus and scroll should be set in the layout-router's useEffect()\n   */\n  apply: boolean\n  /**\n   * The hash fragment that should be scrolled to.\n   */\n  hashFragment: string | null\n  /**\n   * The paths of the segments that should be focused.\n   */\n  segmentPaths: FlightSegmentPath[]\n  /**\n   * If only the URLs hash fragment changed\n   */\n  onlyHashChange: boolean\n}\n\nexport type PrefetchCacheEntry = {\n  treeAtTimeOfPrefetch: FlightRouterState\n  data: Promise<FetchServerResponseResult>\n  kind: PrefetchKind\n  prefetchTime: number\n  staleTime: number\n  lastUsedTime: number | null\n  key: string\n  status: PrefetchCacheEntryStatus\n  url: URL\n}\n\nexport enum PrefetchCacheEntryStatus {\n  fresh = 'fresh',\n  reusable = 'reusable',\n  expired = 'expired',\n  stale = 'stale',\n}\n\n/**\n * Handles keeping the state of app-router.\n */\nexport type AppRouterState = {\n  /**\n   * The buildId is used to do a mpaNavigation when the server returns a different buildId.\n   * It is used to avoid issues where an older version of the app is loaded in the browser while the server has a new version.\n   */\n  buildId: string\n  /**\n   * The router state, this is written into the history state in app-router using replaceState/pushState.\n   * - Has to be serializable as it is written into the history state.\n   * - Holds which segments and parallel routes are shown on the screen.\n   */\n  tree: FlightRouterState\n  /**\n   * The cache holds React nodes for every segment that is shown on screen as well as previously shown segments.\n   * It also holds in-progress data requests.\n   * Prefetched data is stored separately in `prefetchCache`, that is applied during ACTION_NAVIGATE.\n   */\n  cache: CacheNode\n  /**\n   * Cache that holds prefetched Flight responses keyed by url.\n   */\n  prefetchCache: Map<string, PrefetchCacheEntry>\n  /**\n   * Decides if the update should create a new history entry and if the navigation has to trigger a browser navigation.\n   */\n  pushRef: PushRef\n  /**\n   * Decides if the update should apply scroll and focus management.\n   */\n  focusAndScrollRef: FocusAndScrollRef\n  /**\n   * The canonical url that is pushed/replaced.\n   * - This is the url you see in the browser.\n   */\n  canonicalUrl: string\n  /**\n   * The underlying \"url\" representing the UI state, which is used for intercepting routes.\n   */\n  nextUrl: string | null\n}\n\nexport type ReadonlyReducerState = Readonly<AppRouterState>\nexport type ReducerState = Promise<AppRouterState> | AppRouterState\nexport type ReducerActions = Readonly<\n  | RefreshAction\n  | NavigateAction\n  | RestoreAction\n  | ServerPatchAction\n  | PrefetchAction\n  | HmrRefreshAction\n  | ServerActionAction\n>\n","/**\n * Create a \"Thenable\" that does not resolve. This is used to suspend indefinitely when data is not available yet.\n */\nexport const unresolvedThenable = {\n  then: () => {},\n} as PromiseLike<void>\n","import type {\n  CacheNodeSeedData,\n  FlightData,\n  FlightDataPath,\n  FlightRouterState,\n  FlightSegmentPath,\n  Segment,\n} from '../server/app-render/types'\n\nexport type NormalizedFlightData = {\n  /**\n   * The full `FlightSegmentPath` inclusive of the final `Segment`\n   */\n  segmentPath: FlightSegmentPath\n  /**\n   * The `FlightSegmentPath` exclusive of the final `Segment`\n   */\n  pathToSegment: FlightSegmentPath\n  segment: Segment\n  tree: FlightRouterState\n  seedData: CacheNodeSeedData | null\n  head: React.ReactNode | null\n  isRootRender: boolean\n}\n\n// TODO: We should only have to export `normalizeFlightData`, however because the initial flight data\n// that gets passed to `createInitialRouterState` doesn't conform to the `FlightDataPath` type (it's missing the root segment)\n// we're currently exporting it so we can use it directly. This should be fixed as part of the unification of\n// the different ways we express `FlightSegmentPath`.\nexport function getFlightDataPartsFromPath(\n  flightDataPath: FlightDataPath\n): NormalizedFlightData {\n  // tree, seedData, and head are *always* the last three items in the `FlightDataPath`.\n  const [tree, seedData, head] = flightDataPath.slice(-3)\n  // The `FlightSegmentPath` is everything except the last three items. For a root render, it won't be present.\n  const segmentPath = flightDataPath.slice(0, -3)\n\n  return {\n    // TODO: Unify these two segment path helpers. We are inconsistently pushing an empty segment (\"\")\n    // to the start of the segment path in some places which makes it hard to use solely the segment path.\n    // Look for \"// TODO-APP: remove ''\" in the codebase.\n    pathToSegment: segmentPath.slice(0, -1),\n    segmentPath,\n    // if the `FlightDataPath` corresponds with the root, there'll be no segment path,\n    // in which case we default to ''.\n    segment: segmentPath[segmentPath.length - 1] ?? '',\n    tree,\n    seedData,\n    head,\n    isRootRender: flightDataPath.length === 3,\n  }\n}\n\nexport function getNextFlightSegmentPath(\n  flightSegmentPath: FlightSegmentPath\n): FlightSegmentPath {\n  // Since `FlightSegmentPath` is a repeated tuple of `Segment` and `ParallelRouteKey`, we slice off two items\n  // to get the next segment path.\n  return flightSegmentPath.slice(2)\n}\n\nexport function normalizeFlightData(\n  flightData: FlightData\n): NormalizedFlightData[] | string {\n  // FlightData can be a string when the server didn't respond with a proper flight response,\n  // or when a redirect happens, to signal to the client that it needs to perform an MPA navigation.\n  if (typeof flightData === 'string') {\n    return flightData\n  }\n\n  return flightData.map(getFlightDataPartsFromPath)\n}\n","export const NEXT_QUERY_PARAM_PREFIX = 'nxtP';\nexport const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI';\nexport const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate';\nexport const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = 'x-prerender-revalidate-if-generated';\nexport const RSC_PREFETCH_SUFFIX = '.prefetch.rsc';\nexport const RSC_SEGMENTS_DIR_SUFFIX = '.segments';\nexport const RSC_SEGMENT_SUFFIX = '.segment.rsc';\nexport const RSC_SUFFIX = '.rsc';\nexport const ACTION_SUFFIX = '.action';\nexport const NEXT_DATA_SUFFIX = '.json';\nexport const NEXT_META_SUFFIX = '.meta';\nexport const NEXT_BODY_SUFFIX = '.body';\nexport const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags';\nexport const NEXT_CACHE_SOFT_TAGS_HEADER = 'x-next-cache-soft-tags';\nexport const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags';\nexport const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER = 'x-next-revalidate-tag-token';\nexport const NEXT_RESUME_HEADER = 'next-resume';\n// if these change make sure we update the related\n// documentation as well\nexport const NEXT_CACHE_TAG_MAX_ITEMS = 64;\nexport const NEXT_CACHE_TAG_MAX_LENGTH = 256;\nexport const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024;\nexport const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_';\n// in seconds\nexport const CACHE_ONE_YEAR = 31536000;\n// in seconds, represents revalidate=false. I.e. never revaliate.\n// We use this value since it can be represented as a V8 SMI for optimal performance.\n// It can also be serialized as JSON if it ever leaks accidentally as an actual value.\nexport const INFINITE_CACHE = 0xfffffffe;\n// Patterns to detect middleware files\nexport const MIDDLEWARE_FILENAME = 'middleware';\nexport const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`;\n// Pattern to detect instrumentation hooks file\nexport const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation';\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nexport const PAGES_DIR_ALIAS = 'private-next-pages';\nexport const DOT_NEXT_ALIAS = 'private-dot-next';\nexport const ROOT_DIR_ALIAS = 'private-next-root-dir';\nexport const APP_DIR_ALIAS = 'private-next-app-dir';\nexport const RSC_MOD_REF_PROXY_ALIAS = 'private-next-rsc-mod-ref-proxy';\nexport const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate';\nexport const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference';\nexport const RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper';\nexport const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption';\nexport const RSC_ACTION_CLIENT_WRAPPER_ALIAS = 'private-next-rsc-action-client-wrapper';\nexport const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`;\nexport const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`;\nexport const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`;\nexport const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`;\nexport const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`;\nexport const SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`;\nexport const GSP_NO_RETURNED_VALUE = 'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?';\nexport const GSSP_NO_RETURNED_VALUE = 'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?';\nexport const UNSTABLE_REVALIDATE_RENAME_ERROR = 'The `unstable_revalidate` property is available for general use.\\n' + 'Please use `revalidate` instead.';\nexport const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`;\nexport const NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`;\nexport const SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`;\nexport const ESLINT_DEFAULT_DIRS = [\n    'app',\n    'pages',\n    'components',\n    'lib',\n    'src'\n];\nexport const SERVER_RUNTIME = {\n    edge: 'edge',\n    experimentalEdge: 'experimental-edge',\n    nodejs: 'nodejs'\n};\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */ const WEBPACK_LAYERS_NAMES = {\n    /**\n   * The layer for the shared code between the client and server bundles.\n   */ shared: 'shared',\n    /**\n   * The layer for server-only runtime and picking up `react-server` export conditions.\n   * Including app router RSC pages and app router custom routes.\n   */ reactServerComponents: 'rsc',\n    /**\n   * Server Side Rendering layer for app (ssr).\n   */ serverSideRendering: 'ssr',\n    /**\n   * The browser client bundle layer for actions.\n   */ actionBrowser: 'action-browser',\n    /**\n   * The layer for the API routes.\n   */ api: 'api',\n    /**\n   * The layer for the middleware code.\n   */ middleware: 'middleware',\n    /**\n   * The layer for the instrumentation hooks.\n   */ instrument: 'instrument',\n    /**\n   * The layer for assets on the edge.\n   */ edgeAsset: 'edge-asset',\n    /**\n   * The browser client bundle layer for App directory.\n   */ appPagesBrowser: 'app-pages-browser',\n    /**\n   * The server bundle layer for metadata routes.\n   */ appMetadataRoute: 'app-metadata-route'\n};\nconst WEBPACK_LAYERS = {\n    ...WEBPACK_LAYERS_NAMES,\n    GROUP: {\n        builtinReact: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.appMetadataRoute\n        ],\n        serverOnly: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.appMetadataRoute,\n            WEBPACK_LAYERS_NAMES.instrument,\n            WEBPACK_LAYERS_NAMES.middleware\n        ],\n        neutralTarget: [\n            // pages api\n            WEBPACK_LAYERS_NAMES.api\n        ],\n        clientOnly: [\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser\n        ],\n        bundled: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.appMetadataRoute,\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser,\n            WEBPACK_LAYERS_NAMES.shared,\n            WEBPACK_LAYERS_NAMES.instrument\n        ],\n        appPages: [\n            // app router pages and layouts\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser,\n            WEBPACK_LAYERS_NAMES.actionBrowser\n        ]\n    }\n};\nconst WEBPACK_RESOURCE_QUERIES = {\n    edgeSSREntry: '__next_edge_ssr_entry__',\n    metadata: '__next_metadata__',\n    metadataRoute: '__next_metadata_route__',\n    metadataImageMeta: '__next_metadata_image_meta__'\n};\nexport { WEBPACK_LAYERS, WEBPACK_RESOURCE_QUERIES };\n\n//# sourceMappingURL=constants.js.map","/**\n * A `Promise.withResolvers` implementation that exposes the `resolve` and\n * `reject` functions on a `Promise`.\n *\n * @see https://tc39.es/proposal-promise-with-resolvers/\n */ export class DetachedPromise {\n    constructor(){\n        let resolve;\n        let reject;\n        // Create the promise and assign the resolvers to the object.\n        this.promise = new Promise((res, rej)=>{\n            resolve = res;\n            reject = rej;\n        });\n        // We know that resolvers is defined because the Promise constructor runs\n        // synchronously.\n        this.resolve = resolve;\n        this.reject = reject;\n    }\n}\n\n//# sourceMappingURL=detached-promise.js.map","export function getObjectClassLabel(value: any): string {\n  return Object.prototype.toString.call(value)\n}\n\nexport function isPlainObject(value: any): boolean {\n  if (getObjectClassLabel(value) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(value)\n\n  /**\n   * this used to be previously:\n   *\n   * `return prototype === null || prototype === Object.prototype`\n   *\n   * but Edge Runtime expose Object from vm, being that kind of type-checking wrongly fail.\n   *\n   * It was changed to the current implementation since it's resilient to serialization.\n   */\n  return prototype === null || prototype.hasOwnProperty('isPrototypeOf')\n}\n","import { isPlainObject } from '../shared/lib/is-plain-object';\n/**\n * Checks whether the given value is a NextError.\n * This can be used to print a more detailed error message with properties like `code` & `digest`.\n */ export default function isError(err) {\n    return typeof err === 'object' && err !== null && 'name' in err && 'message' in err;\n}\nexport function getProperError(err) {\n    if (isError(err)) {\n        return err;\n    }\n    if (process.env.NODE_ENV === 'development') {\n        // provide better error for case where `throw undefined`\n        // is called in development\n        if (typeof err === 'undefined') {\n            return new Error('An undefined error was thrown, ' + 'see here for more info: https://nextjs.org/docs/messages/threw-undefined');\n        }\n        if (err === null) {\n            return new Error('A null error was thrown, ' + 'see here for more info: https://nextjs.org/docs/messages/threw-undefined');\n        }\n    }\n    return new Error(isPlainObject(err) ? JSON.stringify(err) : err + '');\n}\n\n//# sourceMappingURL=is-error.js.map","'use client'\n\nimport {\n  METADATA_BOUNDARY_NAME,\n  VIEWPORT_BOUNDARY_NAME,\n  OUTLET_BOUNDARY_NAME,\n} from './metadata-constants'\n\n// We use a namespace object to allow us to recover the name of the function\n// at runtime even when production bundling/minification is used.\nconst NameSpace = {\n  [METADATA_BOUNDARY_NAME]: function ({\n    children,\n  }: {\n    children: React.ReactNode\n  }) {\n    return children\n  },\n  [VIEWPORT_BOUNDARY_NAME]: function ({\n    children,\n  }: {\n    children: React.ReactNode\n  }) {\n    return children\n  },\n  [OUTLET_BOUNDARY_NAME]: function ({\n    children,\n  }: {\n    children: React.ReactNode\n  }) {\n    return children\n  },\n}\n\nexport const MetadataBoundary =\n  // We use slice(0) to trick the bundler into not inlining/minifying the function\n  // so it retains the name inferred from the namespace object\n  NameSpace[METADATA_BOUNDARY_NAME.slice(0) as typeof METADATA_BOUNDARY_NAME]\n\nexport const ViewportBoundary =\n  // We use slice(0) to trick the bundler into not inlining/minifying the function\n  // so it retains the name inferred from the namespace object\n  NameSpace[VIEWPORT_BOUNDARY_NAME.slice(0) as typeof VIEWPORT_BOUNDARY_NAME]\n\nexport const OutletBoundary =\n  // We use slice(0) to trick the bundler into not inlining/minifying the function\n  // so it retains the name inferred from the namespace object\n  NameSpace[OUTLET_BOUNDARY_NAME.slice(0) as typeof OUTLET_BOUNDARY_NAME]\n","export const METADATA_BOUNDARY_NAME = '__next_metadata_boundary__';\nexport const VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__';\nexport const OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__';\n\n//# sourceMappingURL=metadata-constants.js.map","// ISC License\n// Copyright (c) 2021 Alexey Raspopov, Kostiantyn Denysov, Anton Verinov\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n//\n// https://github.com/alexeyraspopov/picocolors/blob/b6261487e7b81aaab2440e397a356732cad9e342/picocolors.js#L1\nvar _globalThis;\nconst { env, stdout } = ((_globalThis = globalThis) == null ? void 0 : _globalThis.process) ?? {};\nconst enabled = env && !env.NO_COLOR && (env.FORCE_COLOR || (stdout == null ? void 0 : stdout.isTTY) && !env.CI && env.TERM !== 'dumb');\nconst replaceClose = (str, close, replace, index)=>{\n    const start = str.substring(0, index) + replace;\n    const end = str.substring(index + close.length);\n    const nextIndex = end.indexOf(close);\n    return ~nextIndex ? start + replaceClose(end, close, replace, nextIndex) : start + end;\n};\nconst formatter = (open, close, replace = open)=>{\n    if (!enabled) return String;\n    return (input)=>{\n        const string = '' + input;\n        const index = string.indexOf(close, open.length);\n        return ~index ? open + replaceClose(string, close, replace, index) + close : open + string + close;\n    };\n};\nexport const reset = enabled ? (s)=>`\\x1b[0m${s}\\x1b[0m` : String;\nexport const bold = formatter('\\x1b[1m', '\\x1b[22m', '\\x1b[22m\\x1b[1m');\nexport const dim = formatter('\\x1b[2m', '\\x1b[22m', '\\x1b[22m\\x1b[2m');\nexport const italic = formatter('\\x1b[3m', '\\x1b[23m');\nexport const underline = formatter('\\x1b[4m', '\\x1b[24m');\nexport const inverse = formatter('\\x1b[7m', '\\x1b[27m');\nexport const hidden = formatter('\\x1b[8m', '\\x1b[28m');\nexport const strikethrough = formatter('\\x1b[9m', '\\x1b[29m');\nexport const black = formatter('\\x1b[30m', '\\x1b[39m');\nexport const red = formatter('\\x1b[31m', '\\x1b[39m');\nexport const green = formatter('\\x1b[32m', '\\x1b[39m');\nexport const yellow = formatter('\\x1b[33m', '\\x1b[39m');\nexport const blue = formatter('\\x1b[34m', '\\x1b[39m');\nexport const magenta = formatter('\\x1b[35m', '\\x1b[39m');\nexport const purple = formatter('\\x1b[38;2;173;127;168m', '\\x1b[39m');\nexport const cyan = formatter('\\x1b[36m', '\\x1b[39m');\nexport const white = formatter('\\x1b[37m', '\\x1b[39m');\nexport const gray = formatter('\\x1b[90m', '\\x1b[39m');\nexport const bgBlack = formatter('\\x1b[40m', '\\x1b[49m');\nexport const bgRed = formatter('\\x1b[41m', '\\x1b[49m');\nexport const bgGreen = formatter('\\x1b[42m', '\\x1b[49m');\nexport const bgYellow = formatter('\\x1b[43m', '\\x1b[49m');\nexport const bgBlue = formatter('\\x1b[44m', '\\x1b[49m');\nexport const bgMagenta = formatter('\\x1b[45m', '\\x1b[49m');\nexport const bgCyan = formatter('\\x1b[46m', '\\x1b[49m');\nexport const bgWhite = formatter('\\x1b[47m', '\\x1b[49m');\n\n//# sourceMappingURL=picocolors.js.map","/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */ export const scheduleOnNextTick = (cb)=>{\n    // We use Promise.resolve().then() here so that the operation is scheduled at\n    // the end of the promise job queue, we then add it to the next process tick\n    // to ensure it's evaluated afterwards.\n    //\n    // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n    //\n    Promise.resolve().then(()=>{\n        if (process.env.NEXT_RUNTIME === 'edge') {\n            setTimeout(cb, 0);\n        } else {\n            process.nextTick(cb);\n        }\n    });\n};\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */ export const scheduleImmediate = (cb)=>{\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        setTimeout(cb, 0);\n    } else {\n        setImmediate(cb);\n    }\n};\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */ export function atLeastOneTask() {\n    return new Promise((resolve)=>scheduleImmediate(resolve));\n}\n/**\n * This utility function is extracted to make it easier to find places where we are doing\n * specific timing tricks to try to schedule work after React has rendered. This is especially\n * important at the moment because Next.js uses the edge builds of React which use setTimeout to\n * schedule work when you might expect that something like setImmediate would do the trick.\n *\n * Long term we should switch to the node versions of React rendering when possible and then\n * update this to use setImmediate rather than setTimeout\n */ export function waitAtLeastOneReactRenderTask() {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        return new Promise((r)=>setTimeout(r, 0));\n    } else {\n        return new Promise((r)=>setImmediate(r));\n    }\n}\n\n//# sourceMappingURL=scheduler.js.map","import { HeadersAdapter } from '../web/spec-extension/adapters/headers';\nimport { PRERENDER_REVALIDATE_HEADER, PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER } from '../../lib/constants';\nimport { getTracer } from '../lib/trace/tracer';\nimport { NodeSpan } from '../lib/trace/constants';\nexport function wrapApiHandler(page, handler) {\n    return (...args)=>{\n        getTracer().setRootSpanAttribute('next.route', page);\n        // Call API route method\n        return getTracer().trace(NodeSpan.runHandler, {\n            spanName: `executing api route (pages) ${page}`\n        }, ()=>handler(...args));\n    };\n}\n/**\n *\n * @param res response object\n * @param statusCode `HTTP` status code of response\n */ export function sendStatusCode(res, statusCode) {\n    res.statusCode = statusCode;\n    return res;\n}\n/**\n *\n * @param res response object\n * @param [statusOrUrl] `HTTP` status code of redirect\n * @param url URL of redirect\n */ export function redirect(res, statusOrUrl, url) {\n    if (typeof statusOrUrl === 'string') {\n        url = statusOrUrl;\n        statusOrUrl = 307;\n    }\n    if (typeof statusOrUrl !== 'number' || typeof url !== 'string') {\n        throw new Error(`Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`);\n    }\n    res.writeHead(statusOrUrl, {\n        Location: url\n    });\n    res.write(url);\n    res.end();\n    return res;\n}\nexport function checkIsOnDemandRevalidate(req, previewProps) {\n    const headers = HeadersAdapter.from(req.headers);\n    const previewModeId = headers.get(PRERENDER_REVALIDATE_HEADER);\n    const isOnDemandRevalidate = previewModeId === previewProps.previewModeId;\n    const revalidateOnlyGenerated = headers.has(PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER);\n    return {\n        isOnDemandRevalidate,\n        revalidateOnlyGenerated\n    };\n}\nexport const COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`;\nexport const COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`;\nexport const RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024;\nexport const SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA);\nexport const SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS);\nexport function clearPreviewData(res, options = {}) {\n    if (SYMBOL_CLEARED_COOKIES in res) {\n        return res;\n    }\n    const { serialize } = require('next/dist/compiled/cookie');\n    const previous = res.getHeader('Set-Cookie');\n    res.setHeader(`Set-Cookie`, [\n        ...typeof previous === 'string' ? [\n            previous\n        ] : Array.isArray(previous) ? previous : [],\n        serialize(COOKIE_NAME_PRERENDER_BYPASS, '', {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/',\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        }),\n        serialize(COOKIE_NAME_PRERENDER_DATA, '', {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/',\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        })\n    ]);\n    Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n        value: true,\n        enumerable: false\n    });\n    return res;\n}\n/**\n * Custom error class\n */ export class ApiError extends Error {\n    constructor(statusCode, message){\n        super(message);\n        this.statusCode = statusCode;\n    }\n}\n/**\n * Sends error in `response`\n * @param res response object\n * @param statusCode of response\n * @param message of response\n */ export function sendError(res, statusCode, message) {\n    res.statusCode = statusCode;\n    res.statusMessage = message;\n    res.end(message);\n}\n/**\n * Execute getter function only if its needed\n * @param LazyProps `req` and `params` for lazyProp\n * @param prop name of property\n * @param getter function to get data\n */ export function setLazyProp({ req }, prop, getter) {\n    const opts = {\n        configurable: true,\n        enumerable: true\n    };\n    const optsReset = {\n        ...opts,\n        writable: true\n    };\n    Object.defineProperty(req, prop, {\n        ...opts,\n        get: ()=>{\n            const value = getter();\n            // we set the property on the object to avoid recalculating it\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n            return value;\n        },\n        set: (value)=>{\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n        }\n    });\n}\n\n//# sourceMappingURL=index.js.map","import { normalizeAppPath } from '../../shared/lib/router/utils/app-paths';\nimport { pathHasPrefix } from '../../shared/lib/router/utils/path-has-prefix';\nimport { removePathPrefix } from '../../shared/lib/router/utils/remove-path-prefix';\nimport { workAsyncStorage } from './work-async-storage.external';\n// This function creates a Flight-acceptable server module map proxy from our\n// Server Reference Manifest similar to our client module map.\n// This is because our manifest contains a lot of internal Next.js data that\n// are relevant to the runtime, workers, etc. that React doesn't need to know.\nexport function createServerModuleMap({ serverActionsManifest }) {\n    return new Proxy({}, {\n        get: (_, id)=>{\n            const workers = serverActionsManifest[process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node'][id].workers;\n            const workStore = workAsyncStorage.getStore();\n            let workerEntry;\n            if (workStore) {\n                workerEntry = workers[normalizeWorkerPageName(workStore.page)];\n            } else {\n                // If there's no work store defined, we can assume that a server\n                // module map is needed during module evaluation, e.g. to create a\n                // server action using a higher-order function. Therefore it should be\n                // safe to return any entry from the manifest that matches the action\n                // ID. They all refer to the same module ID, which must also exist in\n                // the current page bundle. TODO: This is currently not guaranteed in\n                // Turbopack, and needs to be fixed.\n                workerEntry = Object.values(workers).at(0);\n            }\n            if (!workerEntry) {\n                return undefined;\n            }\n            const { moduleId, async } = workerEntry;\n            return {\n                id: moduleId,\n                name: id,\n                chunks: [],\n                async\n            };\n        }\n    });\n}\n/**\n * Checks if the requested action has a worker for the current page.\n * If not, it returns the first worker that has a handler for the action.\n */ export function selectWorkerForForwarding(actionId, pageName, serverActionsManifest) {\n    var _serverActionsManifest__actionId;\n    const workers = (_serverActionsManifest__actionId = serverActionsManifest[process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node'][actionId]) == null ? void 0 : _serverActionsManifest__actionId.workers;\n    const workerName = normalizeWorkerPageName(pageName);\n    // no workers, nothing to forward to\n    if (!workers) return;\n    // if there is a worker for this page, no need to forward it.\n    if (workers[workerName]) {\n        return;\n    }\n    // otherwise, grab the first worker that has a handler for this action id\n    return denormalizeWorkerPageName(Object.keys(workers)[0]);\n}\n/**\n * The flight entry loader keys actions by bundlePath.\n * bundlePath corresponds with the relative path (including 'app') to the page entrypoint.\n */ function normalizeWorkerPageName(pageName) {\n    if (pathHasPrefix(pageName, 'app')) {\n        return pageName;\n    }\n    return 'app' + pageName;\n}\n/**\n * Converts a bundlePath (relative path to the entrypoint) to a routable page name\n */ function denormalizeWorkerPageName(bundlePath) {\n    return normalizeAppPath(removePathPrefix(bundlePath, 'app'));\n}\n\n//# sourceMappingURL=action-utils.js.map","import { trackFallbackParamAccessed } from '../../server/app-render/dynamic-rendering';\nexport function createMetadataContext(pathname, renderOpts) {\n    return {\n        pathname,\n        trailingSlash: renderOpts.trailingSlash,\n        isStandaloneMode: renderOpts.nextConfigOutput === 'standalone'\n    };\n}\nexport function createTrackedMetadataContext(pathname, renderOpts, workStore) {\n    return {\n        // Use the regular metadata context, but we trap the pathname access.\n        ...createMetadataContext(pathname, renderOpts),\n        // Setup the trap around the pathname access so we can track when the\n        // pathname is accessed while resolving metadata which would indicate it's\n        // being used to resolve a relative URL. If that's the case, we don't want\n        // to provide it, and instead we should error.\n        get pathname () {\n            if (workStore && workStore.isStaticGeneration && workStore.fallbackRouteParams && workStore.fallbackRouteParams.size > 0) {\n                trackFallbackParamAccessed(workStore, 'metadata relative url resolving');\n            }\n            return pathname;\n        }\n    };\n}\n\n//# sourceMappingURL=metadata-context.js.map","import { NEXT_CACHE_IMPLICIT_TAG_ID } from '../../lib/constants';\nconst getDerivedTags = (pathname)=>{\n    const derivedTags = [\n        `/layout`\n    ];\n    // we automatically add the current path segments as tags\n    // for revalidatePath handling\n    if (pathname.startsWith('/')) {\n        const pathnameParts = pathname.split('/');\n        for(let i = 1; i < pathnameParts.length + 1; i++){\n            let curPathname = pathnameParts.slice(0, i).join('/');\n            if (curPathname) {\n                // all derived tags other than the page are layout tags\n                if (!curPathname.endsWith('/page') && !curPathname.endsWith('/route')) {\n                    curPathname = `${curPathname}${!curPathname.endsWith('/') ? '/' : ''}layout`;\n                }\n                derivedTags.push(curPathname);\n            }\n        }\n    }\n    return derivedTags;\n};\nexport function getImplicitTags(page, url, fallbackRouteParams) {\n    // TODO: Cache the result\n    const newTags = [];\n    const hasFallbackRouteParams = fallbackRouteParams && fallbackRouteParams.size > 0;\n    // Add the derived tags from the page.\n    const derivedTags = getDerivedTags(page);\n    for (let tag of derivedTags){\n        tag = `${NEXT_CACHE_IMPLICIT_TAG_ID}${tag}`;\n        newTags.push(tag);\n    }\n    // Add the tags from the pathname. If the route has unknown params, we don't\n    // want to add the pathname as a tag, as it will be invalid.\n    if (url.pathname && !hasFallbackRouteParams) {\n        const tag = `${NEXT_CACHE_IMPLICIT_TAG_ID}${url.pathname}`;\n        newTags.push(tag);\n    }\n    return newTags;\n}\n\n//# sourceMappingURL=implicit-tags.js.map","import { RSC_CONTENT_TYPE_HEADER } from '../../client/components/app-router-headers';\nimport RenderResult from '../render-result';\n/**\n * Flight Response is always set to RSC_CONTENT_TYPE_HEADER to ensure it does not get interpreted as HTML.\n */ export class FlightRenderResult extends RenderResult {\n    constructor(response, metadata = {}){\n        super(response, {\n            contentType: RSC_CONTENT_TYPE_HEADER,\n            metadata\n        });\n    }\n}\n\n//# sourceMappingURL=flight-render-result.js.map","const invalidServerComponentReactHooks = [\n  'useDeferredValue',\n  'useEffect',\n  'useImperativeHandle',\n  'useInsertionEffect',\n  'useLayoutEffect',\n  'useReducer',\n  'useRef',\n  'useState',\n  'useSyncExternalStore',\n  'useTransition',\n  'experimental_useOptimistic',\n  'useOptimistic',\n]\n\nfunction setMessage(error: Error, message: string): void {\n  error.message = message\n  if (error.stack) {\n    const lines = error.stack.split('\\n')\n    lines[0] = message\n    error.stack = lines.join('\\n')\n  }\n}\n\n/**\n * Input:\n * Error: Something went wrong\n    at funcName (/path/to/file.js:10:5)\n    at anotherFunc (/path/to/file.js:15:10)\n \n * Output:\n    at funcName (/path/to/file.js:10:5)\n    at anotherFunc (/path/to/file.js:15:10) \n */\nexport function getStackWithoutErrorMessage(error: Error): string {\n  const stack = error.stack\n  if (!stack) return ''\n  return stack.replace(/^[^\\n]*\\n/, '')\n}\n\nexport function formatServerError(error: Error): void {\n  if (typeof error?.message !== 'string') return\n\n  if (\n    error.message.includes(\n      'Class extends value undefined is not a constructor or null'\n    )\n  ) {\n    const addedMessage =\n      'This might be caused by a React Class Component being rendered in a Server Component, React Class Components only works in Client Components. Read more: https://nextjs.org/docs/messages/class-component-in-server-component'\n\n    // If this error instance already has the message, don't add it again\n    if (error.message.includes(addedMessage)) return\n\n    setMessage(\n      error,\n      `${error.message}\n\n${addedMessage}`\n    )\n    return\n  }\n\n  if (error.message.includes('createContext is not a function')) {\n    setMessage(\n      error,\n      'createContext only works in Client Components. Add the \"use client\" directive at the top of the file to use it. Read more: https://nextjs.org/docs/messages/context-in-server-component'\n    )\n    return\n  }\n\n  for (const clientHook of invalidServerComponentReactHooks) {\n    const regex = new RegExp(`\\\\b${clientHook}\\\\b.*is not a function`)\n    if (regex.test(error.message)) {\n      setMessage(\n        error,\n        `${clientHook} only works in Client Components. Add the \"use client\" directive at the top of the file to use it. Read more: https://nextjs.org/docs/messages/react-client-hook-in-server-component`\n      )\n      return\n    }\n  }\n}\n","import stringHash from 'next/dist/compiled/string-hash';\nimport { formatServerError } from '../../lib/format-server-error';\nimport { SpanStatusCode, getTracer } from '../lib/trace/tracer';\nimport { isAbortError } from '../pipe-readable';\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr';\nimport { isDynamicServerError } from '../../client/components/hooks-server-context';\nimport { isNextRouterError } from '../../client/components/is-next-router-error';\nimport { getProperError } from '../../lib/is-error';\nexport function createFlightReactServerErrorHandler(dev, onReactServerRenderError) {\n    return (thrownValue)=>{\n        if (typeof thrownValue === 'string') {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            return stringHash(thrownValue).toString();\n        }\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        // If we're bailing out to CSR, we don't need to log the error.\n        if (isBailoutToCSRError(thrownValue)) return thrownValue.digest;\n        // If this is a navigation error, we don't need to log the error.\n        if (isNextRouterError(thrownValue)) return thrownValue.digest;\n        // If this error occurs, we know that we should be stopping the static\n        // render. This is only thrown in static generation when PPR is not enabled,\n        // which causes the whole page to be marked as dynamic. We don't need to\n        // tell the user about this error, as it's not actionable.\n        if (isDynamicServerError(thrownValue)) return thrownValue.digest;\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (!err.digest) {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            err.digest = stringHash(err.message + err.stack || '').toString();\n        }\n        // Format server errors in development to add more helpful error messages\n        if (dev) {\n            formatServerError(err);\n        }\n        // Record exception in an active span, if available.\n        const span = getTracer().getActiveScopeSpan();\n        if (span) {\n            span.recordException(err);\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: err.message\n            });\n        }\n        onReactServerRenderError(err);\n        return err.digest;\n    };\n}\nexport function createHTMLReactServerErrorHandler(dev, isNextExport, reactServerErrors, silenceLogger, onReactServerRenderError) {\n    return (thrownValue)=>{\n        var _err_message;\n        if (typeof thrownValue === 'string') {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            return stringHash(thrownValue).toString();\n        }\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        // If we're bailing out to CSR, we don't need to log the error.\n        if (isBailoutToCSRError(thrownValue)) return thrownValue.digest;\n        // If this is a navigation error, we don't need to log the error.\n        if (isNextRouterError(thrownValue)) return thrownValue.digest;\n        // If this error occurs, we know that we should be stopping the static\n        // render. This is only thrown in static generation when PPR is not enabled,\n        // which causes the whole page to be marked as dynamic. We don't need to\n        // tell the user about this error, as it's not actionable.\n        if (isDynamicServerError(thrownValue)) return thrownValue.digest;\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (!err.digest) {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            err.digest = stringHash(err.message + (err.stack || '')).toString();\n        }\n        // @TODO by putting this here and not at the top it is possible that\n        // we don't error the build in places we actually expect to\n        if (!reactServerErrors.has(err.digest)) {\n            reactServerErrors.set(err.digest, err);\n        }\n        // Format server errors in development to add more helpful error messages\n        if (dev) {\n            formatServerError(err);\n        }\n        // Don't log the suppressed error during export\n        if (!(isNextExport && (err == null ? void 0 : (_err_message = err.message) == null ? void 0 : _err_message.includes('The specific message is omitted in production builds to avoid leaking sensitive details.')))) {\n            // Record exception in an active span, if available.\n            const span = getTracer().getActiveScopeSpan();\n            if (span) {\n                span.recordException(err);\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: err.message\n                });\n            }\n            if (!silenceLogger) {\n                onReactServerRenderError == null ? void 0 : onReactServerRenderError(err);\n            }\n        }\n        return err.digest;\n    };\n}\nexport function createHTMLErrorHandler(dev, isNextExport, reactServerErrors, allCapturedErrors, silenceLogger, onHTMLRenderSSRError) {\n    return (thrownValue, errorInfo)=>{\n        var _err_message;\n        let isSSRError = true;\n        allCapturedErrors.push(thrownValue);\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        // If we're bailing out to CSR, we don't need to log the error.\n        if (isBailoutToCSRError(thrownValue)) return thrownValue.digest;\n        // If this is a navigation error, we don't need to log the error.\n        if (isNextRouterError(thrownValue)) return thrownValue.digest;\n        // If this error occurs, we know that we should be stopping the static\n        // render. This is only thrown in static generation when PPR is not enabled,\n        // which causes the whole page to be marked as dynamic. We don't need to\n        // tell the user about this error, as it's not actionable.\n        if (isDynamicServerError(thrownValue)) return thrownValue.digest;\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (err.digest) {\n            if (reactServerErrors.has(err.digest)) {\n                // This error is likely an obfuscated error from react-server.\n                // We recover the original error here.\n                thrownValue = reactServerErrors.get(err.digest);\n                isSSRError = false;\n            } else {\n            // The error is not from react-server but has a digest\n            // from other means so we don't need to produce a new one\n            }\n        } else {\n            err.digest = stringHash(err.message + ((errorInfo == null ? void 0 : errorInfo.componentStack) || err.stack || '')).toString();\n        }\n        // Format server errors in development to add more helpful error messages\n        if (dev) {\n            formatServerError(err);\n        }\n        // Don't log the suppressed error during export\n        if (!(isNextExport && (err == null ? void 0 : (_err_message = err.message) == null ? void 0 : _err_message.includes('The specific message is omitted in production builds to avoid leaking sensitive details.')))) {\n            // Record exception in an active span, if available.\n            const span = getTracer().getActiveScopeSpan();\n            if (span) {\n                span.recordException(err);\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: err.message\n                });\n            }\n            if (!silenceLogger && // HTML errors contain RSC errors as well, filter them out before reporting\n            isSSRError) {\n                onHTMLRenderSSRError(err, errorInfo);\n            }\n        }\n        return err.digest;\n    };\n}\nexport function isUserLandError(err) {\n    return !isAbortError(err) && !isBailoutToCSRError(err) && !isNextRouterError(err);\n}\n\n//# sourceMappingURL=create-error-handler.js.map","export const dynamicParamTypes = {\n    catchall: 'c',\n    'catchall-intercepted': 'ci',\n    'optional-catchall': 'oc',\n    dynamic: 'd',\n    'dynamic-intercepted': 'di'\n};\n/**\n * Shorten the dynamic param in order to make it smaller when transmitted to the browser.\n */ export function getShortDynamicParamType(type) {\n    const short = dynamicParamTypes[type];\n    if (!short) {\n        throw new Error('Unknown dynamic param type');\n    }\n    return short;\n}\n\n//# sourceMappingURL=get-short-dynamic-param-type.js.map","// This utility is based on https://github.com/zertosh/htmlescape\n// License: https://github.com/zertosh/htmlescape/blob/0527ca7156a524d256101bb310a9f970f63078ad/LICENSE\nconst ESCAPE_LOOKUP = {\n    '&': '\\\\u0026',\n    '>': '\\\\u003e',\n    '<': '\\\\u003c',\n    '\\u2028': '\\\\u2028',\n    '\\u2029': '\\\\u2029'\n};\nexport const ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nexport function htmlEscapeJsonString(str) {\n    return str.replace(ESCAPE_REGEX, (match)=>ESCAPE_LOOKUP[match]);\n}\n\n//# sourceMappingURL=htmlescape.js.map","import { ESCAPE_REGEX } from '../htmlescape';\nexport function getScriptNonceFromHeader(cspHeaderValue) {\n    var _directive_split_slice_map_find;\n    const directives = cspHeaderValue// Directives are split by ';'.\n    .split(';').map((directive)=>directive.trim());\n    // First try to find the directive for the 'script-src', otherwise try to\n    // fallback to the 'default-src'.\n    const directive = directives.find((dir)=>dir.startsWith('script-src')) || directives.find((dir)=>dir.startsWith('default-src'));\n    // If no directive could be found, then we're done.\n    if (!directive) {\n        return;\n    }\n    // Extract the nonce from the directive\n    const nonce = (_directive_split_slice_map_find = directive.split(' ')// Remove the 'strict-src'/'default-src' string, this can't be the nonce.\n    .slice(1).map((source)=>source.trim())// Find the first source with the 'nonce-' prefix.\n    .find((source)=>source.startsWith(\"'nonce-\") && source.length > 8 && source.endsWith(\"'\"))) == null ? void 0 : _directive_split_slice_map_find.slice(7, -1);\n    // If we could't find the nonce, then we're done.\n    if (!nonce) {\n        return;\n    }\n    // Don't accept the nonce value if it contains HTML escape characters.\n    // Technically, the spec requires a base64'd value, but this is just an\n    // extra layer.\n    if (ESCAPE_REGEX.test(nonce)) {\n        throw new Error('Nonce value from Content-Security-Policy contained HTML escape characters.\\nLearn more: https://nextjs.org/docs/messages/nonce-contained-invalid-characters');\n    }\n    return nonce;\n}\n\n//# sourceMappingURL=get-script-nonce-from-header.js.map","import s from 'next/dist/compiled/superstruct';\nconst dynamicParamTypesSchema = s.enums([\n    'c',\n    'ci',\n    'oc',\n    'd',\n    'di'\n]);\nconst segmentSchema = s.union([\n    s.string(),\n    s.tuple([\n        s.string(),\n        s.string(),\n        dynamicParamTypesSchema\n    ])\n]);\n// unfortunately the tuple is not understood well by Describe so we have to\n// use any here. This does not have any impact on the runtime type since the validation\n// does work correctly.\nexport const flightRouterStateSchema = s.tuple([\n    segmentSchema,\n    s.record(s.string(), s.lazy(()=>flightRouterStateSchema)),\n    s.optional(s.nullable(s.string())),\n    s.optional(s.nullable(s.union([\n        s.literal('refetch'),\n        s.literal('refresh')\n    ]))),\n    s.optional(s.boolean())\n]);\n\n//# sourceMappingURL=types.js.map","import { flightRouterStateSchema } from './types';\nimport { assert } from 'next/dist/compiled/superstruct';\nexport function parseAndValidateFlightRouterState(stateHeader) {\n    if (typeof stateHeader === 'undefined') {\n        return undefined;\n    }\n    if (Array.isArray(stateHeader)) {\n        throw new Error('Multiple router state headers were sent. This is not allowed.');\n    }\n    // We limit the size of the router state header to ~40kb. This is to prevent\n    // a malicious user from sending a very large header and slowing down the\n    // resolving of the router state.\n    // This is around 2,000 nested or parallel route segment states:\n    // '{\"children\":[\"\",{}]}'.length === 20.\n    if (stateHeader.length > 20 * 2000) {\n        throw new Error('The router state header was too large.');\n    }\n    try {\n        const state = JSON.parse(decodeURIComponent(stateHeader));\n        assert(state, flightRouterStateSchema);\n        return state;\n    } catch  {\n        throw new Error('The router state header was sent but could not be parsed.');\n    }\n}\n\n//# sourceMappingURL=parse-and-validate-flight-router-state.js.map","import { addSearchParamsIfPageSegment } from '../../shared/lib/segment';\nexport function createFlightRouterStateFromLoaderTree([segment, parallelRoutes, { layout }], getDynamicParamFromSegment, searchParams, rootLayoutIncluded = false) {\n    const dynamicParam = getDynamicParamFromSegment(segment);\n    const treeSegment = dynamicParam ? dynamicParam.treeSegment : segment;\n    const segmentTree = [\n        addSearchParamsIfPageSegment(treeSegment, searchParams),\n        {}\n    ];\n    if (!rootLayoutIncluded && typeof layout !== 'undefined') {\n        rootLayoutIncluded = true;\n        segmentTree[4] = true;\n    }\n    segmentTree[1] = Object.keys(parallelRoutes).reduce((existingValue, currentValue)=>{\n        existingValue[currentValue] = createFlightRouterStateFromLoaderTree(parallelRoutes[currentValue], getDynamicParamFromSegment, searchParams, rootLayoutIncluded);\n        return existingValue;\n    }, {});\n    return segmentTree;\n}\n\n//# sourceMappingURL=create-flight-router-state-from-loader-tree.js.map","export const ipcForbiddenHeaders = [\n    'accept-encoding',\n    'keepalive',\n    'keep-alive',\n    'content-encoding',\n    'transfer-encoding',\n    // https://github.com/nodejs/undici/issues/1470\n    'connection',\n    // marked as unsupported by undici: https://github.com/nodejs/undici/blob/c83b084879fa0bb8e0469d31ec61428ac68160d5/lib/core/request.js#L354\n    'expect'\n];\nexport const actionsForbiddenHeaders = [\n    ...ipcForbiddenHeaders,\n    'content-length',\n    'set-cookie'\n];\nexport const filterReqHeaders = (headers, forbiddenHeaders)=>{\n    // Some browsers are not matching spec and sending Content-Length: 0. This causes issues in undici\n    // https://github.com/nodejs/undici/issues/2046\n    if (headers['content-length'] && headers['content-length'] === '0') {\n        delete headers['content-length'];\n    }\n    for (const [key, value] of Object.entries(headers)){\n        if (forbiddenHeaders.includes(key) || !(Array.isArray(value) || typeof value === 'string')) {\n            delete headers[key];\n        }\n    }\n    return headers;\n};\n\n//# sourceMappingURL=utils.js.map","// micromatch is only available at node runtime, so it cannot be used here since the code path that calls this function\n// can be run from edge. This is a simple implementation that safely achieves the required functionality.\n// the goal is to match the functionality for remotePatterns as defined here -\n// https://nextjs.org/docs/app/api-reference/components/image#remotepatterns\n// TODO - retrofit micromatch to work in edge and use that instead\nfunction matchWildcardDomain(domain, pattern) {\n    const domainParts = domain.split('.');\n    const patternParts = pattern.split('.');\n    if (patternParts.length < 1) {\n        // pattern is empty and therefore invalid to match against\n        return false;\n    }\n    if (domainParts.length < patternParts.length) {\n        // domain has too few segments and thus cannot match\n        return false;\n    }\n    let depth = 0;\n    while(patternParts.length && depth++ < 2){\n        const patternPart = patternParts.pop();\n        const domainPart = domainParts.pop();\n        switch(patternPart){\n            case '':\n            case '*':\n            case '**':\n                {\n                    // invalid pattern. pattern segments must be non empty\n                    // Additionally wildcards are only supported below the domain level\n                    return false;\n                }\n            default:\n                {\n                    if (domainPart !== patternPart) {\n                        return false;\n                    }\n                }\n        }\n    }\n    while(patternParts.length){\n        const patternPart = patternParts.pop();\n        const domainPart = domainParts.pop();\n        switch(patternPart){\n            case '':\n                {\n                    // invalid pattern. pattern segments must be non empty\n                    return false;\n                }\n            case '*':\n                {\n                    // wildcard matches anything so we continue if the domain part is non-empty\n                    if (domainPart) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n            case '**':\n                {\n                    // if this is not the last item in the pattern the pattern is invalid\n                    if (patternParts.length > 0) {\n                        return false;\n                    }\n                    // recursive wildcard matches anything so we terminate here if the domain part is non empty\n                    return domainPart !== undefined;\n                }\n            default:\n                {\n                    if (domainPart !== patternPart) {\n                        return false;\n                    }\n                }\n        }\n    }\n    // We exhausted the pattern. If we also exhausted the domain we have a match\n    return domainParts.length === 0;\n}\nexport const isCsrfOriginAllowed = (originDomain, allowedOrigins = [])=>{\n    return allowedOrigins.some((allowedOrigin)=>allowedOrigin && (allowedOrigin === originDomain || matchWildcardDomain(originDomain, allowedOrigin)));\n};\n\n//# sourceMappingURL=csrf-protection.js.map","import { RSC_HEADER, RSC_CONTENT_TYPE_HEADER, NEXT_ROUTER_STATE_TREE_HEADER, ACTION_HEADER } from '../../client/components/app-router-headers';\nimport { isNotFoundError } from '../../client/components/not-found';\nimport { getRedirectTypeFromError, getURLFromRedirectError, isRedirectError } from '../../client/components/redirect';\nimport RenderResult from '../render-result';\nimport { FlightRenderResult } from './flight-render-result';\nimport { filterReqHeaders, actionsForbiddenHeaders } from '../lib/server-ipc/utils';\nimport { appendMutableCookies, getModifiedCookieValues } from '../web/spec-extension/adapters/request-cookies';\nimport { NEXT_CACHE_REVALIDATED_TAGS_HEADER, NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER } from '../../lib/constants';\nimport { getServerActionRequestMetadata } from '../lib/server-action-request-meta';\nimport { isCsrfOriginAllowed } from './csrf-protection';\nimport { warn } from '../../build/output/log';\nimport { RequestCookies, ResponseCookies } from '../web/spec-extension/cookies';\nimport { HeadersAdapter } from '../web/spec-extension/adapters/headers';\nimport { fromNodeOutgoingHttpHeaders } from '../web/utils';\nimport { selectWorkerForForwarding } from './action-utils';\nimport { isNodeNextRequest, isWebNextRequest } from '../base-http/helpers';\nimport { RedirectStatusCode } from '../../client/components/redirect-status-code';\nimport { synchronizeMutableCookies } from '../async-storage/request-store';\nfunction formDataFromSearchQueryString(query) {\n    const searchParams = new URLSearchParams(query);\n    const formData = new FormData();\n    for (const [key, value] of searchParams){\n        formData.append(key, value);\n    }\n    return formData;\n}\nfunction nodeHeadersToRecord(headers) {\n    const record = {};\n    for (const [key, value] of Object.entries(headers)){\n        if (value !== undefined) {\n            record[key] = Array.isArray(value) ? value.join(', ') : `${value}`;\n        }\n    }\n    return record;\n}\nfunction getForwardedHeaders(req, res) {\n    // Get request headers and cookies\n    const requestHeaders = req.headers;\n    const requestCookies = new RequestCookies(HeadersAdapter.from(requestHeaders));\n    // Get response headers and cookies\n    const responseHeaders = res.getHeaders();\n    const responseCookies = new ResponseCookies(fromNodeOutgoingHttpHeaders(responseHeaders));\n    // Merge request and response headers\n    const mergedHeaders = filterReqHeaders({\n        ...nodeHeadersToRecord(requestHeaders),\n        ...nodeHeadersToRecord(responseHeaders)\n    }, actionsForbiddenHeaders);\n    // Merge cookies into requestCookies, so responseCookies always take precedence\n    // and overwrite/delete those from requestCookies.\n    responseCookies.getAll().forEach((cookie)=>{\n        if (typeof cookie.value === 'undefined') {\n            requestCookies.delete(cookie.name);\n        } else {\n            requestCookies.set(cookie);\n        }\n    });\n    // Update the 'cookie' header with the merged cookies\n    mergedHeaders['cookie'] = requestCookies.toString();\n    // Remove headers that should not be forwarded\n    delete mergedHeaders['transfer-encoding'];\n    return new Headers(mergedHeaders);\n}\nasync function addRevalidationHeader(res, { workStore, requestStore }) {\n    var _workStore_incrementalCache, _workStore_revalidatedTags;\n    await Promise.all([\n        (_workStore_incrementalCache = workStore.incrementalCache) == null ? void 0 : _workStore_incrementalCache.revalidateTag(workStore.revalidatedTags || []),\n        ...Object.values(workStore.pendingRevalidates || {}),\n        ...workStore.pendingRevalidateWrites || []\n    ]);\n    // If a tag was revalidated, the client router needs to invalidate all the\n    // client router cache as they may be stale. And if a path was revalidated, the\n    // client needs to invalidate all subtrees below that path.\n    // To keep the header size small, we use a tuple of\n    // [[revalidatedPaths], isTagRevalidated ? 1 : 0, isCookieRevalidated ? 1 : 0]\n    // instead of a JSON object.\n    // TODO-APP: Currently the prefetch cache doesn't have subtree information,\n    // so we need to invalidate the entire cache if a path was revalidated.\n    // TODO-APP: Currently paths are treated as tags, so the second element of the tuple\n    // is always empty.\n    const isTagRevalidated = ((_workStore_revalidatedTags = workStore.revalidatedTags) == null ? void 0 : _workStore_revalidatedTags.length) ? 1 : 0;\n    const isCookieRevalidated = getModifiedCookieValues(requestStore.mutableCookies).length ? 1 : 0;\n    res.setHeader('x-action-revalidated', JSON.stringify([\n        [],\n        isTagRevalidated,\n        isCookieRevalidated\n    ]));\n}\n/**\n * Forwards a server action request to a separate worker. Used when the requested action is not available in the current worker.\n */ async function createForwardedActionResponse(req, res, host, workerPathname, basePath, workStore) {\n    var _workStore_incrementalCache;\n    if (!host) {\n        throw new Error('Invariant: Missing `host` header from a forwarded Server Actions request.');\n    }\n    const forwardedHeaders = getForwardedHeaders(req, res);\n    // indicate that this action request was forwarded from another worker\n    // we use this to skip rendering the flight tree so that we don't update the UI\n    // with the response from the forwarded worker\n    forwardedHeaders.set('x-action-forwarded', '1');\n    const proto = ((_workStore_incrementalCache = workStore.incrementalCache) == null ? void 0 : _workStore_incrementalCache.requestProtocol) || 'https';\n    // For standalone or the serverful mode, use the internal origin directly\n    // other than the host headers from the request.\n    const origin = process.env.__NEXT_PRIVATE_ORIGIN || `${proto}://${host.value}`;\n    const fetchUrl = new URL(`${origin}${basePath}${workerPathname}`);\n    try {\n        var _response_headers_get;\n        let body;\n        if (// The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME === 'edge' && isWebNextRequest(req)) {\n            if (!req.body) {\n                throw new Error('Invariant: missing request body.');\n            }\n            body = req.body;\n        } else if (// The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME !== 'edge' && isNodeNextRequest(req)) {\n            body = req.stream();\n        } else {\n            throw new Error('Invariant: Unknown request type.');\n        }\n        // Forward the request to the new worker\n        const response = await fetch(fetchUrl, {\n            method: 'POST',\n            body,\n            duplex: 'half',\n            headers: forwardedHeaders,\n            redirect: 'manual',\n            next: {\n                // @ts-ignore\n                internal: 1\n            }\n        });\n        if ((_response_headers_get = response.headers.get('content-type')) == null ? void 0 : _response_headers_get.startsWith(RSC_CONTENT_TYPE_HEADER)) {\n            // copy the headers from the redirect response to the response we're sending\n            for (const [key, value] of response.headers){\n                if (!actionsForbiddenHeaders.includes(key)) {\n                    res.setHeader(key, value);\n                }\n            }\n            return new FlightRenderResult(response.body);\n        } else {\n            var // Since we aren't consuming the response body, we cancel it to avoid memory leaks\n            _response_body;\n            (_response_body = response.body) == null ? void 0 : _response_body.cancel();\n        }\n    } catch (err) {\n        // we couldn't stream the forwarded response, so we'll just return an empty response\n        console.error(`failed to forward action response`, err);\n    }\n    return RenderResult.fromStatic('{}');\n}\n/**\n * Returns the parsed redirect URL if we deem that it is hosted by us.\n *\n * We handle both relative and absolute redirect URLs.\n *\n * In case the redirect URL is not relative to the application we return `null`.\n */ function getAppRelativeRedirectUrl(basePath, host, redirectUrl) {\n    if (redirectUrl.startsWith('/') || redirectUrl.startsWith('./')) {\n        // Make sure we are appending the basePath to relative URLS\n        return new URL(`${basePath}${redirectUrl}`, 'http://n');\n    }\n    const parsedRedirectUrl = new URL(redirectUrl);\n    if ((host == null ? void 0 : host.value) !== parsedRedirectUrl.host) {\n        return null;\n    }\n    // At this point the hosts are the same, just confirm we\n    // are routing to a path underneath the `basePath`\n    return parsedRedirectUrl.pathname.startsWith(basePath) ? parsedRedirectUrl : null;\n}\nasync function createRedirectRenderResult(req, res, originalHost, redirectUrl, redirectType, basePath, workStore) {\n    res.setHeader('x-action-redirect', `${redirectUrl};${redirectType}`);\n    // If we're redirecting to another route of this Next.js application, we'll\n    // try to stream the response from the other worker path. When that works,\n    // we can save an extra roundtrip and avoid a full page reload.\n    // When the redirect URL starts with a `/` or is to the same host, under the\n    // `basePath` we treat it as an app-relative redirect;\n    const appRelativeRedirectUrl = getAppRelativeRedirectUrl(basePath, originalHost, redirectUrl);\n    if (appRelativeRedirectUrl) {\n        var _workStore_incrementalCache;\n        if (!originalHost) {\n            throw new Error('Invariant: Missing `host` header from a forwarded Server Actions request.');\n        }\n        const forwardedHeaders = getForwardedHeaders(req, res);\n        forwardedHeaders.set(RSC_HEADER, '1');\n        const proto = ((_workStore_incrementalCache = workStore.incrementalCache) == null ? void 0 : _workStore_incrementalCache.requestProtocol) || 'https';\n        // For standalone or the serverful mode, use the internal origin directly\n        // other than the host headers from the request.\n        const origin = process.env.__NEXT_PRIVATE_ORIGIN || `${proto}://${originalHost.value}`;\n        const fetchUrl = new URL(`${origin}${appRelativeRedirectUrl.pathname}${appRelativeRedirectUrl.search}`);\n        if (workStore.revalidatedTags) {\n            var _workStore_incrementalCache_prerenderManifest_preview, _workStore_incrementalCache_prerenderManifest, _workStore_incrementalCache1;\n            forwardedHeaders.set(NEXT_CACHE_REVALIDATED_TAGS_HEADER, workStore.revalidatedTags.join(','));\n            forwardedHeaders.set(NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER, ((_workStore_incrementalCache1 = workStore.incrementalCache) == null ? void 0 : (_workStore_incrementalCache_prerenderManifest = _workStore_incrementalCache1.prerenderManifest) == null ? void 0 : (_workStore_incrementalCache_prerenderManifest_preview = _workStore_incrementalCache_prerenderManifest.preview) == null ? void 0 : _workStore_incrementalCache_prerenderManifest_preview.previewModeId) || '');\n        }\n        // Ensures that when the path was revalidated we don't return a partial response on redirects\n        forwardedHeaders.delete(NEXT_ROUTER_STATE_TREE_HEADER);\n        // When an action follows a redirect, it's no longer handling an action: it's just a normal RSC request\n        // to the requested URL. We should remove the `next-action` header so that it's not treated as an action\n        forwardedHeaders.delete(ACTION_HEADER);\n        try {\n            var _response_headers_get;\n            const response = await fetch(fetchUrl, {\n                method: 'GET',\n                headers: forwardedHeaders,\n                next: {\n                    // @ts-ignore\n                    internal: 1\n                }\n            });\n            if ((_response_headers_get = response.headers.get('content-type')) == null ? void 0 : _response_headers_get.startsWith(RSC_CONTENT_TYPE_HEADER)) {\n                // copy the headers from the redirect response to the response we're sending\n                for (const [key, value] of response.headers){\n                    if (!actionsForbiddenHeaders.includes(key)) {\n                        res.setHeader(key, value);\n                    }\n                }\n                return new FlightRenderResult(response.body);\n            } else {\n                var // Since we aren't consuming the response body, we cancel it to avoid memory leaks\n                _response_body;\n                (_response_body = response.body) == null ? void 0 : _response_body.cancel();\n            }\n        } catch (err) {\n            // we couldn't stream the redirect response, so we'll just do a normal redirect\n            console.error(`failed to get redirect response`, err);\n        }\n    }\n    return RenderResult.fromStatic('{}');\n}\nvar HostType;\n/**\n * Ensures the value of the header can't create long logs.\n */ function limitUntrustedHeaderValueForLogs(value) {\n    return value.length > 100 ? value.slice(0, 100) + '...' : value;\n}\nexport async function handleAction({ req, res, ComponentMod, serverModuleMap, generateFlight, workStore, requestStore, serverActions, ctx }) {\n    const contentType = req.headers['content-type'];\n    const { serverActionsManifest, page } = ctx.renderOpts;\n    const { actionId, isURLEncodedAction, isMultipartAction, isFetchAction, isServerAction } = getServerActionRequestMetadata(req);\n    // If it's not a Server Action, skip handling.\n    if (!isServerAction) {\n        return;\n    }\n    if (workStore.isStaticGeneration) {\n        throw new Error(\"Invariant: server actions can't be handled during static rendering\");\n    }\n    let temporaryReferences;\n    const finalizeAndGenerateFlight = (...args)=>{\n        // When we switch to the render phase, cookies() will return\n        // `workUnitStore.cookies` instead of `workUnitStore.userspaceMutableCookies`.\n        // We want the render to see any cookie writes that we performed during the action,\n        // so we need to update the immutable cookies to reflect the changes.\n        synchronizeMutableCookies(requestStore);\n        return generateFlight(...args);\n    };\n    requestStore.phase = 'action';\n    // When running actions the default is no-store, you can still `cache: 'force-cache'`\n    workStore.fetchCache = 'default-no-store';\n    const originDomain = typeof req.headers['origin'] === 'string' ? new URL(req.headers['origin']).host : undefined;\n    const forwardedHostHeader = req.headers['x-forwarded-host'];\n    const hostHeader = req.headers['host'];\n    const host = forwardedHostHeader ? {\n        type: \"x-forwarded-host\",\n        value: forwardedHostHeader\n    } : hostHeader ? {\n        type: \"host\",\n        value: hostHeader\n    } : undefined;\n    let warning = undefined;\n    function warnBadServerActionRequest() {\n        if (warning) {\n            warn(warning);\n        }\n    }\n    // This is to prevent CSRF attacks. If `x-forwarded-host` is set, we need to\n    // ensure that the request is coming from the same host.\n    if (!originDomain) {\n        // This might be an old browser that doesn't send `host` header. We ignore\n        // this case.\n        warning = 'Missing `origin` header from a forwarded Server Actions request.';\n    } else if (!host || originDomain !== host.value) {\n        // If the customer sets a list of allowed origins, we'll allow the request.\n        // These are considered safe but might be different from forwarded host set\n        // by the infra (i.e. reverse proxies).\n        if (isCsrfOriginAllowed(originDomain, serverActions == null ? void 0 : serverActions.allowedOrigins)) {\n        // Ignore it\n        } else {\n            if (host) {\n                // This seems to be an CSRF attack. We should not proceed the action.\n                console.error(`\\`${host.type}\\` header with value \\`${limitUntrustedHeaderValueForLogs(host.value)}\\` does not match \\`origin\\` header with value \\`${limitUntrustedHeaderValueForLogs(originDomain)}\\` from a forwarded Server Actions request. Aborting the action.`);\n            } else {\n                // This is an attack. We should not proceed the action.\n                console.error(`\\`x-forwarded-host\\` or \\`host\\` headers are not provided. One of these is needed to compare the \\`origin\\` header from a forwarded Server Actions request. Aborting the action.`);\n            }\n            const error = new Error('Invalid Server Actions request.');\n            if (isFetchAction) {\n                var _workStore_incrementalCache;\n                res.statusCode = 500;\n                await Promise.all([\n                    (_workStore_incrementalCache = workStore.incrementalCache) == null ? void 0 : _workStore_incrementalCache.revalidateTag(workStore.revalidatedTags || []),\n                    ...Object.values(workStore.pendingRevalidates || {}),\n                    ...workStore.pendingRevalidateWrites || []\n                ]);\n                const promise = Promise.reject(error);\n                try {\n                    // we need to await the promise to trigger the rejection early\n                    // so that it's already handled by the time we call\n                    // the RSC runtime. Otherwise, it will throw an unhandled\n                    // promise rejection error in the renderer.\n                    await promise;\n                } catch  {\n                // swallow error, it's gonna be handled on the client\n                }\n                return {\n                    type: 'done',\n                    result: await finalizeAndGenerateFlight(req, ctx, {\n                        actionResult: promise,\n                        // if the page was not revalidated, we can skip the rendering the flight tree\n                        skipFlight: !workStore.pathWasRevalidated,\n                        temporaryReferences\n                    })\n                };\n            }\n            throw error;\n        }\n    }\n    // ensure we avoid caching server actions unexpectedly\n    res.setHeader('Cache-Control', 'no-cache, no-store, max-age=0, must-revalidate');\n    let boundActionArguments = [];\n    const { actionAsyncStorage } = ComponentMod;\n    let actionResult;\n    let formState;\n    let actionModId;\n    const actionWasForwarded = Boolean(req.headers['x-action-forwarded']);\n    if (actionId) {\n        const forwardedWorker = selectWorkerForForwarding(actionId, page, serverActionsManifest);\n        // If forwardedWorker is truthy, it means there isn't a worker for the action\n        // in the current handler, so we forward the request to a worker that has the action.\n        if (forwardedWorker) {\n            return {\n                type: 'done',\n                result: await createForwardedActionResponse(req, res, host, forwardedWorker, ctx.renderOpts.basePath, workStore)\n            };\n        }\n    }\n    try {\n        await actionAsyncStorage.run({\n            isAction: true\n        }, async ()=>{\n            if (// The type check here ensures that `req` is correctly typed, and the\n            // environment variable check provides dead code elimination.\n            process.env.NEXT_RUNTIME === 'edge' && isWebNextRequest(req)) {\n                if (!req.body) {\n                    throw new Error('invariant: Missing request body.');\n                }\n                // TODO: add body limit\n                // Use react-server-dom-webpack/server.edge\n                const { createTemporaryReferenceSet, decodeReply, decodeAction, decodeFormState } = ComponentMod;\n                temporaryReferences = createTemporaryReferenceSet();\n                if (isMultipartAction) {\n                    // TODO-APP: Add streaming support\n                    const formData = await req.request.formData();\n                    if (isFetchAction) {\n                        boundActionArguments = await decodeReply(formData, serverModuleMap, {\n                            temporaryReferences\n                        });\n                    } else {\n                        const action = await decodeAction(formData, serverModuleMap);\n                        if (typeof action === 'function') {\n                            // Only warn if it's a server action, otherwise skip for other post requests\n                            warnBadServerActionRequest();\n                            const actionReturnedState = await action();\n                            formState = decodeFormState(actionReturnedState, formData, serverModuleMap);\n                        }\n                        // Skip the fetch path\n                        return;\n                    }\n                } else {\n                    try {\n                        actionModId = getActionModIdOrError(actionId, serverModuleMap);\n                    } catch (err) {\n                        if (actionId !== null) {\n                            console.error(err);\n                        }\n                        return {\n                            type: 'not-found'\n                        };\n                    }\n                    let actionData = '';\n                    const reader = req.body.getReader();\n                    while(true){\n                        const { done, value } = await reader.read();\n                        if (done) {\n                            break;\n                        }\n                        actionData += new TextDecoder().decode(value);\n                    }\n                    if (isURLEncodedAction) {\n                        const formData = formDataFromSearchQueryString(actionData);\n                        boundActionArguments = await decodeReply(formData, serverModuleMap, {\n                            temporaryReferences\n                        });\n                    } else {\n                        boundActionArguments = await decodeReply(actionData, serverModuleMap, {\n                            temporaryReferences\n                        });\n                    }\n                }\n            } else if (// The type check here ensures that `req` is correctly typed, and the\n            // environment variable check provides dead code elimination.\n            process.env.NEXT_RUNTIME !== 'edge' && isNodeNextRequest(req)) {\n                // Use react-server-dom-webpack/server.node which supports streaming\n                const { createTemporaryReferenceSet, decodeReply, decodeReplyFromBusboy, decodeAction, decodeFormState } = require(`./react-server.node`);\n                temporaryReferences = createTemporaryReferenceSet();\n                const { Transform } = require('node:stream');\n                const defaultBodySizeLimit = '1 MB';\n                const bodySizeLimit = (serverActions == null ? void 0 : serverActions.bodySizeLimit) ?? defaultBodySizeLimit;\n                const bodySizeLimitBytes = bodySizeLimit !== defaultBodySizeLimit ? require('next/dist/compiled/bytes').parse(bodySizeLimit) : 1024 * 1024 // 1 MB\n                ;\n                let size = 0;\n                const body = req.body.pipe(new Transform({\n                    transform (chunk, encoding, callback) {\n                        size += Buffer.byteLength(chunk, encoding);\n                        if (size > bodySizeLimitBytes) {\n                            const { ApiError } = require('../api-utils');\n                            callback(new ApiError(413, `Body exceeded ${bodySizeLimit} limit.\n                To configure the body size limit for Server Actions, see: https://nextjs.org/docs/app/api-reference/next-config-js/serverActions#bodysizelimit`));\n                            return;\n                        }\n                        callback(null, chunk);\n                    }\n                }));\n                if (isMultipartAction) {\n                    if (isFetchAction) {\n                        const busboy = require('busboy')({\n                            defParamCharset: 'utf8',\n                            headers: req.headers,\n                            limits: {\n                                fieldSize: bodySizeLimitBytes\n                            }\n                        });\n                        body.pipe(busboy);\n                        boundActionArguments = await decodeReplyFromBusboy(busboy, serverModuleMap, {\n                            temporaryReferences\n                        });\n                    } else {\n                        // React doesn't yet publish a busboy version of decodeAction\n                        // so we polyfill the parsing of FormData.\n                        const fakeRequest = new Request('http://localhost', {\n                            method: 'POST',\n                            // @ts-expect-error\n                            headers: {\n                                'Content-Type': contentType\n                            },\n                            body: new ReadableStream({\n                                start: (controller)=>{\n                                    body.on('data', (chunk)=>{\n                                        controller.enqueue(new Uint8Array(chunk));\n                                    });\n                                    body.on('end', ()=>{\n                                        controller.close();\n                                    });\n                                    body.on('error', (err)=>{\n                                        controller.error(err);\n                                    });\n                                }\n                            }),\n                            duplex: 'half'\n                        });\n                        const formData = await fakeRequest.formData();\n                        const action = await decodeAction(formData, serverModuleMap);\n                        if (typeof action === 'function') {\n                            // Only warn if it's a server action, otherwise skip for other post requests\n                            warnBadServerActionRequest();\n                            const actionReturnedState = await action();\n                            formState = await decodeFormState(actionReturnedState, formData, serverModuleMap);\n                        }\n                        // Skip the fetch path\n                        return;\n                    }\n                } else {\n                    try {\n                        actionModId = getActionModIdOrError(actionId, serverModuleMap);\n                    } catch (err) {\n                        if (actionId !== null) {\n                            console.error(err);\n                        }\n                        return {\n                            type: 'not-found'\n                        };\n                    }\n                    const chunks = [];\n                    for await (const chunk of req.body){\n                        chunks.push(Buffer.from(chunk));\n                    }\n                    const actionData = Buffer.concat(chunks).toString('utf-8');\n                    if (isURLEncodedAction) {\n                        const formData = formDataFromSearchQueryString(actionData);\n                        boundActionArguments = await decodeReply(formData, serverModuleMap, {\n                            temporaryReferences\n                        });\n                    } else {\n                        boundActionArguments = await decodeReply(actionData, serverModuleMap, {\n                            temporaryReferences\n                        });\n                    }\n                }\n            } else {\n                throw new Error('Invariant: Unknown request type.');\n            }\n            // actions.js\n            // app/page.js\n            //   action worker1\n            //     appRender1\n            // app/foo/page.js\n            //   action worker2\n            //     appRender\n            // / -> fire action -> POST / -> appRender1 -> modId for the action file\n            // /foo -> fire action -> POST /foo -> appRender2 -> modId for the action file\n            try {\n                actionModId = actionModId ?? getActionModIdOrError(actionId, serverModuleMap);\n            } catch (err) {\n                if (actionId !== null) {\n                    console.error(err);\n                }\n                return {\n                    type: 'not-found'\n                };\n            }\n            const actionHandler = (await ComponentMod.__next_app__.require(actionModId))[// `actionId` must exist if we got here, as otherwise we would have thrown an error above\n            actionId];\n            const returnVal = await actionHandler.apply(null, boundActionArguments);\n            // For form actions, we need to continue rendering the page.\n            if (isFetchAction) {\n                await addRevalidationHeader(res, {\n                    workStore,\n                    requestStore\n                });\n                actionResult = await finalizeAndGenerateFlight(req, ctx, {\n                    actionResult: Promise.resolve(returnVal),\n                    // if the page was not revalidated, or if the action was forwarded from another worker, we can skip the rendering the flight tree\n                    skipFlight: !workStore.pathWasRevalidated || actionWasForwarded,\n                    temporaryReferences\n                });\n            }\n        });\n        return {\n            type: 'done',\n            result: actionResult,\n            formState\n        };\n    } catch (err) {\n        if (isRedirectError(err)) {\n            const redirectUrl = getURLFromRedirectError(err);\n            const redirectType = getRedirectTypeFromError(err);\n            await addRevalidationHeader(res, {\n                workStore,\n                requestStore\n            });\n            // if it's a fetch action, we'll set the status code for logging/debugging purposes\n            // but we won't set a Location header, as the redirect will be handled by the client router\n            res.statusCode = RedirectStatusCode.SeeOther;\n            if (isFetchAction) {\n                return {\n                    type: 'done',\n                    result: await createRedirectRenderResult(req, res, host, redirectUrl, redirectType, ctx.renderOpts.basePath, workStore)\n                };\n            }\n            // If there were mutable cookies set, we need to set them on the\n            // response.\n            const headers = new Headers();\n            if (appendMutableCookies(headers, requestStore.mutableCookies)) {\n                res.setHeader('set-cookie', Array.from(headers.values()));\n            }\n            res.setHeader('Location', redirectUrl);\n            return {\n                type: 'done',\n                result: RenderResult.fromStatic('')\n            };\n        } else if (isNotFoundError(err)) {\n            res.statusCode = 404;\n            await addRevalidationHeader(res, {\n                workStore,\n                requestStore\n            });\n            if (isFetchAction) {\n                const promise = Promise.reject(err);\n                try {\n                    // we need to await the promise to trigger the rejection early\n                    // so that it's already handled by the time we call\n                    // the RSC runtime. Otherwise, it will throw an unhandled\n                    // promise rejection error in the renderer.\n                    await promise;\n                } catch  {\n                // swallow error, it's gonna be handled on the client\n                }\n                return {\n                    type: 'done',\n                    result: await finalizeAndGenerateFlight(req, ctx, {\n                        skipFlight: false,\n                        actionResult: promise,\n                        temporaryReferences\n                    })\n                };\n            }\n            return {\n                type: 'not-found'\n            };\n        }\n        if (isFetchAction) {\n            var _workStore_incrementalCache1;\n            res.statusCode = 500;\n            await Promise.all([\n                (_workStore_incrementalCache1 = workStore.incrementalCache) == null ? void 0 : _workStore_incrementalCache1.revalidateTag(workStore.revalidatedTags || []),\n                ...Object.values(workStore.pendingRevalidates || {}),\n                ...workStore.pendingRevalidateWrites || []\n            ]);\n            const promise = Promise.reject(err);\n            try {\n                // we need to await the promise to trigger the rejection early\n                // so that it's already handled by the time we call\n                // the RSC runtime. Otherwise, it will throw an unhandled\n                // promise rejection error in the renderer.\n                await promise;\n            } catch  {\n            // swallow error, it's gonna be handled on the client\n            }\n            return {\n                type: 'done',\n                result: await generateFlight(req, ctx, {\n                    actionResult: promise,\n                    // if the page was not revalidated, or if the action was forwarded from another worker, we can skip the rendering the flight tree\n                    skipFlight: !workStore.pathWasRevalidated || actionWasForwarded,\n                    temporaryReferences\n                })\n            };\n        }\n        throw err;\n    }\n}\n/**\n * Attempts to find the module ID for the action from the module map. When this fails, it could be a deployment skew where\n * the action came from a different deployment. It could also simply be an invalid POST request that is not a server action.\n * In either case, we'll throw an error to be handled by the caller.\n */ function getActionModIdOrError(actionId, serverModuleMap) {\n    try {\n        var _serverModuleMap_actionId;\n        // if we're missing the action ID header, we can't do any further processing\n        if (!actionId) {\n            throw new Error(\"Invariant: Missing 'next-action' header.\");\n        }\n        const actionModId = serverModuleMap == null ? void 0 : (_serverModuleMap_actionId = serverModuleMap[actionId]) == null ? void 0 : _serverModuleMap_actionId.id;\n        if (!actionModId) {\n            throw new Error(\"Invariant: Couldn't find action module ID from module map.\");\n        }\n        return actionModId;\n    } catch (err) {\n        throw new Error(`Failed to find Server Action \"${actionId}\". This request might be from an older or newer deployment. ${err instanceof Error ? `Original error: ${err.message}` : ''}`);\n    }\n}\n\n//# sourceMappingURL=action-handler.js.map","// Provider for the `useServerInsertedHTML` API to register callbacks to insert\n// elements into the HTML stream.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { ServerInsertedHTMLContext } from '../../shared/lib/server-inserted-html.shared-runtime';\nexport function createServerInsertedHTML() {\n    const serverInsertedHTMLCallbacks = [];\n    const addInsertedHtml = (handler)=>{\n        serverInsertedHTMLCallbacks.push(handler);\n    };\n    return {\n        ServerInsertedHTMLProvider ({ children }) {\n            return /*#__PURE__*/ _jsx(ServerInsertedHTMLContext.Provider, {\n                value: addInsertedHtml,\n                children: children\n            });\n        },\n        renderServerInsertedHTML () {\n            return serverInsertedHTMLCallbacks.map((callback, index)=>/*#__PURE__*/ _jsx(React.Fragment, {\n                    children: callback()\n                }, '__next_server_inserted__' + index));\n        }\n    };\n}\n\n//# sourceMappingURL=server-inserted-html.js.map","export function encodeURIPath(file: string) {\n  return file\n    .split('/')\n    .map((p) => encodeURIComponent(p))\n    .join('/')\n}\n","import { encodeURIPath } from '../../shared/lib/encode-uri-path';\nimport ReactDOM from 'react-dom';\nexport function getRequiredScripts(buildManifest, assetPrefix, crossOrigin, SRIManifest, qs, nonce, pagePath) {\n    var _buildManifest_rootMainFilesTree;\n    let preinitScripts;\n    let preinitScriptCommands = [];\n    const bootstrapScript = {\n        src: '',\n        crossOrigin\n    };\n    const files = (((_buildManifest_rootMainFilesTree = buildManifest.rootMainFilesTree) == null ? void 0 : _buildManifest_rootMainFilesTree[pagePath]) || buildManifest.rootMainFiles).map(encodeURIPath);\n    if (files.length === 0) {\n        throw new Error('Invariant: missing bootstrap script. This is a bug in Next.js');\n    }\n    if (SRIManifest) {\n        bootstrapScript.src = `${assetPrefix}/_next/` + files[0] + qs;\n        bootstrapScript.integrity = SRIManifest[files[0]];\n        for(let i = 1; i < files.length; i++){\n            const src = `${assetPrefix}/_next/` + files[i] + qs;\n            const integrity = SRIManifest[files[i]];\n            preinitScriptCommands.push(src, integrity);\n        }\n        preinitScripts = ()=>{\n            // preinitScriptCommands is a double indexed array of src/integrity pairs\n            for(let i = 0; i < preinitScriptCommands.length; i += 2){\n                ReactDOM.preinit(preinitScriptCommands[i], {\n                    as: 'script',\n                    integrity: preinitScriptCommands[i + 1],\n                    crossOrigin,\n                    nonce\n                });\n            }\n        };\n    } else {\n        bootstrapScript.src = `${assetPrefix}/_next/` + files[0] + qs;\n        for(let i = 1; i < files.length; i++){\n            const src = `${assetPrefix}/_next/` + files[i] + qs;\n            preinitScriptCommands.push(src);\n        }\n        preinitScripts = ()=>{\n            // preinitScriptCommands is a singled indexed array of src values\n            for(let i = 0; i < preinitScriptCommands.length; i++){\n                ReactDOM.preinit(preinitScriptCommands[i], {\n                    as: 'script',\n                    nonce,\n                    crossOrigin\n                });\n            }\n        };\n    }\n    return [\n        preinitScripts,\n        bootstrapScript\n    ];\n}\n\n//# sourceMappingURL=required-scripts.js.map","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { isNotFoundError } from '../../client/components/not-found';\nimport { getURLFromRedirectError, isRedirectError, getRedirectStatusCodeFromError } from '../../client/components/redirect';\nimport { renderToReadableStream } from 'react-dom/server.edge';\nimport { streamToString } from '../stream-utils/node-web-streams-helper';\nimport { RedirectStatusCode } from '../../client/components/redirect-status-code';\nimport { addPathPrefix } from '../../shared/lib/router/utils/add-path-prefix';\nexport function makeGetServerInsertedHTML({ polyfills, renderServerInsertedHTML, serverCapturedErrors, tracingMetadata, basePath }) {\n    let flushedErrorMetaTagsUntilIndex = 0;\n    // flag for static content that only needs to be flushed once\n    let hasFlushedInitially = false;\n    const polyfillTags = polyfills.map((polyfill)=>{\n        return /*#__PURE__*/ _jsx(\"script\", {\n            ...polyfill\n        }, polyfill.src);\n    });\n    return async function getServerInsertedHTML() {\n        // Loop through all the errors that have been captured but not yet\n        // flushed.\n        const errorMetaTags = [];\n        while(flushedErrorMetaTagsUntilIndex < serverCapturedErrors.length){\n            const error = serverCapturedErrors[flushedErrorMetaTagsUntilIndex];\n            flushedErrorMetaTagsUntilIndex++;\n            if (isNotFoundError(error)) {\n                errorMetaTags.push(/*#__PURE__*/ _jsx(\"meta\", {\n                    name: \"robots\",\n                    content: \"noindex\"\n                }, error.digest), process.env.NODE_ENV === 'development' ? /*#__PURE__*/ _jsx(\"meta\", {\n                    name: \"next-error\",\n                    content: \"not-found\"\n                }, \"next-error\") : null);\n            } else if (isRedirectError(error)) {\n                const redirectUrl = addPathPrefix(getURLFromRedirectError(error), basePath);\n                const statusCode = getRedirectStatusCodeFromError(error);\n                const isPermanent = statusCode === RedirectStatusCode.PermanentRedirect ? true : false;\n                if (redirectUrl) {\n                    errorMetaTags.push(/*#__PURE__*/ _jsx(\"meta\", {\n                        id: \"__next-page-redirect\",\n                        httpEquiv: \"refresh\",\n                        content: `${isPermanent ? 0 : 1};url=${redirectUrl}`\n                    }, error.digest));\n                }\n            }\n        }\n        const traceMetaTags = (tracingMetadata || []).map(({ key, value }, index)=>/*#__PURE__*/ _jsx(\"meta\", {\n                name: key,\n                content: value\n            }, `next-trace-data-${index}`));\n        const serverInsertedHTML = renderServerInsertedHTML();\n        // Skip React rendering if we know the content is empty.\n        if (polyfillTags.length === 0 && traceMetaTags.length === 0 && errorMetaTags.length === 0 && Array.isArray(serverInsertedHTML) && serverInsertedHTML.length === 0) {\n            return '';\n        }\n        const stream = await renderToReadableStream(/*#__PURE__*/ _jsxs(_Fragment, {\n            children: [\n                /* Insert the polyfills if they haven't been flushed yet. */ hasFlushedInitially ? null : polyfillTags,\n                serverInsertedHTML,\n                hasFlushedInitially ? null : traceMetaTags,\n                errorMetaTags\n            ]\n        }), {\n            // Larger chunk because this isn't sent over the network.\n            // Let's set it to 1MB.\n            progressiveChunkSize: 1024 * 1024\n        });\n        hasFlushedInitially = true;\n        // There's no need to wait for the stream to be ready\n        // e.g. calling `await stream.allReady` because `streamToString` will\n        // wait and decode the stream progressively with better parallelism.\n        return streamToString(stream);\n    };\n}\n\n//# sourceMappingURL=make-get-server-inserted-html.js.map","/**\n * Get external stylesheet link hrefs based on server CSS manifest.\n */ export function getLinkAndScriptTags(clientReferenceManifest, filePath, injectedCSS, injectedScripts, collectNewImports) {\n    var _clientReferenceManifest_entryJSFiles;\n    const filePathWithoutExt = filePath.replace(/\\.[^.]+$/, '');\n    const cssChunks = new Set();\n    const jsChunks = new Set();\n    const entryCSSFiles = clientReferenceManifest.entryCSSFiles[filePathWithoutExt];\n    const entryJSFiles = ((_clientReferenceManifest_entryJSFiles = clientReferenceManifest.entryJSFiles) == null ? void 0 : _clientReferenceManifest_entryJSFiles[filePathWithoutExt]) ?? [];\n    if (entryCSSFiles) {\n        for (const file of entryCSSFiles){\n            if (!injectedCSS.has(file)) {\n                if (collectNewImports) {\n                    injectedCSS.add(file);\n                }\n                cssChunks.add(file);\n            }\n        }\n    }\n    if (entryJSFiles) {\n        for (const file of entryJSFiles){\n            if (!injectedScripts.has(file)) {\n                if (collectNewImports) {\n                    injectedScripts.add(file);\n                }\n                jsChunks.add(file);\n            }\n        }\n    }\n    return {\n        styles: [\n            ...cssChunks\n        ],\n        scripts: [\n            ...jsChunks\n        ]\n    };\n}\n\n//# sourceMappingURL=get-css-inlined-link-tags.js.map","/**\n * Get hrefs for fonts to preload\n * Returns null if there are no fonts at all.\n * Returns string[] if there are fonts to preload (font paths)\n * Returns empty string[] if there are fonts but none to preload and no other fonts have been preloaded\n * Returns null if there are fonts but none to preload and at least some were previously preloaded\n */ export function getPreloadableFonts(nextFontManifest, filePath, injectedFontPreloadTags) {\n    if (!nextFontManifest || !filePath) {\n        return null;\n    }\n    const filepathWithoutExtension = filePath.replace(/\\.[^.]+$/, '');\n    const fontFiles = new Set();\n    let foundFontUsage = false;\n    const preloadedFontFiles = nextFontManifest.app[filepathWithoutExtension];\n    if (preloadedFontFiles) {\n        foundFontUsage = true;\n        for (const fontFile of preloadedFontFiles){\n            if (!injectedFontPreloadTags.has(fontFile)) {\n                fontFiles.add(fontFile);\n                injectedFontPreloadTags.add(fontFile);\n            }\n        }\n    }\n    if (fontFiles.size) {\n        return [\n            ...fontFiles\n        ].sort();\n    } else if (foundFontUsage && injectedFontPreloadTags.size === 0) {\n        return [];\n    } else {\n        return null;\n    }\n}\n\n//# sourceMappingURL=get-preloadable-fonts.js.map","export function hasLoadingComponentInTree(tree) {\n    const [, parallelRoutes, { loading }] = tree;\n    if (loading) {\n        return true;\n    }\n    return Object.values(parallelRoutes).some((parallelRoute)=>hasLoadingComponentInTree(parallelRoute));\n}\n\n//# sourceMappingURL=has-loading-component-in-tree.js.map","export function isClientReference(mod) {\n    const defaultExport = (mod == null ? void 0 : mod.default) || mod;\n    return (defaultExport == null ? void 0 : defaultExport.$$typeof) === Symbol.for('react.client.reference');\n}\n\n//# sourceMappingURL=client-reference.js.map","import { DEFAULT_SEGMENT_KEY } from '../../shared/lib/segment';\nexport async function getLayoutOrPageModule(loaderTree) {\n    const { layout, page, defaultPage } = loaderTree[2];\n    const isLayout = typeof layout !== 'undefined';\n    const isPage = typeof page !== 'undefined';\n    const isDefaultPage = typeof defaultPage !== 'undefined' && loaderTree[0] === DEFAULT_SEGMENT_KEY;\n    let mod = undefined;\n    let modType = undefined;\n    let filePath = undefined;\n    if (isLayout) {\n        mod = await layout[0]();\n        modType = 'layout';\n        filePath = layout[1];\n    } else if (isPage) {\n        mod = await page[0]();\n        modType = 'page';\n        filePath = page[1];\n    } else if (isDefaultPage) {\n        mod = await defaultPage[0]();\n        modType = 'page';\n        filePath = defaultPage[1];\n    }\n    return {\n        mod,\n        modType,\n        filePath\n    };\n}\nexport async function getComponentTypeModule(loaderTree, moduleType) {\n    const { [moduleType]: module } = loaderTree[2];\n    if (typeof module !== 'undefined') {\n        return await module[0]();\n    }\n    return undefined;\n}\n\n//# sourceMappingURL=app-dir-module.js.map","/**\n * Interop between \"export default\" and \"module.exports\".\n */ export function interopDefault(mod) {\n    return mod.default || mod;\n}\n\n//# sourceMappingURL=interop-default.js.map","import { DEFAULT_SEGMENT_KEY } from '../../shared/lib/segment';\nexport function parseLoaderTree(tree) {\n    const [segment, parallelRoutes, modules] = tree;\n    const { layout } = modules;\n    let { page } = modules;\n    // a __DEFAULT__ segment means that this route didn't match any of the\n    // segments in the route, so we should use the default page\n    page = segment === DEFAULT_SEGMENT_KEY ? modules.defaultPage : page;\n    const layoutOrPagePath = (layout == null ? void 0 : layout[1]) || (page == null ? void 0 : page[1]);\n    return {\n        page,\n        segment,\n        modules,\n        layoutOrPagePath,\n        parallelRoutes\n    };\n}\n\n//# sourceMappingURL=parse-loader-tree.js.map","const isDev = process.env.NODE_ENV === 'development';\nconst isTurbopack = !!process.env.TURBOPACK;\nexport function getAssetQueryString(ctx, addTimestamp) {\n    let qs = '';\n    // In development we add the request timestamp to allow react to\n    // reload assets when a new RSC response is received.\n    // Turbopack handles HMR of assets itself and react doesn't need to reload them\n    // so this approach is not needed for Turbopack.\n    if (isDev && !isTurbopack && addTimestamp) {\n        qs += `?v=${ctx.requestTimestamp}`;\n    }\n    if (ctx.renderOpts.deploymentId) {\n        qs += `${isDev ? '&' : '?'}dpl=${ctx.renderOpts.deploymentId}`;\n    }\n    return qs;\n}\n\n//# sourceMappingURL=get-asset-query-string.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { interopDefault } from './interop-default';\nimport { getLinkAndScriptTags } from './get-css-inlined-link-tags';\nimport { getAssetQueryString } from './get-asset-query-string';\nimport { encodeURIPath } from '../../shared/lib/encode-uri-path';\nexport async function createComponentStylesAndScripts({ filePath, getComponent, injectedCSS, injectedJS, ctx }) {\n    const { styles: cssHrefs, scripts: jsHrefs } = getLinkAndScriptTags(ctx.clientReferenceManifest, filePath, injectedCSS, injectedJS);\n    const styles = cssHrefs ? cssHrefs.map((href, index)=>{\n        const fullHref = `${ctx.assetPrefix}/_next/${encodeURIPath(href)}${getAssetQueryString(ctx, true)}`;\n        // `Precedence` is an opt-in signal for React to handle resource\n        // loading and deduplication, etc. It's also used as the key to sort\n        // resources so they will be injected in the correct order.\n        // During HMR, it's critical to use different `precedence` values\n        // for different stylesheets, so their order will be kept.\n        // https://github.com/facebook/react/pull/25060\n        const precedence = process.env.NODE_ENV === 'development' ? 'next_' + href : 'next';\n        return /*#__PURE__*/ _jsx(\"link\", {\n            rel: \"stylesheet\",\n            href: fullHref,\n            // @ts-ignore\n            precedence: precedence,\n            crossOrigin: ctx.renderOpts.crossOrigin\n        }, `style-${index}`);\n    }) : null;\n    const scripts = jsHrefs ? jsHrefs.map((href, index)=>/*#__PURE__*/ _jsx(\"script\", {\n            src: `${ctx.assetPrefix}/_next/${encodeURIPath(href)}${getAssetQueryString(ctx, true)}`,\n            async: true\n        }, `script-${index}`)) : null;\n    const Comp = interopDefault(await getComponent());\n    return [\n        Comp,\n        styles,\n        scripts\n    ];\n}\n\n//# sourceMappingURL=create-component-styles-and-scripts.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { getLinkAndScriptTags } from './get-css-inlined-link-tags';\nimport { getPreloadableFonts } from './get-preloadable-fonts';\nimport { getAssetQueryString } from './get-asset-query-string';\nimport { encodeURIPath } from '../../shared/lib/encode-uri-path';\nexport function getLayerAssets({ ctx, layoutOrPagePath, injectedCSS: injectedCSSWithCurrentLayout, injectedJS: injectedJSWithCurrentLayout, injectedFontPreloadTags: injectedFontPreloadTagsWithCurrentLayout, preloadCallbacks }) {\n    const { styles: styleTags, scripts: scriptTags } = layoutOrPagePath ? getLinkAndScriptTags(ctx.clientReferenceManifest, layoutOrPagePath, injectedCSSWithCurrentLayout, injectedJSWithCurrentLayout, true) : {\n        styles: [],\n        scripts: []\n    };\n    const preloadedFontFiles = layoutOrPagePath ? getPreloadableFonts(ctx.renderOpts.nextFontManifest, layoutOrPagePath, injectedFontPreloadTagsWithCurrentLayout) : null;\n    if (preloadedFontFiles) {\n        if (preloadedFontFiles.length) {\n            for(let i = 0; i < preloadedFontFiles.length; i++){\n                const fontFilename = preloadedFontFiles[i];\n                const ext = /\\.(woff|woff2|eot|ttf|otf)$/.exec(fontFilename)[1];\n                const type = `font/${ext}`;\n                const href = `${ctx.assetPrefix}/_next/${encodeURIPath(fontFilename)}`;\n                preloadCallbacks.push(()=>{\n                    ctx.componentMod.preloadFont(href, type, ctx.renderOpts.crossOrigin, ctx.nonce);\n                });\n            }\n        } else {\n            try {\n                let url = new URL(ctx.assetPrefix);\n                preloadCallbacks.push(()=>{\n                    ctx.componentMod.preconnect(url.origin, 'anonymous', ctx.nonce);\n                });\n            } catch (error) {\n                // assetPrefix must not be a fully qualified domain name. We assume\n                // we should preconnect to same origin instead\n                preloadCallbacks.push(()=>{\n                    ctx.componentMod.preconnect('/', 'anonymous', ctx.nonce);\n                });\n            }\n        }\n    }\n    const styles = styleTags ? styleTags.map((href, index)=>{\n        // In dev, Safari and Firefox will cache the resource during HMR:\n        // - https://github.com/vercel/next.js/issues/5860\n        // - https://bugs.webkit.org/show_bug.cgi?id=187726\n        // Because of this, we add a `?v=` query to bypass the cache during\n        // development. We need to also make sure that the number is always\n        // increasing.\n        const fullHref = `${ctx.assetPrefix}/_next/${encodeURIPath(href)}${getAssetQueryString(ctx, true)}`;\n        // `Precedence` is an opt-in signal for React to handle resource\n        // loading and deduplication, etc. It's also used as the key to sort\n        // resources so they will be injected in the correct order.\n        // During HMR, it's critical to use different `precedence` values\n        // for different stylesheets, so their order will be kept.\n        // https://github.com/facebook/react/pull/25060\n        const precedence = process.env.NODE_ENV === 'development' ? 'next_' + href : 'next';\n        preloadCallbacks.push(()=>{\n            ctx.componentMod.preloadStyle(fullHref, ctx.renderOpts.crossOrigin, ctx.nonce);\n        });\n        return /*#__PURE__*/ _jsx(\"link\", {\n            rel: \"stylesheet\",\n            href: fullHref,\n            // @ts-ignore\n            precedence: precedence,\n            crossOrigin: ctx.renderOpts.crossOrigin,\n            nonce: ctx.nonce\n        }, index);\n    }) : [];\n    const scripts = scriptTags ? scriptTags.map((href, index)=>{\n        const fullSrc = `${ctx.assetPrefix}/_next/${encodeURIPath(href)}${getAssetQueryString(ctx, true)}`;\n        return /*#__PURE__*/ _jsx(\"script\", {\n            src: fullSrc,\n            async: true,\n            nonce: ctx.nonce\n        }, `script-${index}`);\n    }) : [];\n    return styles.length || scripts.length ? [\n        ...styles,\n        ...scripts\n    ] : null;\n}\n\n//# sourceMappingURL=get-layer-assets.js.map","/**\n * Based on https://github.com/facebook/react/blob/d4e78c42a94be027b4dc7ed2659a5fddfbf9bd4e/packages/react/src/ReactFetch.js\n */ import * as React from 'react';\nconst simpleCacheKey = '[\"GET\",[],null,\"follow\",null,null,null,null]' // generateCacheKey(new Request('https://blank'));\n;\nfunction generateCacheKey(request) {\n    // We pick the fields that goes into the key used to dedupe requests.\n    // We don't include the `cache` field, because we end up using whatever\n    // caching resulted from the first request.\n    // Notably we currently don't consider non-standard (or future) options.\n    // This might not be safe. TODO: warn for non-standard extensions differing.\n    // IF YOU CHANGE THIS UPDATE THE simpleCacheKey ABOVE.\n    return JSON.stringify([\n        request.method,\n        Array.from(request.headers.entries()),\n        request.mode,\n        request.redirect,\n        request.credentials,\n        request.referrer,\n        request.referrerPolicy,\n        request.integrity\n    ]);\n}\nexport function createDedupeFetch(originalFetch) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars -- url is the cache key\n    const getCacheEntries = React.cache((url)=>[]);\n    return function dedupeFetch(resource, options) {\n        if (options && options.signal) {\n            // If we're passed a signal, then we assume that\n            // someone else controls the lifetime of this object and opts out of\n            // caching. It's effectively the opt-out mechanism.\n            // Ideally we should be able to check this on the Request but\n            // it always gets initialized with its own signal so we don't\n            // know if it's supposed to override - unless we also override the\n            // Request constructor.\n            return originalFetch(resource, options);\n        }\n        // Normalize the Request\n        let url;\n        let cacheKey;\n        if (typeof resource === 'string' && !options) {\n            // Fast path.\n            cacheKey = simpleCacheKey;\n            url = resource;\n        } else {\n            // Normalize the request.\n            // if resource is not a string or a URL (its an instance of Request)\n            // then do not instantiate a new Request but instead\n            // reuse the request as to not disturb the body in the event it's a ReadableStream.\n            const request = typeof resource === 'string' || resource instanceof URL ? new Request(resource, options) : resource;\n            if (request.method !== 'GET' && request.method !== 'HEAD' || // $FlowFixMe[prop-missing]: keepalive is real\n            request.keepalive) {\n                // We currently don't dedupe requests that might have side-effects. Those\n                // have to be explicitly cached. We assume that the request doesn't have a\n                // body if it's GET or HEAD.\n                // keepalive gets treated the same as if you passed a custom cache signal.\n                return originalFetch(resource, options);\n            }\n            cacheKey = generateCacheKey(request);\n            url = request.url;\n        }\n        const cacheEntries = getCacheEntries(url);\n        let match;\n        if (cacheEntries.length === 0) {\n            // We pass the original arguments here in case normalizing the Request\n            // doesn't include all the options in this environment.\n            match = originalFetch(resource, options);\n            cacheEntries.push(cacheKey, match);\n        } else {\n            // We use an array as the inner data structure since it's lighter and\n            // we typically only expect to see one or two entries here.\n            for(let i = 0, l = cacheEntries.length; i < l; i += 2){\n                const key = cacheEntries[i];\n                const value = cacheEntries[i + 1];\n                if (key === cacheKey) {\n                    match = value;\n                    // I would've preferred a labelled break but lint says no.\n                    return match.then((response)=>response.clone());\n                }\n            }\n            match = originalFetch(resource, options);\n            cacheEntries.push(cacheKey, match);\n        }\n        // We clone the response so that each time you call this you get a new read\n        // of the body so that it can be read multiple times.\n        return match.then((response)=>response.clone());\n    };\n}\n\n//# sourceMappingURL=dedupe-fetch.js.map","import { AppRenderSpan, NextNodeServerSpan } from './trace/constants';\nimport { getTracer, SpanKind } from './trace/tracer';\nimport { CACHE_ONE_YEAR, INFINITE_CACHE, NEXT_CACHE_TAG_MAX_ITEMS, NEXT_CACHE_TAG_MAX_LENGTH } from '../../lib/constants';\nimport { markCurrentScopeAsDynamic } from '../app-render/dynamic-rendering';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupeFetch } from './dedupe-fetch';\nimport { CachedRouteKind, IncrementalCacheKind } from '../response-cache';\nimport { waitAtLeastOneReactRenderTask } from '../../lib/scheduler';\nconst isEdgeRuntime = process.env.NEXT_RUNTIME === 'edge';\nexport const NEXT_PATCH_SYMBOL = Symbol.for('next-patch');\nfunction isFetchPatched() {\n    return globalThis[NEXT_PATCH_SYMBOL] === true;\n}\nexport function validateRevalidate(revalidateVal, route) {\n    try {\n        let normalizedRevalidate = undefined;\n        if (revalidateVal === false) {\n            normalizedRevalidate = INFINITE_CACHE;\n        } else if (typeof revalidateVal === 'number' && !isNaN(revalidateVal) && revalidateVal > -1) {\n            normalizedRevalidate = revalidateVal;\n        } else if (typeof revalidateVal !== 'undefined') {\n            throw new Error(`Invalid revalidate value \"${revalidateVal}\" on \"${route}\", must be a non-negative number or false`);\n        }\n        return normalizedRevalidate;\n    } catch (err) {\n        // handle client component error from attempting to check revalidate value\n        if (err instanceof Error && err.message.includes('Invalid revalidate')) {\n            throw err;\n        }\n        return undefined;\n    }\n}\nexport function validateTags(tags, description) {\n    const validTags = [];\n    const invalidTags = [];\n    for(let i = 0; i < tags.length; i++){\n        const tag = tags[i];\n        if (typeof tag !== 'string') {\n            invalidTags.push({\n                tag,\n                reason: 'invalid type, must be a string'\n            });\n        } else if (tag.length > NEXT_CACHE_TAG_MAX_LENGTH) {\n            invalidTags.push({\n                tag,\n                reason: `exceeded max length of ${NEXT_CACHE_TAG_MAX_LENGTH}`\n            });\n        } else {\n            validTags.push(tag);\n        }\n        if (validTags.length > NEXT_CACHE_TAG_MAX_ITEMS) {\n            console.warn(`Warning: exceeded max tag count for ${description}, dropped tags:`, tags.slice(i).join(', '));\n            break;\n        }\n    }\n    if (invalidTags.length > 0) {\n        console.warn(`Warning: invalid tags passed to ${description}: `);\n        for (const { tag, reason } of invalidTags){\n            console.log(`tag: \"${tag}\" ${reason}`);\n        }\n    }\n    return validTags;\n}\nfunction trackFetchMetric(workStore, ctx) {\n    var _workStore_requestEndedState;\n    // If the static generation store is not available, we can't track the fetch\n    if (!workStore) return;\n    if ((_workStore_requestEndedState = workStore.requestEndedState) == null ? void 0 : _workStore_requestEndedState.ended) return;\n    const isDebugBuild = (!!process.env.NEXT_DEBUG_BUILD || process.env.NEXT_SSG_FETCH_METRICS === '1') && workStore.isStaticGeneration;\n    const isDevelopment = process.env.NODE_ENV === 'development';\n    if (// The only time we want to track fetch metrics outside of development is when\n    // we are performing a static generation & we are in debug mode.\n    !isDebugBuild && !isDevelopment) {\n        return;\n    }\n    workStore.fetchMetrics ??= [];\n    workStore.fetchMetrics.push({\n        ...ctx,\n        end: performance.timeOrigin + performance.now(),\n        idx: workStore.nextFetchId || 0\n    });\n}\nexport function createPatchedFetcher(originFetch, { workAsyncStorage, workUnitAsyncStorage }) {\n    // Create the patched fetch function. We don't set the type here, as it's\n    // verified as the return value of this function.\n    const patched = async (input, init)=>{\n        var _init_method, _init_next;\n        let url;\n        try {\n            url = new URL(input instanceof Request ? input.url : input);\n            url.username = '';\n            url.password = '';\n        } catch  {\n            // Error caused by malformed URL should be handled by native fetch\n            url = undefined;\n        }\n        const fetchUrl = (url == null ? void 0 : url.href) ?? '';\n        const method = (init == null ? void 0 : (_init_method = init.method) == null ? void 0 : _init_method.toUpperCase()) || 'GET';\n        // Do create a new span trace for internal fetches in the\n        // non-verbose mode.\n        const isInternal = (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next.internal) === true;\n        const hideSpan = process.env.NEXT_OTEL_FETCH_DISABLED === '1';\n        // We don't track fetch metrics for internal fetches\n        // so it's not critical that we have a start time, as it won't be recorded.\n        // This is to workaround a flaky issue where performance APIs might\n        // not be available and will require follow-up investigation.\n        const fetchStart = isInternal ? undefined : performance.timeOrigin + performance.now();\n        const workStore = workAsyncStorage.getStore();\n        const workUnitStore = workUnitAsyncStorage.getStore();\n        // During static generation we track cache reads so we can reason about when they fill\n        let cacheSignal = workUnitStore && workUnitStore.type === 'prerender' ? workUnitStore.cacheSignal : null;\n        if (cacheSignal) {\n            cacheSignal.beginRead();\n        }\n        const result = getTracer().trace(isInternal ? NextNodeServerSpan.internalFetch : AppRenderSpan.fetch, {\n            hideSpan,\n            kind: SpanKind.CLIENT,\n            spanName: [\n                'fetch',\n                method,\n                fetchUrl\n            ].filter(Boolean).join(' '),\n            attributes: {\n                'http.url': fetchUrl,\n                'http.method': method,\n                'net.peer.name': url == null ? void 0 : url.hostname,\n                'net.peer.port': (url == null ? void 0 : url.port) || undefined\n            }\n        }, async ()=>{\n            var _getRequestMeta;\n            // If this is an internal fetch, we should not do any special treatment.\n            if (isInternal) {\n                return originFetch(input, init);\n            }\n            // If the workStore is not available, we can't do any\n            // special treatment of fetch, therefore fallback to the original\n            // fetch implementation.\n            if (!workStore) {\n                return originFetch(input, init);\n            }\n            // We should also fallback to the original fetch implementation if we\n            // are in draft mode, it does not constitute a static generation.\n            if (workStore.isDraftMode) {\n                return originFetch(input, init);\n            }\n            const isRequestInput = input && typeof input === 'object' && typeof input.method === 'string';\n            const getRequestMeta = (field)=>{\n                // If request input is present but init is not, retrieve from input first.\n                const value = init == null ? void 0 : init[field];\n                return value || (isRequestInput ? input[field] : null);\n            };\n            let finalRevalidate = undefined;\n            const getNextField = (field)=>{\n                var _init_next, _init_next1, _input_next;\n                return typeof (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next[field]) !== 'undefined' ? init == null ? void 0 : (_init_next1 = init.next) == null ? void 0 : _init_next1[field] : isRequestInput ? (_input_next = input.next) == null ? void 0 : _input_next[field] : undefined;\n            };\n            // RequestInit doesn't keep extra fields e.g. next so it's\n            // only available if init is used separate\n            let currentFetchRevalidate = getNextField('revalidate');\n            const tags = validateTags(getNextField('tags') || [], `fetch ${input.toString()}`);\n            if (workUnitStore && (workUnitStore.type === 'cache' || workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-ppr' || workUnitStore.type === 'prerender-legacy')) {\n                if (Array.isArray(tags)) {\n                    // Collect tags onto parent caches or parent prerenders.\n                    const collectedTags = workUnitStore.tags ?? (workUnitStore.tags = []);\n                    for (const tag of tags){\n                        if (!collectedTags.includes(tag)) {\n                            collectedTags.push(tag);\n                        }\n                    }\n                }\n            }\n            const implicitTags = !workUnitStore || workUnitStore.type === 'unstable-cache' ? [] : workUnitStore.implicitTags;\n            // Inside unstable-cache or \"use cache\", we treat it the same as\n            // force-no-store on the page.\n            const pageFetchCacheMode = workUnitStore && (workUnitStore.type === 'unstable-cache' || workUnitStore.type === 'cache') ? 'force-no-store' : workStore.fetchCache;\n            const isUsingNoStore = !!workStore.isUnstableNoStore;\n            let currentFetchCacheConfig = getRequestMeta('cache');\n            let cacheReason = '';\n            let cacheWarning;\n            if (typeof currentFetchCacheConfig === 'string' && typeof currentFetchRevalidate !== 'undefined') {\n                // when providing fetch with a Request input, it'll automatically set a cache value of 'default'\n                // we only want to warn if the user is explicitly setting a cache value\n                if (!(isRequestInput && currentFetchCacheConfig === 'default')) {\n                    cacheWarning = `Specified \"cache: ${currentFetchCacheConfig}\" and \"revalidate: ${currentFetchRevalidate}\", only one should be specified.`;\n                }\n                currentFetchCacheConfig = undefined;\n            }\n            if (currentFetchCacheConfig === 'force-cache') {\n                currentFetchRevalidate = false;\n            } else if (// if we are inside of \"use cache\"/\"unstable_cache\"\n            // we shouldn't set the revalidate to 0 as it's overridden\n            // by the cache context\n            (workUnitStore == null ? void 0 : workUnitStore.type) !== 'cache' && (currentFetchCacheConfig === 'no-cache' || currentFetchCacheConfig === 'no-store' || pageFetchCacheMode === 'force-no-store' || pageFetchCacheMode === 'only-no-store' || // If no explicit fetch cache mode is set, but dynamic = `force-dynamic` is set,\n            // we shouldn't consider caching the fetch. This is because the `dynamic` cache\n            // is considered a \"top-level\" cache mode, whereas something like `fetchCache` is more\n            // fine-grained. Top-level modes are responsible for setting reasonable defaults for the\n            // other configurations.\n            !pageFetchCacheMode && workStore.forceDynamic)) {\n                currentFetchRevalidate = 0;\n            }\n            if (currentFetchCacheConfig === 'no-cache' || currentFetchCacheConfig === 'no-store') {\n                cacheReason = `cache: ${currentFetchCacheConfig}`;\n            }\n            finalRevalidate = validateRevalidate(currentFetchRevalidate, workStore.route);\n            const _headers = getRequestMeta('headers');\n            const initHeaders = typeof (_headers == null ? void 0 : _headers.get) === 'function' ? _headers : new Headers(_headers || {});\n            const hasUnCacheableHeader = initHeaders.get('authorization') || initHeaders.get('cookie');\n            const isUnCacheableMethod = ![\n                'get',\n                'head'\n            ].includes(((_getRequestMeta = getRequestMeta('method')) == null ? void 0 : _getRequestMeta.toLowerCase()) || 'get');\n            const revalidateStore = workUnitStore && (workUnitStore.type === 'cache' || workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-ppr' || workUnitStore.type === 'prerender-legacy') ? workUnitStore : undefined;\n            /**\n         * We automatically disable fetch caching under the following conditions:\n         * - Fetch cache configs are not set. Specifically:\n         *    - A page fetch cache mode is not set (export const fetchCache=...)\n         *    - A fetch cache mode is not set in the fetch call (fetch(url, { cache: ... }))\n         *      or the fetch cache mode is set to 'default'\n         *    - A fetch revalidate value is not set in the fetch call (fetch(url, { revalidate: ... }))\n         * - OR the fetch comes after a configuration that triggered dynamic rendering (e.g., reading cookies())\n         *   and the fetch was considered uncacheable (e.g., POST method or has authorization headers)\n         */ const hasNoExplicitCacheConfig = // eslint-disable-next-line eqeqeq\n            pageFetchCacheMode == undefined && // eslint-disable-next-line eqeqeq\n            (currentFetchCacheConfig == undefined || // when considering whether to opt into the default \"no-cache\" fetch semantics,\n            // a \"default\" cache config should be treated the same as no cache config\n            currentFetchCacheConfig === 'default') && // eslint-disable-next-line eqeqeq\n            currentFetchRevalidate == undefined;\n            const autoNoCache = // this condition is hit for null/undefined\n            // eslint-disable-next-line eqeqeq\n            hasNoExplicitCacheConfig && // we disable automatic no caching behavior during build time SSG so that we can still\n            // leverage the fetch cache between SSG workers\n            !workStore.isPrerendering || (hasUnCacheableHeader || isUnCacheableMethod) && revalidateStore && revalidateStore.revalidate === 0;\n            if (hasNoExplicitCacheConfig && workUnitStore !== undefined && workUnitStore.type === 'prerender') {\n                // If we have no cache config, and we're in Dynamic I/O prerendering, it'll be a dynamic call.\n                // We don't have to issue that dynamic call.\n                if (cacheSignal) {\n                    cacheSignal.endRead();\n                    cacheSignal = null;\n                }\n                return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n            }\n            switch(pageFetchCacheMode){\n                case 'force-no-store':\n                    {\n                        cacheReason = 'fetchCache = force-no-store';\n                        break;\n                    }\n                case 'only-no-store':\n                    {\n                        if (currentFetchCacheConfig === 'force-cache' || typeof finalRevalidate !== 'undefined' && finalRevalidate > 0) {\n                            throw new Error(`cache: 'force-cache' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-no-store'`);\n                        }\n                        cacheReason = 'fetchCache = only-no-store';\n                        break;\n                    }\n                case 'only-cache':\n                    {\n                        if (currentFetchCacheConfig === 'no-store') {\n                            throw new Error(`cache: 'no-store' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-cache'`);\n                        }\n                        break;\n                    }\n                case 'force-cache':\n                    {\n                        if (typeof currentFetchRevalidate === 'undefined' || currentFetchRevalidate === 0) {\n                            cacheReason = 'fetchCache = force-cache';\n                            finalRevalidate = INFINITE_CACHE;\n                        }\n                        break;\n                    }\n                default:\n            }\n            if (typeof finalRevalidate === 'undefined') {\n                if (pageFetchCacheMode === 'default-cache' && !isUsingNoStore) {\n                    finalRevalidate = INFINITE_CACHE;\n                    cacheReason = 'fetchCache = default-cache';\n                } else if (pageFetchCacheMode === 'default-no-store') {\n                    finalRevalidate = 0;\n                    cacheReason = 'fetchCache = default-no-store';\n                } else if (isUsingNoStore) {\n                    finalRevalidate = 0;\n                    cacheReason = 'noStore call';\n                } else if (autoNoCache) {\n                    finalRevalidate = 0;\n                    cacheReason = 'auto no cache';\n                } else {\n                    // TODO: should we consider this case an invariant?\n                    cacheReason = 'auto cache';\n                    finalRevalidate = revalidateStore ? revalidateStore.revalidate : INFINITE_CACHE;\n                }\n            } else if (!cacheReason) {\n                cacheReason = `revalidate: ${finalRevalidate}`;\n            }\n            if (// when force static is configured we don't bail from\n            // `revalidate: 0` values\n            !(workStore.forceStatic && finalRevalidate === 0) && // we don't consider autoNoCache to switch to dynamic for ISR\n            !autoNoCache && // If the revalidate value isn't currently set or the value is less\n            // than the current revalidate value, we should update the revalidate\n            // value.\n            revalidateStore && finalRevalidate < revalidateStore.revalidate) {\n                // If we were setting the revalidate value to 0, we should try to\n                // postpone instead first.\n                if (finalRevalidate === 0) {\n                    if (workUnitStore && workUnitStore.type === 'prerender') {\n                        if (cacheSignal) {\n                            cacheSignal.endRead();\n                            cacheSignal = null;\n                        }\n                        return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n                    } else {\n                        markCurrentScopeAsDynamic(workStore, workUnitStore, `revalidate: 0 fetch ${input} ${workStore.route}`);\n                    }\n                }\n                if (revalidateStore) {\n                    revalidateStore.revalidate = finalRevalidate;\n                }\n            }\n            const isCacheableRevalidate = typeof finalRevalidate === 'number' && finalRevalidate > 0;\n            let cacheKey;\n            const { incrementalCache } = workStore;\n            const requestStore = workUnitStore !== undefined && workUnitStore.type === 'request' ? workUnitStore : undefined;\n            if (incrementalCache && (isCacheableRevalidate || (requestStore == null ? void 0 : requestStore.serverComponentsHmrCache))) {\n                try {\n                    cacheKey = await incrementalCache.generateCacheKey(fetchUrl, isRequestInput ? input : init);\n                } catch (err) {\n                    console.error(`Failed to generate cache key for`, input);\n                }\n            }\n            const fetchIdx = workStore.nextFetchId ?? 1;\n            workStore.nextFetchId = fetchIdx + 1;\n            let handleUnlock = ()=>Promise.resolve();\n            const doOriginalFetch = async (isStale, cacheReasonOverride)=>{\n                const requestInputFields = [\n                    'cache',\n                    'credentials',\n                    'headers',\n                    'integrity',\n                    'keepalive',\n                    'method',\n                    'mode',\n                    'redirect',\n                    'referrer',\n                    'referrerPolicy',\n                    'window',\n                    'duplex',\n                    // don't pass through signal when revalidating\n                    ...isStale ? [] : [\n                        'signal'\n                    ]\n                ];\n                if (isRequestInput) {\n                    const reqInput = input;\n                    const reqOptions = {\n                        body: reqInput._ogBody || reqInput.body\n                    };\n                    for (const field of requestInputFields){\n                        // @ts-expect-error custom fields\n                        reqOptions[field] = reqInput[field];\n                    }\n                    input = new Request(reqInput.url, reqOptions);\n                } else if (init) {\n                    const { _ogBody, body, signal, ...otherInput } = init;\n                    init = {\n                        ...otherInput,\n                        body: _ogBody || body,\n                        signal: isStale ? undefined : signal\n                    };\n                }\n                // add metadata to init without editing the original\n                const clonedInit = {\n                    ...init,\n                    next: {\n                        ...init == null ? void 0 : init.next,\n                        fetchType: 'origin',\n                        fetchIdx\n                    }\n                };\n                return originFetch(input, clonedInit).then(async (res)=>{\n                    if (!isStale && fetchStart) {\n                        trackFetchMetric(workStore, {\n                            start: fetchStart,\n                            url: fetchUrl,\n                            cacheReason: cacheReasonOverride || cacheReason,\n                            cacheStatus: finalRevalidate === 0 || cacheReasonOverride ? 'skip' : 'miss',\n                            cacheWarning,\n                            status: res.status,\n                            method: clonedInit.method || 'GET'\n                        });\n                    }\n                    if (res.status === 200 && incrementalCache && cacheKey && (isCacheableRevalidate || (requestStore == null ? void 0 : requestStore.serverComponentsHmrCache))) {\n                        const normalizedRevalidate = finalRevalidate >= INFINITE_CACHE ? CACHE_ONE_YEAR : finalRevalidate;\n                        const externalRevalidate = finalRevalidate >= INFINITE_CACHE ? false : finalRevalidate;\n                        if (workUnitStore && workUnitStore.type === 'prerender') {\n                            // We are prerendering at build time or revalidate time with dynamicIO so we need to\n                            // buffer the response so we can guarantee it can be read in a microtask\n                            const bodyBuffer = await res.arrayBuffer();\n                            const fetchedData = {\n                                headers: Object.fromEntries(res.headers.entries()),\n                                body: Buffer.from(bodyBuffer).toString('base64'),\n                                status: res.status,\n                                url: res.url\n                            };\n                            // We can skip checking the serverComponentsHmrCache because we aren't in\n                            // dev mode.\n                            await incrementalCache.set(cacheKey, {\n                                kind: CachedRouteKind.FETCH,\n                                data: fetchedData,\n                                revalidate: normalizedRevalidate\n                            }, {\n                                fetchCache: true,\n                                revalidate: externalRevalidate,\n                                fetchUrl,\n                                fetchIdx,\n                                tags\n                            });\n                            await handleUnlock();\n                            // We we return a new Response to the caller.\n                            return new Response(bodyBuffer, {\n                                headers: res.headers,\n                                status: res.status,\n                                statusText: res.statusText\n                            });\n                        } else {\n                            // We are dynamically rendering including dev mode. We want to return\n                            // the response to the caller as soon as possible because it might stream\n                            // over a very long time.\n                            res.clone().arrayBuffer().then(async (arrayBuffer)=>{\n                                var _requestStore_serverComponentsHmrCache;\n                                const bodyBuffer = Buffer.from(arrayBuffer);\n                                const fetchedData = {\n                                    headers: Object.fromEntries(res.headers.entries()),\n                                    body: bodyBuffer.toString('base64'),\n                                    status: res.status,\n                                    url: res.url\n                                };\n                                requestStore == null ? void 0 : (_requestStore_serverComponentsHmrCache = requestStore.serverComponentsHmrCache) == null ? void 0 : _requestStore_serverComponentsHmrCache.set(cacheKey, fetchedData);\n                                if (isCacheableRevalidate) {\n                                    await incrementalCache.set(cacheKey, {\n                                        kind: CachedRouteKind.FETCH,\n                                        data: fetchedData,\n                                        revalidate: normalizedRevalidate\n                                    }, {\n                                        fetchCache: true,\n                                        revalidate: externalRevalidate,\n                                        fetchUrl,\n                                        fetchIdx,\n                                        tags\n                                    });\n                                }\n                            }).catch((error)=>console.warn(`Failed to set fetch cache`, input, error)).finally(handleUnlock);\n                            return res;\n                        }\n                    }\n                    // we had response that we determined shouldn't be cached so we return it\n                    // and don't cache it. This also needs to unlock the cache lock we acquired.\n                    await handleUnlock();\n                    return res;\n                });\n            };\n            let cacheReasonOverride;\n            let isForegroundRevalidate = false;\n            let isHmrRefreshCache = false;\n            if (cacheKey && incrementalCache) {\n                let cachedFetchData;\n                if ((requestStore == null ? void 0 : requestStore.isHmrRefresh) && requestStore.serverComponentsHmrCache) {\n                    cachedFetchData = requestStore.serverComponentsHmrCache.get(cacheKey);\n                    isHmrRefreshCache = true;\n                }\n                if (isCacheableRevalidate && !cachedFetchData) {\n                    handleUnlock = await incrementalCache.lock(cacheKey);\n                    const entry = workStore.isOnDemandRevalidate ? null : await incrementalCache.get(cacheKey, {\n                        kind: IncrementalCacheKind.FETCH,\n                        revalidate: finalRevalidate,\n                        fetchUrl,\n                        fetchIdx,\n                        tags,\n                        softTags: implicitTags,\n                        isFallback: false\n                    });\n                    if (hasNoExplicitCacheConfig) {\n                        // We sometimes use the cache to dedupe fetches that do not specify a cache configuration\n                        // In these cases we want to make sure we still exclude them from prerenders if dynamicIO is on\n                        // so we introduce an artificial Task boundary here.\n                        if (workUnitStore && workUnitStore.type === 'prerender') {\n                            await waitAtLeastOneReactRenderTask();\n                        }\n                    }\n                    if (entry) {\n                        await handleUnlock();\n                    } else {\n                        // in dev, incremental cache response will be null in case the browser adds `cache-control: no-cache` in the request headers\n                        cacheReasonOverride = 'cache-control: no-cache (hard refresh)';\n                    }\n                    if ((entry == null ? void 0 : entry.value) && entry.value.kind === CachedRouteKind.FETCH) {\n                        // when stale and is revalidating we wait for fresh data\n                        // so the revalidated entry has the updated data\n                        if (workStore.isRevalidate && entry.isStale) {\n                            isForegroundRevalidate = true;\n                        } else {\n                            if (entry.isStale) {\n                                workStore.pendingRevalidates ??= {};\n                                if (!workStore.pendingRevalidates[cacheKey]) {\n                                    workStore.pendingRevalidates[cacheKey] = doOriginalFetch(true).catch(console.error).finally(()=>{\n                                        workStore.pendingRevalidates ??= {};\n                                        delete workStore.pendingRevalidates[cacheKey || ''];\n                                    });\n                                }\n                            }\n                            cachedFetchData = entry.value.data;\n                        }\n                    }\n                }\n                if (cachedFetchData) {\n                    if (fetchStart) {\n                        trackFetchMetric(workStore, {\n                            start: fetchStart,\n                            url: fetchUrl,\n                            cacheReason,\n                            cacheStatus: isHmrRefreshCache ? 'hmr' : 'hit',\n                            cacheWarning,\n                            status: cachedFetchData.status || 200,\n                            method: (init == null ? void 0 : init.method) || 'GET'\n                        });\n                    }\n                    const response = new Response(Buffer.from(cachedFetchData.body, 'base64'), {\n                        headers: cachedFetchData.headers,\n                        status: cachedFetchData.status\n                    });\n                    Object.defineProperty(response, 'url', {\n                        value: cachedFetchData.url\n                    });\n                    return response;\n                }\n            }\n            if (workStore.isStaticGeneration && init && typeof init === 'object') {\n                const { cache } = init;\n                // Delete `cache` property as Cloudflare Workers will throw an error\n                if (isEdgeRuntime) delete init.cache;\n                if (cache === 'no-store') {\n                    // If enabled, we should bail out of static generation.\n                    if (workUnitStore && workUnitStore.type === 'prerender') {\n                        if (cacheSignal) {\n                            cacheSignal.endRead();\n                            cacheSignal = null;\n                        }\n                        return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n                    } else {\n                        markCurrentScopeAsDynamic(workStore, workUnitStore, `no-store fetch ${input} ${workStore.route}`);\n                    }\n                }\n                const hasNextConfig = 'next' in init;\n                const { next = {} } = init;\n                if (typeof next.revalidate === 'number' && revalidateStore && next.revalidate < revalidateStore.revalidate) {\n                    if (next.revalidate === 0) {\n                        // If enabled, we should bail out of static generation.\n                        if (workUnitStore && workUnitStore.type === 'prerender') {\n                            return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n                        } else {\n                            markCurrentScopeAsDynamic(workStore, workUnitStore, `revalidate: 0 fetch ${input} ${workStore.route}`);\n                        }\n                    }\n                    if (!workStore.forceStatic || next.revalidate !== 0) {\n                        revalidateStore.revalidate = next.revalidate;\n                    }\n                }\n                if (hasNextConfig) delete init.next;\n            }\n            // if we are revalidating the whole page via time or on-demand and\n            // the fetch cache entry is stale we should still de-dupe the\n            // origin hit if it's a cache-able entry\n            if (cacheKey && isForegroundRevalidate) {\n                const pendingRevalidateKey = cacheKey;\n                workStore.pendingRevalidates ??= {};\n                const pendingRevalidate = workStore.pendingRevalidates[pendingRevalidateKey];\n                if (pendingRevalidate) {\n                    const revalidatedResult = await pendingRevalidate;\n                    return new Response(revalidatedResult.body, {\n                        headers: revalidatedResult.headers,\n                        status: revalidatedResult.status,\n                        statusText: revalidatedResult.statusText\n                    });\n                }\n                // We used to just resolve the Response and clone it however for\n                // static generation with dynamicIO we need the response to be able to\n                // be resolved in a microtask and Response#clone() will never have a\n                // body that can resolve in a microtask in node (as observed through\n                // experimentation) So instead we await the body and then when it is\n                // available we construct manually cloned Response objects with the\n                // body as an ArrayBuffer. This will be resolvable in a microtask\n                // making it compatible with dynamicIO.\n                const pendingResponse = doOriginalFetch(true, cacheReasonOverride);\n                const nextRevalidate = pendingResponse.then(async (response)=>{\n                    // Clone the response here. It'll run first because we attached\n                    // the resolve before we returned below. We have to clone it\n                    // because the original response is going to be consumed by\n                    // at a later point in time.\n                    const clonedResponse = response.clone();\n                    return {\n                        body: await clonedResponse.arrayBuffer(),\n                        headers: clonedResponse.headers,\n                        status: clonedResponse.status,\n                        statusText: clonedResponse.statusText\n                    };\n                }).finally(()=>{\n                    var _workStore_pendingRevalidates;\n                    // If the pending revalidate is not present in the store, then\n                    // we have nothing to delete.\n                    if (!((_workStore_pendingRevalidates = workStore.pendingRevalidates) == null ? void 0 : _workStore_pendingRevalidates[pendingRevalidateKey])) {\n                        return;\n                    }\n                    delete workStore.pendingRevalidates[pendingRevalidateKey];\n                });\n                // Attach the empty catch here so we don't get a \"unhandled promise\n                // rejection\" warning\n                nextRevalidate.catch(()=>{});\n                workStore.pendingRevalidates[pendingRevalidateKey] = nextRevalidate;\n                return pendingResponse;\n            } else {\n                return doOriginalFetch(false, cacheReasonOverride);\n            }\n        });\n        if (cacheSignal) {\n            try {\n                return await result;\n            } finally{\n                if (cacheSignal) {\n                    cacheSignal.endRead();\n                }\n            }\n        }\n        return result;\n    };\n    // Attach the necessary properties to the patched fetch function.\n    // We don't use this to determine if the fetch function has been patched,\n    // but for external consumers to determine if the fetch function has been\n    // patched.\n    patched.__nextPatched = true;\n    patched.__nextGetStaticStore = ()=>workAsyncStorage;\n    patched._nextOriginalFetch = originFetch;\n    globalThis[NEXT_PATCH_SYMBOL] = true;\n    return patched;\n}\n// we patch fetch to collect cache information used for\n// determining if a page is static or not\nexport function patchFetch(options) {\n    // If we've already patched fetch, we should not patch it again.\n    if (isFetchPatched()) return;\n    // Grab the original fetch function. We'll attach this so we can use it in\n    // the patched fetch function.\n    const original = createDedupeFetch(globalThis.fetch);\n    // Set the global fetch to the patched fetch.\n    globalThis.fetch = createPatchedFetcher(original, options);\n}\n\n//# sourceMappingURL=patch-fetch.js.map","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { isClientReference } from '../../lib/client-reference';\nimport { getLayoutOrPageModule } from '../lib/app-dir-module';\nimport { interopDefault } from './interop-default';\nimport { parseLoaderTree } from './parse-loader-tree';\nimport { createComponentStylesAndScripts } from './create-component-styles-and-scripts';\nimport { getLayerAssets } from './get-layer-assets';\nimport { hasLoadingComponentInTree } from './has-loading-component-in-tree';\nimport { validateRevalidate } from '../lib/patch-fetch';\nimport { PARALLEL_ROUTE_DEFAULT_PATH } from '../../client/components/parallel-route-default';\nimport { getTracer } from '../lib/trace/tracer';\nimport { NextNodeServerSpan } from '../lib/trace/constants';\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout';\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external';\nimport { OUTLET_BOUNDARY_NAME } from '../../lib/metadata/metadata-constants';\n/**\n * Use the provided loader tree to create the React Component tree.\n */ export function createComponentTree(props) {\n    return getTracer().trace(NextNodeServerSpan.createComponentTree, {\n        spanName: 'build component tree'\n    }, ()=>createComponentTreeInternal(props));\n}\nfunction errorMissingDefaultExport(pagePath, convention) {\n    const normalizedPagePath = pagePath === '/' ? '' : pagePath;\n    throw new Error(`The default export is not a React Component in \"${normalizedPagePath}/${convention}\"`);\n}\nconst cacheNodeKey = 'c';\nasync function createComponentTreeInternal({ createSegmentPath, loaderTree: tree, parentParams, firstItem, rootLayoutIncluded, injectedCSS, injectedJS, injectedFontPreloadTags, getMetadataReady, ctx, missingSlots, preloadCallbacks }) {\n    const { renderOpts: { nextConfigOutput, experimental }, workStore, componentMod: { NotFoundBoundary, LayoutRouter, RenderFromTemplateContext, OutletBoundary, ClientPageRoot, ClientSegmentRoot, createServerSearchParamsForServerPage, createPrerenderSearchParamsForClientPage, createServerParamsForServerSegment, createPrerenderParamsForClientSegment, serverHooks: { DynamicServerError }, Postpone }, pagePath, getDynamicParamFromSegment, isPrefetch, query } = ctx;\n    const { page, layoutOrPagePath, segment, modules, parallelRoutes } = parseLoaderTree(tree);\n    const { layout, template, error, loading, 'not-found': notFound } = modules;\n    const injectedCSSWithCurrentLayout = new Set(injectedCSS);\n    const injectedJSWithCurrentLayout = new Set(injectedJS);\n    const injectedFontPreloadTagsWithCurrentLayout = new Set(injectedFontPreloadTags);\n    const layerAssets = getLayerAssets({\n        preloadCallbacks,\n        ctx,\n        layoutOrPagePath,\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedJS: injectedJSWithCurrentLayout,\n        injectedFontPreloadTags: injectedFontPreloadTagsWithCurrentLayout\n    });\n    const [Template, templateStyles, templateScripts] = template ? await createComponentStylesAndScripts({\n        ctx,\n        filePath: template[1],\n        getComponent: template[0],\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedJS: injectedJSWithCurrentLayout\n    }) : [\n        React.Fragment\n    ];\n    const [ErrorComponent, errorStyles, errorScripts] = error ? await createComponentStylesAndScripts({\n        ctx,\n        filePath: error[1],\n        getComponent: error[0],\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedJS: injectedJSWithCurrentLayout\n    }) : [];\n    const [Loading, loadingStyles, loadingScripts] = loading ? await createComponentStylesAndScripts({\n        ctx,\n        filePath: loading[1],\n        getComponent: loading[0],\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedJS: injectedJSWithCurrentLayout\n    }) : [];\n    const isLayout = typeof layout !== 'undefined';\n    const isPage = typeof page !== 'undefined';\n    const { mod: layoutOrPageMod } = await getTracer().trace(NextNodeServerSpan.getLayoutOrPageModule, {\n        hideSpan: !(isLayout || isPage),\n        spanName: 'resolve segment modules',\n        attributes: {\n            'next.segment': segment\n        }\n    }, ()=>getLayoutOrPageModule(tree));\n    /**\n   * Checks if the current segment is a root layout.\n   */ const rootLayoutAtThisLevel = isLayout && !rootLayoutIncluded;\n    /**\n   * Checks if the current segment or any level above it has a root layout.\n   */ const rootLayoutIncludedAtThisLevelOrAbove = rootLayoutIncluded || rootLayoutAtThisLevel;\n    const [NotFound, notFoundStyles] = notFound ? await createComponentStylesAndScripts({\n        ctx,\n        filePath: notFound[1],\n        getComponent: notFound[0],\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedJS: injectedJSWithCurrentLayout\n    }) : [];\n    let dynamic = layoutOrPageMod == null ? void 0 : layoutOrPageMod.dynamic;\n    if (nextConfigOutput === 'export') {\n        if (!dynamic || dynamic === 'auto') {\n            dynamic = 'error';\n        } else if (dynamic === 'force-dynamic') {\n            // force-dynamic is always incompatible with 'export'. We must interrupt the build\n            throw new StaticGenBailoutError(`Page with \\`dynamic = \"force-dynamic\"\\` couldn't be exported. \\`output: \"export\"\\` requires all pages be renderable statically because there is not runtime server to dynamic render routes in this output format. Learn more: https://nextjs.org/docs/app/building-your-application/deploying/static-exports`);\n        }\n    }\n    if (typeof dynamic === 'string') {\n        // the nested most config wins so we only force-static\n        // if it's configured above any parent that configured\n        // otherwise\n        if (dynamic === 'error') {\n            workStore.dynamicShouldError = true;\n        } else if (dynamic === 'force-dynamic') {\n            workStore.forceDynamic = true;\n            // TODO: (PPR) remove this bailout once PPR is the default\n            if (workStore.isStaticGeneration && !experimental.isRoutePPREnabled) {\n                // If the postpone API isn't available, we can't postpone the render and\n                // therefore we can't use the dynamic API.\n                const err = new DynamicServerError(`Page with \\`dynamic = \"force-dynamic\"\\` won't be rendered statically.`);\n                workStore.dynamicUsageDescription = err.message;\n                workStore.dynamicUsageStack = err.stack;\n                throw err;\n            }\n        } else {\n            workStore.dynamicShouldError = false;\n            workStore.forceStatic = dynamic === 'force-static';\n        }\n    }\n    if (typeof (layoutOrPageMod == null ? void 0 : layoutOrPageMod.fetchCache) === 'string') {\n        workStore.fetchCache = layoutOrPageMod == null ? void 0 : layoutOrPageMod.fetchCache;\n    }\n    if (typeof (layoutOrPageMod == null ? void 0 : layoutOrPageMod.revalidate) !== 'undefined') {\n        validateRevalidate(layoutOrPageMod == null ? void 0 : layoutOrPageMod.revalidate, workStore.route);\n    }\n    if (typeof (layoutOrPageMod == null ? void 0 : layoutOrPageMod.revalidate) === 'number') {\n        const defaultRevalidate = layoutOrPageMod.revalidate;\n        const workUnitStore = workUnitAsyncStorage.getStore();\n        if (workUnitStore) {\n            if (workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-legacy' || workUnitStore.type === 'prerender-ppr' || workUnitStore.type === 'cache') {\n                if (workUnitStore.revalidate > defaultRevalidate) {\n                    workUnitStore.revalidate = defaultRevalidate;\n                }\n            }\n        }\n        if (!workStore.forceStatic && workStore.isStaticGeneration && defaultRevalidate === 0 && // If the postpone API isn't available, we can't postpone the render and\n        // therefore we can't use the dynamic API.\n        !experimental.isRoutePPREnabled) {\n            const dynamicUsageDescription = `revalidate: 0 configured ${segment}`;\n            workStore.dynamicUsageDescription = dynamicUsageDescription;\n            throw new DynamicServerError(dynamicUsageDescription);\n        }\n    }\n    const isStaticGeneration = workStore.isStaticGeneration;\n    // If there's a dynamic usage error attached to the store, throw it.\n    if (workStore.dynamicUsageErr) {\n        throw workStore.dynamicUsageErr;\n    }\n    const LayoutOrPage = layoutOrPageMod ? interopDefault(layoutOrPageMod) : undefined;\n    /**\n   * The React Component to render.\n   */ let MaybeComponent = LayoutOrPage;\n    if (process.env.NODE_ENV === 'development') {\n        const { isValidElementType } = require('next/dist/compiled/react-is');\n        if ((isPage || typeof MaybeComponent !== 'undefined') && !isValidElementType(MaybeComponent)) {\n            errorMissingDefaultExport(pagePath, 'page');\n        }\n        if (typeof ErrorComponent !== 'undefined' && !isValidElementType(ErrorComponent)) {\n            errorMissingDefaultExport(pagePath, 'error');\n        }\n        if (typeof Loading !== 'undefined' && !isValidElementType(Loading)) {\n            errorMissingDefaultExport(pagePath, 'loading');\n        }\n        if (typeof NotFound !== 'undefined' && !isValidElementType(NotFound)) {\n            errorMissingDefaultExport(pagePath, 'not-found');\n        }\n    }\n    // Handle dynamic segment params.\n    const segmentParam = getDynamicParamFromSegment(segment);\n    // Create object holding the parent params and current params\n    let currentParams = parentParams;\n    if (segmentParam && segmentParam.value !== null) {\n        currentParams = {\n            ...parentParams,\n            [segmentParam.param]: segmentParam.value\n        };\n    }\n    // Resolve the segment param\n    const actualSegment = segmentParam ? segmentParam.treeSegment : segment;\n    //\n    // TODO: Combine this `map` traversal with the loop below that turns the array\n    // into an object.\n    const parallelRouteMap = await Promise.all(Object.keys(parallelRoutes).map(async (parallelRouteKey)=>{\n        const isChildrenRouteKey = parallelRouteKey === 'children';\n        const currentSegmentPath = firstItem ? [\n            parallelRouteKey\n        ] : [\n            actualSegment,\n            parallelRouteKey\n        ];\n        const parallelRoute = parallelRoutes[parallelRouteKey];\n        const notFoundComponent = NotFound && isChildrenRouteKey ? /*#__PURE__*/ _jsx(NotFound, {}) : undefined;\n        // if we're prefetching and that there's a Loading component, we bail out\n        // otherwise we keep rendering for the prefetch.\n        // We also want to bail out if there's no Loading component in the tree.\n        let childCacheNodeSeedData = null;\n        if (// Before PPR, the way instant navigations work in Next.js is we\n        // prefetch everything up to the first route segment that defines a\n        // loading.tsx boundary. (We do the same if there's no loading\n        // boundary in the entire tree, because we don't want to prefetch too\n        // much) The rest of the tree is deferred until the actual navigation.\n        // It does not take into account whether the data is dynamic — even if\n        // the tree is completely static, it will still defer everything\n        // inside the loading boundary.\n        //\n        // This behavior predates PPR and is only relevant if the\n        // PPR flag is not enabled.\n        isPrefetch && (Loading || !hasLoadingComponentInTree(parallelRoute)) && // The approach with PPR is different — loading.tsx behaves like a\n        // regular Suspense boundary and has no special behavior.\n        //\n        // With PPR, we prefetch as deeply as possible, and only defer when\n        // dynamic data is accessed. If so, we only defer the nearest parent\n        // Suspense boundary of the dynamic data access, regardless of whether\n        // the boundary is defined by loading.tsx or a normal <Suspense>\n        // component in userspace.\n        //\n        // NOTE: In practice this usually means we'll end up prefetching more\n        // than we were before PPR, which may or may not be considered a\n        // performance regression by some apps. The plan is to address this\n        // before General Availability of PPR by introducing granular\n        // per-segment fetching, so we can reuse as much of the tree as\n        // possible during both prefetches and dynamic navigations. But during\n        // the beta period, we should be clear about this trade off in our\n        // communications.\n        !experimental.isRoutePPREnabled) {\n        // Don't prefetch this child. This will trigger a lazy fetch by the\n        // client router.\n        } else {\n            // Create the child component\n            if (process.env.NODE_ENV === 'development' && missingSlots) {\n                var _parsedTree_layoutOrPagePath;\n                // When we detect the default fallback (which triggers a 404), we collect the missing slots\n                // to provide more helpful debug information during development mode.\n                const parsedTree = parseLoaderTree(parallelRoute);\n                if ((_parsedTree_layoutOrPagePath = parsedTree.layoutOrPagePath) == null ? void 0 : _parsedTree_layoutOrPagePath.endsWith(PARALLEL_ROUTE_DEFAULT_PATH)) {\n                    missingSlots.add(parallelRouteKey);\n                }\n            }\n            const seedData = await createComponentTreeInternal({\n                createSegmentPath: (child)=>{\n                    return createSegmentPath([\n                        ...currentSegmentPath,\n                        ...child\n                    ]);\n                },\n                loaderTree: parallelRoute,\n                parentParams: currentParams,\n                rootLayoutIncluded: rootLayoutIncludedAtThisLevelOrAbove,\n                injectedCSS: injectedCSSWithCurrentLayout,\n                injectedJS: injectedJSWithCurrentLayout,\n                injectedFontPreloadTags: injectedFontPreloadTagsWithCurrentLayout,\n                // getMetadataReady is used to conditionally throw. In the case of parallel routes we will have more than one page\n                // but we only want to throw on the first one.\n                getMetadataReady: isChildrenRouteKey ? getMetadataReady : ()=>Promise.resolve(),\n                ctx,\n                missingSlots,\n                preloadCallbacks\n            });\n            childCacheNodeSeedData = seedData;\n        }\n        // This is turned back into an object below.\n        return [\n            parallelRouteKey,\n            /*#__PURE__*/ _jsx(LayoutRouter, {\n                parallelRouterKey: parallelRouteKey,\n                segmentPath: createSegmentPath(currentSegmentPath),\n                // TODO-APP: Add test for loading returning `undefined`. This currently can't be tested as the `webdriver()` tab will wait for the full page to load before returning.\n                error: ErrorComponent,\n                errorStyles: errorStyles,\n                errorScripts: errorScripts,\n                template: /*#__PURE__*/ _jsx(Template, {\n                    children: /*#__PURE__*/ _jsx(RenderFromTemplateContext, {})\n                }),\n                templateStyles: templateStyles,\n                templateScripts: templateScripts,\n                notFound: notFoundComponent,\n                notFoundStyles: notFoundStyles\n            }),\n            childCacheNodeSeedData\n        ];\n    }));\n    // Convert the parallel route map into an object after all promises have been resolved.\n    let parallelRouteProps = {};\n    let parallelRouteCacheNodeSeedData = {};\n    for (const parallelRoute of parallelRouteMap){\n        const [parallelRouteKey, parallelRouteProp, flightData] = parallelRoute;\n        parallelRouteProps[parallelRouteKey] = parallelRouteProp;\n        parallelRouteCacheNodeSeedData[parallelRouteKey] = flightData;\n    }\n    const loadingData = Loading ? [\n        /*#__PURE__*/ _jsx(Loading, {}, \"l\"),\n        loadingStyles,\n        loadingScripts\n    ] : null;\n    // When the segment does not have a layout or page we still have to add the layout router to ensure the path holds the loading component\n    if (!MaybeComponent) {\n        return [\n            actualSegment,\n            /*#__PURE__*/ _jsxs(React.Fragment, {\n                children: [\n                    layerAssets,\n                    parallelRouteProps.children\n                ]\n            }, cacheNodeKey),\n            parallelRouteCacheNodeSeedData,\n            loadingData\n        ];\n    }\n    const Component = MaybeComponent;\n    // If force-dynamic is used and the current render supports postponing, we\n    // replace it with a node that will postpone the render. This ensures that the\n    // postpone is invoked during the react render phase and not during the next\n    // render phase.\n    // @TODO this does not actually do what it seems like it would or should do. The idea is that\n    // if we are rendering in a force-dynamic mode and we can postpone we should only make the segments\n    // that ask for force-dynamic to be dynamic, allowing other segments to still prerender. However\n    // because this comes after the children traversal and the static generation store is mutated every segment\n    // along the parent path of a force-dynamic segment will hit this condition effectively making the entire\n    // render force-dynamic. We should refactor this function so that we can correctly track which segments\n    // need to be dynamic\n    if (workStore.isStaticGeneration && workStore.forceDynamic && experimental.isRoutePPREnabled) {\n        return [\n            actualSegment,\n            /*#__PURE__*/ _jsxs(React.Fragment, {\n                children: [\n                    /*#__PURE__*/ _jsx(Postpone, {\n                        reason: 'dynamic = \"force-dynamic\" was used',\n                        route: workStore.route\n                    }),\n                    layerAssets\n                ]\n            }, cacheNodeKey),\n            parallelRouteCacheNodeSeedData,\n            loadingData\n        ];\n    }\n    const isClientComponent = isClientReference(layoutOrPageMod);\n    if (process.env.NODE_ENV === 'development' && 'params' in parallelRouteProps) {\n        // @TODO consider making this an error and running the check in build as well\n        console.error(`\"params\" is a reserved prop in Layouts and Pages and cannot be used as the name of a parallel route in ${segment}`);\n    }\n    if (isPage) {\n        const PageComponent = Component;\n        // Assign searchParams to props if this is a page\n        let pageElement;\n        if (isClientComponent) {\n            if (isStaticGeneration) {\n                const promiseOfParams = createPrerenderParamsForClientSegment(currentParams, workStore);\n                const promiseOfSearchParams = createPrerenderSearchParamsForClientPage(workStore);\n                pageElement = /*#__PURE__*/ _jsx(ClientPageRoot, {\n                    Component: PageComponent,\n                    searchParams: query,\n                    params: currentParams,\n                    promises: [\n                        promiseOfSearchParams,\n                        promiseOfParams\n                    ]\n                });\n            } else {\n                pageElement = /*#__PURE__*/ _jsx(ClientPageRoot, {\n                    Component: PageComponent,\n                    searchParams: query,\n                    params: currentParams\n                });\n            }\n        } else {\n            // If we are passing searchParams to a server component Page we need to track their usage in case\n            // the current render mode tracks dynamic API usage.\n            const params = createServerParamsForServerSegment(currentParams, workStore);\n            const searchParams = createServerSearchParamsForServerPage(query, workStore);\n            pageElement = /*#__PURE__*/ _jsx(PageComponent, {\n                params: params,\n                searchParams: searchParams\n            });\n        }\n        return [\n            actualSegment,\n            /*#__PURE__*/ _jsxs(React.Fragment, {\n                children: [\n                    pageElement,\n                    layerAssets,\n                    /*#__PURE__*/ _jsx(OutletBoundary, {\n                        children: /*#__PURE__*/ _jsx(MetadataOutlet, {\n                            ready: getMetadataReady\n                        })\n                    })\n                ]\n            }, cacheNodeKey),\n            parallelRouteCacheNodeSeedData,\n            loadingData\n        ];\n    } else {\n        const SegmentComponent = Component;\n        const isRootLayoutWithChildrenSlotAndAtLeastOneMoreSlot = rootLayoutAtThisLevel && 'children' in parallelRoutes && Object.keys(parallelRoutes).length > 1;\n        let segmentNode;\n        if (isClientComponent) {\n            let clientSegment;\n            if (isStaticGeneration) {\n                const promiseOfParams = createPrerenderParamsForClientSegment(currentParams, workStore);\n                clientSegment = /*#__PURE__*/ _jsx(ClientSegmentRoot, {\n                    Component: SegmentComponent,\n                    slots: parallelRouteProps,\n                    params: currentParams,\n                    promise: promiseOfParams\n                });\n            } else {\n                clientSegment = /*#__PURE__*/ _jsx(ClientSegmentRoot, {\n                    Component: SegmentComponent,\n                    slots: parallelRouteProps,\n                    params: currentParams\n                });\n            }\n            if (isRootLayoutWithChildrenSlotAndAtLeastOneMoreSlot) {\n                // TODO-APP: This is a hack to support unmatched parallel routes, which will throw `notFound()`.\n                // This ensures that a `NotFoundBoundary` is available for when that happens,\n                // but it's not ideal, as it needlessly invokes the `NotFound` component and renders the `RootLayout` twice.\n                // We should instead look into handling the fallback behavior differently in development mode so that it doesn't\n                // rely on the `NotFound` behavior.\n                if (NotFound) {\n                    const notFoundParallelRouteProps = {\n                        children: /*#__PURE__*/ _jsxs(_Fragment, {\n                            children: [\n                                notFoundStyles,\n                                /*#__PURE__*/ _jsx(NotFound, {})\n                            ]\n                        })\n                    };\n                    const notfoundClientSegment = /*#__PURE__*/ _jsx(ClientSegmentRoot, {\n                        Component: SegmentComponent,\n                        slots: notFoundParallelRouteProps,\n                        params: currentParams\n                    });\n                    segmentNode = /*#__PURE__*/ _jsxs(NotFoundBoundary, {\n                        notFound: /*#__PURE__*/ _jsxs(_Fragment, {\n                            children: [\n                                layerAssets,\n                                notfoundClientSegment\n                            ]\n                        }),\n                        children: [\n                            layerAssets,\n                            clientSegment\n                        ]\n                    }, cacheNodeKey);\n                } else {\n                    segmentNode = /*#__PURE__*/ _jsxs(NotFoundBoundary, {\n                        children: [\n                            layerAssets,\n                            clientSegment\n                        ]\n                    }, cacheNodeKey);\n                }\n            } else {\n                segmentNode = /*#__PURE__*/ _jsxs(React.Fragment, {\n                    children: [\n                        layerAssets,\n                        clientSegment\n                    ]\n                }, cacheNodeKey);\n            }\n        } else {\n            const params = createServerParamsForServerSegment(currentParams, workStore);\n            let serverSegment = /*#__PURE__*/ _jsx(SegmentComponent, {\n                ...parallelRouteProps,\n                params: params\n            });\n            if (isRootLayoutWithChildrenSlotAndAtLeastOneMoreSlot) {\n                // TODO-APP: This is a hack to support unmatched parallel routes, which will throw `notFound()`.\n                // This ensures that a `NotFoundBoundary` is available for when that happens,\n                // but it's not ideal, as it needlessly invokes the `NotFound` component and renders the `RootLayout` twice.\n                // We should instead look into handling the fallback behavior differently in development mode so that it doesn't\n                // rely on the `NotFound` behavior.\n                segmentNode = /*#__PURE__*/ _jsxs(NotFoundBoundary, {\n                    notFound: NotFound ? /*#__PURE__*/ _jsxs(_Fragment, {\n                        children: [\n                            layerAssets,\n                            /*#__PURE__*/ _jsxs(SegmentComponent, {\n                                params: params,\n                                children: [\n                                    notFoundStyles,\n                                    /*#__PURE__*/ _jsx(NotFound, {})\n                                ]\n                            })\n                        ]\n                    }) : undefined,\n                    children: [\n                        layerAssets,\n                        serverSegment\n                    ]\n                }, cacheNodeKey);\n            } else {\n                segmentNode = /*#__PURE__*/ _jsxs(React.Fragment, {\n                    children: [\n                        layerAssets,\n                        serverSegment\n                    ]\n                }, cacheNodeKey);\n            }\n        }\n        // For layouts we just render the component\n        return [\n            actualSegment,\n            segmentNode,\n            parallelRouteCacheNodeSeedData,\n            loadingData\n        ];\n    }\n}\nasync function MetadataOutlet({ ready }) {\n    const r = ready();\n    // We can avoid a extra microtask by unwrapping the instrumented promise directly if available.\n    if (r.status === 'rejected') {\n        throw r.value;\n    } else if (r.status !== 'fulfilled') {\n        await r;\n    }\n    return null;\n}\nMetadataOutlet.displayName = OUTLET_BOUNDARY_NAME;\n\n//# sourceMappingURL=create-component-tree.js.map","import { canSegmentBeOverridden, matchSegment } from '../../client/components/match-segments';\nimport { getLinkAndScriptTags } from './get-css-inlined-link-tags';\nimport { getPreloadableFonts } from './get-preloadable-fonts';\nimport { createFlightRouterStateFromLoaderTree } from './create-flight-router-state-from-loader-tree';\nimport { hasLoadingComponentInTree } from './has-loading-component-in-tree';\nimport { DEFAULT_SEGMENT_KEY, addSearchParamsIfPageSegment } from '../../shared/lib/segment';\nimport { createComponentTree } from './create-component-tree';\n/**\n * Use router state to decide at what common layout to render the page.\n * This can either be the common layout between two pages or a specific place to start rendering from using the \"refetch\" marker in the tree.\n */ export async function walkTreeWithFlightRouterState({ createSegmentPath, loaderTreeToFilter, parentParams, isFirst, flightRouterState, parentRendered, rscPayloadHead, injectedCSS, injectedJS, injectedFontPreloadTags, rootLayoutIncluded, getMetadataReady, ctx, preloadCallbacks }) {\n    const { renderOpts: { nextFontManifest, experimental }, query, isPrefetch, getDynamicParamFromSegment, componentMod: { tree: loaderTree } } = ctx;\n    const [segment, parallelRoutes, modules] = loaderTreeToFilter;\n    const parallelRoutesKeys = Object.keys(parallelRoutes);\n    const { layout } = modules;\n    const isLayout = typeof layout !== 'undefined';\n    /**\n   * Checks if the current segment is a root layout.\n   */ const rootLayoutAtThisLevel = isLayout && !rootLayoutIncluded;\n    /**\n   * Checks if the current segment or any level above it has a root layout.\n   */ const rootLayoutIncludedAtThisLevelOrAbove = rootLayoutIncluded || rootLayoutAtThisLevel;\n    // Because this function walks to a deeper point in the tree to start rendering we have to track the dynamic parameters up to the point where rendering starts\n    const segmentParam = getDynamicParamFromSegment(segment);\n    const currentParams = // Handle null case where dynamic param is optional\n    segmentParam && segmentParam.value !== null ? {\n        ...parentParams,\n        [segmentParam.param]: segmentParam.value\n    } : parentParams;\n    const actualSegment = addSearchParamsIfPageSegment(segmentParam ? segmentParam.treeSegment : segment, query);\n    /**\n   * Decide if the current segment is where rendering has to start.\n   */ const renderComponentsOnThisLevel = // No further router state available\n    !flightRouterState || // Segment in router state does not match current segment\n    !matchSegment(actualSegment, flightRouterState[0]) || // Last item in the tree\n    parallelRoutesKeys.length === 0 || // Explicit refresh\n    flightRouterState[3] === 'refetch';\n    // Pre-PPR, the `loading` component signals to the router how deep to render the component tree\n    // to ensure prefetches are quick and inexpensive. If there's no `loading` component anywhere in the tree being rendered,\n    // the prefetch will be short-circuited to avoid requesting a potentially very expensive subtree. If there's a `loading`\n    // somewhere in the tree, we'll recursively render the component tree up until we encounter that loading component, and then stop.\n    const shouldSkipComponentTree = !experimental.isRoutePPREnabled && isPrefetch && !Boolean(modules.loading) && !hasLoadingComponentInTree(loaderTree);\n    if (!parentRendered && renderComponentsOnThisLevel) {\n        const overriddenSegment = flightRouterState && canSegmentBeOverridden(actualSegment, flightRouterState[0]) ? flightRouterState[0] : actualSegment;\n        const routerState = createFlightRouterStateFromLoaderTree(// Create router state using the slice of the loaderTree\n        loaderTreeToFilter, getDynamicParamFromSegment, query);\n        if (shouldSkipComponentTree) {\n            // Send only the router state\n            return [\n                [\n                    overriddenSegment,\n                    routerState,\n                    null,\n                    null\n                ]\n            ];\n        } else {\n            // Create component tree using the slice of the loaderTree\n            const seedData = await createComponentTree(// This ensures flightRouterPath is valid and filters down the tree\n            {\n                ctx,\n                createSegmentPath,\n                loaderTree: loaderTreeToFilter,\n                parentParams: currentParams,\n                firstItem: isFirst,\n                injectedCSS,\n                injectedJS,\n                injectedFontPreloadTags,\n                // This is intentionally not \"rootLayoutIncludedAtThisLevelOrAbove\" as createComponentTree starts at the current level and does a check for \"rootLayoutAtThisLevel\" too.\n                rootLayoutIncluded,\n                getMetadataReady,\n                preloadCallbacks\n            });\n            return [\n                [\n                    overriddenSegment,\n                    routerState,\n                    seedData,\n                    rscPayloadHead\n                ]\n            ];\n        }\n    }\n    // If we are not rendering on this level we need to check if the current\n    // segment has a layout. If so, we need to track all the used CSS to make\n    // the result consistent.\n    const layoutPath = layout == null ? void 0 : layout[1];\n    const injectedCSSWithCurrentLayout = new Set(injectedCSS);\n    const injectedJSWithCurrentLayout = new Set(injectedJS);\n    const injectedFontPreloadTagsWithCurrentLayout = new Set(injectedFontPreloadTags);\n    if (layoutPath) {\n        getLinkAndScriptTags(ctx.clientReferenceManifest, layoutPath, injectedCSSWithCurrentLayout, injectedJSWithCurrentLayout, true);\n        getPreloadableFonts(nextFontManifest, layoutPath, injectedFontPreloadTagsWithCurrentLayout);\n    }\n    const paths = [];\n    // Walk through all parallel routes.\n    for (const parallelRouteKey of parallelRoutesKeys){\n        const parallelRoute = parallelRoutes[parallelRouteKey];\n        const currentSegmentPath = isFirst ? [\n            parallelRouteKey\n        ] : [\n            actualSegment,\n            parallelRouteKey\n        ];\n        const subPaths = await walkTreeWithFlightRouterState({\n            ctx,\n            createSegmentPath: (child)=>{\n                return createSegmentPath([\n                    ...currentSegmentPath,\n                    ...child\n                ]);\n            },\n            loaderTreeToFilter: parallelRoute,\n            parentParams: currentParams,\n            flightRouterState: flightRouterState && flightRouterState[1][parallelRouteKey],\n            parentRendered: parentRendered || renderComponentsOnThisLevel,\n            isFirst: false,\n            rscPayloadHead,\n            injectedCSS: injectedCSSWithCurrentLayout,\n            injectedJS: injectedJSWithCurrentLayout,\n            injectedFontPreloadTags: injectedFontPreloadTagsWithCurrentLayout,\n            rootLayoutIncluded: rootLayoutIncludedAtThisLevelOrAbove,\n            getMetadataReady,\n            preloadCallbacks\n        });\n        for (const subPath of subPaths){\n            // we don't need to send over default routes in the flight data\n            // because they are always ignored by the client, unless it's a refetch\n            if (subPath[0] === DEFAULT_SEGMENT_KEY && flightRouterState && !!flightRouterState[1][parallelRouteKey][0] && flightRouterState[1][parallelRouteKey][3] !== 'refetch') {\n                continue;\n            }\n            paths.push([\n                actualSegment,\n                parallelRouteKey,\n                ...subPath\n            ]);\n        }\n    }\n    return paths;\n}\n\n//# sourceMappingURL=walk-tree-with-flight-router-state.js.map","export var DynamicState;\n(function(DynamicState) {\n    /**\n   * The dynamic access occurred during the RSC render phase.\n   */ DynamicState[DynamicState[\"DATA\"] = 1] = \"DATA\";\n    /**\n   * The dynamic access occurred during the HTML shell render phase.\n   */ DynamicState[DynamicState[\"HTML\"] = 2] = \"HTML\";\n})(DynamicState || (DynamicState = {}));\nexport function getDynamicHTMLPostponedState(data, fallbackRouteParams) {\n    if (!fallbackRouteParams || fallbackRouteParams.size === 0) {\n        return JSON.stringify(data);\n    }\n    const replacements = Array.from(fallbackRouteParams);\n    const replacementsString = JSON.stringify(replacements);\n    // Serialized as `<length><replacements><data>`\n    return `${replacementsString.length}${replacementsString}${JSON.stringify(data)}`;\n}\nexport function getDynamicDataPostponedState() {\n    return 'null';\n}\nexport function parsePostponedState(state, params) {\n    try {\n        if (state === 'null') {\n            return {\n                type: 1\n            };\n        }\n        if (/^[0-9]/.test(state)) {\n            var _state_match;\n            const match = (_state_match = state.match(/^([0-9]*)/)) == null ? void 0 : _state_match[1];\n            if (!match) {\n                throw new Error(`Invariant: invalid postponed state ${state}`);\n            }\n            // This is the length of the replacements entries.\n            const length = parseInt(match);\n            const replacements = JSON.parse(state.slice(match.length, // We then go to the end of the string.\n            match.length + length));\n            let postponed = state.slice(match.length + length);\n            for (const [key, searchValue] of replacements){\n                const value = (params == null ? void 0 : params[key]) ?? '';\n                const replaceValue = Array.isArray(value) ? value.join('/') : value;\n                postponed = postponed.replaceAll(searchValue, replaceValue);\n            }\n            return {\n                type: 2,\n                data: JSON.parse(postponed)\n            };\n        }\n        return {\n            type: 2,\n            data: JSON.parse(state)\n        };\n    } catch (err) {\n        console.error('Failed to parse postponed state', err);\n        return {\n            type: 1\n        };\n    }\n}\nexport function getPostponedFromState(state) {\n    if (state.type === 1) {\n        return null;\n    }\n    return state.data;\n}\n\n//# sourceMappingURL=postponed-state.js.map","import { htmlEscapeJsonString } from '../htmlescape';\nconst isEdgeRuntime = process.env.NEXT_RUNTIME === 'edge';\nconst INLINE_FLIGHT_PAYLOAD_BOOTSTRAP = 0;\nconst INLINE_FLIGHT_PAYLOAD_DATA = 1;\nconst INLINE_FLIGHT_PAYLOAD_FORM_STATE = 2;\nconst INLINE_FLIGHT_PAYLOAD_BINARY = 3;\nconst flightResponses = new WeakMap();\nconst encoder = new TextEncoder();\n/**\n * Render Flight stream.\n * This is only used for renderToHTML, the Flight response does not need additional wrappers.\n */ export function useFlightStream(flightStream, clientReferenceManifest, nonce) {\n    const response = flightResponses.get(flightStream);\n    if (response) {\n        return response;\n    }\n    // react-server-dom-webpack/client.edge must not be hoisted for require cache clearing to work correctly\n    let createFromReadableStream;\n    // @TODO: investigate why the aliasing for turbopack doesn't pick this up, requiring this runtime check\n    if (process.env.TURBOPACK) {\n        createFromReadableStream = // eslint-disable-next-line import/no-extraneous-dependencies\n        require('react-server-dom-turbopack/client.edge').createFromReadableStream;\n    } else {\n        createFromReadableStream = // eslint-disable-next-line import/no-extraneous-dependencies\n        require('react-server-dom-webpack/client.edge').createFromReadableStream;\n    }\n    const newResponse = createFromReadableStream(flightStream, {\n        serverConsumerManifest: {\n            moduleLoading: clientReferenceManifest.moduleLoading,\n            moduleMap: isEdgeRuntime ? clientReferenceManifest.edgeSSRModuleMapping : clientReferenceManifest.ssrModuleMapping,\n            serverModuleMap: null\n        },\n        nonce\n    });\n    flightResponses.set(flightStream, newResponse);\n    return newResponse;\n}\n/**\n * Creates a ReadableStream provides inline script tag chunks for writing hydration\n * data to the client outside the React render itself.\n *\n * @param flightStream The RSC render stream\n * @param nonce optionally a nonce used during this particular render\n * @param formState optionally the formState used with this particular render\n * @returns a ReadableStream without the complete property. This signifies a lazy ReadableStream\n */ export function createInlinedDataReadableStream(flightStream, nonce, formState) {\n    const startScriptTag = nonce ? `<script nonce=${JSON.stringify(nonce)}>` : '<script>';\n    const flightReader = flightStream.getReader();\n    const decoder = new TextDecoder('utf-8', {\n        fatal: true\n    });\n    const readable = new ReadableStream({\n        type: 'bytes',\n        start (controller) {\n            try {\n                writeInitialInstructions(controller, startScriptTag, formState);\n            } catch (error) {\n                // during encoding or enqueueing forward the error downstream\n                controller.error(error);\n            }\n        },\n        async pull (controller) {\n            try {\n                const { done, value } = await flightReader.read();\n                if (value) {\n                    try {\n                        const decodedString = decoder.decode(value, {\n                            stream: !done\n                        });\n                        // The chunk cannot be decoded as valid UTF-8 string as it might\n                        // have arbitrary binary data.\n                        writeFlightDataInstruction(controller, startScriptTag, decodedString);\n                    } catch  {\n                        // The chunk cannot be decoded as valid UTF-8 string.\n                        writeFlightDataInstruction(controller, startScriptTag, value);\n                    }\n                }\n                if (done) {\n                    controller.close();\n                }\n            } catch (error) {\n                // There was a problem in the upstream reader or during decoding or enqueuing\n                // forward the error downstream\n                controller.error(error);\n            }\n        }\n    });\n    return readable;\n}\nfunction writeInitialInstructions(controller, scriptStart, formState) {\n    if (formState != null) {\n        controller.enqueue(encoder.encode(`${scriptStart}(self.__next_f=self.__next_f||[]).push(${htmlEscapeJsonString(JSON.stringify([\n            INLINE_FLIGHT_PAYLOAD_BOOTSTRAP\n        ]))});self.__next_f.push(${htmlEscapeJsonString(JSON.stringify([\n            INLINE_FLIGHT_PAYLOAD_FORM_STATE,\n            formState\n        ]))})</script>`));\n    } else {\n        controller.enqueue(encoder.encode(`${scriptStart}(self.__next_f=self.__next_f||[]).push(${htmlEscapeJsonString(JSON.stringify([\n            INLINE_FLIGHT_PAYLOAD_BOOTSTRAP\n        ]))})</script>`));\n    }\n}\nfunction writeFlightDataInstruction(controller, scriptStart, chunk) {\n    let htmlInlinedData;\n    if (typeof chunk === 'string') {\n        htmlInlinedData = htmlEscapeJsonString(JSON.stringify([\n            INLINE_FLIGHT_PAYLOAD_DATA,\n            chunk\n        ]));\n    } else {\n        // The chunk cannot be embedded as a UTF-8 string in the script tag.\n        // Instead let's inline it in base64.\n        // Credits to Devon Govett (devongovett) for the technique.\n        // https://github.com/devongovett/rsc-html-stream\n        const base64 = btoa(String.fromCodePoint(...chunk));\n        htmlInlinedData = htmlEscapeJsonString(JSON.stringify([\n            INLINE_FLIGHT_PAYLOAD_BINARY,\n            base64\n        ]));\n    }\n    controller.enqueue(encoder.encode(`${scriptStart}self.__next_f.push(${htmlInlinedData})</script>`));\n}\n\n//# sourceMappingURL=use-flight-response.js.map","import type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport type {\n  FlightRouterState,\n  CacheNodeSeedData,\n} from '../../../server/app-render/types'\nimport { createRouterCacheKey } from './create-router-cache-key'\nimport {\n  PrefetchCacheEntryStatus,\n  type PrefetchCacheEntry,\n} from './router-reducer-types'\n\nexport function fillLazyItemsTillLeafWithHead(\n  newCache: CacheNode,\n  existingCache: CacheNode | undefined,\n  routerState: FlightRouterState,\n  cacheNodeSeedData: CacheNodeSeedData | null,\n  head: React.ReactNode,\n  prefetchEntry?: PrefetchCacheEntry\n): void {\n  const isLastSegment = Object.keys(routerState[1]).length === 0\n  if (isLastSegment) {\n    newCache.head = head\n    return\n  }\n  // Remove segment that we got data for so that it is filled in during rendering of rsc.\n  for (const key in routerState[1]) {\n    const parallelRouteState = routerState[1][key]\n    const segmentForParallelRoute = parallelRouteState[0]\n    const cacheKey = createRouterCacheKey(segmentForParallelRoute)\n\n    // TODO: We should traverse the cacheNodeSeedData tree instead of the router\n    // state tree. Ideally, they would always be the same shape, but because of\n    // the loading.js pattern, cacheNodeSeedData sometimes only represents a\n    // partial tree. That's why this node is sometimes null. Once PPR lands,\n    // loading.js will no longer have special behavior and we can traverse the\n    // data tree instead.\n    //\n    // We should also consider merging the router state tree and the data tree\n    // in the response format, so that we don't have to send the keys twice.\n    // Then the client can convert them into separate representations.\n    const parallelSeedData =\n      cacheNodeSeedData !== null && cacheNodeSeedData[2][key] !== undefined\n        ? cacheNodeSeedData[2][key]\n        : null\n    if (existingCache) {\n      const existingParallelRoutesCacheNode =\n        existingCache.parallelRoutes.get(key)\n      if (existingParallelRoutesCacheNode) {\n        const hasReusablePrefetch =\n          prefetchEntry?.kind === 'auto' &&\n          prefetchEntry.status === PrefetchCacheEntryStatus.reusable\n\n        let parallelRouteCacheNode = new Map(existingParallelRoutesCacheNode)\n        const existingCacheNode = parallelRouteCacheNode.get(cacheKey)\n        let newCacheNode: CacheNode\n        if (parallelSeedData !== null) {\n          // New data was sent from the server.\n          const seedNode = parallelSeedData[1]\n          const loading = parallelSeedData[3]\n          newCacheNode = {\n            lazyData: null,\n            rsc: seedNode,\n            // This is a PPR-only field. When PPR is enabled, we shouldn't hit\n            // this path during a navigation, but until PPR is fully implemented\n            // yet it's possible the existing node does have a non-null\n            // `prefetchRsc`. As an incremental step, we'll just de-opt to the\n            // old behavior — no PPR value.\n            prefetchRsc: null,\n            head: null,\n            prefetchHead: null,\n            loading,\n            parallelRoutes: new Map(existingCacheNode?.parallelRoutes),\n          }\n        } else if (hasReusablePrefetch && existingCacheNode) {\n          // No new data was sent from the server, but the existing cache node\n          // was prefetched, so we should reuse that.\n          newCacheNode = {\n            lazyData: existingCacheNode.lazyData,\n            rsc: existingCacheNode.rsc,\n            // This is a PPR-only field. Unlike the previous branch, since we're\n            // just cloning the existing cache node, we might as well keep the\n            // PPR value, if it exists.\n            prefetchRsc: existingCacheNode.prefetchRsc,\n            head: existingCacheNode.head,\n            prefetchHead: existingCacheNode.prefetchHead,\n            parallelRoutes: new Map(existingCacheNode.parallelRoutes),\n            loading: existingCacheNode.loading,\n          } as CacheNode\n        } else {\n          // No data available for this node. This will trigger a lazy fetch\n          // during render.\n          newCacheNode = {\n            lazyData: null,\n            rsc: null,\n            prefetchRsc: null,\n            head: null,\n            prefetchHead: null,\n            parallelRoutes: new Map(existingCacheNode?.parallelRoutes),\n            loading: null,\n          }\n        }\n\n        // Overrides the cache key with the new cache node.\n        parallelRouteCacheNode.set(cacheKey, newCacheNode)\n        // Traverse deeper to apply the head / fill lazy items till the head.\n        fillLazyItemsTillLeafWithHead(\n          newCacheNode,\n          existingCacheNode,\n          parallelRouteState,\n          parallelSeedData ? parallelSeedData : null,\n          head,\n          prefetchEntry\n        )\n\n        newCache.parallelRoutes.set(key, parallelRouteCacheNode)\n        continue\n      }\n    }\n\n    let newCacheNode: CacheNode\n    if (parallelSeedData !== null) {\n      // New data was sent from the server.\n      const seedNode = parallelSeedData[1]\n      const loading = parallelSeedData[3]\n      newCacheNode = {\n        lazyData: null,\n        rsc: seedNode,\n        prefetchRsc: null,\n        head: null,\n        prefetchHead: null,\n        parallelRoutes: new Map(),\n        loading,\n      }\n    } else {\n      // No data available for this node. This will trigger a lazy fetch\n      // during render.\n      newCacheNode = {\n        lazyData: null,\n        rsc: null,\n        prefetchRsc: null,\n        head: null,\n        prefetchHead: null,\n        parallelRoutes: new Map(),\n        loading: null,\n      }\n    }\n\n    const existingParallelRoutes = newCache.parallelRoutes.get(key)\n    if (existingParallelRoutes) {\n      existingParallelRoutes.set(cacheKey, newCacheNode)\n    } else {\n      newCache.parallelRoutes.set(key, new Map([[cacheKey, newCacheNode]]))\n    }\n\n    fillLazyItemsTillLeafWithHead(\n      newCacheNode,\n      undefined,\n      parallelRouteState,\n      parallelSeedData,\n      head,\n      prefetchEntry\n    )\n  }\n}\n","function _class_private_field_loose_base(receiver, privateKey) {\n    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n        throw new TypeError(\"attempted to use private field on non-instance\");\n    }\n\n    return receiver;\n}\nexport { _class_private_field_loose_base as _ };\n","var id = 0;\n\nfunction _class_private_field_loose_key(name) {\n    return \"__private_\" + id++ + \"_\" + name;\n}\nexport { _class_private_field_loose_key as _ };\n","/*\n    This is a simple promise queue that allows you to limit the number of concurrent promises\n    that are running at any given time. It's used to limit the number of concurrent\n    prefetch requests that are being made to the server but could be used for other\n    things as well.\n*/\nexport class PromiseQueue {\n  #maxConcurrency: number\n  #runningCount: number\n  #queue: Array<{\n    promiseFn: Promise<any>\n    task: () => void\n  }>\n\n  constructor(maxConcurrency = 5) {\n    this.#maxConcurrency = maxConcurrency\n    this.#runningCount = 0\n    this.#queue = []\n  }\n\n  enqueue<T>(promiseFn: () => Promise<T>): Promise<T> {\n    let taskResolve: (value: T | PromiseLike<T>) => void\n    let taskReject: (reason?: any) => void\n\n    const taskPromise = new Promise((resolve, reject) => {\n      taskResolve = resolve\n      taskReject = reject\n    }) as Promise<T>\n\n    const task = async () => {\n      try {\n        this.#runningCount++\n        const result = await promiseFn()\n        taskResolve(result)\n      } catch (error) {\n        taskReject(error)\n      } finally {\n        this.#runningCount--\n        this.#processNext()\n      }\n    }\n\n    const enqueueResult = { promiseFn: taskPromise, task }\n    // wonder if we should take a LIFO approach here\n    this.#queue.push(enqueueResult)\n    this.#processNext()\n\n    return taskPromise\n  }\n\n  bump(promiseFn: Promise<any>) {\n    const index = this.#queue.findIndex((item) => item.promiseFn === promiseFn)\n\n    if (index > -1) {\n      const bumpedItem = this.#queue.splice(index, 1)[0]\n      this.#queue.unshift(bumpedItem)\n      this.#processNext(true)\n    }\n  }\n\n  #processNext(forced = false) {\n    if (\n      (this.#runningCount < this.#maxConcurrency || forced) &&\n      this.#queue.length > 0\n    ) {\n      this.#queue.shift()?.task()\n    }\n  }\n}\n","import type {\n  PrefetchAction,\n  ReducerState,\n  ReadonlyReducerState,\n} from '../router-reducer-types'\nimport { NEXT_RSC_UNION_QUERY } from '../../app-router-headers'\nimport { PromiseQueue } from '../../promise-queue'\nimport {\n  getOrCreatePrefetchCacheEntry,\n  prunePrefetchCache,\n} from '../prefetch-cache-utils'\n\nexport const prefetchQueue = new PromiseQueue(5)\n\nexport function prefetchReducer(\n  state: ReadonlyReducerState,\n  action: PrefetchAction\n): ReducerState {\n  // let's prune the prefetch cache before we do anything else\n  prunePrefetchCache(state.prefetchCache)\n\n  const { url } = action\n  url.searchParams.delete(NEXT_RSC_UNION_QUERY)\n\n  getOrCreatePrefetchCacheEntry({\n    url,\n    nextUrl: state.nextUrl,\n    prefetchCache: state.prefetchCache,\n    kind: action.kind,\n    tree: state.tree,\n    buildId: state.buildId,\n    allowAliasing: true,\n  })\n\n  return state\n}\n","import {\n  fetchServerResponse,\n  type FetchServerResponseResult,\n} from './fetch-server-response'\nimport {\n  PrefetchCacheEntryStatus,\n  type PrefetchCacheEntry,\n  PrefetchKind,\n  type ReadonlyReducerState,\n} from './router-reducer-types'\nimport { prefetchQueue } from './reducers/prefetch-reducer'\n\nconst INTERCEPTION_CACHE_KEY_MARKER = '%'\n\nexport type AliasedPrefetchCacheEntry = PrefetchCacheEntry & {\n  /** This is a special property that indicates a prefetch entry associated with a different URL\n   * was returned rather than the requested URL. This signals to the router that it should only\n   * apply the part that doesn't depend on searchParams (specifically the loading state).\n   */\n  aliased?: boolean\n}\n\n/**\n * Creates a cache key for the router prefetch cache\n *\n * @param url - The URL being navigated to\n * @param nextUrl - an internal URL, primarily used for handling rewrites. Defaults to '/'.\n * @return The generated prefetch cache key.\n */\nfunction createPrefetchCacheKeyImpl(\n  url: URL,\n  includeSearchParams: boolean,\n  prefix?: string | null\n) {\n  // Initially we only use the pathname as the cache key. We don't want to include\n  // search params so that multiple URLs with the same search parameter can re-use\n  // loading states.\n  let pathnameFromUrl = url.pathname\n\n  // RSC responses can differ based on search params, specifically in the case where we aren't\n  // returning a partial response (ie with `PrefetchKind.AUTO`).\n  // In the auto case, since loading.js & layout.js won't have access to search params,\n  // we can safely re-use that cache entry. But for full prefetches, we should not\n  // re-use the cache entry as the response may differ.\n  if (includeSearchParams) {\n    // if we have a full prefetch, we can include the search param in the key,\n    // as we'll be getting back a full response. The server might have read the search\n    // params when generating the full response.\n    pathnameFromUrl += url.search\n  }\n\n  if (prefix) {\n    return `${prefix}${INTERCEPTION_CACHE_KEY_MARKER}${pathnameFromUrl}`\n  }\n\n  return pathnameFromUrl\n}\n\nfunction createPrefetchCacheKey(\n  url: URL,\n  kind: PrefetchKind | undefined,\n  nextUrl?: string | null\n) {\n  return createPrefetchCacheKeyImpl(url, kind === PrefetchKind.FULL, nextUrl)\n}\n\nfunction getExistingCacheEntry(\n  url: URL,\n  kind: PrefetchKind = PrefetchKind.TEMPORARY,\n  nextUrl: string | null,\n  prefetchCache: Map<string, PrefetchCacheEntry>,\n  allowAliasing: boolean\n): AliasedPrefetchCacheEntry | undefined {\n  // We first check if there's a more specific interception route prefetch entry\n  // This is because when we detect a prefetch that corresponds with an interception route, we prefix it with nextUrl (see `createPrefetchCacheKey`)\n  // to avoid conflicts with other pages that may have the same URL but render different things depending on the `Next-URL` header.\n  for (const maybeNextUrl of [nextUrl, null]) {\n    const cacheKeyWithParams = createPrefetchCacheKeyImpl(\n      url,\n      true,\n      maybeNextUrl\n    )\n    const cacheKeyWithoutParams = createPrefetchCacheKeyImpl(\n      url,\n      false,\n      maybeNextUrl\n    )\n\n    // First, we check if we have a cache entry that exactly matches the URL\n    const cacheKeyToUse = url.search\n      ? cacheKeyWithParams\n      : cacheKeyWithoutParams\n\n    const existingEntry = prefetchCache.get(cacheKeyToUse)\n    if (existingEntry && allowAliasing) {\n      // We know we're returning an aliased entry when the pathname matches but the search params don't,\n      const isAliased =\n        existingEntry.url.pathname === url.pathname &&\n        existingEntry.url.search !== url.search\n\n      if (isAliased) {\n        return {\n          ...existingEntry,\n          aliased: true,\n        }\n      }\n\n      return existingEntry\n    }\n\n    // If the request contains search params, and we're not doing a full prefetch, we can return the\n    // param-less entry if it exists.\n    // This is technically covered by the check at the bottom of this function, which iterates over cache entries,\n    // but lets us arrive there quicker in the param-full case.\n    const entryWithoutParams = prefetchCache.get(cacheKeyWithoutParams)\n    if (\n      process.env.NODE_ENV !== 'development' &&\n      allowAliasing &&\n      url.search &&\n      kind !== PrefetchKind.FULL &&\n      entryWithoutParams &&\n      // We shouldn't return the aliased entry if it was relocated to a new cache key.\n      // Since it's rewritten, it could respond with a completely different loading state.\n      !entryWithoutParams.key.includes(INTERCEPTION_CACHE_KEY_MARKER)\n    ) {\n      return { ...entryWithoutParams, aliased: true }\n    }\n  }\n\n  // If we've gotten to this point, we didn't find a specific cache entry that matched\n  // the request URL.\n  // We attempt a partial match by checking if there's a cache entry with the same pathname.\n  // Regardless of what we find, since it doesn't correspond with the requested URL, we'll mark it \"aliased\".\n  // This will signal to the router that it should only apply the loading state on the prefetched data.\n  if (\n    process.env.NODE_ENV !== 'development' &&\n    kind !== PrefetchKind.FULL &&\n    allowAliasing\n  ) {\n    for (const cacheEntry of prefetchCache.values()) {\n      if (\n        cacheEntry.url.pathname === url.pathname &&\n        // We shouldn't return the aliased entry if it was relocated to a new cache key.\n        // Since it's rewritten, it could respond with a completely different loading state.\n        !cacheEntry.key.includes(INTERCEPTION_CACHE_KEY_MARKER)\n      ) {\n        return { ...cacheEntry, aliased: true }\n      }\n    }\n  }\n\n  return undefined\n}\n\n/**\n * Returns a prefetch cache entry if one exists. Otherwise creates a new one and enqueues a fetch request\n * to retrieve the prefetch data from the server.\n */\nexport function getOrCreatePrefetchCacheEntry({\n  url,\n  nextUrl,\n  tree,\n  buildId,\n  prefetchCache,\n  kind,\n  allowAliasing = true,\n}: Pick<\n  ReadonlyReducerState,\n  'nextUrl' | 'prefetchCache' | 'tree' | 'buildId'\n> & {\n  url: URL\n  kind?: PrefetchKind\n  allowAliasing: boolean\n}): AliasedPrefetchCacheEntry {\n  const existingCacheEntry = getExistingCacheEntry(\n    url,\n    kind,\n    nextUrl,\n    prefetchCache,\n    allowAliasing\n  )\n\n  if (existingCacheEntry) {\n    // Grab the latest status of the cache entry and update it\n    existingCacheEntry.status = getPrefetchEntryCacheStatus(existingCacheEntry)\n\n    // when `kind` is provided, an explicit prefetch was requested.\n    // if the requested prefetch is \"full\" and the current cache entry wasn't, we want to re-prefetch with the new intent\n    const switchedToFullPrefetch =\n      existingCacheEntry.kind !== PrefetchKind.FULL &&\n      kind === PrefetchKind.FULL\n\n    if (switchedToFullPrefetch) {\n      // If we switched to a full prefetch, validate that the existing cache entry contained partial data.\n      // It's possible that the cache entry was seeded with full data but has a cache type of \"auto\" (ie when cache entries\n      // are seeded but without a prefetch intent)\n      existingCacheEntry.data.then((prefetchResponse) => {\n        const isFullPrefetch =\n          Array.isArray(prefetchResponse.flightData) &&\n          prefetchResponse.flightData.some((flightData) => {\n            // If we started rendering from the root and we returned RSC data (seedData), we already had a full prefetch.\n            return flightData.isRootRender && flightData.seedData !== null\n          })\n\n        if (!isFullPrefetch) {\n          return createLazyPrefetchEntry({\n            tree,\n            url,\n            buildId,\n            nextUrl,\n            prefetchCache,\n            // If we didn't get an explicit prefetch kind, we want to set a temporary kind\n            // rather than assuming the same intent as the previous entry, to be consistent with how we\n            // lazily create prefetch entries when intent is left unspecified.\n            kind: kind ?? PrefetchKind.TEMPORARY,\n          })\n        }\n      })\n    }\n\n    // If the existing cache entry was marked as temporary, it means it was lazily created when attempting to get an entry,\n    // where we didn't have the prefetch intent. Now that we have the intent (in `kind`), we want to update the entry to the more accurate kind.\n    if (kind && existingCacheEntry.kind === PrefetchKind.TEMPORARY) {\n      existingCacheEntry.kind = kind\n    }\n\n    // We've determined that the existing entry we found is still valid, so we return it.\n    return existingCacheEntry\n  }\n\n  // If we didn't return an entry, create a new one.\n  return createLazyPrefetchEntry({\n    tree,\n    url,\n    buildId,\n    nextUrl,\n    prefetchCache,\n    kind: kind || PrefetchKind.TEMPORARY,\n  })\n}\n\n/*\n * Used to take an existing cache entry and prefix it with the nextUrl, if it exists.\n * This ensures that we don't have conflicting cache entries for the same URL (as is the case with route interception).\n */\nfunction prefixExistingPrefetchCacheEntry({\n  url,\n  nextUrl,\n  prefetchCache,\n  existingCacheKey,\n}: Pick<ReadonlyReducerState, 'nextUrl' | 'prefetchCache'> & {\n  url: URL\n  existingCacheKey: string\n}) {\n  const existingCacheEntry = prefetchCache.get(existingCacheKey)\n  if (!existingCacheEntry) {\n    // no-op -- there wasn't an entry to move\n    return\n  }\n\n  const newCacheKey = createPrefetchCacheKey(\n    url,\n    existingCacheEntry.kind,\n    nextUrl\n  )\n  prefetchCache.set(newCacheKey, { ...existingCacheEntry, key: newCacheKey })\n  prefetchCache.delete(existingCacheKey)\n\n  return newCacheKey\n}\n\n/**\n * Use to seed the prefetch cache with data that has already been fetched.\n */\nexport function createSeededPrefetchCacheEntry({\n  nextUrl,\n  tree,\n  prefetchCache,\n  url,\n  data,\n  kind,\n}: Pick<ReadonlyReducerState, 'nextUrl' | 'tree' | 'prefetchCache'> & {\n  url: URL\n  data: FetchServerResponseResult\n  kind: PrefetchKind\n}) {\n  // The initial cache entry technically includes full data, but it isn't explicitly prefetched -- we just seed the\n  // prefetch cache so that we can skip an extra prefetch request later, since we already have the data.\n  // if the prefetch corresponds with an interception route, we use the nextUrl to prefix the cache key\n  const prefetchCacheKey = data.couldBeIntercepted\n    ? createPrefetchCacheKey(url, kind, nextUrl)\n    : createPrefetchCacheKey(url, kind)\n\n  const prefetchEntry = {\n    treeAtTimeOfPrefetch: tree,\n    data: Promise.resolve(data),\n    kind,\n    prefetchTime: Date.now(),\n    lastUsedTime: Date.now(),\n    staleTime: -1,\n    key: prefetchCacheKey,\n    status: PrefetchCacheEntryStatus.fresh,\n    url,\n  } satisfies PrefetchCacheEntry\n\n  prefetchCache.set(prefetchCacheKey, prefetchEntry)\n\n  return prefetchEntry\n}\n\n/**\n * Creates a prefetch entry entry and enqueues a fetch request to retrieve the data.\n */\nfunction createLazyPrefetchEntry({\n  url,\n  kind,\n  tree,\n  nextUrl,\n  buildId,\n  prefetchCache,\n}: Pick<\n  ReadonlyReducerState,\n  'nextUrl' | 'tree' | 'buildId' | 'prefetchCache'\n> & {\n  url: URL\n  kind: PrefetchKind\n}): PrefetchCacheEntry {\n  const prefetchCacheKey = createPrefetchCacheKey(url, kind)\n\n  // initiates the fetch request for the prefetch and attaches a listener\n  // to the promise to update the prefetch cache entry when the promise resolves (if necessary)\n  const data = prefetchQueue.enqueue(() =>\n    fetchServerResponse(url, {\n      flightRouterState: tree,\n      nextUrl,\n      buildId,\n      prefetchKind: kind,\n    }).then((prefetchResponse) => {\n      // TODO: `fetchServerResponse` should be more tighly coupled to these prefetch cache operations\n      // to avoid drift between this cache key prefixing logic\n      // (which is currently directly influenced by the server response)\n      let newCacheKey\n\n      if (prefetchResponse.couldBeIntercepted) {\n        // Determine if we need to prefix the cache key with the nextUrl\n        newCacheKey = prefixExistingPrefetchCacheEntry({\n          url,\n          existingCacheKey: prefetchCacheKey,\n          nextUrl,\n          prefetchCache,\n        })\n      }\n\n      // If the prefetch was a cache hit, we want to update the existing cache entry to reflect that it was a full prefetch.\n      // This is because we know that a static response will contain the full RSC payload, and can be updated to respect the `static`\n      // staleTime.\n      if (prefetchResponse.prerendered) {\n        const existingCacheEntry = prefetchCache.get(\n          // if we prefixed the cache key due to route interception, we want to use the new key. Otherwise we use the original key\n          newCacheKey ?? prefetchCacheKey\n        )\n        if (existingCacheEntry) {\n          existingCacheEntry.kind = PrefetchKind.FULL\n          if (prefetchResponse.staleTime !== -1) {\n            // This is the stale time that was collected by the server during\n            // static generation. Use this in place of the default stale time.\n            existingCacheEntry.staleTime = prefetchResponse.staleTime\n          }\n        }\n      }\n\n      return prefetchResponse\n    })\n  )\n\n  const prefetchEntry = {\n    treeAtTimeOfPrefetch: tree,\n    data,\n    kind,\n    prefetchTime: Date.now(),\n    lastUsedTime: null,\n    staleTime: -1,\n    key: prefetchCacheKey,\n    status: PrefetchCacheEntryStatus.fresh,\n    url,\n  }\n\n  prefetchCache.set(prefetchCacheKey, prefetchEntry)\n\n  return prefetchEntry\n}\n\nexport function prunePrefetchCache(\n  prefetchCache: ReadonlyReducerState['prefetchCache']\n) {\n  for (const [href, prefetchCacheEntry] of prefetchCache) {\n    if (\n      getPrefetchEntryCacheStatus(prefetchCacheEntry) ===\n      PrefetchCacheEntryStatus.expired\n    ) {\n      prefetchCache.delete(href)\n    }\n  }\n}\n\n// These values are set by `define-env-plugin` (based on `nextConfig.experimental.staleTimes`)\n// and default to 5 minutes (static) / 0 seconds (dynamic)\nconst DYNAMIC_STALETIME_MS =\n  Number(process.env.__NEXT_CLIENT_ROUTER_DYNAMIC_STALETIME) * 1000\n\nconst STATIC_STALETIME_MS =\n  Number(process.env.__NEXT_CLIENT_ROUTER_STATIC_STALETIME) * 1000\n\nfunction getPrefetchEntryCacheStatus({\n  kind,\n  prefetchTime,\n  lastUsedTime,\n  staleTime,\n}: PrefetchCacheEntry): PrefetchCacheEntryStatus {\n  if (staleTime !== -1) {\n    // `staleTime` is the value sent by the server during static generation.\n    // When this is available, it takes precedence over any of the heuristics\n    // that follow.\n    //\n    // TODO: When PPR is enabled, the server will *always* return a stale time\n    // when prefetching. We should never use a prefetch entry that hasn't yet\n    // received data from the server. So the only two cases should be 1) we use\n    // the server-generated stale time 2) the unresolved entry is discarded.\n    return Date.now() < prefetchTime + staleTime\n      ? PrefetchCacheEntryStatus.fresh\n      : PrefetchCacheEntryStatus.stale\n  }\n\n  // We will re-use the cache entry data for up to the `dynamic` staletime window.\n  if (Date.now() < (lastUsedTime ?? prefetchTime) + DYNAMIC_STALETIME_MS) {\n    return lastUsedTime\n      ? PrefetchCacheEntryStatus.reusable\n      : PrefetchCacheEntryStatus.fresh\n  }\n\n  // For \"auto\" prefetching, we'll re-use only the loading boundary for up to `static` staletime window.\n  // A stale entry will only re-use the `loading` boundary, not the full data.\n  // This will trigger a \"lazy fetch\" for the full data.\n  if (kind === PrefetchKind.AUTO) {\n    if (Date.now() < prefetchTime + STATIC_STALETIME_MS) {\n      return PrefetchCacheEntryStatus.stale\n    }\n  }\n\n  // for \"full\" prefetching, we'll re-use the cache entry data for up to `static` staletime window.\n  if (kind === PrefetchKind.FULL) {\n    if (Date.now() < prefetchTime + STATIC_STALETIME_MS) {\n      return PrefetchCacheEntryStatus.reusable\n    }\n  }\n\n  return PrefetchCacheEntryStatus.expired\n}\n","import type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport type { Segment } from '../../../server/app-render/types'\nimport { invalidateCacheByRouterState } from './invalidate-cache-by-router-state'\nimport { fillLazyItemsTillLeafWithHead } from './fill-lazy-items-till-leaf-with-head'\nimport { createRouterCacheKey } from './create-router-cache-key'\nimport type { PrefetchCacheEntry } from './router-reducer-types'\nimport { PAGE_SEGMENT_KEY } from '../../../shared/lib/segment'\nimport type { NormalizedFlightData } from '../../flight-data-helpers'\n\n/**\n * Common logic for filling cache with new sub tree data.\n */\nfunction fillCacheHelper(\n  newCache: CacheNode,\n  existingCache: CacheNode,\n  flightData: NormalizedFlightData,\n  prefetchEntry: PrefetchCacheEntry | undefined,\n  fillLazyItems: boolean\n): void {\n  const {\n    segmentPath,\n    seedData: cacheNodeSeedData,\n    tree: treePatch,\n    head,\n  } = flightData\n  let newCacheNode = newCache\n  let existingCacheNode = existingCache\n\n  for (let i = 0; i < segmentPath.length; i += 2) {\n    const parallelRouteKey: string = segmentPath[i]\n    const segment: Segment = segmentPath[i + 1]\n\n    // segmentPath is a repeating tuple of parallelRouteKey and segment\n    // we know we've hit the last entry we've reached our final pair\n    const isLastEntry = i === segmentPath.length - 2\n    const cacheKey = createRouterCacheKey(segment)\n\n    const existingChildSegmentMap =\n      existingCacheNode.parallelRoutes.get(parallelRouteKey)\n\n    if (!existingChildSegmentMap) {\n      // Bailout because the existing cache does not have the path to the leaf node\n      // Will trigger lazy fetch in layout-router because of missing segment\n      continue\n    }\n\n    let childSegmentMap = newCacheNode.parallelRoutes.get(parallelRouteKey)\n    if (!childSegmentMap || childSegmentMap === existingChildSegmentMap) {\n      childSegmentMap = new Map(existingChildSegmentMap)\n      newCacheNode.parallelRoutes.set(parallelRouteKey, childSegmentMap)\n    }\n\n    const existingChildCacheNode = existingChildSegmentMap.get(cacheKey)\n    let childCacheNode = childSegmentMap.get(cacheKey)\n\n    if (isLastEntry) {\n      if (\n        cacheNodeSeedData &&\n        (!childCacheNode ||\n          !childCacheNode.lazyData ||\n          childCacheNode === existingChildCacheNode)\n      ) {\n        const incomingSegment = cacheNodeSeedData[0]\n        const rsc = cacheNodeSeedData[1]\n        const loading = cacheNodeSeedData[3]\n\n        childCacheNode = {\n          lazyData: null,\n          // When `fillLazyItems` is false, we only want to fill the RSC data for the layout,\n          // not the page segment.\n          rsc:\n            fillLazyItems || incomingSegment !== PAGE_SEGMENT_KEY ? rsc : null,\n          prefetchRsc: null,\n          head: null,\n          prefetchHead: null,\n          loading,\n          parallelRoutes:\n            fillLazyItems && existingChildCacheNode\n              ? new Map(existingChildCacheNode.parallelRoutes)\n              : new Map(),\n        }\n\n        if (existingChildCacheNode && fillLazyItems) {\n          invalidateCacheByRouterState(\n            childCacheNode,\n            existingChildCacheNode,\n            treePatch\n          )\n        }\n        if (fillLazyItems) {\n          fillLazyItemsTillLeafWithHead(\n            childCacheNode,\n            existingChildCacheNode,\n            treePatch,\n            cacheNodeSeedData,\n            head,\n            prefetchEntry\n          )\n        }\n\n        childSegmentMap.set(cacheKey, childCacheNode)\n      }\n      continue\n    }\n\n    if (!childCacheNode || !existingChildCacheNode) {\n      // Bailout because the existing cache does not have the path to the leaf node\n      // Will trigger lazy fetch in layout-router because of missing segment\n      continue\n    }\n\n    if (childCacheNode === existingChildCacheNode) {\n      childCacheNode = {\n        lazyData: childCacheNode.lazyData,\n        rsc: childCacheNode.rsc,\n        prefetchRsc: childCacheNode.prefetchRsc,\n        head: childCacheNode.head,\n        prefetchHead: childCacheNode.prefetchHead,\n        parallelRoutes: new Map(childCacheNode.parallelRoutes),\n        loading: childCacheNode.loading,\n      } as CacheNode\n      childSegmentMap.set(cacheKey, childCacheNode)\n    }\n\n    // Move deeper into the cache nodes\n    newCacheNode = childCacheNode\n    existingCacheNode = existingChildCacheNode\n  }\n}\n\n/**\n * Fill cache with rsc based on flightDataPath\n */\nexport function fillCacheWithNewSubTreeData(\n  newCache: CacheNode,\n  existingCache: CacheNode,\n  flightData: NormalizedFlightData,\n  prefetchEntry?: PrefetchCacheEntry\n): void {\n  fillCacheHelper(newCache, existingCache, flightData, prefetchEntry, true)\n}\n\nexport function fillCacheWithNewSubTreeDataButOnlyLoading(\n  newCache: CacheNode,\n  existingCache: CacheNode,\n  flightData: NormalizedFlightData,\n  prefetchEntry?: PrefetchCacheEntry\n): void {\n  fillCacheHelper(newCache, existingCache, flightData, prefetchEntry, false)\n}\n","import type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport { fillLazyItemsTillLeafWithHead } from './fill-lazy-items-till-leaf-with-head'\nimport { fillCacheWithNewSubTreeData } from './fill-cache-with-new-subtree-data'\nimport type { PrefetchCacheEntry } from './router-reducer-types'\nimport type { NormalizedFlightData } from '../../flight-data-helpers'\n\nexport function applyFlightData(\n  existingCache: CacheNode,\n  cache: CacheNode,\n  flightData: NormalizedFlightData,\n  prefetchEntry?: PrefetchCacheEntry\n): boolean {\n  // The one before last item is the router state tree patch\n  const { tree: treePatch, seedData, head, isRootRender } = flightData\n\n  // Handles case where prefetch only returns the router tree patch without rendered components.\n  if (seedData === null) {\n    return false\n  }\n\n  if (isRootRender) {\n    const rsc = seedData[1]\n    const loading = seedData[3]\n    cache.loading = loading\n    cache.rsc = rsc\n    // This is a PPR-only field. When PPR is enabled, we shouldn't hit\n    // this path during a navigation, but until PPR is fully implemented\n    // yet it's possible the existing node does have a non-null\n    // `prefetchRsc`. As an incremental step, we'll just de-opt to the\n    // old behavior — no PPR value.\n    cache.prefetchRsc = null\n    fillLazyItemsTillLeafWithHead(\n      cache,\n      existingCache,\n      treePatch,\n      seedData,\n      head,\n      prefetchEntry\n    )\n  } else {\n    // Copy rsc for the root node of the cache.\n    cache.rsc = existingCache.rsc\n    // This is a PPR-only field. Unlike the previous branch, since we're\n    // just cloning the existing cache node, we might as well keep the\n    // PPR value, if it exists.\n    cache.prefetchRsc = existingCache.prefetchRsc\n    cache.parallelRoutes = new Map(existingCache.parallelRoutes)\n    cache.loading = existingCache.loading\n    // Create a copy of the existing cache with the rsc applied.\n    fillCacheWithNewSubTreeData(cache, existingCache, flightData, prefetchEntry)\n  }\n\n  return true\n}\n","import type { FlightRouterState } from '../../../server/app-render/types'\nimport type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport type { AppRouterState } from './router-reducer-types'\nimport { applyFlightData } from './apply-flight-data'\nimport { fetchServerResponse } from './fetch-server-response'\nimport { PAGE_SEGMENT_KEY } from '../../../shared/lib/segment'\n\ninterface RefreshInactiveParallelSegments {\n  state: AppRouterState\n  updatedTree: FlightRouterState\n  updatedCache: CacheNode\n  includeNextUrl: boolean\n  canonicalUrl: string\n}\n\n/**\n * Refreshes inactive segments that are still in the current FlightRouterState.\n * A segment is considered \"inactive\" when the server response indicates it didn't match to a page component.\n * This happens during a soft-navigation, where the server will want to patch in the segment\n * with the \"default\" component, but we explicitly ignore the server in this case\n * and keep the existing state for that segment. New data for inactive segments are inherently\n * not part of the server response when we patch the tree, because they were associated with a response\n * from an earlier navigation/request. For each segment, once it becomes \"active\", we encode the URL that provided\n * the data for it. This function traverses parallel routes looking for these markers so that it can re-fetch\n * and patch the new data into the tree.\n */\nexport async function refreshInactiveParallelSegments(\n  options: RefreshInactiveParallelSegments\n) {\n  const fetchedSegments = new Set<string>()\n  await refreshInactiveParallelSegmentsImpl({\n    ...options,\n    rootTree: options.updatedTree,\n    fetchedSegments,\n  })\n}\n\nasync function refreshInactiveParallelSegmentsImpl({\n  state,\n  updatedTree,\n  updatedCache,\n  includeNextUrl,\n  fetchedSegments,\n  rootTree = updatedTree,\n  canonicalUrl,\n}: RefreshInactiveParallelSegments & {\n  fetchedSegments: Set<string>\n  rootTree: FlightRouterState\n}) {\n  const [, parallelRoutes, refetchPath, refetchMarker] = updatedTree\n  const fetchPromises = []\n\n  if (\n    refetchPath &&\n    refetchPath !== canonicalUrl &&\n    refetchMarker === 'refresh' &&\n    // it's possible for the tree to contain multiple segments that contain data at the same URL\n    // we keep track of them so we can dedupe the requests\n    !fetchedSegments.has(refetchPath)\n  ) {\n    fetchedSegments.add(refetchPath) // Mark this URL as fetched\n\n    // Eagerly kick off the fetch for the refetch path & the parallel routes. This should be fine to do as they each operate\n    // independently on their own cache nodes, and `applyFlightData` will copy anything it doesn't care about from the existing cache.\n    const fetchPromise = fetchServerResponse(\n      new URL(refetchPath, location.origin),\n      {\n        // refetch from the root of the updated tree, otherwise it will be scoped to the current segment\n        // and might not contain the data we need to patch in interception route data (such as dynamic params from a previous segment)\n        flightRouterState: [rootTree[0], rootTree[1], rootTree[2], 'refetch'],\n        nextUrl: includeNextUrl ? state.nextUrl : null,\n        buildId: state.buildId,\n      }\n    ).then(({ flightData }) => {\n      if (typeof flightData !== 'string') {\n        for (const flightDataPath of flightData) {\n          // we only pass the new cache as this function is called after clearing the router cache\n          // and filling in the new page data from the server. Meaning the existing cache is actually the cache that's\n          // just been created & has been written to, but hasn't been \"committed\" yet.\n          applyFlightData(updatedCache, updatedCache, flightDataPath)\n        }\n      } else {\n        // When flightData is a string, it suggests that the server response should have triggered an MPA navigation\n        // I'm not 100% sure of this decision, but it seems unlikely that we'd want to introduce a redirect side effect\n        // when refreshing on-screen data, so handling this has been ommitted.\n      }\n    })\n\n    fetchPromises.push(fetchPromise)\n  }\n\n  for (const key in parallelRoutes) {\n    const parallelFetchPromise = refreshInactiveParallelSegmentsImpl({\n      state,\n      updatedTree: parallelRoutes[key],\n      updatedCache,\n      includeNextUrl,\n      fetchedSegments,\n      rootTree,\n      canonicalUrl,\n    })\n\n    fetchPromises.push(parallelFetchPromise)\n  }\n\n  await Promise.all(fetchPromises)\n}\n\n/**\n * Walks the current parallel segments to determine if they are \"active\".\n * An active parallel route will have a `__PAGE__` segment in the FlightRouterState.\n * As opposed to a `__DEFAULT__` segment, which means there was no match for that parallel route.\n * We add a special marker here so that we know how to refresh its data when the router is revalidated.\n */\nexport function addRefreshMarkerToActiveParallelSegments(\n  tree: FlightRouterState,\n  path: string\n) {\n  const [segment, parallelRoutes, , refetchMarker] = tree\n  // a page segment might also contain concatenated search params, so we do a partial match on the key\n  if (segment.includes(PAGE_SEGMENT_KEY) && refetchMarker !== 'refresh') {\n    tree[2] = path\n    tree[3] = 'refresh'\n  }\n\n  for (const key in parallelRoutes) {\n    addRefreshMarkerToActiveParallelSegments(parallelRoutes[key], path)\n  }\n}\n","import type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport type { FlightDataPath } from '../../../server/app-render/types'\n\nimport { createHrefFromUrl } from './create-href-from-url'\nimport { fillLazyItemsTillLeafWithHead } from './fill-lazy-items-till-leaf-with-head'\nimport { extractPathFromFlightRouterState } from './compute-changed-path'\nimport { createSeededPrefetchCacheEntry } from './prefetch-cache-utils'\nimport { PrefetchKind, type PrefetchCacheEntry } from './router-reducer-types'\nimport { addRefreshMarkerToActiveParallelSegments } from './refetch-inactive-parallel-segments'\nimport { getFlightDataPartsFromPath } from '../../flight-data-helpers'\n\nexport interface InitialRouterStateParameters {\n  buildId: string\n  initialCanonicalUrlParts: string[]\n  initialParallelRoutes: CacheNode['parallelRoutes']\n  initialFlightData: FlightDataPath[]\n  location: Location | null\n  couldBeIntercepted: boolean\n  postponed: boolean\n  prerendered: boolean\n}\n\nexport function createInitialRouterState({\n  buildId,\n  initialFlightData,\n  initialCanonicalUrlParts,\n  initialParallelRoutes,\n  location,\n  couldBeIntercepted,\n  postponed,\n  prerendered,\n}: InitialRouterStateParameters) {\n  // When initialized on the server, the canonical URL is provided as an array of parts.\n  // This is to ensure that when the RSC payload streamed to the client, crawlers don't interpret it\n  // as a URL that should be crawled.\n  const initialCanonicalUrl = initialCanonicalUrlParts.join('/')\n  const normalizedFlightData = getFlightDataPartsFromPath(initialFlightData[0])\n  const {\n    tree: initialTree,\n    seedData: initialSeedData,\n    head: initialHead,\n  } = normalizedFlightData\n  const isServer = !location\n  // For the SSR render, seed data should always be available (we only send back a `null` response\n  // in the case of a `loading` segment, pre-PPR.)\n  const rsc = initialSeedData?.[1]\n  const loading = initialSeedData?.[3] ?? null\n\n  const cache: CacheNode = {\n    lazyData: null,\n    rsc,\n    prefetchRsc: null,\n    head: null,\n    prefetchHead: null,\n    // The cache gets seeded during the first render. `initialParallelRoutes` ensures the cache from the first render is there during the second render.\n    parallelRoutes: isServer ? new Map() : initialParallelRoutes,\n    loading,\n  }\n\n  const canonicalUrl =\n    // location.href is read as the initial value for canonicalUrl in the browser\n    // This is safe to do as canonicalUrl can't be rendered, it's only used to control the history updates in the useEffect further down in this file.\n    location\n      ? // window.location does not have the same type as URL but has all the fields createHrefFromUrl needs.\n        createHrefFromUrl(location)\n      : initialCanonicalUrl\n\n  addRefreshMarkerToActiveParallelSegments(initialTree, canonicalUrl)\n\n  const prefetchCache = new Map<string, PrefetchCacheEntry>()\n\n  // When the cache hasn't been seeded yet we fill the cache with the head.\n  if (initialParallelRoutes === null || initialParallelRoutes.size === 0) {\n    fillLazyItemsTillLeafWithHead(\n      cache,\n      undefined,\n      initialTree,\n      initialSeedData,\n      initialHead\n    )\n  }\n\n  const initialState = {\n    buildId,\n    tree: initialTree,\n    cache,\n    prefetchCache,\n    pushRef: {\n      pendingPush: false,\n      mpaNavigation: false,\n      // First render needs to preserve the previous window.history.state\n      // to avoid it being overwritten on navigation back/forward with MPA Navigation.\n      preserveCustomHistoryState: true,\n    },\n    focusAndScrollRef: {\n      apply: false,\n      onlyHashChange: false,\n      hashFragment: null,\n      segmentPaths: [],\n    },\n    canonicalUrl,\n    nextUrl:\n      // the || operator is intentional, the pathname can be an empty string\n      (extractPathFromFlightRouterState(initialTree) || location?.pathname) ??\n      null,\n  }\n\n  if (location) {\n    // Seed the prefetch cache with this page's data.\n    // This is to prevent needlessly re-prefetching a page that is already reusable,\n    // and will avoid triggering a loading state/data fetch stall when navigating back to the page.\n    const url = new URL(\n      `${location.pathname}${location.search}`,\n      location.origin\n    )\n\n    createSeededPrefetchCacheEntry({\n      url,\n      data: {\n        flightData: [normalizedFlightData],\n        canonicalUrl: undefined,\n        couldBeIntercepted: !!couldBeIntercepted,\n        prerendered,\n        postponed,\n        // TODO: The initial RSC payload includes both static and dynamic data\n        // in the same response, even if PPR is enabled. So if there's any\n        // dynamic data at all, we can't set a stale time. In the future we may\n        // add a way to split a single Flight stream into static and dynamic\n        // parts. But in the meantime we should at least make this work for\n        // fully static pages.\n        staleTime: -1,\n      },\n      tree: initialState.tree,\n      prefetchCache: initialState.prefetchCache,\n      nextUrl: initialState.nextUrl,\n      kind: prerendered ? PrefetchKind.FULL : PrefetchKind.AUTO,\n    })\n  }\n\n  return initialState\n}\n","import type {\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../../../server/app-render/types'\nimport { DEFAULT_SEGMENT_KEY } from '../../../shared/lib/segment'\nimport { getNextFlightSegmentPath } from '../../flight-data-helpers'\nimport { matchSegment } from '../match-segments'\nimport { addRefreshMarkerToActiveParallelSegments } from './refetch-inactive-parallel-segments'\n\n/**\n * Deep merge of the two router states. Parallel route keys are preserved if the patch doesn't have them.\n */\nfunction applyPatch(\n  initialTree: FlightRouterState,\n  patchTree: FlightRouterState\n): FlightRouterState {\n  const [initialSegment, initialParallelRoutes] = initialTree\n  const [patchSegment, patchParallelRoutes] = patchTree\n\n  // if the applied patch segment is __DEFAULT__ then it can be ignored in favor of the initial tree\n  // this is because the __DEFAULT__ segment is used as a placeholder on navigation\n  if (\n    patchSegment === DEFAULT_SEGMENT_KEY &&\n    initialSegment !== DEFAULT_SEGMENT_KEY\n  ) {\n    return initialTree\n  }\n\n  if (matchSegment(initialSegment, patchSegment)) {\n    const newParallelRoutes: FlightRouterState[1] = {}\n    for (const key in initialParallelRoutes) {\n      const isInPatchTreeParallelRoutes =\n        typeof patchParallelRoutes[key] !== 'undefined'\n      if (isInPatchTreeParallelRoutes) {\n        newParallelRoutes[key] = applyPatch(\n          initialParallelRoutes[key],\n          patchParallelRoutes[key]\n        )\n      } else {\n        newParallelRoutes[key] = initialParallelRoutes[key]\n      }\n    }\n\n    for (const key in patchParallelRoutes) {\n      if (newParallelRoutes[key]) {\n        continue\n      }\n\n      newParallelRoutes[key] = patchParallelRoutes[key]\n    }\n\n    const tree: FlightRouterState = [initialSegment, newParallelRoutes]\n\n    // Copy over the existing tree\n    if (initialTree[2]) {\n      tree[2] = initialTree[2]\n    }\n\n    if (initialTree[3]) {\n      tree[3] = initialTree[3]\n    }\n\n    if (initialTree[4]) {\n      tree[4] = initialTree[4]\n    }\n\n    return tree\n  }\n\n  return patchTree\n}\n\n/**\n * Apply the router state from the Flight response, but skip patching default segments.\n * Useful for patching the router cache when navigating, where we persist the existing default segment if there isn't a new one.\n * Creates a new router state tree.\n */\nexport function applyRouterStatePatchToTree(\n  flightSegmentPath: FlightSegmentPath,\n  flightRouterState: FlightRouterState,\n  treePatch: FlightRouterState,\n  path: string\n): FlightRouterState | null {\n  const [segment, parallelRoutes, url, refetch, isRootLayout] =\n    flightRouterState\n\n  // Root refresh\n  if (flightSegmentPath.length === 1) {\n    const tree: FlightRouterState = applyPatch(flightRouterState, treePatch)\n\n    addRefreshMarkerToActiveParallelSegments(tree, path)\n\n    return tree\n  }\n\n  const [currentSegment, parallelRouteKey] = flightSegmentPath\n\n  // Tree path returned from the server should always match up with the current tree in the browser\n  if (!matchSegment(currentSegment, segment)) {\n    return null\n  }\n\n  const lastSegment = flightSegmentPath.length === 2\n\n  let parallelRoutePatch\n  if (lastSegment) {\n    parallelRoutePatch = applyPatch(parallelRoutes[parallelRouteKey], treePatch)\n  } else {\n    parallelRoutePatch = applyRouterStatePatchToTree(\n      getNextFlightSegmentPath(flightSegmentPath),\n      parallelRoutes[parallelRouteKey],\n      treePatch,\n      path\n    )\n\n    if (parallelRoutePatch === null) {\n      return null\n    }\n  }\n\n  const tree: FlightRouterState = [\n    flightSegmentPath[0],\n    {\n      ...parallelRoutes,\n      [parallelRouteKey]: parallelRoutePatch,\n    },\n    url,\n    refetch,\n  ]\n\n  // Current segment is the root layout\n  if (isRootLayout) {\n    tree[4] = true\n  }\n\n  addRefreshMarkerToActiveParallelSegments(tree, path)\n\n  return tree\n}\n","import type {\n  CacheNodeSeedData,\n  FlightRouterState,\n  FlightSegmentPath,\n  Segment,\n} from '../../../server/app-render/types'\nimport type {\n  CacheNode,\n  ChildSegmentMap,\n  ReadyCacheNode,\n} from '../../../shared/lib/app-router-context.shared-runtime'\nimport { DEFAULT_SEGMENT_KEY } from '../../../shared/lib/segment'\nimport { matchSegment } from '../match-segments'\nimport { createRouterCacheKey } from './create-router-cache-key'\nimport type { FetchServerResponseResult } from './fetch-server-response'\n\n// This is yet another tree type that is used to track pending promises that\n// need to be fulfilled once the dynamic data is received. The terminal nodes of\n// this tree represent the new Cache Node trees that were created during this\n// request. We can't use the Cache Node tree or Route State tree directly\n// because those include reused nodes, too. This tree is discarded as soon as\n// the navigation response is received.\ntype Task = {\n  // The router state that corresponds to the tree that this Task represents.\n  route: FlightRouterState\n  // This is usually non-null. It represents a brand new Cache Node tree whose\n  // data is still pending. If it's null, it means there's no pending data but\n  // the client patched the router state.\n  node: CacheNode | null\n  children: Map<string, Task> | null\n}\n\n// Creates a new Cache Node tree (i.e. copy-on-write) that represents the\n// optimistic result of a navigation, using both the current Cache Node tree and\n// data that was prefetched prior to navigation.\n//\n// At the moment we call this function, we haven't yet received the navigation\n// response from the server. It could send back something completely different\n// from the tree that was prefetched — due to rewrites, default routes, parallel\n// routes, etc.\n//\n// But in most cases, it will return the same tree that we prefetched, just with\n// the dynamic holes filled in. So we optimistically assume this will happen,\n// and accept that the real result could be arbitrarily different.\n//\n// We'll reuse anything that was already in the previous tree, since that's what\n// the server does.\n//\n// New segments (ones that don't appear in the old tree) are assigned an\n// unresolved promise. The data for these promises will be fulfilled later, when\n// the navigation response is received.\n//\n// The tree can be rendered immediately after it is created (that's why this is\n// a synchronous function). Any new trees that do not have prefetch data will\n// suspend during rendering, until the dynamic data streams in.\n//\n// Returns a Task object, which contains both the updated Cache Node and a path\n// to the pending subtrees that need to be resolved by the navigation response.\n//\n// A return value of `null` means there were no changes, and the previous tree\n// can be reused without initiating a server request.\nexport function updateCacheNodeOnNavigation(\n  oldCacheNode: CacheNode,\n  oldRouterState: FlightRouterState,\n  newRouterState: FlightRouterState,\n  prefetchData: CacheNodeSeedData,\n  prefetchHead: React.ReactNode\n): Task | null {\n  // Diff the old and new trees to reuse the shared layouts.\n  const oldRouterStateChildren = oldRouterState[1]\n  const newRouterStateChildren = newRouterState[1]\n  const prefetchDataChildren = prefetchData[2]\n\n  const oldParallelRoutes = oldCacheNode.parallelRoutes\n\n  // Clone the current set of segment children, even if they aren't active in\n  // the new tree.\n  // TODO: We currently retain all the inactive segments indefinitely, until\n  // there's an explicit refresh, or a parent layout is lazily refreshed. We\n  // rely on this for popstate navigations, which update the Router State Tree\n  // but do not eagerly perform a data fetch, because they expect the segment\n  // data to already be in the Cache Node tree. For highly static sites that\n  // are mostly read-only, this may happen only rarely, causing memory to\n  // leak. We should figure out a better model for the lifetime of inactive\n  // segments, so we can maintain instant back/forward navigations without\n  // leaking memory indefinitely.\n  const prefetchParallelRoutes = new Map(oldParallelRoutes)\n\n  // As we diff the trees, we may sometimes modify (copy-on-write, not mutate)\n  // the Route Tree that was returned by the server — for example, in the case\n  // of default parallel routes, we preserve the currently active segment. To\n  // avoid mutating the original tree, we clone the router state children along\n  // the return path.\n  let patchedRouterStateChildren: {\n    [parallelRouteKey: string]: FlightRouterState\n  } = {}\n  let taskChildren = null\n\n  // For most navigations, we need to issue a \"dynamic\" request to fetch the\n  // full RSC data from the server since during rendering, we'll only serve\n  // the prefetch shell. For some navigations, we re-use the existing cache node\n  // (via `spawnReusedTask`), and don't actually need fresh data from the server.\n  // In those cases, we use this `needsDynamicRequest` flag to return a `null`\n  // cache node, which signals to the caller that we don't need to issue a\n  // dynamic request. We start off with a `false` value, and then for each parallel\n  // route, we set it to `true` if we encounter a segment that needs a dynamic request.\n  let needsDynamicRequest = false\n\n  for (let parallelRouteKey in newRouterStateChildren) {\n    const newRouterStateChild: FlightRouterState =\n      newRouterStateChildren[parallelRouteKey]\n    const oldRouterStateChild: FlightRouterState | void =\n      oldRouterStateChildren[parallelRouteKey]\n    const oldSegmentMapChild = oldParallelRoutes.get(parallelRouteKey)\n    const prefetchDataChild: CacheNodeSeedData | void | null =\n      prefetchDataChildren[parallelRouteKey]\n\n    const newSegmentChild = newRouterStateChild[0]\n    const newSegmentKeyChild = createRouterCacheKey(newSegmentChild)\n\n    const oldSegmentChild =\n      oldRouterStateChild !== undefined ? oldRouterStateChild[0] : undefined\n\n    const oldCacheNodeChild =\n      oldSegmentMapChild !== undefined\n        ? oldSegmentMapChild.get(newSegmentKeyChild)\n        : undefined\n\n    let taskChild: Task | null\n    if (newSegmentChild === DEFAULT_SEGMENT_KEY) {\n      // This is another kind of leaf segment — a default route.\n      //\n      // Default routes have special behavior. When there's no matching segment\n      // for a parallel route, Next.js preserves the currently active segment\n      // during a client navigation — but not for initial render. The server\n      // leaves it to the client to account for this. So we need to handle\n      // it here.\n      if (oldRouterStateChild !== undefined) {\n        // Reuse the existing Router State for this segment. We spawn a \"task\"\n        // just to keep track of the updated router state; unlike most, it's\n        // already fulfilled and won't be affected by the dynamic response.\n        taskChild = spawnReusedTask(oldRouterStateChild)\n      } else {\n        // There's no currently active segment. Switch to the \"create\" path.\n        taskChild = spawnPendingTask(\n          newRouterStateChild,\n          prefetchDataChild !== undefined ? prefetchDataChild : null,\n          prefetchHead\n        )\n      }\n    } else if (\n      oldSegmentChild !== undefined &&\n      matchSegment(newSegmentChild, oldSegmentChild)\n    ) {\n      if (\n        oldCacheNodeChild !== undefined &&\n        oldRouterStateChild !== undefined\n      ) {\n        // This segment exists in both the old and new trees.\n        if (prefetchDataChild !== undefined && prefetchDataChild !== null) {\n          // Recursively update the children.\n          taskChild = updateCacheNodeOnNavigation(\n            oldCacheNodeChild,\n            oldRouterStateChild,\n            newRouterStateChild,\n            prefetchDataChild,\n            prefetchHead\n          )\n        } else {\n          // The server didn't send any prefetch data for this segment. This\n          // shouldn't happen because the Route Tree and the Seed Data tree\n          // should always be the same shape, but until we unify those types\n          // it's still possible. For now we're going to deopt and trigger a\n          // lazy fetch during render.\n          taskChild = spawnTaskForMissingData(newRouterStateChild)\n        }\n      } else {\n        // Either there's no existing Cache Node for this segment, or this\n        // segment doesn't exist in the old Router State tree. Switch to the\n        // \"create\" path.\n        taskChild = spawnPendingTask(\n          newRouterStateChild,\n          prefetchDataChild !== undefined ? prefetchDataChild : null,\n          prefetchHead\n        )\n      }\n    } else {\n      // This is a new tree. Switch to the \"create\" path.\n      taskChild = spawnPendingTask(\n        newRouterStateChild,\n        prefetchDataChild !== undefined ? prefetchDataChild : null,\n        prefetchHead\n      )\n    }\n\n    if (taskChild !== null) {\n      // Something changed in the child tree. Keep track of the child task.\n      if (taskChildren === null) {\n        taskChildren = new Map()\n      }\n      taskChildren.set(parallelRouteKey, taskChild)\n      const newCacheNodeChild = taskChild.node\n      if (newCacheNodeChild !== null) {\n        const newSegmentMapChild: ChildSegmentMap = new Map(oldSegmentMapChild)\n        newSegmentMapChild.set(newSegmentKeyChild, newCacheNodeChild)\n        prefetchParallelRoutes.set(parallelRouteKey, newSegmentMapChild)\n        // a non-null taskChild.node means we're waiting for a dynamic request to\n        // fill in the missing data\n        needsDynamicRequest = true\n      }\n\n      // The child tree's route state may be different from the prefetched\n      // route sent by the server. We need to clone it as we traverse back up\n      // the tree.\n      patchedRouterStateChildren[parallelRouteKey] = taskChild.route\n    } else {\n      // The child didn't change. We can use the prefetched router state.\n      patchedRouterStateChildren[parallelRouteKey] = newRouterStateChild\n    }\n  }\n\n  if (taskChildren === null) {\n    // No new tasks were spawned.\n    return null\n  }\n\n  const newCacheNode: ReadyCacheNode = {\n    lazyData: null,\n    rsc: oldCacheNode.rsc,\n    // We intentionally aren't updating the prefetchRsc field, since this node\n    // is already part of the current tree, because it would be weird for\n    // prefetch data to be newer than the final data. It probably won't ever be\n    // observable anyway, but it could happen if the segment is unmounted then\n    // mounted again, because LayoutRouter will momentarily switch to rendering\n    // prefetchRsc, via useDeferredValue.\n    prefetchRsc: oldCacheNode.prefetchRsc,\n    head: oldCacheNode.head,\n    prefetchHead: oldCacheNode.prefetchHead,\n    loading: oldCacheNode.loading,\n\n    // Everything is cloned except for the children, which we computed above.\n    parallelRoutes: prefetchParallelRoutes,\n  }\n\n  return {\n    // Return a cloned copy of the router state with updated children.\n    route: patchRouterStateWithNewChildren(\n      newRouterState,\n      patchedRouterStateChildren\n    ),\n    // Only return the new cache node if there are pending tasks that need to be resolved\n    // by the dynamic data from the server. If they don't, we don't need to trigger a dynamic request.\n    node: needsDynamicRequest ? newCacheNode : null,\n    children: taskChildren,\n  }\n}\n\nfunction patchRouterStateWithNewChildren(\n  baseRouterState: FlightRouterState,\n  newChildren: { [parallelRouteKey: string]: FlightRouterState }\n): FlightRouterState {\n  const clone: FlightRouterState = [baseRouterState[0], newChildren]\n  // Based on equivalent logic in apply-router-state-patch-to-tree, but should\n  // confirm whether we need to copy all of these fields. Not sure the server\n  // ever sends, e.g. the refetch marker.\n  if (2 in baseRouterState) {\n    clone[2] = baseRouterState[2]\n  }\n  if (3 in baseRouterState) {\n    clone[3] = baseRouterState[3]\n  }\n  if (4 in baseRouterState) {\n    clone[4] = baseRouterState[4]\n  }\n  return clone\n}\n\nfunction spawnPendingTask(\n  routerState: FlightRouterState,\n  prefetchData: CacheNodeSeedData | null,\n  prefetchHead: React.ReactNode\n): Task {\n  // Create a task that will later be fulfilled by data from the server.\n  const pendingCacheNode = createPendingCacheNode(\n    routerState,\n    prefetchData,\n    prefetchHead\n  )\n  return {\n    route: routerState,\n    node: pendingCacheNode,\n    children: null,\n  }\n}\n\nfunction spawnReusedTask(reusedRouterState: FlightRouterState): Task {\n  // Create a task that reuses an existing segment, e.g. when reusing\n  // the current active segment in place of a default route.\n  return {\n    route: reusedRouterState,\n    node: null,\n    children: null,\n  }\n}\n\nfunction spawnTaskForMissingData(routerState: FlightRouterState): Task {\n  // Create a task for a new subtree that wasn't prefetched by the server.\n  // This shouldn't really ever happen but it's here just in case the Seed Data\n  // Tree and the Router State Tree disagree unexpectedly.\n  const pendingCacheNode = createPendingCacheNode(routerState, null, null)\n  return {\n    route: routerState,\n    node: pendingCacheNode,\n    children: null,\n  }\n}\n\n// Writes a dynamic server response into the tree created by\n// updateCacheNodeOnNavigation. All pending promises that were spawned by the\n// navigation will be resolved, either with dynamic data from the server, or\n// `null` to indicate that the data is missing.\n//\n// A `null` value will trigger a lazy fetch during render, which will then patch\n// up the tree using the same mechanism as the non-PPR implementation\n// (serverPatchReducer).\n//\n// Usually, the server will respond with exactly the subset of data that we're\n// waiting for — everything below the nearest shared layout. But technically,\n// the server can return anything it wants.\n//\n// This does _not_ create a new tree; it modifies the existing one in place.\n// Which means it must follow the Suspense rules of cache safety.\nexport function listenForDynamicRequest(\n  task: Task,\n  responsePromise: Promise<FetchServerResponseResult>\n) {\n  responsePromise.then(\n    ({ flightData }: FetchServerResponseResult) => {\n      for (const normalizedFlightData of flightData) {\n        if (typeof normalizedFlightData === 'string') {\n          // Happens when navigating to page in `pages` from `app`. We shouldn't\n          // get here because should have already handled this during\n          // the prefetch.\n          continue\n        }\n\n        const {\n          segmentPath,\n          tree: serverRouterState,\n          seedData: dynamicData,\n          head: dynamicHead,\n        } = normalizedFlightData\n\n        if (!dynamicData) {\n          // This shouldn't happen. PPR should always send back a response.\n          // However, `FlightDataPath` is a shared type and the pre-PPR handling of\n          // this might return null.\n          continue\n        }\n\n        writeDynamicDataIntoPendingTask(\n          task,\n          segmentPath,\n          serverRouterState,\n          dynamicData,\n          dynamicHead\n        )\n      }\n\n      // Now that we've exhausted all the data we received from the server, if\n      // there are any remaining pending tasks in the tree, abort them now.\n      // If there's any missing data, it will trigger a lazy fetch.\n      abortTask(task, null)\n    },\n    (error: any) => {\n      // This will trigger an error during render\n      abortTask(task, error)\n    }\n  )\n}\n\nfunction writeDynamicDataIntoPendingTask(\n  rootTask: Task,\n  segmentPath: FlightSegmentPath,\n  serverRouterState: FlightRouterState,\n  dynamicData: CacheNodeSeedData,\n  dynamicHead: React.ReactNode\n) {\n  // The data sent by the server represents only a subtree of the app. We need\n  // to find the part of the task tree that matches the server response, and\n  // fulfill it using the dynamic data.\n  //\n  // segmentPath represents the parent path of subtree. It's a repeating pattern\n  // of parallel route key and segment:\n  //\n  //   [string, Segment, string, Segment, string, Segment, ...]\n  //\n  // Iterate through the path and finish any tasks that match this payload.\n  let task = rootTask\n  for (let i = 0; i < segmentPath.length; i += 2) {\n    const parallelRouteKey: string = segmentPath[i]\n    const segment: Segment = segmentPath[i + 1]\n    const taskChildren = task.children\n    if (taskChildren !== null) {\n      const taskChild = taskChildren.get(parallelRouteKey)\n      if (taskChild !== undefined) {\n        const taskSegment = taskChild.route[0]\n        if (matchSegment(segment, taskSegment)) {\n          // Found a match for this task. Keep traversing down the task tree.\n          task = taskChild\n          continue\n        }\n      }\n    }\n    // We didn't find a child task that matches the server data. Exit. We won't\n    // abort the task, though, because a different FlightDataPath may be able to\n    // fulfill it (see loop in listenForDynamicRequest). We only abort tasks\n    // once we've run out of data.\n    return\n  }\n\n  finishTaskUsingDynamicDataPayload(\n    task,\n    serverRouterState,\n    dynamicData,\n    dynamicHead\n  )\n}\n\nfunction finishTaskUsingDynamicDataPayload(\n  task: Task,\n  serverRouterState: FlightRouterState,\n  dynamicData: CacheNodeSeedData,\n  dynamicHead: React.ReactNode\n) {\n  // dynamicData may represent a larger subtree than the task. Before we can\n  // finish the task, we need to line them up.\n  const taskChildren = task.children\n  const taskNode = task.node\n  if (taskChildren === null) {\n    // We've reached the leaf node of the pending task. The server data tree\n    // lines up the pending Cache Node tree. We can now switch to the\n    // normal algorithm.\n    if (taskNode !== null) {\n      finishPendingCacheNode(\n        taskNode,\n        task.route,\n        serverRouterState,\n        dynamicData,\n        dynamicHead\n      )\n      // Null this out to indicate that the task is complete.\n      task.node = null\n    }\n    return\n  }\n  // The server returned more data than we need to finish the task. Skip over\n  // the extra segments until we reach the leaf task node.\n  const serverChildren = serverRouterState[1]\n  const dynamicDataChildren = dynamicData[2]\n\n  for (const parallelRouteKey in serverRouterState) {\n    const serverRouterStateChild: FlightRouterState =\n      serverChildren[parallelRouteKey]\n    const dynamicDataChild: CacheNodeSeedData | null | void =\n      dynamicDataChildren[parallelRouteKey]\n\n    const taskChild = taskChildren.get(parallelRouteKey)\n    if (taskChild !== undefined) {\n      const taskSegment = taskChild.route[0]\n      if (\n        matchSegment(serverRouterStateChild[0], taskSegment) &&\n        dynamicDataChild !== null &&\n        dynamicDataChild !== undefined\n      ) {\n        // Found a match for this task. Keep traversing down the task tree.\n        return finishTaskUsingDynamicDataPayload(\n          taskChild,\n          serverRouterStateChild,\n          dynamicDataChild,\n          dynamicHead\n        )\n      }\n    }\n    // We didn't find a child task that matches the server data. We won't abort\n    // the task, though, because a different FlightDataPath may be able to\n    // fulfill it (see loop in listenForDynamicRequest). We only abort tasks\n    // once we've run out of data.\n  }\n}\n\nfunction createPendingCacheNode(\n  routerState: FlightRouterState,\n  prefetchData: CacheNodeSeedData | null,\n  prefetchHead: React.ReactNode\n): ReadyCacheNode {\n  const routerStateChildren = routerState[1]\n  const prefetchDataChildren = prefetchData !== null ? prefetchData[2] : null\n\n  const parallelRoutes = new Map()\n  for (let parallelRouteKey in routerStateChildren) {\n    const routerStateChild: FlightRouterState =\n      routerStateChildren[parallelRouteKey]\n    const prefetchDataChild: CacheNodeSeedData | null | void =\n      prefetchDataChildren !== null\n        ? prefetchDataChildren[parallelRouteKey]\n        : null\n\n    const segmentChild = routerStateChild[0]\n    const segmentKeyChild = createRouterCacheKey(segmentChild)\n\n    const newCacheNodeChild = createPendingCacheNode(\n      routerStateChild,\n      prefetchDataChild === undefined ? null : prefetchDataChild,\n      prefetchHead\n    )\n\n    const newSegmentMapChild: ChildSegmentMap = new Map()\n    newSegmentMapChild.set(segmentKeyChild, newCacheNodeChild)\n    parallelRoutes.set(parallelRouteKey, newSegmentMapChild)\n  }\n\n  // The head is assigned to every leaf segment delivered by the server. Based\n  // on corresponding logic in fill-lazy-items-till-leaf-with-head.ts\n  const isLeafSegment = parallelRoutes.size === 0\n\n  const maybePrefetchRsc = prefetchData !== null ? prefetchData[1] : null\n  const maybePrefetchLoading = prefetchData !== null ? prefetchData[3] : null\n  return {\n    lazyData: null,\n    parallelRoutes: parallelRoutes,\n\n    prefetchRsc: maybePrefetchRsc !== undefined ? maybePrefetchRsc : null,\n    prefetchHead: isLeafSegment ? prefetchHead : null,\n    loading: maybePrefetchLoading !== undefined ? maybePrefetchLoading : null,\n\n    // Create a deferred promise. This will be fulfilled once the dynamic\n    // response is received from the server.\n    rsc: createDeferredRsc() as React.ReactNode,\n    head: isLeafSegment ? (createDeferredRsc() as React.ReactNode) : null,\n  }\n}\n\nfunction finishPendingCacheNode(\n  cacheNode: CacheNode,\n  taskState: FlightRouterState,\n  serverState: FlightRouterState,\n  dynamicData: CacheNodeSeedData,\n  dynamicHead: React.ReactNode\n): void {\n  // Writes a dynamic response into an existing Cache Node tree. This does _not_\n  // create a new tree, it updates the existing tree in-place. So it must follow\n  // the Suspense rules of cache safety — it can resolve pending promises, but\n  // it cannot overwrite existing data. It can add segments to the tree (because\n  // a missing segment will cause the layout router to suspend).\n  // but it cannot delete them.\n  //\n  // We must resolve every promise in the tree, or else it will suspend\n  // indefinitely. If we did not receive data for a segment, we will resolve its\n  // data promise to `null` to trigger a lazy fetch during render.\n  const taskStateChildren = taskState[1]\n  const serverStateChildren = serverState[1]\n  const dataChildren = dynamicData[2]\n\n  // The router state that we traverse the tree with (taskState) is the same one\n  // that we used to construct the pending Cache Node tree. That way we're sure\n  // to resolve all the pending promises.\n  const parallelRoutes = cacheNode.parallelRoutes\n  for (let parallelRouteKey in taskStateChildren) {\n    const taskStateChild: FlightRouterState =\n      taskStateChildren[parallelRouteKey]\n    const serverStateChild: FlightRouterState | void =\n      serverStateChildren[parallelRouteKey]\n    const dataChild: CacheNodeSeedData | null | void =\n      dataChildren[parallelRouteKey]\n\n    const segmentMapChild = parallelRoutes.get(parallelRouteKey)\n    const taskSegmentChild = taskStateChild[0]\n    const taskSegmentKeyChild = createRouterCacheKey(taskSegmentChild)\n\n    const cacheNodeChild =\n      segmentMapChild !== undefined\n        ? segmentMapChild.get(taskSegmentKeyChild)\n        : undefined\n\n    if (cacheNodeChild !== undefined) {\n      if (\n        serverStateChild !== undefined &&\n        matchSegment(taskSegmentChild, serverStateChild[0])\n      ) {\n        if (dataChild !== undefined && dataChild !== null) {\n          // This is the happy path. Recursively update all the children.\n          finishPendingCacheNode(\n            cacheNodeChild,\n            taskStateChild,\n            serverStateChild,\n            dataChild,\n            dynamicHead\n          )\n        } else {\n          // The server never returned data for this segment. Trigger a lazy\n          // fetch during render. This shouldn't happen because the Route Tree\n          // and the Seed Data tree sent by the server should always be the same\n          // shape when part of the same server response.\n          abortPendingCacheNode(taskStateChild, cacheNodeChild, null)\n        }\n      } else {\n        // The server never returned data for this segment. Trigger a lazy\n        // fetch during render.\n        abortPendingCacheNode(taskStateChild, cacheNodeChild, null)\n      }\n    } else {\n      // The server response matches what was expected to receive, but there's\n      // no matching Cache Node in the task tree. This is a bug in the\n      // implementation because we should have created a node for every\n      // segment in the tree that's associated with this task.\n    }\n  }\n\n  // Use the dynamic data from the server to fulfill the deferred RSC promise\n  // on the Cache Node.\n  const rsc = cacheNode.rsc\n  const dynamicSegmentData = dynamicData[1]\n  if (rsc === null) {\n    // This is a lazy cache node. We can overwrite it. This is only safe\n    // because we know that the LayoutRouter suspends if `rsc` is `null`.\n    cacheNode.rsc = dynamicSegmentData\n  } else if (isDeferredRsc(rsc)) {\n    // This is a deferred RSC promise. We can fulfill it with the data we just\n    // received from the server. If it was already resolved by a different\n    // navigation, then this does nothing because we can't overwrite data.\n    rsc.resolve(dynamicSegmentData)\n  } else {\n    // This is not a deferred RSC promise, nor is it empty, so it must have\n    // been populated by a different navigation. We must not overwrite it.\n  }\n\n  // Check if this is a leaf segment. If so, it will have a `head` property with\n  // a pending promise that needs to be resolved with the dynamic head from\n  // the server.\n  const head = cacheNode.head\n  if (isDeferredRsc(head)) {\n    head.resolve(dynamicHead)\n  }\n}\n\nexport function abortTask(task: Task, error: any): void {\n  const cacheNode = task.node\n  if (cacheNode === null) {\n    // This indicates the task is already complete.\n    return\n  }\n\n  const taskChildren = task.children\n  if (taskChildren === null) {\n    // Reached the leaf task node. This is the root of a pending cache\n    // node tree.\n    abortPendingCacheNode(task.route, cacheNode, error)\n  } else {\n    // This is an intermediate task node. Keep traversing until we reach a\n    // task node with no children. That will be the root of the cache node tree\n    // that needs to be resolved.\n    for (const taskChild of taskChildren.values()) {\n      abortTask(taskChild, error)\n    }\n  }\n\n  // Null this out to indicate that the task is complete.\n  task.node = null\n}\n\nfunction abortPendingCacheNode(\n  routerState: FlightRouterState,\n  cacheNode: CacheNode,\n  error: any\n): void {\n  // For every pending segment in the tree, resolve its `rsc` promise to `null`\n  // to trigger a lazy fetch during render.\n  //\n  // Or, if an error object is provided, it will error instead.\n  const routerStateChildren = routerState[1]\n  const parallelRoutes = cacheNode.parallelRoutes\n  for (let parallelRouteKey in routerStateChildren) {\n    const routerStateChild: FlightRouterState =\n      routerStateChildren[parallelRouteKey]\n    const segmentMapChild = parallelRoutes.get(parallelRouteKey)\n    if (segmentMapChild === undefined) {\n      // This shouldn't happen because we're traversing the same tree that was\n      // used to construct the cache nodes in the first place.\n      continue\n    }\n    const segmentChild = routerStateChild[0]\n    const segmentKeyChild = createRouterCacheKey(segmentChild)\n    const cacheNodeChild = segmentMapChild.get(segmentKeyChild)\n    if (cacheNodeChild !== undefined) {\n      abortPendingCacheNode(routerStateChild, cacheNodeChild, error)\n    } else {\n      // This shouldn't happen because we're traversing the same tree that was\n      // used to construct the cache nodes in the first place.\n    }\n  }\n  const rsc = cacheNode.rsc\n  if (isDeferredRsc(rsc)) {\n    if (error === null) {\n      // This will trigger a lazy fetch during render.\n      rsc.resolve(null)\n    } else {\n      // This will trigger an error during rendering.\n      rsc.reject(error)\n    }\n  }\n\n  // Check if this is a leaf segment. If so, it will have a `head` property with\n  // a pending promise that needs to be resolved. If an error was provided, we\n  // will not resolve it with an error, since this is rendered at the root of\n  // the app. We want the segment to error, not the entire app.\n  const head = cacheNode.head\n  if (isDeferredRsc(head)) {\n    head.resolve(null)\n  }\n}\n\nexport function updateCacheNodeOnPopstateRestoration(\n  oldCacheNode: CacheNode,\n  routerState: FlightRouterState\n) {\n  // A popstate navigation reads data from the local cache. It does not issue\n  // new network requests (unless the cache entries have been evicted). So, we\n  // update the cache to drop the prefetch data for any segment whose dynamic\n  // data was already received. This prevents an unnecessary flash back to PPR\n  // state during a back/forward navigation.\n  //\n  // This function clones the entire cache node tree and sets the `prefetchRsc`\n  // field to `null` to prevent it from being rendered. We can't mutate the node\n  // in place because this is a concurrent data structure.\n\n  const routerStateChildren = routerState[1]\n  const oldParallelRoutes = oldCacheNode.parallelRoutes\n  const newParallelRoutes = new Map(oldParallelRoutes)\n  for (let parallelRouteKey in routerStateChildren) {\n    const routerStateChild: FlightRouterState =\n      routerStateChildren[parallelRouteKey]\n    const segmentChild = routerStateChild[0]\n    const segmentKeyChild = createRouterCacheKey(segmentChild)\n    const oldSegmentMapChild = oldParallelRoutes.get(parallelRouteKey)\n    if (oldSegmentMapChild !== undefined) {\n      const oldCacheNodeChild = oldSegmentMapChild.get(segmentKeyChild)\n      if (oldCacheNodeChild !== undefined) {\n        const newCacheNodeChild = updateCacheNodeOnPopstateRestoration(\n          oldCacheNodeChild,\n          routerStateChild\n        )\n        const newSegmentMapChild = new Map(oldSegmentMapChild)\n        newSegmentMapChild.set(segmentKeyChild, newCacheNodeChild)\n        newParallelRoutes.set(parallelRouteKey, newSegmentMapChild)\n      }\n    }\n  }\n\n  // Only show prefetched data if the dynamic data is still pending.\n  //\n  // Tehnically, what we're actually checking is whether the dynamic network\n  // response was received. But since it's a streaming response, this does not\n  // mean that all the dynamic data has fully streamed in. It just means that\n  // _some_ of the dynamic data was received. But as a heuristic, we assume that\n  // the rest dynamic data will stream in quickly, so it's still better to skip\n  // the prefetch state.\n  const rsc = oldCacheNode.rsc\n  const shouldUsePrefetch = isDeferredRsc(rsc) && rsc.status === 'pending'\n\n  return {\n    lazyData: null,\n    rsc,\n    head: oldCacheNode.head,\n\n    prefetchHead: shouldUsePrefetch ? oldCacheNode.prefetchHead : null,\n    prefetchRsc: shouldUsePrefetch ? oldCacheNode.prefetchRsc : null,\n    loading: oldCacheNode.loading,\n\n    // These are the cloned children we computed above\n    parallelRoutes: newParallelRoutes,\n  }\n}\n\nconst DEFERRED = Symbol()\n\ntype PendingDeferredRsc = Promise<React.ReactNode> & {\n  status: 'pending'\n  resolve: (value: React.ReactNode) => void\n  reject: (error: any) => void\n  tag: Symbol\n}\n\ntype FulfilledDeferredRsc = Promise<React.ReactNode> & {\n  status: 'fulfilled'\n  value: React.ReactNode\n  resolve: (value: React.ReactNode) => void\n  reject: (error: any) => void\n  tag: Symbol\n}\n\ntype RejectedDeferredRsc = Promise<React.ReactNode> & {\n  status: 'rejected'\n  reason: any\n  resolve: (value: React.ReactNode) => void\n  reject: (error: any) => void\n  tag: Symbol\n}\n\ntype DeferredRsc =\n  | PendingDeferredRsc\n  | FulfilledDeferredRsc\n  | RejectedDeferredRsc\n\n// This type exists to distinguish a DeferredRsc from a Flight promise. It's a\n// compromise to avoid adding an extra field on every Cache Node, which would be\n// awkward because the pre-PPR parts of codebase would need to account for it,\n// too. We can remove it once type Cache Node type is more settled.\nfunction isDeferredRsc(value: any): value is DeferredRsc {\n  return value && value.tag === DEFERRED\n}\n\nfunction createDeferredRsc(): PendingDeferredRsc {\n  let resolve: any\n  let reject: any\n  const pendingRsc = new Promise<React.ReactNode>((res, rej) => {\n    resolve = res\n    reject = rej\n  }) as PendingDeferredRsc\n  pendingRsc.status = 'pending'\n  pendingRsc.resolve = (value: React.ReactNode) => {\n    if (pendingRsc.status === 'pending') {\n      const fulfilledRsc: FulfilledDeferredRsc = pendingRsc as any\n      fulfilledRsc.status = 'fulfilled'\n      fulfilledRsc.value = value\n      resolve(value)\n    }\n  }\n  pendingRsc.reject = (error: any) => {\n    if (pendingRsc.status === 'pending') {\n      const rejectedRsc: RejectedDeferredRsc = pendingRsc as any\n      rejectedRsc.status = 'rejected'\n      rejectedRsc.reason = error\n      reject(error)\n    }\n  }\n  pendingRsc.tag = DEFERRED\n  return pendingRsc\n}\n","import type {\n  CacheNodeSeedData,\n  FlightRouterState,\n} from '../../../server/app-render/types'\nimport type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport {\n  addSearchParamsIfPageSegment,\n  PAGE_SEGMENT_KEY,\n} from '../../../shared/lib/segment'\nimport type { NormalizedFlightData } from '../../flight-data-helpers'\nimport { createEmptyCacheNode } from '../app-router'\nimport { applyRouterStatePatchToTree } from './apply-router-state-patch-to-tree'\nimport { createHrefFromUrl } from './create-href-from-url'\nimport { createRouterCacheKey } from './create-router-cache-key'\nimport { fillCacheWithNewSubTreeDataButOnlyLoading } from './fill-cache-with-new-subtree-data'\nimport { handleMutable } from './handle-mutable'\nimport type { Mutable, ReadonlyReducerState } from './router-reducer-types'\n\n/**\n * This is a stop-gap until per-segment caching is implemented. It leverages the `aliased` flag that is added\n * to prefetch entries when it's determined that the loading state from that entry should be used for this navigation.\n * This function takes the aliased entry and only applies the loading state to the updated cache node.\n * We should remove this once per-segment fetching is implemented as ideally the prefetch cache will contain a\n * more granular segment map and so the router will be able to simply re-use the loading segment for the new navigation.\n */\nexport function handleAliasedPrefetchEntry(\n  state: ReadonlyReducerState,\n  flightData: NormalizedFlightData[],\n  url: URL,\n  mutable: Mutable\n) {\n  let currentTree = state.tree\n  let currentCache = state.cache\n  const href = createHrefFromUrl(url)\n  let applied\n\n  for (const normalizedFlightData of flightData) {\n    // If the segment doesn't have a loading component, we don't need to do anything.\n    if (!hasLoadingComponentInSeedData(normalizedFlightData.seedData)) {\n      continue\n    }\n\n    let treePatch = normalizedFlightData.tree\n    // Segments are keyed by searchParams (e.g. __PAGE__?{\"foo\":\"bar\"}). We might return a less specific, param-less entry,\n    // so we ensure that the final tree contains the correct searchParams (reflected in the URL) are provided in the updated FlightRouterState tree.\n    // We only do this on the first read, as otherwise we'd be overwriting the searchParams that may have already been set\n    treePatch = addSearchParamsToPageSegments(\n      treePatch,\n      Object.fromEntries(url.searchParams)\n    )\n\n    const { seedData, isRootRender, pathToSegment } = normalizedFlightData\n    // TODO-APP: remove ''\n    const flightSegmentPathWithLeadingEmpty = ['', ...pathToSegment]\n\n    // Segments are keyed by searchParams (e.g. __PAGE__?{\"foo\":\"bar\"}). We might return a less specific, param-less entry,\n    // so we ensure that the final tree contains the correct searchParams (reflected in the URL) are provided in the updated FlightRouterState tree.\n    // We only do this on the first read, as otherwise we'd be overwriting the searchParams that may have already been set\n    treePatch = addSearchParamsToPageSegments(\n      treePatch,\n      Object.fromEntries(url.searchParams)\n    )\n\n    let newTree = applyRouterStatePatchToTree(\n      flightSegmentPathWithLeadingEmpty,\n      currentTree,\n      treePatch,\n      href\n    )\n\n    const newCache = createEmptyCacheNode()\n\n    // The prefetch cache entry was aliased -- this signals that we only fill in the cache with the\n    // loading state and not the actual parallel route seed data.\n    if (isRootRender && seedData) {\n      // Fill in the cache with the new loading / rsc data\n      const rsc = seedData[1]\n      const loading = seedData[3]\n      newCache.loading = loading\n      newCache.rsc = rsc\n\n      // Construct a new tree and apply the aliased loading state for each parallel route\n      fillNewTreeWithOnlyLoadingSegments(\n        newCache,\n        currentCache,\n        treePatch,\n        seedData\n      )\n    } else {\n      // Copy rsc for the root node of the cache.\n      newCache.rsc = currentCache.rsc\n      newCache.prefetchRsc = currentCache.prefetchRsc\n      newCache.loading = currentCache.loading\n      newCache.parallelRoutes = new Map(currentCache.parallelRoutes)\n\n      // copy the loading state only into the leaf node (the part that changed)\n      fillCacheWithNewSubTreeDataButOnlyLoading(\n        newCache,\n        currentCache,\n        normalizedFlightData\n      )\n    }\n\n    // If we don't have an updated tree, there's no reason to update the cache, as the tree\n    // dictates what cache nodes to render.\n    if (newTree) {\n      currentTree = newTree\n      currentCache = newCache\n      applied = true\n    }\n  }\n\n  if (!applied) {\n    return false\n  }\n\n  mutable.patchedTree = currentTree\n  mutable.cache = currentCache\n  mutable.canonicalUrl = href\n  mutable.hashFragment = url.hash\n\n  return handleMutable(state, mutable)\n}\n\nfunction hasLoadingComponentInSeedData(seedData: CacheNodeSeedData | null) {\n  if (!seedData) return false\n\n  const parallelRoutes = seedData[2]\n  const loading = seedData[3]\n\n  if (loading) {\n    return true\n  }\n\n  for (const key in parallelRoutes) {\n    if (hasLoadingComponentInSeedData(parallelRoutes[key])) {\n      return true\n    }\n  }\n\n  return false\n}\n\nfunction fillNewTreeWithOnlyLoadingSegments(\n  newCache: CacheNode,\n  existingCache: CacheNode,\n  routerState: FlightRouterState,\n  cacheNodeSeedData: CacheNodeSeedData | null\n) {\n  const isLastSegment = Object.keys(routerState[1]).length === 0\n  if (isLastSegment) {\n    return\n  }\n\n  for (const key in routerState[1]) {\n    const parallelRouteState = routerState[1][key]\n    const segmentForParallelRoute = parallelRouteState[0]\n    const cacheKey = createRouterCacheKey(segmentForParallelRoute)\n\n    const parallelSeedData =\n      cacheNodeSeedData !== null && cacheNodeSeedData[2][key] !== undefined\n        ? cacheNodeSeedData[2][key]\n        : null\n\n    let newCacheNode: CacheNode\n    if (parallelSeedData !== null) {\n      // New data was sent from the server.\n      const rsc = parallelSeedData[1]\n      const loading = parallelSeedData[3]\n      newCacheNode = {\n        lazyData: null,\n        // copy the layout but null the page segment as that's not meant to be used\n        rsc: segmentForParallelRoute.includes(PAGE_SEGMENT_KEY) ? null : rsc,\n        prefetchRsc: null,\n        head: null,\n        prefetchHead: null,\n        parallelRoutes: new Map(),\n        loading,\n      }\n    } else {\n      // No data available for this node. This will trigger a lazy fetch\n      // during render.\n      newCacheNode = {\n        lazyData: null,\n        rsc: null,\n        prefetchRsc: null,\n        head: null,\n        prefetchHead: null,\n        parallelRoutes: new Map(),\n        loading: null,\n      }\n    }\n\n    const existingParallelRoutes = newCache.parallelRoutes.get(key)\n    if (existingParallelRoutes) {\n      existingParallelRoutes.set(cacheKey, newCacheNode)\n    } else {\n      newCache.parallelRoutes.set(key, new Map([[cacheKey, newCacheNode]]))\n    }\n\n    fillNewTreeWithOnlyLoadingSegments(\n      newCacheNode,\n      existingCache,\n      parallelRouteState,\n      parallelSeedData\n    )\n  }\n}\n\n/**\n * Add search params to the page segments in the flight router state\n * Page segments that are associated with search params have a page segment key\n * followed by a query string. This function will add those params to the page segment.\n * This is useful if we return an aliased prefetch entry (ie, won't have search params)\n * but the canonical router URL has search params.\n */\nexport function addSearchParamsToPageSegments(\n  flightRouterState: FlightRouterState,\n  searchParams: Record<string, string | string[] | undefined>\n): FlightRouterState {\n  const [segment, parallelRoutes, ...rest] = flightRouterState\n\n  // If it's a page segment, modify the segment by adding search params\n  if (segment.includes(PAGE_SEGMENT_KEY)) {\n    const newSegment = addSearchParamsIfPageSegment(segment, searchParams)\n    return [newSegment, parallelRoutes, ...rest]\n  }\n\n  // Otherwise, recurse through the parallel routes and return a new tree\n  const updatedParallelRoutes: { [key: string]: FlightRouterState } = {}\n\n  for (const [key, parallelRoute] of Object.entries(parallelRoutes)) {\n    updatedParallelRoutes[key] = addSearchParamsToPageSegments(\n      parallelRoute,\n      searchParams\n    )\n  }\n\n  return [segment, updatedParallelRoutes, ...rest]\n}\n","import type { CacheNode } from '../../../../shared/lib/app-router-context.shared-runtime'\nimport type {\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../../../../server/app-render/types'\nimport { fetchServerResponse } from '../fetch-server-response'\nimport { createHrefFromUrl } from '../create-href-from-url'\nimport { invalidateCacheBelowFlightSegmentPath } from '../invalidate-cache-below-flight-segmentpath'\nimport { applyRouterStatePatchToTree } from '../apply-router-state-patch-to-tree'\nimport { shouldHardNavigate } from '../should-hard-navigate'\nimport { isNavigatingToNewRootLayout } from '../is-navigating-to-new-root-layout'\nimport {\n  PrefetchCacheEntryStatus,\n  type Mutable,\n  type NavigateAction,\n  type ReadonlyReducerState,\n  type ReducerState,\n} from '../router-reducer-types'\nimport { handleMutable } from '../handle-mutable'\nimport { applyFlightData } from '../apply-flight-data'\nimport { prefetchQueue } from './prefetch-reducer'\nimport { createEmptyCacheNode } from '../../app-router'\nimport { DEFAULT_SEGMENT_KEY } from '../../../../shared/lib/segment'\nimport {\n  listenForDynamicRequest,\n  updateCacheNodeOnNavigation,\n} from '../ppr-navigations'\nimport {\n  getOrCreatePrefetchCacheEntry,\n  prunePrefetchCache,\n} from '../prefetch-cache-utils'\nimport { clearCacheNodeDataForSegmentPath } from '../clear-cache-node-data-for-segment-path'\nimport { handleAliasedPrefetchEntry } from '../aliased-prefetch-navigations'\n\nexport function handleExternalUrl(\n  state: ReadonlyReducerState,\n  mutable: Mutable,\n  url: string,\n  pendingPush: boolean\n) {\n  mutable.mpaNavigation = true\n  mutable.canonicalUrl = url\n  mutable.pendingPush = pendingPush\n  mutable.scrollableSegments = undefined\n\n  return handleMutable(state, mutable)\n}\n\nfunction generateSegmentsFromPatch(\n  flightRouterPatch: FlightRouterState\n): FlightSegmentPath[] {\n  const segments: FlightSegmentPath[] = []\n  const [segment, parallelRoutes] = flightRouterPatch\n\n  if (Object.keys(parallelRoutes).length === 0) {\n    return [[segment]]\n  }\n\n  for (const [parallelRouteKey, parallelRoute] of Object.entries(\n    parallelRoutes\n  )) {\n    for (const childSegment of generateSegmentsFromPatch(parallelRoute)) {\n      // If the segment is empty, it means we are at the root of the tree\n      if (segment === '') {\n        segments.push([parallelRouteKey, ...childSegment])\n      } else {\n        segments.push([segment, parallelRouteKey, ...childSegment])\n      }\n    }\n  }\n\n  return segments\n}\n\nfunction triggerLazyFetchForLeafSegments(\n  newCache: CacheNode,\n  currentCache: CacheNode,\n  flightSegmentPath: FlightSegmentPath,\n  treePatch: FlightRouterState\n) {\n  let appliedPatch = false\n\n  newCache.rsc = currentCache.rsc\n  newCache.prefetchRsc = currentCache.prefetchRsc\n  newCache.loading = currentCache.loading\n  newCache.parallelRoutes = new Map(currentCache.parallelRoutes)\n\n  const segmentPathsToFill = generateSegmentsFromPatch(treePatch).map(\n    (segment) => [...flightSegmentPath, ...segment]\n  )\n\n  for (const segmentPaths of segmentPathsToFill) {\n    clearCacheNodeDataForSegmentPath(newCache, currentCache, segmentPaths)\n\n    appliedPatch = true\n  }\n\n  return appliedPatch\n}\n\nexport function navigateReducer(\n  state: ReadonlyReducerState,\n  action: NavigateAction\n): ReducerState {\n  const { url, isExternalUrl, navigateType, shouldScroll, allowAliasing } =\n    action\n  const mutable: Mutable = {}\n  const { hash } = url\n  const href = createHrefFromUrl(url)\n  const pendingPush = navigateType === 'push'\n  // we want to prune the prefetch cache on every navigation to avoid it growing too large\n  prunePrefetchCache(state.prefetchCache)\n\n  mutable.preserveCustomHistoryState = false\n  mutable.pendingPush = pendingPush\n\n  if (isExternalUrl) {\n    return handleExternalUrl(state, mutable, url.toString(), pendingPush)\n  }\n\n  // Handles case where `<meta http-equiv=\"refresh\">` tag is present,\n  // which will trigger an MPA navigation.\n  if (document.getElementById('__next-page-redirect')) {\n    return handleExternalUrl(state, mutable, href, pendingPush)\n  }\n\n  const prefetchValues = getOrCreatePrefetchCacheEntry({\n    url,\n    nextUrl: state.nextUrl,\n    tree: state.tree,\n    buildId: state.buildId,\n    prefetchCache: state.prefetchCache,\n    allowAliasing,\n  })\n  const { treeAtTimeOfPrefetch, data } = prefetchValues\n\n  prefetchQueue.bump(data)\n\n  return data.then(\n    ({ flightData, canonicalUrl: canonicalUrlOverride, postponed }) => {\n      let isFirstRead = false\n      // we only want to mark this once\n      if (!prefetchValues.lastUsedTime) {\n        // important: we should only mark the cache node as dirty after we unsuspend from the call above\n        prefetchValues.lastUsedTime = Date.now()\n        isFirstRead = true\n      }\n\n      // Handle case when navigating to page in `pages` from `app`\n      if (typeof flightData === 'string') {\n        return handleExternalUrl(state, mutable, flightData, pendingPush)\n      }\n\n      const updatedCanonicalUrl = canonicalUrlOverride\n        ? createHrefFromUrl(canonicalUrlOverride)\n        : href\n\n      const onlyHashChange =\n        !!hash &&\n        state.canonicalUrl.split('#', 1)[0] ===\n          updatedCanonicalUrl.split('#', 1)[0]\n\n      // If only the hash has changed, the server hasn't sent us any new data. We can just update\n      // the mutable properties responsible for URL and scroll handling and return early.\n      if (onlyHashChange) {\n        mutable.onlyHashChange = true\n        mutable.canonicalUrl = updatedCanonicalUrl\n        mutable.shouldScroll = shouldScroll\n        mutable.hashFragment = hash\n        mutable.scrollableSegments = []\n        return handleMutable(state, mutable)\n      }\n\n      if (prefetchValues.aliased) {\n        const result = handleAliasedPrefetchEntry(\n          state,\n          flightData,\n          url,\n          mutable\n        )\n\n        // We didn't return new router state because we didn't apply the aliased entry for some reason.\n        // We'll re-invoke the navigation handler but ensure that we don't attempt to use the aliased entry. This\n        // will create an on-demand prefetch entry.\n        if (result === false) {\n          return navigateReducer(state, { ...action, allowAliasing: false })\n        }\n\n        return result\n      }\n\n      let currentTree = state.tree\n      let currentCache = state.cache\n      let scrollableSegments: FlightSegmentPath[] = []\n      for (const normalizedFlightData of flightData) {\n        const {\n          pathToSegment: flightSegmentPath,\n          seedData,\n          head,\n          isRootRender,\n        } = normalizedFlightData\n        let treePatch = normalizedFlightData.tree\n\n        // TODO-APP: remove ''\n        const flightSegmentPathWithLeadingEmpty = ['', ...flightSegmentPath]\n\n        // Create new tree based on the flightSegmentPath and router state patch\n        let newTree = applyRouterStatePatchToTree(\n          // TODO-APP: remove ''\n          flightSegmentPathWithLeadingEmpty,\n          currentTree,\n          treePatch,\n          href\n        )\n\n        // If the tree patch can't be applied to the current tree then we use the tree at time of prefetch\n        // TODO-APP: This should instead fill in the missing pieces in `currentTree` with the data from `treeAtTimeOfPrefetch`, then apply the patch.\n        if (newTree === null) {\n          newTree = applyRouterStatePatchToTree(\n            // TODO-APP: remove ''\n            flightSegmentPathWithLeadingEmpty,\n            treeAtTimeOfPrefetch,\n            treePatch,\n            href\n          )\n        }\n\n        if (newTree !== null) {\n          if (isNavigatingToNewRootLayout(currentTree, newTree)) {\n            return handleExternalUrl(state, mutable, href, pendingPush)\n          }\n\n          if (\n            // This is just a paranoid check. When a route is PPRed, the server\n            // will send back a static response that's rendered from\n            // the root. If for some reason it doesn't, we fall back to the\n            // non-PPR implementation.\n            // TODO: We should get rid of the else branch and do all navigations\n            // via updateCacheNodeOnNavigation. The current structure is just\n            // an incremental step.\n            seedData &&\n            isRootRender &&\n            postponed\n          ) {\n            const task = updateCacheNodeOnNavigation(\n              currentCache,\n              currentTree,\n              treePatch,\n              seedData,\n              head\n            )\n\n            if (task !== null) {\n              // We've created a new Cache Node tree that contains a prefetched\n              // version of the next page. This can be rendered instantly.\n\n              // Use the tree computed by updateCacheNodeOnNavigation instead\n              // of the one computed by applyRouterStatePatchToTree.\n              // TODO: We should remove applyRouterStatePatchToTree\n              // from the PPR path entirely.\n              const patchedRouterState: FlightRouterState = task.route\n              newTree = patchedRouterState\n\n              // It's possible that `updateCacheNodeOnNavigation` only spawned tasks to reuse the existing cache,\n              // in which case `task.node` will be null, signaling we don't need to wait for a dynamic request\n              // and can simply apply the patched `FlightRouterState`.\n              if (task.node !== null) {\n                const newCache = task.node\n\n                // The prefetched tree has dynamic holes in it. We initiate a\n                // dynamic request to fill them in.\n                //\n                // Do not block on the result. We'll immediately render the Cache\n                // Node tree and suspend on the dynamic parts. When the request\n                // comes in, we'll fill in missing data and ping React to\n                // re-render. Unlike the lazy fetching model in the non-PPR\n                // implementation, this is modeled as a single React update +\n                // streaming, rather than multiple top-level updates. (However,\n                // even in the new model, we'll still need to sometimes update the\n                // root multiple times per navigation, like if the server sends us\n                // a different response than we expected. For now, we revert back\n                // to the lazy fetching mechanism in that case.)\n                const dynamicRequest = fetchServerResponse(url, {\n                  flightRouterState: currentTree,\n                  nextUrl: state.nextUrl,\n                  buildId: state.buildId,\n                })\n\n                listenForDynamicRequest(task, dynamicRequest)\n                // We store the dynamic request on the `lazyData` property of the CacheNode\n                // because we're not going to await the dynamic request here. Since we're not blocking\n                // on the dynamic request, `layout-router` will\n                // task.node.lazyData = dynamicRequest\n\n                mutable.cache = newCache\n              }\n            } else {\n              // Nothing changed, so reuse the old cache.\n              // TODO: What if the head changed but not any of the segment data?\n              // Is that possible? If so, we should clone the whole tree and\n              // update the head.\n              newTree = treePatch\n            }\n          } else {\n            // The static response does not include any dynamic holes, so\n            // there's no need to do a second request.\n            // TODO: As an incremental step this just reverts back to the\n            // non-PPR implementation. We can simplify this branch further,\n            // given that PPR prefetches are always static and return the whole\n            // tree. Or in the meantime we could factor it out into a\n            // separate function.\n            const cache: CacheNode = createEmptyCacheNode()\n            let applied = false\n\n            if (\n              prefetchValues.status === PrefetchCacheEntryStatus.stale &&\n              !isFirstRead\n            ) {\n              // When we have a stale prefetch entry, we only want to re-use the loading state of the route we're navigating to, to support instant loading navigations\n              // this will trigger a lazy fetch for the actual page data by nulling the `rsc` and `prefetchRsc` values for page data,\n              // while copying over the `loading` for the segment that contains the page data.\n              // We only do this on subsequent reads, as otherwise there'd be no loading data to re-use.\n\n              // We skip this branch if only the hash fragment has changed, as we don't want to trigger a lazy fetch in that case\n              applied = triggerLazyFetchForLeafSegments(\n                cache,\n                currentCache,\n                flightSegmentPath,\n                treePatch\n              )\n              // since we re-used the stale cache's loading state & refreshed the data,\n              // update the `lastUsedTime` so that it can continue to be re-used for the next 30s\n              prefetchValues.lastUsedTime = Date.now()\n            } else {\n              applied = applyFlightData(\n                currentCache,\n                cache,\n                normalizedFlightData,\n                prefetchValues\n              )\n            }\n\n            const hardNavigate = shouldHardNavigate(\n              // TODO-APP: remove ''\n              flightSegmentPathWithLeadingEmpty,\n              currentTree\n            )\n\n            if (hardNavigate) {\n              // Copy rsc for the root node of the cache.\n              cache.rsc = currentCache.rsc\n              cache.prefetchRsc = currentCache.prefetchRsc\n\n              invalidateCacheBelowFlightSegmentPath(\n                cache,\n                currentCache,\n                flightSegmentPath\n              )\n              // Ensure the existing cache value is used when the cache was not invalidated.\n              mutable.cache = cache\n            } else if (applied) {\n              mutable.cache = cache\n              // If we applied the cache, we update the \"current cache\" value so any other\n              // segments in the FlightDataPath will be able to reference the updated cache.\n              currentCache = cache\n            }\n          }\n\n          currentTree = newTree\n\n          for (const subSegment of generateSegmentsFromPatch(treePatch)) {\n            const scrollableSegmentPath = [...flightSegmentPath, ...subSegment]\n            // Filter out the __DEFAULT__ paths as they shouldn't be scrolled to in this case.\n            if (\n              scrollableSegmentPath[scrollableSegmentPath.length - 1] !==\n              DEFAULT_SEGMENT_KEY\n            ) {\n              scrollableSegments.push(scrollableSegmentPath)\n            }\n          }\n        }\n      }\n\n      mutable.patchedTree = currentTree\n      mutable.canonicalUrl = updatedCanonicalUrl\n      mutable.scrollableSegments = scrollableSegments\n      mutable.hashFragment = hash\n      mutable.shouldScroll = shouldScroll\n\n      return handleMutable(state, mutable)\n    },\n    () => state\n  )\n}\n","import type { FlightRouterState } from '../../../server/app-render/types'\nimport { handleExternalUrl } from './reducers/navigate-reducer'\nimport type {\n  ReadonlyReducerState,\n  ReducerActions,\n} from './router-reducer-types'\n\n/**\n * Handles the case where the client router attempted to patch the tree but, due to a mismatch, the patch failed.\n * This will perform an MPA navigation to return the router to a valid state.\n */\nexport function handleSegmentMismatch(\n  state: ReadonlyReducerState,\n  action: ReducerActions,\n  treePatch: FlightRouterState\n) {\n  if (process.env.NODE_ENV === 'development') {\n    console.warn(\n      'Performing hard navigation because your application experienced an unrecoverable error. If this keeps occurring, please file a Next.js issue.\\n\\n' +\n        'Reason: Segment mismatch\\n' +\n        `Last Action: ${action.type}\\n\\n` +\n        `Current Tree: ${JSON.stringify(state.tree)}\\n\\n` +\n        `Tree Patch Payload: ${JSON.stringify(treePatch)}`\n    )\n  }\n\n  return handleExternalUrl(state, {}, state.canonicalUrl, true)\n}\n","import { createHrefFromUrl } from '../create-href-from-url'\nimport { applyRouterStatePatchToTree } from '../apply-router-state-patch-to-tree'\nimport { isNavigatingToNewRootLayout } from '../is-navigating-to-new-root-layout'\nimport type {\n  ServerPatchAction,\n  ReducerState,\n  ReadonlyReducerState,\n  Mutable,\n} from '../router-reducer-types'\nimport { handleExternalUrl } from './navigate-reducer'\nimport { applyFlightData } from '../apply-flight-data'\nimport { handleMutable } from '../handle-mutable'\nimport type { CacheNode } from '../../../../shared/lib/app-router-context.shared-runtime'\nimport { createEmptyCacheNode } from '../../app-router'\nimport { handleSegmentMismatch } from '../handle-segment-mismatch'\n\nexport function serverPatchReducer(\n  state: ReadonlyReducerState,\n  action: ServerPatchAction\n): ReducerState {\n  const {\n    serverResponse: { flightData, canonicalUrl: canonicalUrlOverride },\n  } = action\n\n  const mutable: Mutable = {}\n\n  mutable.preserveCustomHistoryState = false\n\n  // Handle case when navigating to page in `pages` from `app`\n  if (typeof flightData === 'string') {\n    return handleExternalUrl(\n      state,\n      mutable,\n      flightData,\n      state.pushRef.pendingPush\n    )\n  }\n\n  let currentTree = state.tree\n  let currentCache = state.cache\n\n  for (const normalizedFlightData of flightData) {\n    const { segmentPath: flightSegmentPath, tree: treePatch } =\n      normalizedFlightData\n\n    const newTree = applyRouterStatePatchToTree(\n      // TODO-APP: remove ''\n      ['', ...flightSegmentPath],\n      currentTree,\n      treePatch,\n      state.canonicalUrl\n    )\n\n    if (newTree === null) {\n      return handleSegmentMismatch(state, action, treePatch)\n    }\n\n    if (isNavigatingToNewRootLayout(currentTree, newTree)) {\n      return handleExternalUrl(\n        state,\n        mutable,\n        state.canonicalUrl,\n        state.pushRef.pendingPush\n      )\n    }\n\n    const canonicalUrlOverrideHref = canonicalUrlOverride\n      ? createHrefFromUrl(canonicalUrlOverride)\n      : undefined\n\n    if (canonicalUrlOverrideHref) {\n      mutable.canonicalUrl = canonicalUrlOverrideHref\n    }\n\n    const cache: CacheNode = createEmptyCacheNode()\n    applyFlightData(currentCache, cache, normalizedFlightData)\n\n    mutable.patchedTree = newTree\n    mutable.cache = cache\n\n    currentCache = cache\n    currentTree = newTree\n  }\n\n  return handleMutable(state, mutable)\n}\n","import { createHrefFromUrl } from '../create-href-from-url'\nimport type {\n  ReadonlyReducerState,\n  ReducerState,\n  RestoreAction,\n} from '../router-reducer-types'\nimport { extractPathFromFlightRouterState } from '../compute-changed-path'\nimport { updateCacheNodeOnPopstateRestoration } from '../ppr-navigations'\n\nexport function restoreReducer(\n  state: ReadonlyReducerState,\n  action: RestoreAction\n): ReducerState {\n  const { url, tree } = action\n  const href = createHrefFromUrl(url)\n  // This action is used to restore the router state from the history state.\n  // However, it's possible that the history state no longer contains the `FlightRouterState`.\n  // We will copy over the internal state on pushState/replaceState events, but if a history entry\n  // occurred before hydration, or if the user navigated to a hash using a regular anchor link,\n  // the history state will not contain the `FlightRouterState`.\n  // In this case, we'll continue to use the existing tree so the router doesn't get into an invalid state.\n  const treeToRestore = tree || state.tree\n\n  const oldCache = state.cache\n  const newCache = process.env.__NEXT_PPR\n    ? // When PPR is enabled, we update the cache to drop the prefetch\n      // data for any segment whose dynamic data was already received. This\n      // prevents an unnecessary flash back to PPR state during a\n      // back/forward navigation.\n      updateCacheNodeOnPopstateRestoration(oldCache, treeToRestore)\n    : oldCache\n\n  return {\n    buildId: state.buildId,\n    // Set canonical url\n    canonicalUrl: href,\n    pushRef: {\n      pendingPush: false,\n      mpaNavigation: false,\n      // Ensures that the custom history state that was set is preserved when applying this update.\n      preserveCustomHistoryState: true,\n    },\n    focusAndScrollRef: state.focusAndScrollRef,\n    cache: newCache,\n    prefetchCache: state.prefetchCache,\n    // Restore provided tree\n    tree: treeToRestore,\n    nextUrl: extractPathFromFlightRouterState(treeToRestore) ?? url.pathname,\n  }\n}\n","import { fetchServerResponse } from '../fetch-server-response'\nimport { createHrefFromUrl } from '../create-href-from-url'\nimport { applyRouterStatePatchToTree } from '../apply-router-state-patch-to-tree'\nimport { isNavigatingToNewRootLayout } from '../is-navigating-to-new-root-layout'\nimport type {\n  Mutable,\n  ReadonlyReducerState,\n  ReducerState,\n  RefreshAction,\n} from '../router-reducer-types'\nimport { handleExternalUrl } from './navigate-reducer'\nimport { handleMutable } from '../handle-mutable'\nimport type { CacheNode } from '../../../../shared/lib/app-router-context.shared-runtime'\nimport { fillLazyItemsTillLeafWithHead } from '../fill-lazy-items-till-leaf-with-head'\nimport { createEmptyCacheNode } from '../../app-router'\nimport { handleSegmentMismatch } from '../handle-segment-mismatch'\nimport { hasInterceptionRouteInCurrentTree } from './has-interception-route-in-current-tree'\nimport { refreshInactiveParallelSegments } from '../refetch-inactive-parallel-segments'\n\nexport function refreshReducer(\n  state: ReadonlyReducerState,\n  action: RefreshAction\n): ReducerState {\n  const { origin } = action\n  const mutable: Mutable = {}\n  const href = state.canonicalUrl\n\n  let currentTree = state.tree\n\n  mutable.preserveCustomHistoryState = false\n\n  const cache: CacheNode = createEmptyCacheNode()\n\n  // If the current tree was intercepted, the nextUrl should be included in the request.\n  // This is to ensure that the refresh request doesn't get intercepted, accidentally triggering the interception route.\n  const includeNextUrl = hasInterceptionRouteInCurrentTree(state.tree)\n\n  // TODO-APP: verify that `href` is not an external url.\n  // Fetch data from the root of the tree.\n  cache.lazyData = fetchServerResponse(new URL(href, origin), {\n    flightRouterState: [\n      currentTree[0],\n      currentTree[1],\n      currentTree[2],\n      'refetch',\n    ],\n    nextUrl: includeNextUrl ? state.nextUrl : null,\n    buildId: state.buildId,\n  })\n\n  return cache.lazyData.then(\n    async ({ flightData, canonicalUrl: canonicalUrlOverride }) => {\n      // Handle case when navigating to page in `pages` from `app`\n      if (typeof flightData === 'string') {\n        return handleExternalUrl(\n          state,\n          mutable,\n          flightData,\n          state.pushRef.pendingPush\n        )\n      }\n\n      // Remove cache.lazyData as it has been resolved at this point.\n      cache.lazyData = null\n\n      for (const normalizedFlightData of flightData) {\n        const {\n          tree: treePatch,\n          seedData: cacheNodeSeedData,\n          head,\n          isRootRender,\n        } = normalizedFlightData\n\n        if (!isRootRender) {\n          // TODO-APP: handle this case better\n          console.log('REFRESH FAILED')\n          return state\n        }\n\n        const newTree = applyRouterStatePatchToTree(\n          // TODO-APP: remove ''\n          [''],\n          currentTree,\n          treePatch,\n          state.canonicalUrl\n        )\n\n        if (newTree === null) {\n          return handleSegmentMismatch(state, action, treePatch)\n        }\n\n        if (isNavigatingToNewRootLayout(currentTree, newTree)) {\n          return handleExternalUrl(\n            state,\n            mutable,\n            href,\n            state.pushRef.pendingPush\n          )\n        }\n\n        const canonicalUrlOverrideHref = canonicalUrlOverride\n          ? createHrefFromUrl(canonicalUrlOverride)\n          : undefined\n\n        if (canonicalUrlOverride) {\n          mutable.canonicalUrl = canonicalUrlOverrideHref\n        }\n\n        // Handles case where prefetch only returns the router tree patch without rendered components.\n        if (cacheNodeSeedData !== null) {\n          const rsc = cacheNodeSeedData[1]\n          const loading = cacheNodeSeedData[3]\n          cache.rsc = rsc\n          cache.prefetchRsc = null\n          cache.loading = loading\n          fillLazyItemsTillLeafWithHead(\n            cache,\n            // Existing cache is not passed in as `router.refresh()` has to invalidate the entire cache.\n            undefined,\n            treePatch,\n            cacheNodeSeedData,\n            head\n          )\n          mutable.prefetchCache = new Map()\n        }\n\n        await refreshInactiveParallelSegments({\n          state,\n          updatedTree: newTree,\n          updatedCache: cache,\n          includeNextUrl,\n          canonicalUrl: mutable.canonicalUrl || state.canonicalUrl,\n        })\n\n        mutable.cache = cache\n        mutable.patchedTree = newTree\n\n        currentTree = newTree\n      }\n\n      return handleMutable(state, mutable)\n    },\n    () => state\n  )\n}\n","import { fetchServerResponse } from '../fetch-server-response'\nimport { createHrefFromUrl } from '../create-href-from-url'\nimport { applyRouterStatePatchToTree } from '../apply-router-state-patch-to-tree'\nimport { isNavigatingToNewRootLayout } from '../is-navigating-to-new-root-layout'\nimport type {\n  ReadonlyReducerState,\n  ReducerState,\n  HmrRefreshAction,\n  Mutable,\n} from '../router-reducer-types'\nimport { handleExternalUrl } from './navigate-reducer'\nimport { handleMutable } from '../handle-mutable'\nimport { applyFlightData } from '../apply-flight-data'\nimport type { CacheNode } from '../../../../shared/lib/app-router-context.shared-runtime'\nimport { createEmptyCacheNode } from '../../app-router'\nimport { handleSegmentMismatch } from '../handle-segment-mismatch'\nimport { hasInterceptionRouteInCurrentTree } from './has-interception-route-in-current-tree'\n\n// A version of refresh reducer that keeps the cache around instead of wiping all of it.\nfunction hmrRefreshReducerImpl(\n  state: ReadonlyReducerState,\n  action: HmrRefreshAction\n): ReducerState {\n  const { origin } = action\n  const mutable: Mutable = {}\n  const href = state.canonicalUrl\n\n  mutable.preserveCustomHistoryState = false\n\n  const cache: CacheNode = createEmptyCacheNode()\n  // If the current tree was intercepted, the nextUrl should be included in the request.\n  // This is to ensure that the refresh request doesn't get intercepted, accidentally triggering the interception route.\n  const includeNextUrl = hasInterceptionRouteInCurrentTree(state.tree)\n\n  // TODO-APP: verify that `href` is not an external url.\n  // Fetch data from the root of the tree.\n  cache.lazyData = fetchServerResponse(new URL(href, origin), {\n    flightRouterState: [state.tree[0], state.tree[1], state.tree[2], 'refetch'],\n    nextUrl: includeNextUrl ? state.nextUrl : null,\n    buildId: state.buildId,\n    isHmrRefresh: true,\n  })\n\n  return cache.lazyData.then(\n    ({ flightData, canonicalUrl: canonicalUrlOverride }) => {\n      // Handle case when navigating to page in `pages` from `app`\n      if (typeof flightData === 'string') {\n        return handleExternalUrl(\n          state,\n          mutable,\n          flightData,\n          state.pushRef.pendingPush\n        )\n      }\n\n      // Remove cache.lazyData as it has been resolved at this point.\n      cache.lazyData = null\n\n      let currentTree = state.tree\n      let currentCache = state.cache\n\n      for (const normalizedFlightData of flightData) {\n        const { tree: treePatch, isRootRender } = normalizedFlightData\n        if (!isRootRender) {\n          // TODO-APP: handle this case better\n          console.log('REFRESH FAILED')\n          return state\n        }\n\n        const newTree = applyRouterStatePatchToTree(\n          // TODO-APP: remove ''\n          [''],\n          currentTree,\n          treePatch,\n          state.canonicalUrl\n        )\n\n        if (newTree === null) {\n          return handleSegmentMismatch(state, action, treePatch)\n        }\n\n        if (isNavigatingToNewRootLayout(currentTree, newTree)) {\n          return handleExternalUrl(\n            state,\n            mutable,\n            href,\n            state.pushRef.pendingPush\n          )\n        }\n\n        const canonicalUrlOverrideHref = canonicalUrlOverride\n          ? createHrefFromUrl(canonicalUrlOverride)\n          : undefined\n\n        if (canonicalUrlOverride) {\n          mutable.canonicalUrl = canonicalUrlOverrideHref\n        }\n        const applied = applyFlightData(\n          currentCache,\n          cache,\n          normalizedFlightData\n        )\n\n        if (applied) {\n          mutable.cache = cache\n          currentCache = cache\n        }\n\n        mutable.patchedTree = newTree\n        mutable.canonicalUrl = href\n\n        currentTree = newTree\n      }\n      return handleMutable(state, mutable)\n    },\n    () => state\n  )\n}\n\nfunction hmrRefreshReducerNoop(\n  state: ReadonlyReducerState,\n  _action: HmrRefreshAction\n): ReducerState {\n  return state\n}\n\nexport const hmrRefreshReducer =\n  process.env.NODE_ENV === 'production'\n    ? hmrRefreshReducerNoop\n    : hmrRefreshReducerImpl\n","import type {\n  ActionFlightResponse,\n  ActionResult,\n} from '../../../../server/app-render/types'\nimport { callServer } from '../../../app-call-server'\nimport { findSourceMapURL } from '../../../app-find-source-map-url'\nimport {\n  ACTION_HEADER,\n  NEXT_IS_PRERENDER_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_URL,\n  RSC_CONTENT_TYPE_HEADER,\n} from '../../app-router-headers'\n\n// // eslint-disable-next-line import/no-extraneous-dependencies\n// import { createFromFetch } from 'react-server-dom-webpack/client'\n// // eslint-disable-next-line import/no-extraneous-dependencies\n// import { encodeReply } from 'react-server-dom-webpack/client'\nconst { createFromFetch, createTemporaryReferenceSet, encodeReply } = (\n  !!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')\n) as typeof import('react-server-dom-webpack/client')\n\nimport {\n  PrefetchKind,\n  type ReadonlyReducerState,\n  type ReducerState,\n  type ServerActionAction,\n  type ServerActionMutable,\n} from '../router-reducer-types'\nimport { addBasePath } from '../../../add-base-path'\nimport { createHrefFromUrl } from '../create-href-from-url'\nimport { handleExternalUrl } from './navigate-reducer'\nimport { applyRouterStatePatchToTree } from '../apply-router-state-patch-to-tree'\nimport { isNavigatingToNewRootLayout } from '../is-navigating-to-new-root-layout'\nimport type { CacheNode } from '../../../../shared/lib/app-router-context.shared-runtime'\nimport { handleMutable } from '../handle-mutable'\nimport { fillLazyItemsTillLeafWithHead } from '../fill-lazy-items-till-leaf-with-head'\nimport { createEmptyCacheNode } from '../../app-router'\nimport { hasInterceptionRouteInCurrentTree } from './has-interception-route-in-current-tree'\nimport { handleSegmentMismatch } from '../handle-segment-mismatch'\nimport { refreshInactiveParallelSegments } from '../refetch-inactive-parallel-segments'\nimport {\n  normalizeFlightData,\n  type NormalizedFlightData,\n} from '../../../flight-data-helpers'\nimport { getRedirectError, RedirectType } from '../../redirect'\nimport { createSeededPrefetchCacheEntry } from '../prefetch-cache-utils'\nimport { removeBasePath } from '../../../remove-base-path'\nimport { hasBasePath } from '../../../has-base-path'\n\ntype FetchServerActionResult = {\n  redirectLocation: URL | undefined\n  redirectType: RedirectType | undefined\n  actionResult?: ActionResult\n  actionFlightData?: NormalizedFlightData[] | string\n  isPrerender: boolean\n  revalidatedParts: {\n    tag: boolean\n    cookie: boolean\n    paths: string[]\n  }\n}\n\nasync function fetchServerAction(\n  state: ReadonlyReducerState,\n  nextUrl: ReadonlyReducerState['nextUrl'],\n  { actionId, actionArgs }: ServerActionAction\n): Promise<FetchServerActionResult> {\n  const temporaryReferences = createTemporaryReferenceSet()\n  const body = await encodeReply(actionArgs, { temporaryReferences })\n\n  const res = await fetch('', {\n    method: 'POST',\n    headers: {\n      Accept: RSC_CONTENT_TYPE_HEADER,\n      [ACTION_HEADER]: actionId,\n      [NEXT_ROUTER_STATE_TREE_HEADER]: encodeURIComponent(\n        JSON.stringify(state.tree)\n      ),\n      ...(process.env.NEXT_DEPLOYMENT_ID\n        ? {\n            'x-deployment-id': process.env.NEXT_DEPLOYMENT_ID,\n          }\n        : {}),\n      ...(nextUrl\n        ? {\n            [NEXT_URL]: nextUrl,\n          }\n        : {}),\n    },\n    body,\n  })\n\n  const redirectHeader = res.headers.get('x-action-redirect')\n  const [location, _redirectType] = redirectHeader?.split(';') || []\n  let redirectType: RedirectType | undefined\n  switch (_redirectType) {\n    case 'push':\n      redirectType = RedirectType.push\n      break\n    case 'replace':\n      redirectType = RedirectType.replace\n      break\n    default:\n      redirectType = undefined\n  }\n\n  const isPrerender = !!res.headers.get(NEXT_IS_PRERENDER_HEADER)\n  let revalidatedParts: FetchServerActionResult['revalidatedParts']\n  try {\n    const revalidatedHeader = JSON.parse(\n      res.headers.get('x-action-revalidated') || '[[],0,0]'\n    )\n    revalidatedParts = {\n      paths: revalidatedHeader[0] || [],\n      tag: !!revalidatedHeader[1],\n      cookie: revalidatedHeader[2],\n    }\n  } catch (e) {\n    revalidatedParts = {\n      paths: [],\n      tag: false,\n      cookie: false,\n    }\n  }\n\n  const redirectLocation = location\n    ? new URL(\n        addBasePath(location),\n        // Ensure relative redirects in Server Actions work, e.g. redirect('./somewhere-else')\n        new URL(state.canonicalUrl, window.location.href)\n      )\n    : undefined\n\n  const contentType = res.headers.get('content-type')\n\n  if (contentType?.startsWith(RSC_CONTENT_TYPE_HEADER)) {\n    const response: ActionFlightResponse = await createFromFetch(\n      Promise.resolve(res),\n      { callServer, findSourceMapURL, temporaryReferences }\n    )\n\n    if (location) {\n      // if it was a redirection, then result is just a regular RSC payload\n      return {\n        actionFlightData: normalizeFlightData(response.f),\n        redirectLocation,\n        redirectType,\n        revalidatedParts,\n        isPrerender,\n      }\n    }\n\n    return {\n      actionResult: response.a,\n      actionFlightData: normalizeFlightData(response.f),\n      redirectLocation,\n      redirectType,\n      revalidatedParts,\n      isPrerender,\n    }\n  }\n\n  // Handle invalid server action responses\n  if (res.status >= 400) {\n    // The server can respond with a text/plain error message, but we'll fallback to something generic\n    // if there isn't one.\n    const error =\n      contentType === 'text/plain'\n        ? await res.text()\n        : 'An unexpected response was received from the server.'\n\n    throw new Error(error)\n  }\n\n  return {\n    redirectLocation,\n    redirectType,\n    revalidatedParts,\n    isPrerender,\n  }\n}\n\n/*\n * This reducer is responsible for calling the server action and processing any side-effects from the server action.\n * It does not mutate the state by itself but rather delegates to other reducers to do the actual mutation.\n */\nexport function serverActionReducer(\n  state: ReadonlyReducerState,\n  action: ServerActionAction\n): ReducerState {\n  const { resolve, reject } = action\n  const mutable: ServerActionMutable = {}\n  const href = state.canonicalUrl\n\n  let currentTree = state.tree\n\n  mutable.preserveCustomHistoryState = false\n\n  // only pass along the `nextUrl` param (used for interception routes) if the current route was intercepted.\n  // If the route has been intercepted, the action should be as well.\n  // Otherwise the server action might be intercepted with the wrong action id\n  // (ie, one that corresponds with the intercepted route)\n  const nextUrl =\n    state.nextUrl && hasInterceptionRouteInCurrentTree(state.tree)\n      ? state.nextUrl\n      : null\n\n  return fetchServerAction(state, nextUrl, action).then(\n    async ({\n      actionResult,\n      actionFlightData: flightData,\n      redirectLocation,\n      redirectType,\n      isPrerender,\n      revalidatedParts,\n    }) => {\n      // honor the redirect type instead of defaulting to push in case of server actions.\n      if (redirectLocation) {\n        if (redirectType === RedirectType.replace) {\n          state.pushRef.pendingPush = false\n          mutable.pendingPush = false\n        } else {\n          state.pushRef.pendingPush = true\n          mutable.pendingPush = true\n        }\n      }\n\n      if (!flightData) {\n        resolve(actionResult)\n\n        // If there is a redirect but no flight data we need to do a mpaNavigation.\n        if (redirectLocation) {\n          return handleExternalUrl(\n            state,\n            mutable,\n            redirectLocation.href,\n            state.pushRef.pendingPush\n          )\n        }\n        return state\n      }\n\n      if (typeof flightData === 'string') {\n        // Handle case when navigating to page in `pages` from `app`\n        return handleExternalUrl(\n          state,\n          mutable,\n          flightData,\n          state.pushRef.pendingPush\n        )\n      }\n\n      const actionRevalidated =\n        revalidatedParts.paths.length > 0 ||\n        revalidatedParts.tag ||\n        revalidatedParts.cookie\n\n      for (const normalizedFlightData of flightData) {\n        const {\n          tree: treePatch,\n          seedData: cacheNodeSeedData,\n          head,\n          isRootRender,\n        } = normalizedFlightData\n\n        if (!isRootRender) {\n          // TODO-APP: handle this case better\n          console.log('SERVER ACTION APPLY FAILED')\n          return state\n        }\n\n        // Given the path can only have two items the items are only the router state and rsc for the root.\n        const newTree = applyRouterStatePatchToTree(\n          // TODO-APP: remove ''\n          [''],\n          currentTree,\n          treePatch,\n          redirectLocation\n            ? createHrefFromUrl(redirectLocation)\n            : state.canonicalUrl\n        )\n\n        if (newTree === null) {\n          return handleSegmentMismatch(state, action, treePatch)\n        }\n\n        if (isNavigatingToNewRootLayout(currentTree, newTree)) {\n          return handleExternalUrl(\n            state,\n            mutable,\n            href,\n            state.pushRef.pendingPush\n          )\n        }\n\n        // The server sent back RSC data for the server action, so we need to apply it to the cache.\n        if (cacheNodeSeedData !== null) {\n          const rsc = cacheNodeSeedData[1]\n          const cache: CacheNode = createEmptyCacheNode()\n          cache.rsc = rsc\n          cache.prefetchRsc = null\n          cache.loading = cacheNodeSeedData[3]\n          fillLazyItemsTillLeafWithHead(\n            cache,\n            // Existing cache is not passed in as server actions have to invalidate the entire cache.\n            undefined,\n            treePatch,\n            cacheNodeSeedData,\n            head\n          )\n\n          mutable.cache = cache\n          mutable.prefetchCache = new Map()\n\n          if (actionRevalidated) {\n            await refreshInactiveParallelSegments({\n              state,\n              updatedTree: newTree,\n              updatedCache: cache,\n              includeNextUrl: Boolean(nextUrl),\n              canonicalUrl: mutable.canonicalUrl || state.canonicalUrl,\n            })\n          }\n        }\n\n        mutable.patchedTree = newTree\n        currentTree = newTree\n      }\n\n      if (redirectLocation) {\n        const newHref = createHrefFromUrl(redirectLocation, false)\n        mutable.canonicalUrl = newHref\n\n        // Because the RedirectBoundary will trigger a navigation, we need to seed the prefetch cache\n        // with the FlightData that we got from the server action for the target page, so that it's\n        // available when the page is navigated to and doesn't need to be re-fetched.\n        // We only do this if the server action didn't revalidate any data, as in that case the\n        // client cache will be cleared and the data will be re-fetched anyway.\n        if (!actionRevalidated) {\n          createSeededPrefetchCacheEntry({\n            url: redirectLocation,\n            data: {\n              flightData,\n              canonicalUrl: undefined,\n              couldBeIntercepted: false,\n              prerendered: false,\n              postponed: false,\n              // TODO: We should be able to set this if the server action\n              // returned a fully static response.\n              staleTime: -1,\n            },\n            tree: state.tree,\n            prefetchCache: state.prefetchCache,\n            nextUrl: state.nextUrl,\n            kind: isPrerender ? PrefetchKind.FULL : PrefetchKind.AUTO,\n          })\n          mutable.prefetchCache = state.prefetchCache\n        }\n\n        // If the action triggered a redirect, the action promise promise will be rejected with\n        // a redirect so that it's handled by RedirectBoundary as we won't have a valid\n        // action result to resolve the promise with. This will effectively reset the state of\n        // the component that called the action as the error boundary will remount the tree.\n        // The status code doesn't matter here as the action handler will have already sent\n        // a response with the correct status code.\n        reject(\n          getRedirectError(\n            hasBasePath(newHref) ? removeBasePath(newHref) : newHref,\n            redirectType || RedirectType.push\n          )\n        )\n      } else {\n        resolve(actionResult)\n      }\n\n      return handleMutable(state, mutable)\n    },\n    (e: any) => {\n      // When the server action is rejected we don't update the state and instead call the reject handler of the promise.\n      reject(e)\n\n      return state\n    }\n  )\n}\n","import {\n  ACTION_NAVIGATE,\n  ACTION_SERVER_PATCH,\n  ACTION_RESTORE,\n  ACTION_REFRESH,\n  ACTION_PREFETCH,\n  ACTION_HMR_REFRESH,\n  ACTION_SERVER_ACTION,\n} from './router-reducer-types'\nimport type {\n  ReducerActions,\n  ReducerState,\n  ReadonlyReducerState,\n} from './router-reducer-types'\nimport { navigateReducer } from './reducers/navigate-reducer'\nimport { serverPatchReducer } from './reducers/server-patch-reducer'\nimport { restoreReducer } from './reducers/restore-reducer'\nimport { refreshReducer } from './reducers/refresh-reducer'\nimport { prefetchReducer } from './reducers/prefetch-reducer'\nimport { hmrRefreshReducer } from './reducers/hmr-refresh-reducer'\nimport { serverActionReducer } from './reducers/server-action-reducer'\n\n/**\n * Reducer that handles the app-router state updates.\n */\nfunction clientReducer(\n  state: ReadonlyReducerState,\n  action: ReducerActions\n): ReducerState {\n  switch (action.type) {\n    case ACTION_NAVIGATE: {\n      return navigateReducer(state, action)\n    }\n    case ACTION_SERVER_PATCH: {\n      return serverPatchReducer(state, action)\n    }\n    case ACTION_RESTORE: {\n      return restoreReducer(state, action)\n    }\n    case ACTION_REFRESH: {\n      return refreshReducer(state, action)\n    }\n    case ACTION_HMR_REFRESH: {\n      return hmrRefreshReducer(state, action)\n    }\n    case ACTION_PREFETCH: {\n      return prefetchReducer(state, action)\n    }\n    case ACTION_SERVER_ACTION: {\n      return serverActionReducer(state, action)\n    }\n    // This case should never be hit as dispatch is strongly typed.\n    default:\n      throw new Error('Unknown action')\n  }\n}\n\nfunction serverReducer(\n  state: ReadonlyReducerState,\n  _action: ReducerActions\n): ReducerState {\n  return state\n}\n\n// we don't run the client reducer on the server, so we use a noop function for better tree shaking\nexport const reducer =\n  typeof window === 'undefined' ? serverReducer : clientReducer\n","import {\n  type AppRouterState,\n  type ReducerActions,\n  type ReducerState,\n  ACTION_REFRESH,\n  ACTION_SERVER_ACTION,\n  ACTION_NAVIGATE,\n  ACTION_RESTORE,\n} from '../../../client/components/router-reducer/router-reducer-types'\nimport { reducer } from '../../../client/components/router-reducer/router-reducer'\nimport { startTransition } from 'react'\nimport { isThenable } from '../is-thenable'\n\nexport type DispatchStatePromise = React.Dispatch<ReducerState>\n\nexport type AppRouterActionQueue = {\n  state: AppRouterState\n  dispatch: (payload: ReducerActions, setState: DispatchStatePromise) => void\n  action: (state: AppRouterState, action: ReducerActions) => ReducerState\n  pending: ActionQueueNode | null\n  needsRefresh?: boolean\n  last: ActionQueueNode | null\n}\n\nexport type ActionQueueNode = {\n  payload: ReducerActions\n  next: ActionQueueNode | null\n  resolve: (value: ReducerState) => void\n  reject: (err: Error) => void\n  discarded?: boolean\n}\n\nfunction runRemainingActions(\n  actionQueue: AppRouterActionQueue,\n  setState: DispatchStatePromise\n) {\n  if (actionQueue.pending !== null) {\n    actionQueue.pending = actionQueue.pending.next\n    if (actionQueue.pending !== null) {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      runAction({\n        actionQueue,\n        action: actionQueue.pending,\n        setState,\n      })\n    } else {\n      // No more actions are pending, check if a refresh is needed\n      if (actionQueue.needsRefresh) {\n        actionQueue.needsRefresh = false\n        actionQueue.dispatch(\n          {\n            type: ACTION_REFRESH,\n            origin: window.location.origin,\n          },\n          setState\n        )\n      }\n    }\n  }\n}\n\nasync function runAction({\n  actionQueue,\n  action,\n  setState,\n}: {\n  actionQueue: AppRouterActionQueue\n  action: ActionQueueNode\n  setState: DispatchStatePromise\n}) {\n  const prevState = actionQueue.state\n\n  actionQueue.pending = action\n\n  const payload = action.payload\n  const actionResult = actionQueue.action(prevState, payload)\n\n  function handleResult(nextState: AppRouterState) {\n    // if we discarded this action, the state should also be discarded\n    if (action.discarded) {\n      return\n    }\n\n    actionQueue.state = nextState\n\n    runRemainingActions(actionQueue, setState)\n    action.resolve(nextState)\n  }\n\n  // if the action is a promise, set up a callback to resolve it\n  if (isThenable(actionResult)) {\n    actionResult.then(handleResult, (err) => {\n      runRemainingActions(actionQueue, setState)\n      action.reject(err)\n    })\n  } else {\n    handleResult(actionResult)\n  }\n}\n\nfunction dispatchAction(\n  actionQueue: AppRouterActionQueue,\n  payload: ReducerActions,\n  setState: DispatchStatePromise\n) {\n  let resolvers: {\n    resolve: (value: ReducerState) => void\n    reject: (reason: any) => void\n  } = { resolve: setState, reject: () => {} }\n\n  // most of the action types are async with the exception of restore\n  // it's important that restore is handled quickly since it's fired on the popstate event\n  // and we don't want to add any delay on a back/forward nav\n  // this only creates a promise for the async actions\n  if (payload.type !== ACTION_RESTORE) {\n    // Create the promise and assign the resolvers to the object.\n    const deferredPromise = new Promise<AppRouterState>((resolve, reject) => {\n      resolvers = { resolve, reject }\n    })\n\n    startTransition(() => {\n      // we immediately notify React of the pending promise -- the resolver is attached to the action node\n      // and will be called when the associated action promise resolves\n      setState(deferredPromise)\n    })\n  }\n\n  const newAction: ActionQueueNode = {\n    payload,\n    next: null,\n    resolve: resolvers.resolve,\n    reject: resolvers.reject,\n  }\n\n  // Check if the queue is empty\n  if (actionQueue.pending === null) {\n    // The queue is empty, so add the action and start it immediately\n    // Mark this action as the last in the queue\n    actionQueue.last = newAction\n\n    runAction({\n      actionQueue,\n      action: newAction,\n      setState,\n    })\n  } else if (\n    payload.type === ACTION_NAVIGATE ||\n    payload.type === ACTION_RESTORE\n  ) {\n    // Navigations (including back/forward) take priority over any pending actions.\n    // Mark the pending action as discarded (so the state is never applied) and start the navigation action immediately.\n    actionQueue.pending.discarded = true\n\n    // Mark this action as the last in the queue\n    actionQueue.last = newAction\n\n    // if the pending action was a server action, mark the queue as needing a refresh once events are processed\n    if (actionQueue.pending.payload.type === ACTION_SERVER_ACTION) {\n      actionQueue.needsRefresh = true\n    }\n\n    runAction({\n      actionQueue,\n      action: newAction,\n      setState,\n    })\n  } else {\n    // The queue is not empty, so add the action to the end of the queue\n    // It will be started by runRemainingActions after the previous action finishes\n    if (actionQueue.last !== null) {\n      actionQueue.last.next = newAction\n    }\n    actionQueue.last = newAction\n  }\n}\n\nexport function createMutableActionQueue(\n  initialState: AppRouterState\n): AppRouterActionQueue {\n  const actionQueue: AppRouterActionQueue = {\n    state: initialState,\n    dispatch: (payload: ReducerActions, setState: DispatchStatePromise) =>\n      dispatchAction(actionQueue, payload, setState),\n    action: async (state: AppRouterState, action: ReducerActions) => {\n      const result = reducer(state, action)\n      return result\n    },\n    pending: null,\n    last: null,\n  }\n\n  return actionQueue\n}\n","import { InvariantError } from '../../shared/lib/invariant-error';\nimport { isPrerenderInterruptedError } from './dynamic-rendering';\n/**\n * This is a utility function to make scheduling sequential tasks that run back to back easier.\n * We schedule on the same queue (setImmediate) at the same time to ensure no other events can sneak in between.\n */ export function prerenderAndAbortInSequentialTasks(prerender, abort) {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        throw new InvariantError('`prerenderAndAbortInSequentialTasks` should not be called in edge runtime.');\n    } else {\n        return new Promise((resolve, reject)=>{\n            let pendingResult;\n            setImmediate(()=>{\n                try {\n                    pendingResult = prerender();\n                    pendingResult.catch(()=>{});\n                } catch (err) {\n                    reject(err);\n                }\n            });\n            setImmediate(()=>{\n                abort();\n                resolve(pendingResult);\n            });\n        });\n    }\n}\nexport function prerenderServerWithPhases(signal, render, ...remainingPhases) {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        throw new InvariantError('`prerenderAndAbortInSequentialTasks` should not be called in edge runtime.');\n    } else {\n        return new Promise((resolve, reject)=>{\n            let result;\n            signal.addEventListener('abort', ()=>{\n                if (isPrerenderInterruptedError(signal.reason)) {\n                    result.markInterrupted();\n                } else {\n                    result.markComplete();\n                }\n            }, {\n                once: true\n            });\n            setImmediate(()=>{\n                try {\n                    result = new ServerPrerenderStreamResult(render());\n                } catch (err) {\n                    reject(err);\n                }\n            });\n            function runFinalTask() {\n                try {\n                    if (result) {\n                        result.markComplete();\n                        this();\n                    }\n                    resolve(result);\n                } catch (err) {\n                    reject(err);\n                }\n            }\n            function runNextTask() {\n                try {\n                    if (result) {\n                        result.markPhase();\n                        this();\n                    }\n                } catch (err) {\n                    reject(err);\n                }\n            }\n            let i = 0;\n            for(; i < remainingPhases.length - 1; i++){\n                const phase = remainingPhases[i];\n                setImmediate(runNextTask.bind(phase));\n            }\n            if (remainingPhases[i]) {\n                const finalPhase = remainingPhases[i];\n                setImmediate(runFinalTask.bind(finalPhase));\n            }\n        });\n    }\n}\nconst PENDING = 0;\nconst COMPLETE = 1;\nconst INTERRUPTED = 2;\nconst ERRORED = 3;\nexport class ServerPrerenderStreamResult {\n    constructor(stream){\n        this.status = PENDING;\n        this.reason = null;\n        this.trailingChunks = [];\n        this.currentChunks = [];\n        this.chunksByPhase = [\n            this.currentChunks\n        ];\n        const reader = stream.getReader();\n        const progress = ({ done, value })=>{\n            if (done) {\n                if (this.status === PENDING) {\n                    this.status = COMPLETE;\n                }\n                return;\n            }\n            if (this.status === PENDING || this.status === INTERRUPTED) {\n                this.currentChunks.push(value);\n            } else {\n                this.trailingChunks.push(value);\n            }\n            reader.read().then(progress, error);\n        };\n        const error = (reason)=>{\n            this.status = ERRORED;\n            this.reason = reason;\n        };\n        reader.read().then(progress, error);\n    }\n    markPhase() {\n        this.currentChunks = [];\n        this.chunksByPhase.push(this.currentChunks);\n    }\n    markComplete() {\n        if (this.status === PENDING) {\n            this.status = COMPLETE;\n        }\n    }\n    markInterrupted() {\n        this.status = INTERRUPTED;\n    }\n    /**\n   * Returns a stream which only releases chunks when `releasePhase` is called. This stream will never \"complete\" because\n   * we rely upon the stream remaining open when prerendering to avoid triggering errors for incomplete chunks in the client.\n   *\n   * asPhasedStream is expected to be called once per result however it is safe to call multiple times as long as we have not\n   * transferred the underlying data. Generally this will only happen when streaming to a response\n   */ asPhasedStream() {\n        switch(this.status){\n            case COMPLETE:\n            case INTERRUPTED:\n                return new PhasedStream(this.chunksByPhase);\n            default:\n                throw new InvariantError(`ServerPrerenderStreamResult cannot be consumed as a stream because it is not yet complete. status: ${this.status}`);\n        }\n    }\n    /**\n   * Returns a stream which will release all chunks immediately. This stream will \"complete\" synchronously. It should be used outside\n   * of render use cases like loading client chunks ahead of SSR or writing the streamed content to disk.\n   */ asStream() {\n        switch(this.status){\n            case COMPLETE:\n            case INTERRUPTED:\n                const chunksByPhase = this.chunksByPhase;\n                const trailingChunks = this.trailingChunks;\n                return new ReadableStream({\n                    start (controller) {\n                        for(let i = 0; i < chunksByPhase.length; i++){\n                            const chunks = chunksByPhase[i];\n                            for(let j = 0; j < chunks.length; j++){\n                                controller.enqueue(chunks[j]);\n                            }\n                        }\n                        for(let i = 0; i < trailingChunks.length; i++){\n                            controller.enqueue(trailingChunks[i]);\n                        }\n                        controller.close();\n                    }\n                });\n            default:\n                throw new InvariantError(`ServerPrerenderStreamResult cannot be consumed as a stream because it is not yet complete. status: ${this.status}`);\n        }\n    }\n}\nclass PhasedStream extends ReadableStream {\n    constructor(chunksByPhase){\n        if (chunksByPhase.length === 0) {\n            throw new InvariantError('PhasedStream expected at least one phase but none were found.');\n        }\n        let destination;\n        super({\n            start (controller) {\n                destination = controller;\n            }\n        });\n        // the start function above is called synchronously during construction so we will always have a destination\n        // We wait to assign it until after the super call because we cannot access `this` before calling super\n        this.destination = destination;\n        this.nextPhase = 0;\n        this.chunksByPhase = chunksByPhase;\n        this.releasePhase();\n    }\n    releasePhase() {\n        if (this.nextPhase < this.chunksByPhase.length) {\n            const chunks = this.chunksByPhase[this.nextPhase++];\n            for(let i = 0; i < chunks.length; i++){\n                this.destination.enqueue(chunks[i]);\n            }\n        } else {\n            throw new InvariantError('PhasedStream expected more phases to release but none were found.');\n        }\n    }\n    assertExhausted() {\n        if (this.nextPhase < this.chunksByPhase.length) {\n            throw new InvariantError('PhasedStream expected no more phases to release but some were found.');\n        }\n    }\n}\nexport function prerenderClientWithPhases(render, ...remainingPhases) {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        throw new InvariantError('`prerenderAndAbortInSequentialTasks` should not be called in edge runtime.');\n    } else {\n        return new Promise((resolve, reject)=>{\n            let pendingResult;\n            setImmediate(()=>{\n                try {\n                    pendingResult = render();\n                    pendingResult.catch((err)=>reject(err));\n                } catch (err) {\n                    reject(err);\n                }\n            });\n            function runFinalTask() {\n                try {\n                    this();\n                    resolve(pendingResult);\n                } catch (err) {\n                    reject(err);\n                }\n            }\n            function runNextTask() {\n                try {\n                    this();\n                } catch (err) {\n                    reject(err);\n                }\n            }\n            let i = 0;\n            for(; i < remainingPhases.length - 1; i++){\n                const phase = remainingPhases[i];\n                setImmediate(runNextTask.bind(phase));\n            }\n            if (remainingPhases[i]) {\n                const finalPhase = remainingPhases[i];\n                setImmediate(runFinalTask.bind(finalPhase));\n            }\n        });\n    }\n}\n// React's RSC prerender function will emit an incomplete flight stream when using `prerender`. If the connection\n// closes then whatever hanging chunks exist will be errored. This is because prerender (an experimental feature)\n// has not yet implemented a concept of resume. For now we will simulate a paused connection by wrapping the stream\n// in one that doesn't close even when the underlying is complete.\nexport class ReactServerResult {\n    constructor(stream){\n        this._stream = stream;\n    }\n    tee() {\n        if (this._stream === null) {\n            throw new Error('Cannot tee a ReactServerResult that has already been consumed');\n        }\n        const tee = this._stream.tee();\n        this._stream = tee[0];\n        return tee[1];\n    }\n    consume() {\n        if (this._stream === null) {\n            throw new Error('Cannot consume a ReactServerResult that has already been consumed');\n        }\n        const stream = this._stream;\n        this._stream = null;\n        return stream;\n    }\n}\nexport async function createReactServerPrerenderResult(underlying) {\n    const chunks = [];\n    const { prelude } = await underlying;\n    const reader = prelude.getReader();\n    while(true){\n        const { done, value } = await reader.read();\n        if (done) {\n            return new ReactServerPrerenderResult(chunks);\n        } else {\n            chunks.push(value);\n        }\n    }\n}\nexport async function createReactServerPrerenderResultFromRender(underlying) {\n    const chunks = [];\n    const reader = underlying.getReader();\n    while(true){\n        const { done, value } = await reader.read();\n        if (done) {\n            break;\n        } else {\n            chunks.push(value);\n        }\n    }\n    return new ReactServerPrerenderResult(chunks);\n}\nexport class ReactServerPrerenderResult {\n    assertChunks(expression) {\n        if (this._chunks === null) {\n            throw new InvariantError(`Cannot \\`${expression}\\` on a ReactServerPrerenderResult that has already been consumed.`);\n        }\n        return this._chunks;\n    }\n    consumeChunks(expression) {\n        const chunks = this.assertChunks(expression);\n        this.consume();\n        return chunks;\n    }\n    consume() {\n        this._chunks = null;\n    }\n    constructor(chunks){\n        this._chunks = chunks;\n    }\n    asUnclosingStream() {\n        const chunks = this.assertChunks('asUnclosingStream()');\n        return createUnclosingStream(chunks);\n    }\n    consumeAsUnclosingStream() {\n        const chunks = this.consumeChunks('consumeAsUnclosingStream()');\n        return createUnclosingStream(chunks);\n    }\n    asStream() {\n        const chunks = this.assertChunks('asStream()');\n        return createClosingStream(chunks);\n    }\n    consumeAsStream() {\n        const chunks = this.consumeChunks('consumeAsStream()');\n        return createClosingStream(chunks);\n    }\n}\nfunction createUnclosingStream(chunks) {\n    let i = 0;\n    return new ReadableStream({\n        async pull (controller) {\n            if (i < chunks.length) {\n                controller.enqueue(chunks[i++]);\n            }\n        // we intentionally keep the stream open. The consumer will clear\n        // out chunks once finished and the remaining memory will be GC'd\n        // when this object goes out of scope\n        }\n    });\n}\nfunction createClosingStream(chunks) {\n    let i = 0;\n    return new ReadableStream({\n        async pull (controller) {\n            if (i < chunks.length) {\n                controller.enqueue(chunks[i++]);\n            } else {\n                controller.close();\n            }\n        }\n    });\n}\n\n//# sourceMappingURL=app-render-prerender-utils.js.map","export function printDebugThrownValueForProspectiveRender(thrownValue, route) {\n    let message;\n    if (typeof thrownValue === 'object' && thrownValue !== null && typeof thrownValue.message === 'string') {\n        message = thrownValue.message;\n        if (typeof thrownValue.stack === 'string') {\n            const originalErrorStack = thrownValue.stack;\n            const stackStart = originalErrorStack.indexOf('\\n');\n            if (stackStart > -1) {\n                const error = new Error(`Route ${route} errored during the prospective render. These errors are normally ignored and may not prevent the route from prerendering but are logged here because build debugging is enabled.\n          \nOriginal Error: ${message}`);\n                error.stack = 'Error: ' + error.message + originalErrorStack.slice(stackStart);\n                console.error(error);\n                return;\n            }\n        }\n    } else if (typeof thrownValue === 'string') {\n        message = thrownValue;\n    }\n    if (message) {\n        console.error(`Route ${route} errored during the prospective render. These errors are normally ignored and may not prevent the route from prerendering but are logged here because build debugging is enabled. No stack was provided.\n          \nOriginal Message: ${message}`);\n        return;\n    }\n    console.error(`Route ${route} errored during the prospective render. These errors are normally ignored and may not prevent the route from prerendering but are logged here because build debugging is enabled. The thrown value is logged just following this message`);\n    console.error(thrownValue);\n    return;\n}\n\n//# sourceMappingURL=prospective-render-utils.js.map","import { InvariantError } from '../../shared/lib/invariant-error';\n/**\n * This is a utility function to make scheduling sequential tasks that run back to back easier.\n * We schedule on the same queue (setImmediate) at the same time to ensure no other events can sneak in between.\n */ export function scheduleInSequentialTasks(render, followup) {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        throw new InvariantError('`scheduleInSequentialTasks` should not be called in edge runtime.');\n    } else {\n        return new Promise((resolve, reject)=>{\n            let pendingResult;\n            setImmediate(()=>{\n                try {\n                    pendingResult = render();\n                } catch (err) {\n                    reject(err);\n                }\n            });\n            setImmediate(()=>{\n                followup();\n                resolve(pendingResult);\n            });\n        });\n    }\n}\n\n//# sourceMappingURL=app-render-render-utils.js.map","/**\n * This class is used to detect when all cache reads for a given render are settled.\n * We do this to allow for cache warming the prerender without having to continue rendering\n * the remainder of the page. This feature is really only useful when the dynamicIO flag is on\n * and should only be used in codepaths gated with this feature.\n */ export class CacheSignal {\n    constructor(){\n        this.count = 0;\n        this.earlyListeners = [];\n        this.listeners = [];\n        this.tickPending = false;\n        this.taskPending = false;\n    }\n    noMorePendingCaches() {\n        if (!this.tickPending) {\n            this.tickPending = true;\n            process.nextTick(()=>{\n                this.tickPending = false;\n                if (this.count === 0) {\n                    for(let i = 0; i < this.earlyListeners.length; i++){\n                        this.earlyListeners[i]();\n                    }\n                    this.earlyListeners.length = 0;\n                }\n            });\n        }\n        if (!this.taskPending) {\n            this.taskPending = true;\n            setTimeout(()=>{\n                this.taskPending = false;\n                if (this.count === 0) {\n                    for(let i = 0; i < this.listeners.length; i++){\n                        this.listeners[i]();\n                    }\n                    this.listeners.length = 0;\n                }\n            }, 0);\n        }\n    }\n    /**\n   * This promise waits until there are no more in progress cache reads but no later.\n   * This allows for adding more cache reads after to delay cacheReady.\n   */ inputReady() {\n        return new Promise((resolve)=>{\n            this.earlyListeners.push(resolve);\n            if (this.count === 0) {\n                this.noMorePendingCaches();\n            }\n        });\n    }\n    /**\n   * If there are inflight cache reads this Promise can resolve in a microtask however\n   * if there are no inflight cache reads then we wait at least one task to allow initial\n   * cache reads to be initiated.\n   */ cacheReady() {\n        return new Promise((resolve)=>{\n            this.listeners.push(resolve);\n            if (this.count === 0) {\n                this.noMorePendingCaches();\n            }\n        });\n    }\n    beginRead() {\n        this.count++;\n    }\n    endRead() {\n        // If this is the last read we need to wait a task before we can claim the cache is settled.\n        // The cache read will likely ping a Server Component which can read from the cache again and this\n        // will play out in a microtask so we need to only resolve pending listeners if we're still at 0\n        // after at least one task.\n        // We only want one task scheduled at a time so when we hit count 1 we don't decrement the counter immediately.\n        // If intervening reads happen before the scheduled task runs they will never observe count 1 preventing reentrency\n        this.count--;\n        if (this.count === 0) {\n            this.noMorePendingCaches();\n        }\n    }\n}\n\n//# sourceMappingURL=cache-signal.js.map","/**\n * Takes OpenTelemetry client trace data and the `clientTraceMetadata` option configured in the Next.js config (currently\n * experimental) and returns a filtered/allowed list of client trace data entries.\n */ export function getTracedMetadata(traceData, clientTraceMetadata) {\n    if (!clientTraceMetadata) return undefined;\n    return traceData.filter(({ key })=>clientTraceMetadata.includes(key));\n}\n\n//# sourceMappingURL=utils.js.map","import { createSnapshot } from '../app-render/async-local-storage';\nexport const runInCleanSnapshot = createSnapshot();\n\n//# sourceMappingURL=clean-async-snapshot-instance.js.map","// Share the instance module in the next-shared layer\nimport { runInCleanSnapshot } from './clean-async-snapshot-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nexport { runInCleanSnapshot };\n\n//# sourceMappingURL=clean-async-snapshot.external.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport RenderResult from '../render-result';\nimport { chainStreams, renderToInitialFizzStream, createDocumentClosingStream, continueFizzStream, continueDynamicPrerender, continueStaticPrerender, continueDynamicHTMLResume, streamToBuffer, streamToString } from '../stream-utils/node-web-streams-helper';\nimport { stripInternalQueries } from '../internal-utils';\nimport { NEXT_HMR_REFRESH_HEADER, NEXT_ROUTER_PREFETCH_HEADER, NEXT_ROUTER_STATE_TREE_HEADER, NEXT_ROUTER_STALE_TIME_HEADER, NEXT_URL, RSC_HEADER } from '../../client/components/app-router-headers';\nimport { createTrackedMetadataContext, createMetadataContext } from '../../lib/metadata/metadata-context';\nimport { createRequestStoreForRender } from '../async-storage/request-store';\nimport { withWorkStore } from '../async-storage/with-work-store';\nimport { isNotFoundError } from '../../client/components/not-found';\nimport { getURLFromRedirectError, isRedirectError, getRedirectStatusCodeFromError } from '../../client/components/redirect';\nimport { getImplicitTags } from '../lib/implicit-tags';\nimport { AppRenderSpan, NextNodeServerSpan } from '../lib/trace/constants';\nimport { getTracer } from '../lib/trace/tracer';\nimport { FlightRenderResult } from './flight-render-result';\nimport { createFlightReactServerErrorHandler, createHTMLReactServerErrorHandler, createHTMLErrorHandler, isUserLandError } from './create-error-handler';\nimport { getShortDynamicParamType, dynamicParamTypes } from './get-short-dynamic-param-type';\nimport { getSegmentParam } from './get-segment-param';\nimport { getScriptNonceFromHeader } from './get-script-nonce-from-header';\nimport { parseAndValidateFlightRouterState } from './parse-and-validate-flight-router-state';\nimport { createFlightRouterStateFromLoaderTree } from './create-flight-router-state-from-loader-tree';\nimport { handleAction } from './action-handler';\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr';\nimport { warn, error } from '../../build/output/log';\nimport { appendMutableCookies } from '../web/spec-extension/adapters/request-cookies';\nimport { createServerInsertedHTML } from './server-inserted-html';\nimport { getRequiredScripts } from './required-scripts';\nimport { addPathPrefix } from '../../shared/lib/router/utils/add-path-prefix';\nimport { makeGetServerInsertedHTML } from './make-get-server-inserted-html';\nimport { walkTreeWithFlightRouterState } from './walk-tree-with-flight-router-state';\nimport { createComponentTree } from './create-component-tree';\nimport { getAssetQueryString } from './get-asset-query-string';\nimport { setReferenceManifestsSingleton } from './encryption-utils';\nimport { DynamicState, parsePostponedState } from './postponed-state';\nimport { getDynamicDataPostponedState, getDynamicHTMLPostponedState, getPostponedFromState } from './postponed-state';\nimport { isDynamicServerError } from '../../client/components/hooks-server-context';\nimport { useFlightStream, createInlinedDataReadableStream } from './use-flight-response';\nimport { StaticGenBailoutError, isStaticGenBailoutError } from '../../client/components/static-generation-bailout';\nimport { getStackWithoutErrorMessage } from '../../lib/format-server-error';\nimport { accessedDynamicData, createPostponedAbortSignal, formatDynamicAPIAccesses, isPrerenderInterruptedError, createDynamicTrackingState, createDynamicValidationState, getFirstDynamicReason, trackAllowedDynamicAccess, throwIfDisallowedDynamic, consumeDynamicAccess } from './dynamic-rendering';\nimport { getClientComponentLoaderMetrics, wrapClientComponentLoader } from '../client-component-renderer-logger';\nimport { createServerModuleMap } from './action-utils';\nimport { isNodeNextRequest } from '../base-http/helpers';\nimport { parseParameter } from '../../shared/lib/router/utils/route-regex';\nimport { parseRelativeUrl } from '../../shared/lib/router/utils/parse-relative-url';\nimport AppRouter from '../../client/components/app-router';\nimport { getServerActionRequestMetadata } from '../lib/server-action-request-meta';\nimport { createInitialRouterState } from '../../client/components/router-reducer/create-initial-router-state';\nimport { createMutableActionQueue } from '../../shared/lib/router/action-queue';\nimport { getRevalidateReason } from '../instrumentation/utils';\nimport { PAGE_SEGMENT_KEY } from '../../shared/lib/segment';\nimport { DynamicServerError } from '../../client/components/hooks-server-context';\nimport { ReactServerResult, createReactServerPrerenderResult, createReactServerPrerenderResultFromRender, prerenderAndAbortInSequentialTasks, prerenderServerWithPhases, prerenderClientWithPhases } from './app-render-prerender-utils';\nimport { printDebugThrownValueForProspectiveRender } from './prospective-render-utils';\nimport { scheduleInSequentialTasks } from './app-render-render-utils';\nimport { waitAtLeastOneReactRenderTask } from '../../lib/scheduler';\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external';\nimport { CacheSignal } from './cache-signal';\nimport { getTracedMetadata } from '../lib/trace/utils';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport './clean-async-snapshot.external';\nimport { INFINITE_CACHE } from '../../lib/constants';\nimport { createComponentStylesAndScripts } from './create-component-styles-and-scripts';\nimport { parseLoaderTree } from './parse-loader-tree';\nconst flightDataPathHeadKey = 'h';\nfunction parseRequestHeaders(headers, options) {\n    const isDevWarmupRequest = options.isDevWarmup === true;\n    // dev warmup requests are treated as prefetch RSC requests\n    const isPrefetchRequest = isDevWarmupRequest || headers[NEXT_ROUTER_PREFETCH_HEADER.toLowerCase()] !== undefined;\n    const isHmrRefresh = headers[NEXT_HMR_REFRESH_HEADER.toLowerCase()] !== undefined;\n    // dev warmup requests are treated as prefetch RSC requests\n    const isRSCRequest = isDevWarmupRequest || headers[RSC_HEADER.toLowerCase()] !== undefined;\n    const shouldProvideFlightRouterState = isRSCRequest && (!isPrefetchRequest || !options.isRoutePPREnabled);\n    const flightRouterState = shouldProvideFlightRouterState ? parseAndValidateFlightRouterState(headers[NEXT_ROUTER_STATE_TREE_HEADER.toLowerCase()]) : undefined;\n    const csp = headers['content-security-policy'] || headers['content-security-policy-report-only'];\n    const nonce = typeof csp === 'string' ? getScriptNonceFromHeader(csp) : undefined;\n    return {\n        flightRouterState,\n        isPrefetchRequest,\n        isHmrRefresh,\n        isRSCRequest,\n        isDevWarmupRequest,\n        nonce\n    };\n}\nfunction createNotFoundLoaderTree(loaderTree) {\n    // Align the segment with parallel-route-default in next-app-loader\n    const components = loaderTree[2];\n    return [\n        '',\n        {\n            children: [\n                PAGE_SEGMENT_KEY,\n                {},\n                {\n                    page: components['not-found']\n                }\n            ]\n        },\n        components\n    ];\n}\n/**\n * Returns a function that parses the dynamic segment and return the associated value.\n */ function makeGetDynamicParamFromSegment(params, pagePath, fallbackRouteParams) {\n    return function getDynamicParamFromSegment(// [slug] / [[slug]] / [...slug]\n    segment) {\n        const segmentParam = getSegmentParam(segment);\n        if (!segmentParam) {\n            return null;\n        }\n        const key = segmentParam.param;\n        let value = params[key];\n        if (fallbackRouteParams && fallbackRouteParams.has(segmentParam.param)) {\n            value = fallbackRouteParams.get(segmentParam.param);\n        } else if (Array.isArray(value)) {\n            value = value.map((i)=>encodeURIComponent(i));\n        } else if (typeof value === 'string') {\n            value = encodeURIComponent(value);\n        }\n        if (!value) {\n            const isCatchall = segmentParam.type === 'catchall';\n            const isOptionalCatchall = segmentParam.type === 'optional-catchall';\n            if (isCatchall || isOptionalCatchall) {\n                const dynamicParamType = dynamicParamTypes[segmentParam.type];\n                // handle the case where an optional catchall does not have a value,\n                // e.g. `/dashboard/[[...slug]]` when requesting `/dashboard`\n                if (isOptionalCatchall) {\n                    return {\n                        param: key,\n                        value: null,\n                        type: dynamicParamType,\n                        treeSegment: [\n                            key,\n                            '',\n                            dynamicParamType\n                        ]\n                    };\n                }\n                // handle the case where a catchall or optional catchall does not have a value,\n                // e.g. `/foo/bar/hello` and `@slot/[...catchall]` or `@slot/[[...catchall]]` is matched\n                value = pagePath.split('/')// remove the first empty string\n                .slice(1)// replace any dynamic params with the actual values\n                .flatMap((pathSegment)=>{\n                    const param = parseParameter(pathSegment);\n                    // if the segment matches a param, return the param value\n                    // otherwise, it's a static segment, so just return that\n                    return params[param.key] ?? param.key;\n                });\n                return {\n                    param: key,\n                    value,\n                    type: dynamicParamType,\n                    // This value always has to be a string.\n                    treeSegment: [\n                        key,\n                        value.join('/'),\n                        dynamicParamType\n                    ]\n                };\n            }\n        }\n        const type = getShortDynamicParamType(segmentParam.type);\n        return {\n            param: key,\n            // The value that is passed to user code.\n            value: value,\n            // The value that is rendered in the router tree.\n            treeSegment: [\n                key,\n                Array.isArray(value) ? value.join('/') : value,\n                type\n            ],\n            type: type\n        };\n    };\n}\nfunction NonIndex({ ctx }) {\n    const is404Page = ctx.pagePath === '/404';\n    const isInvalidStatusCode = typeof ctx.res.statusCode === 'number' && ctx.res.statusCode > 400;\n    if (is404Page || isInvalidStatusCode) {\n        return /*#__PURE__*/ _jsx(\"meta\", {\n            name: \"robots\",\n            content: \"noindex\"\n        });\n    }\n    return null;\n}\n/**\n * This is used by server actions & client-side navigations to generate RSC data from a client-side request.\n * This function is only called on \"dynamic\" requests (ie, there wasn't already a static response).\n * It uses request headers (namely `Next-Router-State-Tree`) to determine where to start rendering.\n */ async function generateDynamicRSCPayload(ctx, options) {\n    ctx.requestStore.phase = 'render';\n    // Flight data that is going to be passed to the browser.\n    // Currently a single item array but in the future multiple patches might be combined in a single request.\n    // We initialize `flightData` to an empty string because the client router knows how to tolerate\n    // it (treating it as an MPA navigation). The only time this function wouldn't generate flight data\n    // is for server actions, if the server action handler instructs this function to skip it. When the server\n    // action reducer sees a falsy value, it'll simply resolve the action with no data.\n    let flightData = '';\n    const { componentMod: { tree: loaderTree, createServerSearchParamsForMetadata, createServerParamsForMetadata, createMetadataComponents, MetadataBoundary, ViewportBoundary }, getDynamicParamFromSegment, appUsingSizeAdjustment, requestStore: { url }, query, requestId, flightRouterState, workStore } = ctx;\n    if (!(options == null ? void 0 : options.skipFlight)) {\n        const preloadCallbacks = [];\n        const searchParams = createServerSearchParamsForMetadata(query, workStore);\n        const [MetadataTree, getMetadataReady] = createMetadataComponents({\n            tree: loaderTree,\n            searchParams,\n            metadataContext: createTrackedMetadataContext(url.pathname, ctx.renderOpts, workStore),\n            getDynamicParamFromSegment,\n            appUsingSizeAdjustment,\n            createServerParamsForMetadata,\n            workStore,\n            MetadataBoundary,\n            ViewportBoundary\n        });\n        flightData = (await walkTreeWithFlightRouterState({\n            ctx,\n            createSegmentPath: (child)=>child,\n            loaderTreeToFilter: loaderTree,\n            parentParams: {},\n            flightRouterState,\n            isFirst: true,\n            // For flight, render metadata inside leaf page\n            rscPayloadHead: /*#__PURE__*/ _jsxs(React.Fragment, {\n                children: [\n                    /*#__PURE__*/ _jsx(NonIndex, {\n                        ctx: ctx\n                    }),\n                    /*#__PURE__*/ _jsx(MetadataTree, {}, requestId)\n                ]\n            }, flightDataPathHeadKey),\n            injectedCSS: new Set(),\n            injectedJS: new Set(),\n            injectedFontPreloadTags: new Set(),\n            rootLayoutIncluded: false,\n            getMetadataReady,\n            preloadCallbacks\n        })).map((path)=>path.slice(1)) // remove the '' (root) segment\n        ;\n    }\n    // If we have an action result, then this is a server action response.\n    // We can rely on this because `ActionResult` will always be a promise, even if\n    // the result is falsey.\n    if (options == null ? void 0 : options.actionResult) {\n        return {\n            a: options.actionResult,\n            f: flightData,\n            b: ctx.renderOpts.buildId\n        };\n    }\n    // Otherwise, it's a regular RSC response.\n    return {\n        b: ctx.renderOpts.buildId,\n        f: flightData,\n        S: workStore.isStaticGeneration\n    };\n}\nfunction createErrorContext(ctx, renderSource) {\n    return {\n        routerKind: 'App Router',\n        routePath: ctx.pagePath,\n        routeType: ctx.isAction ? 'action' : 'render',\n        renderSource,\n        revalidateReason: getRevalidateReason(ctx.workStore)\n    };\n}\n/**\n * Produces a RenderResult containing the Flight data for the given request. See\n * `generateDynamicRSCPayload` for information on the contents of the render result.\n */ async function generateDynamicFlightRenderResult(req, ctx, options) {\n    const renderOpts = ctx.renderOpts;\n    function onFlightDataRenderError(err) {\n        return renderOpts.onInstrumentationRequestError == null ? void 0 : renderOpts.onInstrumentationRequestError.call(renderOpts, err, req, createErrorContext(ctx, 'react-server-components-payload'));\n    }\n    const onError = createFlightReactServerErrorHandler(!!renderOpts.dev, onFlightDataRenderError);\n    const RSCPayload = await generateDynamicRSCPayload(ctx, options);\n    if (// We only want this behavior when running `next dev`\n    renderOpts.dev && // We only want this behavior when we have React's dev builds available\n    process.env.NODE_ENV === 'development' && // We only have a Prerender environment for projects opted into dynamicIO\n    renderOpts.experimental.dynamicIO) {\n        const [resolveValidation, validationOutlet] = createValidationOutlet();\n        RSCPayload._validation = validationOutlet;\n        spawnDynamicValidationInDev(resolveValidation, ctx.componentMod.tree, ctx, false, ctx.clientReferenceManifest, ctx.workStore.route);\n    }\n    // For app dir, use the bundled version of Flight server renderer (renderToReadableStream)\n    // which contains the subset React.\n    const flightReadableStream = ctx.componentMod.renderToReadableStream(RSCPayload, ctx.clientReferenceManifest.clientModules, {\n        onError,\n        temporaryReferences: options == null ? void 0 : options.temporaryReferences\n    });\n    return new FlightRenderResult(flightReadableStream, {\n        fetchMetrics: ctx.workStore.fetchMetrics\n    });\n}\n/**\n * Performs a \"warmup\" render of the RSC payload for a given route. This function is called by the server\n * prior to an actual render request in Dev mode only. It's purpose is to fill caches so the actual render\n * can accurately log activity in the right render context (Prerender vs Render).\n *\n * At the moment this implementation is mostly a fork of generateDynamicFlightRenderResult\n */ async function warmupDevRender(req, ctx, options) {\n    const renderOpts = ctx.renderOpts;\n    if (!renderOpts.dev) {\n        throw new InvariantError('generateDynamicFlightRenderResult should never be called in `next start` mode.');\n    }\n    function onFlightDataRenderError(err) {\n        return renderOpts.onInstrumentationRequestError == null ? void 0 : renderOpts.onInstrumentationRequestError.call(renderOpts, err, req, createErrorContext(ctx, 'react-server-components-payload'));\n    }\n    const onError = createFlightReactServerErrorHandler(true, onFlightDataRenderError);\n    const rscPayload = await generateDynamicRSCPayload(ctx, options);\n    // For app dir, use the bundled version of Flight server renderer (renderToReadableStream)\n    // which contains the subset React.\n    const flightReadableStream = ctx.componentMod.renderToReadableStream(rscPayload, ctx.clientReferenceManifest.clientModules, {\n        onError\n    });\n    const reader = flightReadableStream.getReader();\n    while(true){\n        if ((await reader.read()).done) {\n            break;\n        }\n    }\n    // We don't really want to return a result here but the stack of functions\n    // that calls into renderToHTML... expects a result. We should refactor this to\n    // lift the warmup pathway outside of renderToHTML... but for now this suffices\n    return new FlightRenderResult('', {\n        fetchMetrics: ctx.workStore.fetchMetrics\n    });\n}\n/**\n * Crawlers will inadvertently think the canonicalUrl in the RSC payload should be crawled\n * when our intention is to just seed the router state with the current URL.\n * This function splits up the pathname so that we can later join it on\n * when we're ready to consume the path.\n */ function prepareInitialCanonicalUrl(url) {\n    return (url.pathname + url.search).split('/');\n}\n// This is the data necessary to render <AppRouter /> when no SSR errors are encountered\nasync function getRSCPayload(tree, ctx, is404) {\n    const injectedCSS = new Set();\n    const injectedJS = new Set();\n    const injectedFontPreloadTags = new Set();\n    let missingSlots;\n    // We only track missing parallel slots in development\n    if (process.env.NODE_ENV === 'development') {\n        missingSlots = new Set();\n    }\n    const { getDynamicParamFromSegment, query, appUsingSizeAdjustment, componentMod: { GlobalError, createServerSearchParamsForMetadata, createServerParamsForMetadata, createMetadataComponents, MetadataBoundary, ViewportBoundary }, requestStore: { url }, workStore } = ctx;\n    const initialTree = createFlightRouterStateFromLoaderTree(tree, getDynamicParamFromSegment, query);\n    const searchParams = createServerSearchParamsForMetadata(query, workStore);\n    const [MetadataTree, getMetadataReady] = createMetadataComponents({\n        tree,\n        errorType: is404 ? 'not-found' : undefined,\n        searchParams,\n        metadataContext: createTrackedMetadataContext(url.pathname, ctx.renderOpts, workStore),\n        getDynamicParamFromSegment,\n        appUsingSizeAdjustment,\n        createServerParamsForMetadata,\n        workStore,\n        MetadataBoundary,\n        ViewportBoundary\n    });\n    const preloadCallbacks = [];\n    const seedData = await createComponentTree({\n        ctx,\n        createSegmentPath: (child)=>child,\n        loaderTree: tree,\n        parentParams: {},\n        firstItem: true,\n        injectedCSS,\n        injectedJS,\n        injectedFontPreloadTags,\n        rootLayoutIncluded: false,\n        getMetadataReady,\n        missingSlots,\n        preloadCallbacks\n    });\n    // When the `vary` response header is present with `Next-URL`, that means there's a chance\n    // it could respond differently if there's an interception route. We provide this information\n    // to `AppRouter` so that it can properly seed the prefetch cache with a prefix, if needed.\n    const varyHeader = ctx.res.getHeader('vary');\n    const couldBeIntercepted = typeof varyHeader === 'string' && varyHeader.includes(NEXT_URL);\n    const initialHead = /*#__PURE__*/ _jsxs(React.Fragment, {\n        children: [\n            /*#__PURE__*/ _jsx(NonIndex, {\n                ctx: ctx\n            }),\n            /*#__PURE__*/ _jsx(MetadataTree, {}, ctx.requestId)\n        ]\n    }, flightDataPathHeadKey);\n    const globalErrorStyles = await getGlobalErrorStyles(tree, ctx);\n    return {\n        // See the comment above the `Preloads` component (below) for why this is part of the payload\n        P: /*#__PURE__*/ _jsx(Preloads, {\n            preloadCallbacks: preloadCallbacks\n        }),\n        b: ctx.renderOpts.buildId,\n        p: ctx.assetPrefix,\n        c: prepareInitialCanonicalUrl(url),\n        i: !!couldBeIntercepted,\n        f: [\n            [\n                initialTree,\n                seedData,\n                initialHead\n            ]\n        ],\n        m: missingSlots,\n        G: [\n            GlobalError,\n            globalErrorStyles\n        ],\n        s: typeof ctx.renderOpts.postponed === 'string',\n        S: workStore.isStaticGeneration\n    };\n}\n/**\n * Preload calls (such as `ReactDOM.preloadStyle` and `ReactDOM.preloadFont`) need to be called during rendering\n * in order to create the appropriate preload tags in the DOM, otherwise they're a no-op. Since we invoke\n * renderToReadableStream with a function that returns component props rather than a component itself, we use\n * this component to \"render  \" the preload calls.\n */ function Preloads({ preloadCallbacks }) {\n    preloadCallbacks.forEach((preloadFn)=>preloadFn());\n    return null;\n}\n// This is the data necessary to render <AppRouter /> when an error state is triggered\nasync function getErrorRSCPayload(tree, ctx, errorType) {\n    const { getDynamicParamFromSegment, query, appUsingSizeAdjustment, componentMod: { GlobalError, createServerSearchParamsForMetadata, createServerParamsForMetadata, createMetadataComponents, MetadataBoundary, ViewportBoundary }, requestStore: { url }, requestId, workStore } = ctx;\n    const searchParams = createServerSearchParamsForMetadata(query, workStore);\n    const [MetadataTree] = createMetadataComponents({\n        tree,\n        searchParams,\n        // We create an untracked metadata context here because we can't postpone\n        // again during the error render.\n        metadataContext: createMetadataContext(url.pathname, ctx.renderOpts),\n        errorType,\n        getDynamicParamFromSegment,\n        appUsingSizeAdjustment,\n        createServerParamsForMetadata,\n        workStore,\n        MetadataBoundary,\n        ViewportBoundary\n    });\n    const initialHead = /*#__PURE__*/ _jsxs(React.Fragment, {\n        children: [\n            /*#__PURE__*/ _jsx(NonIndex, {\n                ctx: ctx\n            }),\n            /*#__PURE__*/ _jsx(MetadataTree, {}, requestId),\n            process.env.NODE_ENV === 'development' && /*#__PURE__*/ _jsx(\"meta\", {\n                name: \"next-error\",\n                content: \"not-found\"\n            })\n        ]\n    }, flightDataPathHeadKey);\n    const initialTree = createFlightRouterStateFromLoaderTree(tree, getDynamicParamFromSegment, query);\n    // For metadata notFound error there's no global not found boundary on top\n    // so we create a not found page with AppRouter\n    const initialSeedData = [\n        initialTree[0],\n        /*#__PURE__*/ _jsxs(\"html\", {\n            id: \"__next_error__\",\n            children: [\n                /*#__PURE__*/ _jsx(\"head\", {}),\n                /*#__PURE__*/ _jsx(\"body\", {})\n            ]\n        }),\n        {},\n        null\n    ];\n    const globalErrorStyles = await getGlobalErrorStyles(tree, ctx);\n    return {\n        b: ctx.renderOpts.buildId,\n        p: ctx.assetPrefix,\n        c: prepareInitialCanonicalUrl(url),\n        m: undefined,\n        i: false,\n        f: [\n            [\n                initialTree,\n                initialSeedData,\n                initialHead\n            ]\n        ],\n        G: [\n            GlobalError,\n            globalErrorStyles\n        ],\n        s: typeof ctx.renderOpts.postponed === 'string',\n        S: workStore.isStaticGeneration\n    };\n}\n// This component must run in an SSR context. It will render the RSC root component\nfunction App({ reactServerStream, preinitScripts, clientReferenceManifest, nonce, ServerInsertedHTMLProvider }) {\n    preinitScripts();\n    const response = React.use(useFlightStream(reactServerStream, clientReferenceManifest, nonce));\n    const initialState = createInitialRouterState({\n        buildId: response.b,\n        initialFlightData: response.f,\n        initialCanonicalUrlParts: response.c,\n        // location and initialParallelRoutes are not initialized in the SSR render\n        // they are set to an empty map and window.location, respectively during hydration\n        initialParallelRoutes: null,\n        location: null,\n        couldBeIntercepted: response.i,\n        postponed: response.s,\n        prerendered: response.S\n    });\n    const actionQueue = createMutableActionQueue(initialState);\n    const { HeadManagerContext } = require('../../shared/lib/head-manager-context.shared-runtime');\n    return /*#__PURE__*/ _jsx(HeadManagerContext.Provider, {\n        value: {\n            appDir: true,\n            nonce\n        },\n        children: /*#__PURE__*/ _jsx(ServerInsertedHTMLProvider, {\n            children: /*#__PURE__*/ _jsx(AppRouter, {\n                actionQueue: actionQueue,\n                globalErrorComponentAndStyles: response.G,\n                assetPrefix: response.p\n            })\n        })\n    });\n}\n// @TODO our error stream should be probably just use the same root component. But it was previously\n// different I don't want to figure out if that is meaningful at this time so just keeping the behavior\n// consistent for now.\nfunction AppWithoutContext({ reactServerStream, preinitScripts, clientReferenceManifest, nonce }) {\n    preinitScripts();\n    const response = React.use(useFlightStream(reactServerStream, clientReferenceManifest, nonce));\n    const initialState = createInitialRouterState({\n        buildId: response.b,\n        initialFlightData: response.f,\n        initialCanonicalUrlParts: response.c,\n        // location and initialParallelRoutes are not initialized in the SSR render\n        // they are set to an empty map and window.location, respectively during hydration\n        initialParallelRoutes: null,\n        location: null,\n        couldBeIntercepted: response.i,\n        postponed: response.s,\n        prerendered: response.S\n    });\n    const actionQueue = createMutableActionQueue(initialState);\n    return /*#__PURE__*/ _jsx(AppRouter, {\n        actionQueue: actionQueue,\n        globalErrorComponentAndStyles: response.G,\n        assetPrefix: response.p\n    });\n}\nasync function renderToHTMLOrFlightImpl(req, res, pagePath, query, renderOpts, requestStore, workStore, parsedRequestHeaders, requestEndedState, postponedState) {\n    const isNotFoundPath = pagePath === '/404';\n    if (isNotFoundPath) {\n        res.statusCode = 404;\n    }\n    // A unique request timestamp used by development to ensure that it's\n    // consistent and won't change during this request. This is important to\n    // avoid that resources can be deduped by React Float if the same resource is\n    // rendered or preloaded multiple times: `<link href=\"a.css?v={Date.now()}\"/>`.\n    const requestTimestamp = Date.now();\n    const { serverActionsManifest, ComponentMod, nextFontManifest, serverActions, assetPrefix = '', enableTainting } = renderOpts;\n    // We need to expose the bundled `require` API globally for\n    // react-server-dom-webpack. This is a hack until we find a better way.\n    if (ComponentMod.__next_app__) {\n        const instrumented = wrapClientComponentLoader(ComponentMod);\n        // @ts-ignore\n        globalThis.__next_require__ = instrumented.require;\n        // When we are prerendering if there is a cacheSignal for tracking\n        // cache reads we wrap the loadChunk in this tracking. This allows us\n        // to treat chunk loading with similar semantics as cache reads to avoid\n        // async loading chunks from causing a prerender to abort too early.\n        // @ts-ignore\n        globalThis.__next_chunk_load__ = (...args)=>{\n            const loadingChunk = instrumented.loadChunk(...args);\n            trackChunkLoading(loadingChunk);\n            return loadingChunk;\n        };\n    }\n    if (process.env.NODE_ENV === 'development') {\n        // reset isr status at start of request\n        const { pathname } = new URL(req.url || '/', 'http://n');\n        renderOpts.setAppIsrStatus == null ? void 0 : renderOpts.setAppIsrStatus.call(renderOpts, pathname, null);\n    }\n    if (// The type check here ensures that `req` is correctly typed, and the\n    // environment variable check provides dead code elimination.\n    process.env.NEXT_RUNTIME !== 'edge' && isNodeNextRequest(req)) {\n        req.originalRequest.on('end', ()=>{\n            var _prerenderStore_dynamicTracking_dynamicAccesses, _prerenderStore_dynamicTracking;\n            const prerenderStore = workUnitAsyncStorage.getStore();\n            const isPPR = prerenderStore && (prerenderStore.type === 'prerender' || prerenderStore.type === 'prerender-ppr') ? !!((_prerenderStore_dynamicTracking = prerenderStore.dynamicTracking) == null ? void 0 : (_prerenderStore_dynamicTracking_dynamicAccesses = _prerenderStore_dynamicTracking.dynamicAccesses) == null ? void 0 : _prerenderStore_dynamicTracking_dynamicAccesses.length) : false;\n            if (process.env.NODE_ENV === 'development' && renderOpts.setAppIsrStatus && !isPPR && !requestStore.usedDynamic && !workStore.forceDynamic) {\n                // only node can be ISR so we only need to update the status here\n                const { pathname } = new URL(req.url || '/', 'http://n');\n                renderOpts.setAppIsrStatus(pathname, true);\n            }\n            requestEndedState.ended = true;\n            if ('performance' in globalThis) {\n                const metrics = getClientComponentLoaderMetrics({\n                    reset: true\n                });\n                if (metrics) {\n                    getTracer().startSpan(NextNodeServerSpan.clientComponentLoading, {\n                        startTime: metrics.clientComponentLoadStart,\n                        attributes: {\n                            'next.clientComponentLoadCount': metrics.clientComponentLoadCount,\n                            'next.span_type': NextNodeServerSpan.clientComponentLoading\n                        }\n                    }).end(metrics.clientComponentLoadStart + metrics.clientComponentLoadTimes);\n                }\n            }\n        });\n    }\n    const metadata = {};\n    const appUsingSizeAdjustment = !!(nextFontManifest == null ? void 0 : nextFontManifest.appUsingSizeAdjust);\n    // TODO: fix this typescript\n    const clientReferenceManifest = renderOpts.clientReferenceManifest;\n    const serverModuleMap = createServerModuleMap({\n        serverActionsManifest\n    });\n    setReferenceManifestsSingleton({\n        page: workStore.page,\n        clientReferenceManifest,\n        serverActionsManifest,\n        serverModuleMap\n    });\n    ComponentMod.patchFetch();\n    // Pull out the hooks/references from the component.\n    const { tree: loaderTree, taintObjectReference } = ComponentMod;\n    if (enableTainting) {\n        taintObjectReference('Do not pass process.env to client components since it will leak sensitive data', process.env);\n    }\n    workStore.fetchMetrics = [];\n    metadata.fetchMetrics = workStore.fetchMetrics;\n    // don't modify original query object\n    query = {\n        ...query\n    };\n    stripInternalQueries(query);\n    const { flightRouterState, isPrefetchRequest, isRSCRequest, isDevWarmupRequest, nonce } = parsedRequestHeaders;\n    /**\n   * The metadata items array created in next-app-loader with all relevant information\n   * that we need to resolve the final metadata.\n   */ let requestId;\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        requestId = crypto.randomUUID();\n    } else {\n        requestId = require('next/dist/compiled/nanoid').nanoid();\n    }\n    /**\n   * Dynamic parameters. E.g. when you visit `/dashboard/vercel` which is rendered by `/dashboard/[slug]` the value will be {\"slug\": \"vercel\"}.\n   */ const params = renderOpts.params ?? {};\n    const { isStaticGeneration, fallbackRouteParams } = workStore;\n    const getDynamicParamFromSegment = makeGetDynamicParamFromSegment(params, pagePath, fallbackRouteParams);\n    const isActionRequest = getServerActionRequestMetadata(req).isServerAction;\n    const ctx = {\n        componentMod: ComponentMod,\n        renderOpts,\n        requestStore,\n        workStore,\n        parsedRequestHeaders,\n        getDynamicParamFromSegment,\n        query,\n        isPrefetch: isPrefetchRequest,\n        isAction: isActionRequest,\n        requestTimestamp,\n        appUsingSizeAdjustment,\n        flightRouterState,\n        requestId,\n        pagePath,\n        clientReferenceManifest,\n        assetPrefix,\n        isNotFoundPath,\n        nonce,\n        res\n    };\n    getTracer().setRootSpanAttribute('next.route', pagePath);\n    if (isStaticGeneration) {\n        // We're either building or revalidating. In either case we need to\n        // prerender our page rather than render it.\n        const prerenderToStreamWithTracing = getTracer().wrap(AppRenderSpan.getBodyResult, {\n            spanName: `prerender route (app) ${pagePath}`,\n            attributes: {\n                'next.route': pagePath\n            }\n        }, prerenderToStream);\n        const response = await prerenderToStreamWithTracing(req, res, ctx, metadata, workStore, loaderTree);\n        // If we're debugging partial prerendering, print all the dynamic API accesses\n        // that occurred during the render.\n        // @TODO move into renderToStream function\n        if (response.dynamicAccess && accessedDynamicData(response.dynamicAccess) && renderOpts.isDebugDynamicAccesses) {\n            warn('The following dynamic usage was detected:');\n            for (const access of formatDynamicAPIAccesses(response.dynamicAccess)){\n                warn(access);\n            }\n        }\n        // If we encountered any unexpected errors during build we fail the\n        // prerendering phase and the build.\n        if (response.digestErrorsMap.size) {\n            const buildFailingError = response.digestErrorsMap.values().next().value;\n            if (buildFailingError) throw buildFailingError;\n        }\n        // Pick first userland SSR error, which is also not a RSC error.\n        if (response.ssrErrors.length) {\n            const buildFailingError = response.ssrErrors.find((err)=>isUserLandError(err));\n            if (buildFailingError) throw buildFailingError;\n        }\n        const options = {\n            metadata\n        };\n        // If we have pending revalidates, wait until they are all resolved.\n        if (workStore.pendingRevalidates || workStore.pendingRevalidateWrites || workStore.revalidatedTags) {\n            var _workStore_incrementalCache;\n            options.waitUntil = Promise.all([\n                (_workStore_incrementalCache = workStore.incrementalCache) == null ? void 0 : _workStore_incrementalCache.revalidateTag(workStore.revalidatedTags || []),\n                ...Object.values(workStore.pendingRevalidates || {}),\n                ...workStore.pendingRevalidateWrites || []\n            ]);\n        }\n        if (response.collectedTags) {\n            metadata.fetchTags = response.collectedTags.join(',');\n        }\n        // Let the client router know how long to keep the cached entry around.\n        const staleHeader = String(response.collectedStale);\n        res.setHeader(NEXT_ROUTER_STALE_TIME_HEADER, staleHeader);\n        metadata.headers ??= {};\n        metadata.headers[NEXT_ROUTER_STALE_TIME_HEADER] = staleHeader;\n        // If force static is specifically set to false, we should not revalidate\n        // the page.\n        if (workStore.forceStatic === false || response.collectedRevalidate === 0) {\n            metadata.revalidate = 0;\n        } else {\n            // Copy the revalidation value onto the render result metadata.\n            metadata.revalidate = response.collectedRevalidate >= INFINITE_CACHE ? false : response.collectedRevalidate;\n        }\n        // provide bailout info for debugging\n        if (metadata.revalidate === 0) {\n            metadata.staticBailoutInfo = {\n                description: workStore.dynamicUsageDescription,\n                stack: workStore.dynamicUsageStack\n            };\n        }\n        // Per-segment prefetch data\n        //\n        // All of the segments for a page are generated simultaneously, including\n        // during revalidations. This is to ensure consistency, because it's\n        // possible for a mismatch between a layout and page segment can cause the\n        // client to error during rendering. We want to preserve the ability of the\n        // client to recover from such a mismatch by re-requesting all the segments\n        // to get a consistent view of the page.\n        //\n        // TODO (Per Segment Prefetching): This is placeholder data. Populate with\n        // the actual data generated during prerender.\n        if (renderOpts.experimental.isRoutePPREnabled === true) {\n            const placeholder = Buffer.from('TODO (Per Segment Prefetching): Not yet implemented\\n');\n            metadata.segmentFlightData = new Map([\n                // Root segment\n                [\n                    '/',\n                    placeholder\n                ],\n                [\n                    '/blog',\n                    placeholder\n                ],\n                // TODO: Update the client to use the same encoding for segment paths that\n                // we use here, so we don't have to convert between them. Needs to be\n                // filesystem safe.\n                [\n                    '/blog/[post]-1-d',\n                    placeholder\n                ]\n            ]);\n        }\n        return new RenderResult(await streamToString(response.stream), options);\n    } else {\n        // We're rendering dynamically\n        if (isDevWarmupRequest) {\n            return warmupDevRender(req, ctx);\n        } else if (isRSCRequest) {\n            return generateDynamicFlightRenderResult(req, ctx);\n        }\n        const renderToStreamWithTracing = getTracer().wrap(AppRenderSpan.getBodyResult, {\n            spanName: `render route (app) ${pagePath}`,\n            attributes: {\n                'next.route': pagePath\n            }\n        }, renderToStream);\n        let formState = null;\n        if (isActionRequest) {\n            // For action requests, we handle them differently with a special render result.\n            const actionRequestResult = await handleAction({\n                req,\n                res,\n                ComponentMod,\n                serverModuleMap,\n                generateFlight: generateDynamicFlightRenderResult,\n                workStore,\n                requestStore,\n                serverActions,\n                ctx\n            });\n            if (actionRequestResult) {\n                if (actionRequestResult.type === 'not-found') {\n                    const notFoundLoaderTree = createNotFoundLoaderTree(loaderTree);\n                    res.statusCode = 404;\n                    const stream = await renderToStreamWithTracing(requestStore, req, res, ctx, workStore, notFoundLoaderTree, formState, postponedState);\n                    return new RenderResult(stream, {\n                        metadata\n                    });\n                } else if (actionRequestResult.type === 'done') {\n                    if (actionRequestResult.result) {\n                        actionRequestResult.result.assignMetadata(metadata);\n                        return actionRequestResult.result;\n                    } else if (actionRequestResult.formState) {\n                        formState = actionRequestResult.formState;\n                    }\n                }\n            }\n        }\n        const options = {\n            metadata\n        };\n        const stream = await renderToStreamWithTracing(requestStore, req, res, ctx, workStore, loaderTree, formState, postponedState);\n        // If we have pending revalidates, wait until they are all resolved.\n        if (workStore.pendingRevalidates || workStore.pendingRevalidateWrites || workStore.revalidatedTags) {\n            var _workStore_incrementalCache1;\n            options.waitUntil = Promise.all([\n                (_workStore_incrementalCache1 = workStore.incrementalCache) == null ? void 0 : _workStore_incrementalCache1.revalidateTag(workStore.revalidatedTags || []),\n                ...Object.values(workStore.pendingRevalidates || {}),\n                ...workStore.pendingRevalidateWrites || []\n            ]);\n        }\n        // Create the new render result for the response.\n        return new RenderResult(stream, options);\n    }\n}\nexport const renderToHTMLOrFlight = (req, res, pagePath, query, fallbackRouteParams, renderOpts, serverComponentsHmrCache)=>{\n    if (!req.url) {\n        throw new Error('Invalid URL');\n    }\n    const url = parseRelativeUrl(req.url, undefined, false);\n    // We read these values from the request object as, in certain cases,\n    // base-server will strip them to opt into different rendering behavior.\n    const parsedRequestHeaders = parseRequestHeaders(req.headers, {\n        isDevWarmup: renderOpts.isDevWarmup,\n        isRoutePPREnabled: renderOpts.experimental.isRoutePPREnabled === true\n    });\n    const { isHmrRefresh, isPrefetchRequest } = parsedRequestHeaders;\n    const requestEndedState = {\n        ended: false\n    };\n    let postponedState = null;\n    // If provided, the postpone state should be parsed so it can be provided to\n    // React.\n    if (typeof renderOpts.postponed === 'string') {\n        if (fallbackRouteParams && fallbackRouteParams.size > 0) {\n            throw new Error('Invariant: postponed state should not be provided when fallback params are provided');\n        }\n        postponedState = parsePostponedState(renderOpts.postponed, renderOpts.params);\n    }\n    const implicitTags = getImplicitTags(renderOpts.routeModule.definition.page, url, fallbackRouteParams);\n    // TODO: We need to refactor this so that prerenders do not rely upon the\n    // existence of an outer scoped request store. Then we should move this\n    // store generation inside the appropriate scope like `renderToStream` where\n    // we know we're handling a Request and not a Prerender\n    const requestStore = createRequestStoreForRender(req, res, url, implicitTags, renderOpts.onUpdateCookies, renderOpts.previewProps, isHmrRefresh, serverComponentsHmrCache);\n    return workUnitAsyncStorage.run(requestStore, ()=>{\n        return withWorkStore(renderOpts.ComponentMod.workAsyncStorage, {\n            page: renderOpts.routeModule.definition.page,\n            fallbackRouteParams,\n            renderOpts,\n            requestEndedState,\n            // @TODO move to workUnitStore of type Request\n            isPrefetchRequest\n        }, (workStore)=>renderToHTMLOrFlightImpl(req, res, pagePath, query, renderOpts, requestStore, workStore, parsedRequestHeaders, requestEndedState, postponedState));\n    });\n};\nasync function renderToStream(requestStore, req, res, ctx, workStore, tree, formState, postponedState) {\n    const renderOpts = ctx.renderOpts;\n    const ComponentMod = renderOpts.ComponentMod;\n    // TODO: fix this typescript\n    const clientReferenceManifest = renderOpts.clientReferenceManifest;\n    const { ServerInsertedHTMLProvider, renderServerInsertedHTML } = createServerInsertedHTML();\n    const tracingMetadata = getTracedMetadata(getTracer().getTracePropagationData(), renderOpts.experimental.clientTraceMetadata);\n    const polyfills = renderOpts.buildManifest.polyfillFiles.filter((polyfill)=>polyfill.endsWith('.js') && !polyfill.endsWith('.module.js')).map((polyfill)=>{\n        var _renderOpts_subresourceIntegrityManifest;\n        return {\n            src: `${ctx.assetPrefix}/_next/${polyfill}${getAssetQueryString(ctx, false)}`,\n            integrity: (_renderOpts_subresourceIntegrityManifest = renderOpts.subresourceIntegrityManifest) == null ? void 0 : _renderOpts_subresourceIntegrityManifest[polyfill],\n            crossOrigin: renderOpts.crossOrigin,\n            noModule: true,\n            nonce: ctx.nonce\n        };\n    });\n    const [preinitScripts, bootstrapScript] = getRequiredScripts(renderOpts.buildManifest, // Why is assetPrefix optional on renderOpts?\n    // @TODO make it default empty string on renderOpts and get rid of it from ctx\n    ctx.assetPrefix, renderOpts.crossOrigin, renderOpts.subresourceIntegrityManifest, getAssetQueryString(ctx, true), ctx.nonce, renderOpts.page);\n    const reactServerErrorsByDigest = new Map();\n    const silenceLogger = false;\n    function onHTMLRenderRSCError(err) {\n        return renderOpts.onInstrumentationRequestError == null ? void 0 : renderOpts.onInstrumentationRequestError.call(renderOpts, err, req, createErrorContext(ctx, 'react-server-components'));\n    }\n    const serverComponentsErrorHandler = createHTMLReactServerErrorHandler(!!renderOpts.dev, !!renderOpts.nextExport, reactServerErrorsByDigest, silenceLogger, onHTMLRenderRSCError);\n    function onHTMLRenderSSRError(err) {\n        return renderOpts.onInstrumentationRequestError == null ? void 0 : renderOpts.onInstrumentationRequestError.call(renderOpts, err, req, createErrorContext(ctx, 'server-rendering'));\n    }\n    const allCapturedErrors = [];\n    const htmlRendererErrorHandler = createHTMLErrorHandler(!!renderOpts.dev, !!renderOpts.nextExport, reactServerErrorsByDigest, allCapturedErrors, silenceLogger, onHTMLRenderSSRError);\n    let reactServerResult = null;\n    const setHeader = res.setHeader.bind(res);\n    try {\n        if (// We only want this behavior when running `next dev`\n        renderOpts.dev && // We only want this behavior when we have React's dev builds available\n        process.env.NODE_ENV === 'development' && // Edge routes never prerender so we don't have a Prerender environment for anything in edge runtime\n        process.env.NEXT_RUNTIME !== 'edge' && // We only have a Prerender environment for projects opted into dynamicIO\n        renderOpts.experimental.dynamicIO) {\n            // This is a dynamic render. We don't do dynamic tracking because we're not prerendering\n            const RSCPayload = await workUnitAsyncStorage.run(requestStore, getRSCPayload, tree, ctx, res.statusCode === 404);\n            const [resolveValidation, validationOutlet] = createValidationOutlet();\n            RSCPayload._validation = validationOutlet;\n            const reactServerStream = await workUnitAsyncStorage.run(requestStore, scheduleInSequentialTasks, ()=>{\n                requestStore.prerenderPhase = true;\n                return ComponentMod.renderToReadableStream(RSCPayload, clientReferenceManifest.clientModules, {\n                    onError: serverComponentsErrorHandler,\n                    environmentName: ()=>requestStore.prerenderPhase === true ? 'Prerender' : 'Server',\n                    filterStackFrame (url, _functionName) {\n                        // The default implementation filters out <anonymous> stack frames\n                        // but we want to retain them because current Server Components and\n                        // built-in Components in parent stacks don't have source location.\n                        return !url.startsWith('node:') && !url.includes('node_modules');\n                    }\n                });\n            }, ()=>{\n                requestStore.prerenderPhase = false;\n            });\n            spawnDynamicValidationInDev(resolveValidation, tree, ctx, res.statusCode === 404, clientReferenceManifest, workStore.route);\n            reactServerResult = new ReactServerResult(reactServerStream);\n        } else {\n            // This is a dynamic render. We don't do dynamic tracking because we're not prerendering\n            const RSCPayload = await workUnitAsyncStorage.run(requestStore, getRSCPayload, tree, ctx, res.statusCode === 404);\n            reactServerResult = new ReactServerResult(workUnitAsyncStorage.run(requestStore, ComponentMod.renderToReadableStream, RSCPayload, clientReferenceManifest.clientModules, {\n                onError: serverComponentsErrorHandler\n            }));\n        }\n        // React doesn't start rendering synchronously but we want the RSC render to have a chance to start\n        // before we begin SSR rendering because we want to capture any available preload headers so we tick\n        // one task before continuing\n        await waitAtLeastOneReactRenderTask();\n        // If provided, the postpone state should be parsed as JSON so it can be\n        // provided to React.\n        if (typeof renderOpts.postponed === 'string') {\n            if ((postponedState == null ? void 0 : postponedState.type) === DynamicState.DATA) {\n                // We have a complete HTML Document in the prerender but we need to\n                // still include the new server component render because it was not included\n                // in the static prelude.\n                const inlinedReactServerDataStream = createInlinedDataReadableStream(reactServerResult.tee(), ctx.nonce, formState);\n                return chainStreams(inlinedReactServerDataStream, createDocumentClosingStream());\n            } else if (postponedState) {\n                // We assume we have dynamic HTML requiring a resume render to complete\n                const postponed = getPostponedFromState(postponedState);\n                const resume = require('react-dom/server.edge').resume;\n                const htmlStream = await workUnitAsyncStorage.run(requestStore, resume, /*#__PURE__*/ _jsx(App, {\n                    reactServerStream: reactServerResult.tee(),\n                    preinitScripts: preinitScripts,\n                    clientReferenceManifest: clientReferenceManifest,\n                    ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                    nonce: ctx.nonce\n                }), postponed, {\n                    onError: htmlRendererErrorHandler,\n                    nonce: ctx.nonce\n                });\n                const getServerInsertedHTML = makeGetServerInsertedHTML({\n                    polyfills,\n                    renderServerInsertedHTML,\n                    serverCapturedErrors: allCapturedErrors,\n                    basePath: renderOpts.basePath,\n                    tracingMetadata: tracingMetadata\n                });\n                return await continueDynamicHTMLResume(htmlStream, {\n                    inlinedDataStream: createInlinedDataReadableStream(reactServerResult.consume(), ctx.nonce, formState),\n                    getServerInsertedHTML\n                });\n            }\n        }\n        // This is a regular dynamic render\n        const renderToReadableStream = require('react-dom/server.edge').renderToReadableStream;\n        const htmlStream = await workUnitAsyncStorage.run(requestStore, renderToReadableStream, /*#__PURE__*/ _jsx(App, {\n            reactServerStream: reactServerResult.tee(),\n            preinitScripts: preinitScripts,\n            clientReferenceManifest: clientReferenceManifest,\n            ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n            nonce: ctx.nonce\n        }), {\n            onError: htmlRendererErrorHandler,\n            nonce: ctx.nonce,\n            onHeaders: (headers)=>{\n                headers.forEach((value, key)=>{\n                    setHeader(key, value);\n                });\n            },\n            maxHeadersLength: renderOpts.reactMaxHeadersLength,\n            // When debugging the static shell, client-side rendering should be\n            // disabled to prevent blanking out the page.\n            bootstrapScripts: renderOpts.isDebugStaticShell ? [] : [\n                bootstrapScript\n            ],\n            formState\n        });\n        const getServerInsertedHTML = makeGetServerInsertedHTML({\n            polyfills,\n            renderServerInsertedHTML,\n            serverCapturedErrors: allCapturedErrors,\n            basePath: renderOpts.basePath,\n            tracingMetadata: tracingMetadata\n        });\n        /**\n     * Rules of Static & Dynamic HTML:\n     *\n     *    1.) We must generate static HTML unless the caller explicitly opts\n     *        in to dynamic HTML support.\n     *\n     *    2.) If dynamic HTML support is requested, we must honor that request\n     *        or throw an error. It is the sole responsibility of the caller to\n     *        ensure they aren't e.g. requesting dynamic HTML for an AMP page.\n     *\n     * These rules help ensure that other existing features like request caching,\n     * coalescing, and ISR continue working as intended.\n     */ const generateStaticHTML = renderOpts.supportsDynamicResponse !== true;\n        const validateRootLayout = renderOpts.dev;\n        return await continueFizzStream(htmlStream, {\n            inlinedDataStream: createInlinedDataReadableStream(reactServerResult.consume(), ctx.nonce, formState),\n            isStaticGeneration: generateStaticHTML,\n            getServerInsertedHTML,\n            serverInsertedHTMLToHead: true,\n            validateRootLayout\n        });\n    } catch (err) {\n        if (isStaticGenBailoutError(err) || typeof err === 'object' && err !== null && 'message' in err && typeof err.message === 'string' && err.message.includes('https://nextjs.org/docs/advanced-features/static-html-export')) {\n            // Ensure that \"next dev\" prints the red error overlay\n            throw err;\n        }\n        // If a bailout made it to this point, it means it wasn't wrapped inside\n        // a suspense boundary.\n        const shouldBailoutToCSR = isBailoutToCSRError(err);\n        if (shouldBailoutToCSR) {\n            const stack = getStackWithoutErrorMessage(err);\n            error(`${err.reason} should be wrapped in a suspense boundary at page \"${ctx.pagePath}\". Read more: https://nextjs.org/docs/messages/missing-suspense-with-csr-bailout\\n${stack}`);\n            throw err;\n        }\n        let errorType;\n        if (isNotFoundError(err)) {\n            errorType = 'not-found';\n            res.statusCode = 404;\n        } else if (isRedirectError(err)) {\n            errorType = 'redirect';\n            res.statusCode = getRedirectStatusCodeFromError(err);\n            const redirectUrl = addPathPrefix(getURLFromRedirectError(err), renderOpts.basePath);\n            // If there were mutable cookies set, we need to set them on the\n            // response.\n            const headers = new Headers();\n            if (appendMutableCookies(headers, ctx.requestStore.mutableCookies)) {\n                setHeader('set-cookie', Array.from(headers.values()));\n            }\n            setHeader('location', redirectUrl);\n        } else if (!shouldBailoutToCSR) {\n            res.statusCode = 500;\n        }\n        const [errorPreinitScripts, errorBootstrapScript] = getRequiredScripts(renderOpts.buildManifest, ctx.assetPrefix, renderOpts.crossOrigin, renderOpts.subresourceIntegrityManifest, getAssetQueryString(ctx, false), ctx.nonce, '/_not-found/page');\n        const errorRSCPayload = await workUnitAsyncStorage.run(requestStore, getErrorRSCPayload, tree, ctx, errorType);\n        const errorServerStream = workUnitAsyncStorage.run(requestStore, ComponentMod.renderToReadableStream, errorRSCPayload, clientReferenceManifest.clientModules, {\n            onError: serverComponentsErrorHandler\n        });\n        if (reactServerResult === null) {\n            // We errored when we did not have an RSC stream to read from. This is not just a render\n            // error, we need to throw early\n            throw err;\n        }\n        try {\n            const fizzStream = await workUnitAsyncStorage.run(requestStore, renderToInitialFizzStream, {\n                ReactDOMServer: require('react-dom/server.edge'),\n                element: /*#__PURE__*/ _jsx(AppWithoutContext, {\n                    reactServerStream: errorServerStream,\n                    preinitScripts: errorPreinitScripts,\n                    clientReferenceManifest: clientReferenceManifest,\n                    nonce: ctx.nonce\n                }),\n                streamOptions: {\n                    nonce: ctx.nonce,\n                    // Include hydration scripts in the HTML\n                    bootstrapScripts: [\n                        errorBootstrapScript\n                    ],\n                    formState\n                }\n            });\n            /**\n       * Rules of Static & Dynamic HTML:\n       *\n       *    1.) We must generate static HTML unless the caller explicitly opts\n       *        in to dynamic HTML support.\n       *\n       *    2.) If dynamic HTML support is requested, we must honor that request\n       *        or throw an error. It is the sole responsibility of the caller to\n       *        ensure they aren't e.g. requesting dynamic HTML for an AMP page.\n       *\n       * These rules help ensure that other existing features like request caching,\n       * coalescing, and ISR continue working as intended.\n       */ const generateStaticHTML = renderOpts.supportsDynamicResponse !== true;\n            const validateRootLayout = renderOpts.dev;\n            return await continueFizzStream(fizzStream, {\n                inlinedDataStream: createInlinedDataReadableStream(// This is intentionally using the readable datastream from the\n                // main render rather than the flight data from the error page\n                // render\n                reactServerResult.consume(), ctx.nonce, formState),\n                isStaticGeneration: generateStaticHTML,\n                getServerInsertedHTML: makeGetServerInsertedHTML({\n                    polyfills,\n                    renderServerInsertedHTML,\n                    serverCapturedErrors: [],\n                    basePath: renderOpts.basePath,\n                    tracingMetadata: tracingMetadata\n                }),\n                serverInsertedHTMLToHead: true,\n                validateRootLayout\n            });\n        } catch (finalErr) {\n            if (process.env.NODE_ENV === 'development' && isNotFoundError(finalErr)) {\n                const bailOnNotFound = require('../../client/components/dev-root-not-found-boundary').bailOnNotFound;\n                bailOnNotFound();\n            }\n            throw finalErr;\n        }\n    }\n}\nfunction createValidationOutlet() {\n    let resolveValidation;\n    let outlet = new Promise((resolve)=>{\n        resolveValidation = resolve;\n    });\n    return [\n        resolveValidation,\n        outlet\n    ];\n}\nasync function spawnDynamicValidationInDev(resolveValidation, tree, ctx, isNotFound, clientReferenceManifest, route) {\n    const { componentMod: ComponentMod } = ctx;\n    const cacheSignal = new CacheSignal();\n    const firstAttemptServerController = new AbortController();\n    let serverDynamicTracking = createDynamicTrackingState(false);\n    const firstAttemptServerPrerenderStore = {\n        type: 'prerender',\n        phase: 'render',\n        implicitTags: [],\n        renderSignal: firstAttemptServerController.signal,\n        cacheSignal,\n        // During the prospective render we don't want to synchronously abort on dynamic access\n        // because it could prevent us from discovering all caches in siblings. So we omit the controller\n        // from the prerender store this time.\n        controller: firstAttemptServerController,\n        // With PPR during Prerender we don't need to track individual dynamic reasons\n        // because we will always do a final render after caches have filled and we\n        // will track it again there\n        dynamicTracking: null,\n        revalidate: INFINITE_CACHE,\n        expire: INFINITE_CACHE,\n        stale: INFINITE_CACHE,\n        tags: [],\n        // Dev only property that allows certain logs to be suppressed\n        validating: true\n    };\n    const firstAttemptRSCPayload = await workUnitAsyncStorage.run(firstAttemptServerPrerenderStore, getRSCPayload, tree, ctx, isNotFound);\n    let reactServerStream = await workUnitAsyncStorage.run(firstAttemptServerPrerenderStore, ComponentMod.renderToReadableStream, firstAttemptRSCPayload, clientReferenceManifest.clientModules, {\n        signal: firstAttemptServerController.signal,\n        onError: ()=>{}\n    });\n    await cacheSignal.cacheReady();\n    firstAttemptServerController.abort();\n    const secondAttemptServerController = new AbortController();\n    serverDynamicTracking = createDynamicTrackingState(false);\n    const secondAttemptServerPrerenderStore = {\n        type: 'prerender',\n        phase: 'render',\n        implicitTags: [],\n        renderSignal: secondAttemptServerController.signal,\n        cacheSignal: null,\n        // During the prospective render we don't want to synchronously abort on dynamic access\n        // because it could prevent us from discovering all caches in siblings. So we omit the controller\n        // from the prerender store this time.\n        controller: secondAttemptServerController,\n        // With PPR during Prerender we don't need to track individual dynamic reasons\n        // because we will always do a final render after caches have filled and we\n        // will track it again there\n        dynamicTracking: serverDynamicTracking,\n        revalidate: INFINITE_CACHE,\n        expire: INFINITE_CACHE,\n        stale: INFINITE_CACHE,\n        tags: [],\n        // Dev only property that allows certain logs to be suppressed\n        validating: true\n    };\n    const secondAttemptRSCPayload = await workUnitAsyncStorage.run(secondAttemptServerPrerenderStore, getRSCPayload, tree, ctx, isNotFound);\n    reactServerStream = await workUnitAsyncStorage.run(secondAttemptServerPrerenderStore, scheduleInSequentialTasks, ()=>{\n        const stream = ComponentMod.renderToReadableStream(secondAttemptRSCPayload, clientReferenceManifest.clientModules, {\n            signal: secondAttemptServerController.signal,\n            onError: ()=>{}\n        });\n        return asHaltedStream(stream, secondAttemptServerController.signal);\n    }, ()=>{\n        secondAttemptServerController.abort();\n    });\n    const [warmupStream, renderStream] = reactServerStream.tee();\n    await warmFlightResponse(warmupStream, clientReferenceManifest);\n    const { ServerInsertedHTMLProvider } = createServerInsertedHTML();\n    const nonce = '1';\n    const prerender = require('react-dom/static.edge').prerender;\n    let clientDynamicTracking = createDynamicTrackingState(false);\n    let dynamicValidation = createDynamicValidationState();\n    const firstAttemptClientController = new AbortController();\n    const firstAttemptClientPrerenderStore = {\n        type: 'prerender',\n        phase: 'render',\n        implicitTags: [],\n        renderSignal: firstAttemptClientController.signal,\n        // For HTML Generation we don't need to track cache reads (RSC only)\n        cacheSignal: null,\n        // We expect the SSR render to complete in a single Task and need to be able to synchronously abort\n        // When you use APIs that are considered dynamic or synchronous IO.\n        controller: firstAttemptClientController,\n        // We do track dynamic access because searchParams and certain hooks can still be\n        // dynamic during SSR\n        dynamicTracking: clientDynamicTracking,\n        revalidate: INFINITE_CACHE,\n        expire: INFINITE_CACHE,\n        stale: INFINITE_CACHE,\n        tags: [],\n        validating: true\n    };\n    const [firstAttemptReactServerStream, secondAttemptReactServerStream] = renderStream.tee();\n    let hadException = false;\n    try {\n        await prerenderAndAbortInSequentialTasks(async ()=>{\n            workUnitAsyncStorage.run(firstAttemptClientPrerenderStore, prerender, /*#__PURE__*/ _jsx(App, {\n                reactServerStream: firstAttemptReactServerStream,\n                preinitScripts: ()=>{},\n                clientReferenceManifest: clientReferenceManifest,\n                ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                nonce: nonce\n            }), {\n                signal: firstAttemptClientController.signal,\n                onError: (err, errorInfo)=>{\n                    if (isPrerenderInterruptedError(err) || firstAttemptServerController.signal.aborted) {\n                        const componentStack = errorInfo.componentStack;\n                        if (typeof componentStack === 'string' && err instanceof Error) {\n                            trackAllowedDynamicAccess(route, componentStack, dynamicValidation, serverDynamicTracking, clientDynamicTracking);\n                        }\n                    }\n                }\n            }).catch(()=>{});\n            return null;\n        }, ()=>{\n            firstAttemptClientController.abort();\n        }).catch(()=>{});\n    } catch (err) {\n        if (firstAttemptClientController.signal.aborted) {\n        // We aborted the render normally and can ignore this error\n        } else {\n            hadException = true;\n            // We're going to retry to so we normally would suppress this error but\n            // when verbose logging is on we print it\n            if (process.env.__NEXT_VERBOSE_LOGGING) {\n                printDebugThrownValueForProspectiveRender(err, route);\n            }\n        }\n    }\n    if (hadException || clientDynamicTracking.syncDynamicErrorWithStack) {\n        // We threw something unexpected in the initial render prior to aborting or\n        // we observed a sync abort. In either case we attempt a final render to see if\n        // the error was caused by module loading scope or some other transient cause\n        // Reset tracking objects\n        clientDynamicTracking = createDynamicTrackingState(false);\n        dynamicValidation = createDynamicValidationState();\n        const secondAttemptClientController = new AbortController();\n        const secondAttemptClientPrerenderStore = {\n            type: 'prerender',\n            phase: 'render',\n            implicitTags: [],\n            renderSignal: secondAttemptClientController.signal,\n            // For HTML Generation we don't need to track cache reads (RSC only)\n            cacheSignal: null,\n            // We expect the SSR render to complete in a single Task and need to be able to synchronously abort\n            // When you use APIs that are considered dynamic or synchronous IO.\n            controller: secondAttemptClientController,\n            // We do track dynamic access because searchParams and certain hooks can still be\n            // dynamic during SSR\n            dynamicTracking: clientDynamicTracking,\n            revalidate: INFINITE_CACHE,\n            expire: INFINITE_CACHE,\n            stale: INFINITE_CACHE,\n            tags: [],\n            validating: true\n        };\n        try {\n            await prerenderAndAbortInSequentialTasks(async ()=>{\n                workUnitAsyncStorage.run(secondAttemptClientPrerenderStore, prerender, /*#__PURE__*/ _jsx(App, {\n                    reactServerStream: secondAttemptReactServerStream,\n                    preinitScripts: ()=>{},\n                    clientReferenceManifest: clientReferenceManifest,\n                    ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                    nonce: nonce\n                }), {\n                    signal: secondAttemptClientController.signal,\n                    onError: (err, errorInfo)=>{\n                        if (isPrerenderInterruptedError(err) || secondAttemptClientController.signal.aborted) {\n                            const componentStack = errorInfo.componentStack;\n                            if (typeof componentStack === 'string' && err instanceof Error) {\n                                trackAllowedDynamicAccess(route, componentStack, dynamicValidation, serverDynamicTracking, clientDynamicTracking);\n                            }\n                        }\n                    }\n                }).catch(()=>{});\n                return null;\n            }, ()=>{\n                secondAttemptClientController.abort();\n            });\n        } catch (err) {\n            if (secondAttemptClientController.signal.aborted) {\n            // We aborted the render normally and can ignore this error\n            } else {\n                // We errored in the shell. This should also mean the normal render errored\n                // in the same place so we omit this log except when verbose mode is on.\n                if (process.env.__NEXT_VERBOSE_LOGGING) {\n                    printDebugThrownValueForProspectiveRender(err, route);\n                }\n            }\n        }\n    }\n    function LogDynamicValidation() {\n        try {\n            throwIfDisallowedDynamic(route, dynamicValidation, serverDynamicTracking, clientDynamicTracking);\n        } catch  {}\n        return null;\n    }\n    resolveValidation(/*#__PURE__*/ _jsx(LogDynamicValidation, {}));\n}\nfunction asHaltedStream(stream, signal) {\n    return new ReadableStream({\n        start (controller) {\n            const reader = stream.getReader();\n            function errorStream(err) {\n                controller.error(err);\n                reader.cancel(err);\n            }\n            function progressStream({ done, value }) {\n                if (done) {\n                    // We don't actually close the outer stream because\n                    // we might have aborted the inner one but we are simulating a halt\n                    return;\n                } else {\n                    if (!signal.aborted) {\n                        controller.enqueue(value);\n                        reader.read().then(progressStream, errorStream);\n                    } else {\n                        // If the signal aborted we leave the stream open but no longer pull from the upstream\n                        reader.cancel();\n                    }\n                }\n            }\n            reader.read().then(progressStream, errorStream);\n        }\n    });\n}\n/**\n * Determines whether we should generate static flight data.\n */ function shouldGenerateStaticFlightData(workStore) {\n    const { fallbackRouteParams, isStaticGeneration } = workStore;\n    if (!isStaticGeneration) return false;\n    if (fallbackRouteParams && fallbackRouteParams.size > 0) {\n        return false;\n    }\n    return true;\n}\nasync function prerenderToStream(req, res, ctx, metadata, workStore, tree) {\n    ctx.requestStore.phase = 'render';\n    // When prerendering formState is always null. We still include it\n    // because some shared APIs expect a formState value and this is slightly\n    // more explicit than making it an optional function argument\n    const formState = null;\n    const renderOpts = ctx.renderOpts;\n    const ComponentMod = renderOpts.ComponentMod;\n    // TODO: fix this typescript\n    const clientReferenceManifest = renderOpts.clientReferenceManifest;\n    const fallbackRouteParams = workStore.fallbackRouteParams;\n    const { ServerInsertedHTMLProvider, renderServerInsertedHTML } = createServerInsertedHTML();\n    const tracingMetadata = getTracedMetadata(getTracer().getTracePropagationData(), renderOpts.experimental.clientTraceMetadata);\n    const polyfills = renderOpts.buildManifest.polyfillFiles.filter((polyfill)=>polyfill.endsWith('.js') && !polyfill.endsWith('.module.js')).map((polyfill)=>{\n        var _renderOpts_subresourceIntegrityManifest;\n        return {\n            src: `${ctx.assetPrefix}/_next/${polyfill}${getAssetQueryString(ctx, false)}`,\n            integrity: (_renderOpts_subresourceIntegrityManifest = renderOpts.subresourceIntegrityManifest) == null ? void 0 : _renderOpts_subresourceIntegrityManifest[polyfill],\n            crossOrigin: renderOpts.crossOrigin,\n            noModule: true,\n            nonce: ctx.nonce\n        };\n    });\n    const [preinitScripts, bootstrapScript] = getRequiredScripts(renderOpts.buildManifest, // Why is assetPrefix optional on renderOpts?\n    // @TODO make it default empty string on renderOpts and get rid of it from ctx\n    ctx.assetPrefix, renderOpts.crossOrigin, renderOpts.subresourceIntegrityManifest, getAssetQueryString(ctx, true), ctx.nonce, renderOpts.page);\n    const reactServerErrorsByDigest = new Map();\n    // We don't report errors during prerendering through our instrumentation hooks\n    const silenceLogger = !!renderOpts.experimental.isRoutePPREnabled;\n    function onHTMLRenderRSCError(err) {\n        return renderOpts.onInstrumentationRequestError == null ? void 0 : renderOpts.onInstrumentationRequestError.call(renderOpts, err, req, createErrorContext(ctx, 'react-server-components'));\n    }\n    const serverComponentsErrorHandler = createHTMLReactServerErrorHandler(!!renderOpts.dev, !!renderOpts.nextExport, reactServerErrorsByDigest, silenceLogger, onHTMLRenderRSCError);\n    function onHTMLRenderSSRError(err) {\n        return renderOpts.onInstrumentationRequestError == null ? void 0 : renderOpts.onInstrumentationRequestError.call(renderOpts, err, req, createErrorContext(ctx, 'server-rendering'));\n    }\n    const allCapturedErrors = [];\n    const htmlRendererErrorHandler = createHTMLErrorHandler(!!renderOpts.dev, !!renderOpts.nextExport, reactServerErrorsByDigest, allCapturedErrors, silenceLogger, onHTMLRenderSSRError);\n    let reactServerPrerenderResult = null;\n    const setHeader = (name, value)=>{\n        res.setHeader(name, value);\n        metadata.headers ??= {};\n        metadata.headers[name] = res.getHeader(name);\n        return res;\n    };\n    let prerenderStore = null;\n    try {\n        if (renderOpts.experimental.dynamicIO) {\n            if (renderOpts.experimental.isRoutePPREnabled) {\n                /**\n         * dynamicIO with PPR\n         *\n         * The general approach is to render the RSC stream first allowing any cache reads to resolve.\n         * Once we have settled all cache reads we restart the render and abort after a single Task.\n         *\n         * Unlike with the non PPR case we can't synchronously abort the render when a dynamic API is used\n         * during the initial render because we need to ensure all caches can be filled as part of the initial Task\n         * and a synchronous abort might prevent us from filling all caches.\n         *\n         * Once the render is complete we allow the SSR render to finish and use a combination of the postponed state\n         * and the reactServerIsDynamic value to determine how to treat the resulting render\n         */ // Prerender controller represents the lifetime of the prerender.\n                // It will be aborted when a Task is complete or a synchronously aborting\n                // API is called. Notably during cache-filling renders this does not actually\n                // terminate the render itself which will continue until all caches are filled\n                const initialServerPrerenderController = new AbortController();\n                // This controller represents the lifetime of the React render call. Notably\n                // during the cache-filling render it is different from the prerender controller\n                // because we don't want to end the react render until all caches are filled.\n                const initialServerRenderController = new AbortController();\n                // The cacheSignal helps us track whether caches are still filling or we are ready\n                // to cut the render off.\n                const cacheSignal = new CacheSignal();\n                const initialServerPrerenderStore = prerenderStore = {\n                    type: 'prerender',\n                    phase: 'render',\n                    implicitTags: ctx.requestStore.implicitTags,\n                    renderSignal: initialServerRenderController.signal,\n                    controller: initialServerPrerenderController,\n                    cacheSignal,\n                    dynamicTracking: null,\n                    revalidate: INFINITE_CACHE,\n                    expire: INFINITE_CACHE,\n                    stale: INFINITE_CACHE,\n                    tags: [\n                        ...ctx.requestStore.implicitTags\n                    ]\n                };\n                // We're not going to use the result of this render because the only time it could be used\n                // is if it completes in a microtask and that's likely very rare for any non-trivial app\n                const initialServerPayload = await workUnitAsyncStorage.run(initialServerPrerenderStore, getRSCPayload, tree, ctx, res.statusCode === 404);\n                const pendingInitialServerResult = workUnitAsyncStorage.run(initialServerPrerenderStore, ComponentMod.prerender, initialServerPayload, clientReferenceManifest.clientModules, {\n                    onError: (err)=>{\n                        if (initialServerPrerenderController.signal.aborted) {\n                            // The render aborted before this error was handled which indicates\n                            // the error is caused by unfinished components within the render\n                            return;\n                        } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                            printDebugThrownValueForProspectiveRender(err, workStore.route);\n                        }\n                    },\n                    // we don't care to track postpones during the prospective render because we need\n                    // to always do a final render anyway\n                    onPostpone: undefined,\n                    // We don't want to stop rendering until the cacheSignal is complete so we pass\n                    // a different signal to this render call than is used by dynamic APIs to signify\n                    // transitioning out of the prerender environment\n                    signal: initialServerRenderController.signal\n                });\n                await cacheSignal.cacheReady();\n                initialServerRenderController.abort();\n                initialServerPrerenderController.abort();\n                let initialServerResult;\n                try {\n                    initialServerResult = await createReactServerPrerenderResult(pendingInitialServerResult);\n                } catch (err) {\n                    if (initialServerRenderController.signal.aborted || initialServerPrerenderController.signal.aborted) {\n                    // These are expected errors that might error the prerender. we ignore them.\n                    } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                        // We don't normally log these errors because we are going to retry anyway but\n                        // it can be useful for debugging Next.js itself to get visibility here when needed\n                        printDebugThrownValueForProspectiveRender(err, workStore.route);\n                    }\n                }\n                if (initialServerResult) {\n                    // Before we attempt the SSR initial render we need to ensure all client modules\n                    // are already loaded.\n                    await warmFlightResponse(initialServerResult.asStream(), clientReferenceManifest);\n                    const initialClientController = new AbortController();\n                    const initialClientPrerenderStore = {\n                        type: 'prerender',\n                        phase: 'render',\n                        implicitTags: ctx.requestStore.implicitTags,\n                        renderSignal: initialClientController.signal,\n                        controller: initialClientController,\n                        cacheSignal: null,\n                        dynamicTracking: null,\n                        revalidate: INFINITE_CACHE,\n                        expire: INFINITE_CACHE,\n                        stale: INFINITE_CACHE,\n                        tags: [\n                            ...ctx.requestStore.implicitTags\n                        ]\n                    };\n                    const prerender = require('react-dom/static.edge').prerender;\n                    await prerenderAndAbortInSequentialTasks(()=>workUnitAsyncStorage.run(initialClientPrerenderStore, prerender, /*#__PURE__*/ _jsx(App, {\n                            reactServerStream: initialServerResult.asUnclosingStream(),\n                            preinitScripts: preinitScripts,\n                            clientReferenceManifest: clientReferenceManifest,\n                            ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                            nonce: ctx.nonce\n                        }), {\n                            signal: initialClientController.signal,\n                            onError: (err, _errorInfo)=>{\n                                if (initialClientController.signal.aborted) {\n                                // These are expected errors that might error the prerender. we ignore them.\n                                } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                                    // We don't normally log these errors because we are going to retry anyway but\n                                    // it can be useful for debugging Next.js itself to get visibility here when needed\n                                    printDebugThrownValueForProspectiveRender(err, workStore.route);\n                                }\n                            },\n                            // When debugging the static shell, client-side rendering should be\n                            // disabled to prevent blanking out the page.\n                            bootstrapScripts: renderOpts.isDebugStaticShell ? [] : [\n                                bootstrapScript\n                            ]\n                        }), ()=>{\n                        initialClientController.abort();\n                    }).catch((err)=>{\n                        if (initialServerRenderController.signal.aborted || isPrerenderInterruptedError(err)) {\n                        // These are expected errors that might error the prerender. we ignore them.\n                        } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                            // We don't normally log these errors because we are going to retry anyway but\n                            // it can be useful for debugging Next.js itself to get visibility here when needed\n                            printDebugThrownValueForProspectiveRender(err, workStore.route);\n                        }\n                    });\n                }\n                let serverIsDynamic = false;\n                const finalServerController = new AbortController();\n                const serverDynamicTracking = createDynamicTrackingState(renderOpts.isDebugDynamicAccesses);\n                const finalRenderPrerenderStore = prerenderStore = {\n                    type: 'prerender',\n                    phase: 'render',\n                    implicitTags: ctx.requestStore.implicitTags,\n                    renderSignal: finalServerController.signal,\n                    controller: finalServerController,\n                    // During the final prerender we don't need to track cache access so we omit the signal\n                    cacheSignal: null,\n                    dynamicTracking: serverDynamicTracking,\n                    revalidate: INFINITE_CACHE,\n                    expire: INFINITE_CACHE,\n                    stale: INFINITE_CACHE,\n                    tags: [\n                        ...ctx.requestStore.implicitTags\n                    ]\n                };\n                const finalAttemptRSCPayload = await workUnitAsyncStorage.run(finalRenderPrerenderStore, getRSCPayload, tree, ctx, res.statusCode === 404);\n                const reactServerResult = reactServerPrerenderResult = await createReactServerPrerenderResult(prerenderAndAbortInSequentialTasks(()=>workUnitAsyncStorage.run(// The store to scope\n                    finalRenderPrerenderStore, // The function to run\n                    ComponentMod.prerender, // ... the arguments for the function to run\n                    finalAttemptRSCPayload, clientReferenceManifest.clientModules, {\n                        onError: (err)=>{\n                            if (finalServerController.signal.aborted) {\n                                serverIsDynamic = true;\n                                return;\n                            }\n                            return serverComponentsErrorHandler(err);\n                        },\n                        signal: finalServerController.signal\n                    }), ()=>{\n                    finalServerController.abort();\n                }));\n                const clientDynamicTracking = createDynamicTrackingState(renderOpts.isDebugDynamicAccesses);\n                const finalClientController = new AbortController();\n                const finalClientPrerenderStore = {\n                    type: 'prerender',\n                    phase: 'render',\n                    implicitTags: ctx.requestStore.implicitTags,\n                    renderSignal: finalClientController.signal,\n                    controller: finalClientController,\n                    // For HTML Generation we don't need to track cache reads (RSC only)\n                    cacheSignal: null,\n                    dynamicTracking: clientDynamicTracking,\n                    revalidate: INFINITE_CACHE,\n                    expire: INFINITE_CACHE,\n                    stale: INFINITE_CACHE,\n                    tags: [\n                        ...ctx.requestStore.implicitTags\n                    ]\n                };\n                let clientIsDynamic = false;\n                let dynamicValidation = createDynamicValidationState();\n                const prerender = require('react-dom/static.edge').prerender;\n                let { prelude, postponed } = await prerenderAndAbortInSequentialTasks(()=>workUnitAsyncStorage.run(finalClientPrerenderStore, prerender, /*#__PURE__*/ _jsx(App, {\n                        reactServerStream: reactServerResult.asUnclosingStream(),\n                        preinitScripts: preinitScripts,\n                        clientReferenceManifest: clientReferenceManifest,\n                        ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                        nonce: ctx.nonce\n                    }), {\n                        signal: finalClientController.signal,\n                        onError: (err, errorInfo)=>{\n                            if (isPrerenderInterruptedError(err) || finalClientController.signal.aborted) {\n                                clientIsDynamic = true;\n                                const componentStack = errorInfo.componentStack;\n                                if (typeof componentStack === 'string') {\n                                    trackAllowedDynamicAccess(workStore.route, componentStack, dynamicValidation, serverDynamicTracking, clientDynamicTracking);\n                                }\n                                return;\n                            }\n                            return htmlRendererErrorHandler(err, errorInfo);\n                        },\n                        onHeaders: (headers)=>{\n                            headers.forEach((value, key)=>{\n                                setHeader(key, value);\n                            });\n                        },\n                        maxHeadersLength: renderOpts.reactMaxHeadersLength,\n                        // When debugging the static shell, client-side rendering should be\n                        // disabled to prevent blanking out the page.\n                        bootstrapScripts: renderOpts.isDebugStaticShell ? [] : [\n                            bootstrapScript\n                        ]\n                    }), ()=>{\n                    finalClientController.abort();\n                });\n                throwIfDisallowedDynamic(workStore.route, dynamicValidation, serverDynamicTracking, clientDynamicTracking);\n                const getServerInsertedHTML = makeGetServerInsertedHTML({\n                    polyfills,\n                    renderServerInsertedHTML,\n                    serverCapturedErrors: allCapturedErrors,\n                    basePath: renderOpts.basePath,\n                    tracingMetadata: tracingMetadata\n                });\n                metadata.flightData = await streamToBuffer(reactServerResult.asStream());\n                if (serverIsDynamic || clientIsDynamic) {\n                    if (postponed != null) {\n                        // Dynamic HTML case\n                        metadata.postponed = getDynamicHTMLPostponedState(postponed, fallbackRouteParams);\n                    } else {\n                        // Dynamic Data case\n                        metadata.postponed = getDynamicDataPostponedState();\n                    }\n                    reactServerResult.consume();\n                    return {\n                        digestErrorsMap: reactServerErrorsByDigest,\n                        ssrErrors: allCapturedErrors,\n                        stream: await continueDynamicPrerender(prelude, {\n                            getServerInsertedHTML\n                        }),\n                        dynamicAccess: consumeDynamicAccess(serverDynamicTracking, clientDynamicTracking),\n                        // TODO: Should this include the SSR pass?\n                        collectedRevalidate: finalRenderPrerenderStore.revalidate,\n                        collectedExpire: finalRenderPrerenderStore.expire,\n                        collectedStale: finalRenderPrerenderStore.stale,\n                        collectedTags: finalRenderPrerenderStore.tags\n                    };\n                } else {\n                    // Static case\n                    if (workStore.forceDynamic) {\n                        throw new StaticGenBailoutError('Invariant: a Page with `dynamic = \"force-dynamic\"` did not trigger the dynamic pathway. This is a bug in Next.js');\n                    }\n                    let htmlStream = prelude;\n                    if (postponed != null) {\n                        // We postponed but nothing dynamic was used. We resume the render now and immediately abort it\n                        // so we can set all the postponed boundaries to client render mode before we store the HTML response\n                        const resume = require('react-dom/server.edge').resume;\n                        // We don't actually want to render anything so we just pass a stream\n                        // that never resolves. The resume call is going to abort immediately anyway\n                        const foreverStream = new ReadableStream();\n                        const resumeStream = await resume(/*#__PURE__*/ _jsx(App, {\n                            reactServerStream: foreverStream,\n                            preinitScripts: ()=>{},\n                            clientReferenceManifest: clientReferenceManifest,\n                            ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                            nonce: ctx.nonce\n                        }), JSON.parse(JSON.stringify(postponed)), {\n                            signal: createPostponedAbortSignal('static prerender resume'),\n                            onError: htmlRendererErrorHandler,\n                            nonce: ctx.nonce\n                        });\n                        // First we write everything from the prerender, then we write everything from the aborted resume render\n                        htmlStream = chainStreams(prelude, resumeStream);\n                    }\n                    return {\n                        digestErrorsMap: reactServerErrorsByDigest,\n                        ssrErrors: allCapturedErrors,\n                        stream: await continueStaticPrerender(htmlStream, {\n                            inlinedDataStream: createInlinedDataReadableStream(reactServerResult.consumeAsStream(), ctx.nonce, formState),\n                            getServerInsertedHTML\n                        }),\n                        dynamicAccess: consumeDynamicAccess(serverDynamicTracking, clientDynamicTracking),\n                        // TODO: Should this include the SSR pass?\n                        collectedRevalidate: finalRenderPrerenderStore.revalidate,\n                        collectedExpire: finalRenderPrerenderStore.expire,\n                        collectedStale: finalRenderPrerenderStore.stale,\n                        collectedTags: finalRenderPrerenderStore.tags\n                    };\n                }\n            } else {\n                /**\n         * dynamicIO without PPR\n         *\n         * The general approach is to render the RSC tree first allowing for any inflight\n         * caches to resolve. Once we have settled inflight caches we can check and see if any\n         * synchronous dynamic APIs were used. If so we don't need to bother doing anything more\n         * because the page will be dynamic on re-render anyway\n         *\n         * If no sync dynamic APIs were used we then re-render and abort after a single Task.\n         * If the render errors we know that the page has some dynamic IO. This assumes and relies\n         * upon caches reading from a in process memory cache and resolving in a microtask. While this\n         * is true from our own default cache implementation and if you don't exceed our LRU size it\n         * might not be true for custom cache implementations.\n         *\n         * Future implementations can do some different strategies during build like using IPC to\n         * synchronously fill caches during this special rendering mode. For now this heuristic should work\n         */ const cache = workStore.incrementalCache;\n                if (!cache) {\n                    throw new Error('Expected incremental cache to exist. This is a bug in Next.js');\n                }\n                // Prerender controller represents the lifetime of the prerender.\n                // It will be aborted when a Task is complete or a synchronously aborting\n                // API is called. Notably during cache-filling renders this does not actually\n                // terminate the render itself which will continue until all caches are filled\n                const initialServerPrerenderController = new AbortController();\n                // This controller represents the lifetime of the React render call. Notably\n                // during the cache-filling render it is different from the prerender controller\n                // because we don't want to end the react render until all caches are filled.\n                const initialServerRenderController = new AbortController();\n                const cacheSignal = new CacheSignal();\n                const initialServerPrerenderStore = prerenderStore = {\n                    type: 'prerender',\n                    phase: 'render',\n                    implicitTags: ctx.requestStore.implicitTags,\n                    renderSignal: initialServerRenderController.signal,\n                    controller: initialServerPrerenderController,\n                    cacheSignal,\n                    dynamicTracking: null,\n                    revalidate: INFINITE_CACHE,\n                    expire: INFINITE_CACHE,\n                    stale: INFINITE_CACHE,\n                    tags: [\n                        ...ctx.requestStore.implicitTags\n                    ]\n                };\n                const initialClientController = new AbortController();\n                const initialClientPrerenderStore = prerenderStore = {\n                    type: 'prerender',\n                    phase: 'render',\n                    implicitTags: ctx.requestStore.implicitTags,\n                    renderSignal: initialClientController.signal,\n                    controller: initialClientController,\n                    cacheSignal,\n                    dynamicTracking: null,\n                    revalidate: INFINITE_CACHE,\n                    expire: INFINITE_CACHE,\n                    stale: INFINITE_CACHE,\n                    tags: [\n                        ...ctx.requestStore.implicitTags\n                    ]\n                };\n                // We're not going to use the result of this render because the only time it could be used\n                // is if it completes in a microtask and that's likely very rare for any non-trivial app\n                const firstAttemptRSCPayload = await workUnitAsyncStorage.run(initialServerPrerenderStore, getRSCPayload, tree, ctx, res.statusCode === 404);\n                let initialServerStream;\n                try {\n                    initialServerStream = workUnitAsyncStorage.run(initialServerPrerenderStore, ComponentMod.renderToReadableStream, firstAttemptRSCPayload, clientReferenceManifest.clientModules, {\n                        onError: (err)=>{\n                            if (initialServerPrerenderController.signal.aborted || initialServerRenderController.signal.aborted) {\n                                // The render aborted before this error was handled which indicates\n                                // the error is caused by unfinished components within the render\n                                return;\n                            } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                                printDebugThrownValueForProspectiveRender(err, workStore.route);\n                            }\n                        },\n                        signal: initialServerRenderController.signal\n                    });\n                } catch (err) {\n                    if (initialServerPrerenderController.signal.aborted || initialServerRenderController.signal.aborted) {\n                    // These are expected errors that might error the prerender. we ignore them.\n                    } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                        // We don't normally log these errors because we are going to retry anyway but\n                        // it can be useful for debugging Next.js itself to get visibility here when needed\n                        printDebugThrownValueForProspectiveRender(err, workStore.route);\n                    }\n                }\n                if (initialServerStream) {\n                    const [warmupStream, renderStream] = initialServerStream.tee();\n                    initialServerStream = null;\n                    // Before we attempt the SSR initial render we need to ensure all client modules\n                    // are already loaded.\n                    await warmFlightResponse(warmupStream, clientReferenceManifest);\n                    const prerender = require('react-dom/static.edge').prerender;\n                    const pendingInitialClientResult = workUnitAsyncStorage.run(initialClientPrerenderStore, prerender, /*#__PURE__*/ _jsx(App, {\n                        reactServerStream: renderStream,\n                        preinitScripts: preinitScripts,\n                        clientReferenceManifest: clientReferenceManifest,\n                        ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                        nonce: ctx.nonce\n                    }), {\n                        signal: initialClientController.signal,\n                        onError: (err, _errorInfo)=>{\n                            if (initialClientController.signal.aborted) {\n                            // These are expected errors that might error the prerender. we ignore them.\n                            } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                                // We don't normally log these errors because we are going to retry anyway but\n                                // it can be useful for debugging Next.js itself to get visibility here when needed\n                                printDebugThrownValueForProspectiveRender(err, workStore.route);\n                            }\n                        },\n                        // When debugging the static shell, client-side rendering should be\n                        // disabled to prevent blanking out the page.\n                        bootstrapScripts: renderOpts.isDebugStaticShell ? [] : [\n                            bootstrapScript\n                        ]\n                    });\n                    pendingInitialClientResult.catch((err)=>{\n                        if (initialClientController.signal.aborted) {\n                        // We aborted the render normally and can ignore this error\n                        } else {\n                            // We're going to retry to so we normally would suppress this error but\n                            // when verbose logging is on we print it\n                            if (process.env.__NEXT_VERBOSE_LOGGING) {\n                                printDebugThrownValueForProspectiveRender(err, workStore.route);\n                            }\n                        }\n                    });\n                }\n                await cacheSignal.cacheReady();\n                // It is important that we abort the SSR render first to avoid\n                // connection closed errors from having an incomplete RSC stream\n                initialClientController.abort();\n                initialServerRenderController.abort();\n                initialServerPrerenderController.abort();\n                // We've now filled caches and triggered any inadvertant sync bailouts\n                // due to lazy module initialization. We can restart our render to capture results\n                let serverIsDynamic = false;\n                const finalServerController = new AbortController();\n                const serverDynamicTracking = createDynamicTrackingState(renderOpts.isDebugDynamicAccesses);\n                const finalServerPrerenderStore = prerenderStore = {\n                    type: 'prerender',\n                    phase: 'render',\n                    implicitTags: ctx.requestStore.implicitTags,\n                    renderSignal: finalServerController.signal,\n                    controller: finalServerController,\n                    // During the final prerender we don't need to track cache access so we omit the signal\n                    cacheSignal: null,\n                    dynamicTracking: serverDynamicTracking,\n                    revalidate: INFINITE_CACHE,\n                    expire: INFINITE_CACHE,\n                    stale: INFINITE_CACHE,\n                    tags: [\n                        ...ctx.requestStore.implicitTags\n                    ]\n                };\n                let clientIsDynamic = false;\n                const finalClientController = new AbortController();\n                const clientDynamicTracking = createDynamicTrackingState(renderOpts.isDebugDynamicAccesses);\n                const dynamicValidation = createDynamicValidationState();\n                const finalClientPrerenderStore = prerenderStore = {\n                    type: 'prerender',\n                    phase: 'render',\n                    implicitTags: ctx.requestStore.implicitTags,\n                    renderSignal: finalClientController.signal,\n                    controller: finalClientController,\n                    // During the final prerender we don't need to track cache access so we omit the signal\n                    cacheSignal: null,\n                    dynamicTracking: clientDynamicTracking,\n                    revalidate: INFINITE_CACHE,\n                    expire: INFINITE_CACHE,\n                    stale: INFINITE_CACHE,\n                    tags: [\n                        ...ctx.requestStore.implicitTags\n                    ]\n                };\n                const finalServerPayload = await workUnitAsyncStorage.run(finalServerPrerenderStore, getRSCPayload, tree, ctx, res.statusCode === 404);\n                const serverPrerenderStreamResult = await prerenderServerWithPhases(finalServerController.signal, ()=>workUnitAsyncStorage.run(finalServerPrerenderStore, ComponentMod.renderToReadableStream, finalServerPayload, clientReferenceManifest.clientModules, {\n                        onError: (err)=>{\n                            if (finalServerController.signal.aborted) {\n                                serverIsDynamic = true;\n                                if (isPrerenderInterruptedError(err)) {\n                                    return err.digest;\n                                }\n                                return;\n                            }\n                            return serverComponentsErrorHandler(err);\n                        },\n                        signal: finalServerController.signal\n                    }), ()=>{\n                    finalServerController.abort();\n                });\n                let htmlStream;\n                const serverPhasedStream = serverPrerenderStreamResult.asPhasedStream();\n                try {\n                    const prerender = require('react-dom/static.edge').prerender;\n                    const result = await prerenderClientWithPhases(()=>workUnitAsyncStorage.run(finalClientPrerenderStore, prerender, /*#__PURE__*/ _jsx(App, {\n                            reactServerStream: serverPhasedStream,\n                            preinitScripts: preinitScripts,\n                            clientReferenceManifest: clientReferenceManifest,\n                            ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                            nonce: ctx.nonce\n                        }), {\n                            signal: finalClientController.signal,\n                            onError: (err, errorInfo)=>{\n                                if (isPrerenderInterruptedError(err) || finalClientController.signal.aborted) {\n                                    clientIsDynamic = true;\n                                    const componentStack = errorInfo.componentStack;\n                                    if (typeof componentStack === 'string') {\n                                        trackAllowedDynamicAccess(workStore.route, componentStack, dynamicValidation, serverDynamicTracking, clientDynamicTracking);\n                                    }\n                                    return;\n                                }\n                                return htmlRendererErrorHandler(err, errorInfo);\n                            },\n                            // When debugging the static shell, client-side rendering should be\n                            // disabled to prevent blanking out the page.\n                            bootstrapScripts: renderOpts.isDebugStaticShell ? [] : [\n                                bootstrapScript\n                            ]\n                        }), ()=>{\n                        finalClientController.abort();\n                        serverPhasedStream.assertExhausted();\n                    });\n                    htmlStream = result.prelude;\n                } catch (err) {\n                    if (isPrerenderInterruptedError(err) || finalClientController.signal.aborted) {\n                    // we don't have a root because the abort errored in the root. We can just ignore this error\n                    } else {\n                        // This error is something else and should bubble up\n                        throw err;\n                    }\n                }\n                throwIfDisallowedDynamic(workStore.route, dynamicValidation, serverDynamicTracking, clientDynamicTracking);\n                if (serverIsDynamic || clientIsDynamic) {\n                    const dynamicReason = serverIsDynamic ? getFirstDynamicReason(serverDynamicTracking) : getFirstDynamicReason(clientDynamicTracking);\n                    if (dynamicReason) {\n                        throw new DynamicServerError(`Route \"${workStore.route}\" couldn't be rendered statically because it used \\`${dynamicReason}\\`. See more info here: https://nextjs.org/docs/messages/next-prerender-data`);\n                    } else {\n                        throw new DynamicServerError(`Route \"${workStore.route}\" couldn't be rendered statically it accessed data without explicitly caching it. See more info here: https://nextjs.org/docs/messages/next-prerender-data`);\n                    }\n                }\n                // const reactServerResult =\n                //   await createReactServerPrerenderResultFromRender(reactServerStream!)\n                metadata.flightData = await streamToBuffer(serverPrerenderStreamResult.asStream());\n                const getServerInsertedHTML = makeGetServerInsertedHTML({\n                    polyfills,\n                    renderServerInsertedHTML,\n                    serverCapturedErrors: allCapturedErrors,\n                    basePath: renderOpts.basePath,\n                    tracingMetadata: tracingMetadata\n                });\n                const validateRootLayout = renderOpts.dev;\n                return {\n                    digestErrorsMap: reactServerErrorsByDigest,\n                    ssrErrors: allCapturedErrors,\n                    stream: await continueFizzStream(htmlStream, {\n                        inlinedDataStream: createInlinedDataReadableStream(serverPrerenderStreamResult.asStream(), ctx.nonce, formState),\n                        isStaticGeneration: true,\n                        getServerInsertedHTML,\n                        serverInsertedHTMLToHead: true,\n                        validateRootLayout\n                    }),\n                    dynamicAccess: consumeDynamicAccess(serverDynamicTracking, clientDynamicTracking),\n                    // TODO: Should this include the SSR pass?\n                    collectedRevalidate: finalServerPrerenderStore.revalidate,\n                    collectedExpire: finalServerPrerenderStore.expire,\n                    collectedStale: finalServerPrerenderStore.stale,\n                    collectedTags: finalServerPrerenderStore.tags\n                };\n            }\n        } else if (renderOpts.experimental.isRoutePPREnabled) {\n            // We're statically generating with PPR and need to do dynamic tracking\n            let dynamicTracking = createDynamicTrackingState(renderOpts.isDebugDynamicAccesses);\n            const reactServerPrerenderStore = prerenderStore = {\n                type: 'prerender-ppr',\n                phase: 'render',\n                implicitTags: ctx.requestStore.implicitTags,\n                dynamicTracking,\n                revalidate: INFINITE_CACHE,\n                expire: INFINITE_CACHE,\n                stale: INFINITE_CACHE,\n                tags: [\n                    ...ctx.requestStore.implicitTags\n                ]\n            };\n            const RSCPayload = await workUnitAsyncStorage.run(reactServerPrerenderStore, getRSCPayload, tree, ctx, res.statusCode === 404);\n            const reactServerResult = reactServerPrerenderResult = await createReactServerPrerenderResultFromRender(workUnitAsyncStorage.run(reactServerPrerenderStore, ComponentMod.renderToReadableStream, // ... the arguments for the function to run\n            RSCPayload, clientReferenceManifest.clientModules, {\n                onError: serverComponentsErrorHandler\n            }));\n            const ssrPrerenderStore = {\n                type: 'prerender-ppr',\n                phase: 'render',\n                implicitTags: ctx.requestStore.implicitTags,\n                dynamicTracking,\n                revalidate: INFINITE_CACHE,\n                expire: INFINITE_CACHE,\n                stale: INFINITE_CACHE,\n                tags: [\n                    ...ctx.requestStore.implicitTags\n                ]\n            };\n            const prerender = require('react-dom/static.edge').prerender;\n            const { prelude, postponed } = await workUnitAsyncStorage.run(ssrPrerenderStore, prerender, /*#__PURE__*/ _jsx(App, {\n                reactServerStream: reactServerResult.asUnclosingStream(),\n                preinitScripts: preinitScripts,\n                clientReferenceManifest: clientReferenceManifest,\n                ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                nonce: ctx.nonce\n            }), {\n                onError: htmlRendererErrorHandler,\n                onHeaders: (headers)=>{\n                    headers.forEach((value, key)=>{\n                        setHeader(key, value);\n                    });\n                },\n                maxHeadersLength: renderOpts.reactMaxHeadersLength,\n                // When debugging the static shell, client-side rendering should be\n                // disabled to prevent blanking out the page.\n                bootstrapScripts: renderOpts.isDebugStaticShell ? [] : [\n                    bootstrapScript\n                ]\n            });\n            const getServerInsertedHTML = makeGetServerInsertedHTML({\n                polyfills,\n                renderServerInsertedHTML,\n                serverCapturedErrors: allCapturedErrors,\n                basePath: renderOpts.basePath,\n                tracingMetadata: tracingMetadata\n            });\n            // After awaiting here we've waited for the entire RSC render to complete. Crucially this means\n            // that when we detect whether we've used dynamic APIs below we know we'll have picked up even\n            // parts of the React Server render that might not be used in the SSR render.\n            const flightData = await streamToBuffer(reactServerResult.asStream());\n            if (shouldGenerateStaticFlightData(workStore)) {\n                metadata.flightData = flightData;\n            }\n            /**\n       * When prerendering there are three outcomes to consider\n       *\n       *   Dynamic HTML:      The prerender has dynamic holes (caused by using Next.js Dynamic Rendering APIs)\n       *                      We will need to resume this result when requests are handled and we don't include\n       *                      any server inserted HTML or inlined flight data in the static HTML\n       *\n       *   Dynamic Data:      The prerender has no dynamic holes but dynamic APIs were used. We will not\n       *                      resume this render when requests are handled but we will generate new inlined\n       *                      flight data since it is dynamic and differences may end up reconciling on the client\n       *\n       *   Static:            The prerender has no dynamic holes and no dynamic APIs were used. We statically encode\n       *                      all server inserted HTML and flight data\n       */ // First we check if we have any dynamic holes in our HTML prerender\n            if (accessedDynamicData(dynamicTracking.dynamicAccesses)) {\n                if (postponed != null) {\n                    // Dynamic HTML case.\n                    metadata.postponed = getDynamicHTMLPostponedState(postponed, fallbackRouteParams);\n                } else {\n                    // Dynamic Data case.\n                    metadata.postponed = getDynamicDataPostponedState();\n                }\n                // Regardless of whether this is the Dynamic HTML or Dynamic Data case we need to ensure we include\n                // server inserted html in the static response because the html that is part of the prerender may depend on it\n                // It is possible in the set of stream transforms for Dynamic HTML vs Dynamic Data may differ but currently both states\n                // require the same set so we unify the code path here\n                reactServerResult.consume();\n                return {\n                    digestErrorsMap: reactServerErrorsByDigest,\n                    ssrErrors: allCapturedErrors,\n                    stream: await continueDynamicPrerender(prelude, {\n                        getServerInsertedHTML\n                    }),\n                    dynamicAccess: dynamicTracking.dynamicAccesses,\n                    // TODO: Should this include the SSR pass?\n                    collectedRevalidate: reactServerPrerenderStore.revalidate,\n                    collectedExpire: reactServerPrerenderStore.expire,\n                    collectedStale: reactServerPrerenderStore.stale,\n                    collectedTags: reactServerPrerenderStore.tags\n                };\n            } else if (fallbackRouteParams && fallbackRouteParams.size > 0) {\n                // Rendering the fallback case.\n                metadata.postponed = getDynamicDataPostponedState();\n                return {\n                    digestErrorsMap: reactServerErrorsByDigest,\n                    ssrErrors: allCapturedErrors,\n                    stream: await continueDynamicPrerender(prelude, {\n                        getServerInsertedHTML\n                    }),\n                    dynamicAccess: dynamicTracking.dynamicAccesses,\n                    // TODO: Should this include the SSR pass?\n                    collectedRevalidate: reactServerPrerenderStore.revalidate,\n                    collectedExpire: reactServerPrerenderStore.expire,\n                    collectedStale: reactServerPrerenderStore.stale,\n                    collectedTags: reactServerPrerenderStore.tags\n                };\n            } else {\n                // Static case\n                // We still have not used any dynamic APIs. At this point we can produce an entirely static prerender response\n                if (workStore.forceDynamic) {\n                    throw new StaticGenBailoutError('Invariant: a Page with `dynamic = \"force-dynamic\"` did not trigger the dynamic pathway. This is a bug in Next.js');\n                }\n                let htmlStream = prelude;\n                if (postponed != null) {\n                    // We postponed but nothing dynamic was used. We resume the render now and immediately abort it\n                    // so we can set all the postponed boundaries to client render mode before we store the HTML response\n                    const resume = require('react-dom/server.edge').resume;\n                    // We don't actually want to render anything so we just pass a stream\n                    // that never resolves. The resume call is going to abort immediately anyway\n                    const foreverStream = new ReadableStream();\n                    const resumeStream = await resume(/*#__PURE__*/ _jsx(App, {\n                        reactServerStream: foreverStream,\n                        preinitScripts: ()=>{},\n                        clientReferenceManifest: clientReferenceManifest,\n                        ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                        nonce: ctx.nonce\n                    }), JSON.parse(JSON.stringify(postponed)), {\n                        signal: createPostponedAbortSignal('static prerender resume'),\n                        onError: htmlRendererErrorHandler,\n                        nonce: ctx.nonce\n                    });\n                    // First we write everything from the prerender, then we write everything from the aborted resume render\n                    htmlStream = chainStreams(prelude, resumeStream);\n                }\n                return {\n                    digestErrorsMap: reactServerErrorsByDigest,\n                    ssrErrors: allCapturedErrors,\n                    stream: await continueStaticPrerender(htmlStream, {\n                        inlinedDataStream: createInlinedDataReadableStream(reactServerResult.consumeAsStream(), ctx.nonce, formState),\n                        getServerInsertedHTML\n                    }),\n                    dynamicAccess: dynamicTracking.dynamicAccesses,\n                    // TODO: Should this include the SSR pass?\n                    collectedRevalidate: reactServerPrerenderStore.revalidate,\n                    collectedExpire: reactServerPrerenderStore.expire,\n                    collectedStale: reactServerPrerenderStore.stale,\n                    collectedTags: reactServerPrerenderStore.tags\n                };\n            }\n        } else {\n            const prerenderLegacyStore = prerenderStore = {\n                type: 'prerender-legacy',\n                phase: 'render',\n                implicitTags: ctx.requestStore.implicitTags,\n                revalidate: INFINITE_CACHE,\n                expire: INFINITE_CACHE,\n                stale: INFINITE_CACHE,\n                tags: [\n                    ...ctx.requestStore.implicitTags\n                ]\n            };\n            // This is a regular static generation. We don't do dynamic tracking because we rely on\n            // the old-school dynamic error handling to bail out of static generation\n            const RSCPayload = await workUnitAsyncStorage.run(prerenderLegacyStore, getRSCPayload, tree, ctx, res.statusCode === 404);\n            const reactServerResult = reactServerPrerenderResult = await createReactServerPrerenderResultFromRender(workUnitAsyncStorage.run(prerenderLegacyStore, ComponentMod.renderToReadableStream, RSCPayload, clientReferenceManifest.clientModules, {\n                onError: serverComponentsErrorHandler\n            }));\n            const renderToReadableStream = require('react-dom/server.edge').renderToReadableStream;\n            const htmlStream = await workUnitAsyncStorage.run(prerenderLegacyStore, renderToReadableStream, /*#__PURE__*/ _jsx(App, {\n                reactServerStream: reactServerResult.asUnclosingStream(),\n                preinitScripts: preinitScripts,\n                clientReferenceManifest: clientReferenceManifest,\n                ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                nonce: ctx.nonce\n            }), {\n                onError: htmlRendererErrorHandler,\n                nonce: ctx.nonce,\n                // When debugging the static shell, client-side rendering should be\n                // disabled to prevent blanking out the page.\n                bootstrapScripts: renderOpts.isDebugStaticShell ? [] : [\n                    bootstrapScript\n                ]\n            });\n            if (shouldGenerateStaticFlightData(workStore)) {\n                metadata.flightData = await streamToBuffer(reactServerResult.asStream());\n            }\n            const getServerInsertedHTML = makeGetServerInsertedHTML({\n                polyfills,\n                renderServerInsertedHTML,\n                serverCapturedErrors: allCapturedErrors,\n                basePath: renderOpts.basePath,\n                tracingMetadata: tracingMetadata\n            });\n            return {\n                digestErrorsMap: reactServerErrorsByDigest,\n                ssrErrors: allCapturedErrors,\n                stream: await continueFizzStream(htmlStream, {\n                    inlinedDataStream: createInlinedDataReadableStream(reactServerResult.consumeAsStream(), ctx.nonce, formState),\n                    isStaticGeneration: true,\n                    getServerInsertedHTML,\n                    serverInsertedHTMLToHead: true\n                }),\n                // TODO: Should this include the SSR pass?\n                collectedRevalidate: prerenderLegacyStore.revalidate,\n                collectedExpire: prerenderLegacyStore.expire,\n                collectedStale: prerenderLegacyStore.stale,\n                collectedTags: prerenderLegacyStore.tags\n            };\n        }\n    } catch (err) {\n        if (isStaticGenBailoutError(err) || typeof err === 'object' && err !== null && 'message' in err && typeof err.message === 'string' && err.message.includes('https://nextjs.org/docs/advanced-features/static-html-export')) {\n            // Ensure that \"next dev\" prints the red error overlay\n            throw err;\n        }\n        // If this is a static generation error, we need to throw it so that it\n        // can be handled by the caller if we're in static generation mode.\n        if (isDynamicServerError(err)) {\n            throw err;\n        }\n        // If a bailout made it to this point, it means it wasn't wrapped inside\n        // a suspense boundary.\n        const shouldBailoutToCSR = isBailoutToCSRError(err);\n        if (shouldBailoutToCSR) {\n            const stack = getStackWithoutErrorMessage(err);\n            error(`${err.reason} should be wrapped in a suspense boundary at page \"${ctx.pagePath}\". Read more: https://nextjs.org/docs/messages/missing-suspense-with-csr-bailout\\n${stack}`);\n            throw err;\n        }\n        // If we errored when we did not have an RSC stream to read from. This is\n        // not just a render error, we need to throw early.\n        if (reactServerPrerenderResult === null) {\n            throw err;\n        }\n        let errorType;\n        if (isNotFoundError(err)) {\n            errorType = 'not-found';\n            res.statusCode = 404;\n        } else if (isRedirectError(err)) {\n            errorType = 'redirect';\n            res.statusCode = getRedirectStatusCodeFromError(err);\n            const redirectUrl = addPathPrefix(getURLFromRedirectError(err), renderOpts.basePath);\n            // If there were mutable cookies set, we need to set them on the\n            // response.\n            const headers = new Headers();\n            if (appendMutableCookies(headers, ctx.requestStore.mutableCookies)) {\n                setHeader('set-cookie', Array.from(headers.values()));\n            }\n            setHeader('location', redirectUrl);\n        } else if (!shouldBailoutToCSR) {\n            res.statusCode = 500;\n        }\n        const [errorPreinitScripts, errorBootstrapScript] = getRequiredScripts(renderOpts.buildManifest, ctx.assetPrefix, renderOpts.crossOrigin, renderOpts.subresourceIntegrityManifest, getAssetQueryString(ctx, false), ctx.nonce, '/_not-found/page');\n        const prerenderLegacyStore = prerenderStore = {\n            type: 'prerender-legacy',\n            phase: 'render',\n            implicitTags: ctx.requestStore.implicitTags,\n            revalidate: INFINITE_CACHE,\n            expire: INFINITE_CACHE,\n            stale: INFINITE_CACHE,\n            tags: [\n                ...ctx.requestStore.implicitTags\n            ]\n        };\n        const errorRSCPayload = await workUnitAsyncStorage.run(prerenderLegacyStore, getErrorRSCPayload, tree, ctx, errorType);\n        const errorServerStream = workUnitAsyncStorage.run(prerenderLegacyStore, ComponentMod.renderToReadableStream, errorRSCPayload, clientReferenceManifest.clientModules, {\n            onError: serverComponentsErrorHandler\n        });\n        try {\n            const fizzStream = await renderToInitialFizzStream({\n                ReactDOMServer: require('react-dom/server.edge'),\n                element: /*#__PURE__*/ _jsx(AppWithoutContext, {\n                    reactServerStream: errorServerStream,\n                    preinitScripts: errorPreinitScripts,\n                    clientReferenceManifest: clientReferenceManifest,\n                    nonce: ctx.nonce\n                }),\n                streamOptions: {\n                    nonce: ctx.nonce,\n                    // Include hydration scripts in the HTML\n                    bootstrapScripts: [\n                        errorBootstrapScript\n                    ],\n                    formState\n                }\n            });\n            if (shouldGenerateStaticFlightData(workStore)) {\n                metadata.flightData = await streamToBuffer(reactServerPrerenderResult.asStream());\n            }\n            const validateRootLayout = renderOpts.dev;\n            return {\n                // Returning the error that was thrown so it can be used to handle\n                // the response in the caller.\n                digestErrorsMap: reactServerErrorsByDigest,\n                ssrErrors: allCapturedErrors,\n                stream: await continueFizzStream(fizzStream, {\n                    inlinedDataStream: createInlinedDataReadableStream(// This is intentionally using the readable datastream from the\n                    // main render rather than the flight data from the error page\n                    // render\n                    reactServerPrerenderResult.consumeAsStream(), ctx.nonce, formState),\n                    isStaticGeneration: true,\n                    getServerInsertedHTML: makeGetServerInsertedHTML({\n                        polyfills,\n                        renderServerInsertedHTML,\n                        serverCapturedErrors: [],\n                        basePath: renderOpts.basePath,\n                        tracingMetadata: tracingMetadata\n                    }),\n                    serverInsertedHTMLToHead: true,\n                    validateRootLayout\n                }),\n                dynamicAccess: null,\n                collectedRevalidate: prerenderStore !== null ? prerenderStore.revalidate : INFINITE_CACHE,\n                collectedExpire: prerenderStore !== null ? prerenderStore.expire : INFINITE_CACHE,\n                collectedStale: prerenderStore !== null ? prerenderStore.stale : INFINITE_CACHE,\n                collectedTags: prerenderStore !== null ? prerenderStore.tags : null\n            };\n        } catch (finalErr) {\n            if (process.env.NODE_ENV === 'development' && isNotFoundError(finalErr)) {\n                const bailOnNotFound = require('../../client/components/dev-root-not-found-boundary').bailOnNotFound;\n                bailOnNotFound();\n            }\n            throw finalErr;\n        }\n    }\n}\nconst loadingChunks = new Set();\nconst chunkListeners = [];\nfunction trackChunkLoading(load) {\n    loadingChunks.add(load);\n    load.finally(()=>{\n        if (loadingChunks.has(load)) {\n            loadingChunks.delete(load);\n            if (loadingChunks.size === 0) {\n                // We are not currently loading any chunks. We can notify all listeners\n                for(let i = 0; i < chunkListeners.length; i++){\n                    chunkListeners[i]();\n                }\n                chunkListeners.length = 0;\n            }\n        }\n    });\n}\nexport async function warmFlightResponse(flightStream, clientReferenceManifest) {\n    let createFromReadableStream;\n    if (process.env.TURBOPACK) {\n        createFromReadableStream = // eslint-disable-next-line import/no-extraneous-dependencies\n        require('react-server-dom-turbopack/client.edge').createFromReadableStream;\n    } else {\n        createFromReadableStream = // eslint-disable-next-line import/no-extraneous-dependencies\n        require('react-server-dom-webpack/client.edge').createFromReadableStream;\n    }\n    try {\n        createFromReadableStream(flightStream, {\n            serverConsumerManifest: {\n                moduleLoading: clientReferenceManifest.moduleLoading,\n                moduleMap: clientReferenceManifest.ssrModuleMapping,\n                serverModuleMap: null\n            }\n        });\n    } catch  {\n    // We don't want to handle errors here but we don't want it to\n    // interrupt the outer flow. We simply ignore it here and expect\n    // it will bubble up during a render\n    }\n    // We'll wait at least one task and then if no chunks have started to load\n    // we'll we can infer that there are none to load from this flight response\n    trackChunkLoading(waitAtLeastOneReactRenderTask());\n    return new Promise((r)=>{\n        chunkListeners.push(r);\n    });\n}\nconst getGlobalErrorStyles = async (tree, ctx)=>{\n    const { modules: { 'global-error': globalErrorModule } } = parseLoaderTree(tree);\n    let globalErrorStyles;\n    if (globalErrorModule) {\n        const [, styles] = await createComponentStylesAndScripts({\n            ctx,\n            filePath: globalErrorModule[1],\n            getComponent: globalErrorModule[0],\n            injectedCSS: new Set(),\n            injectedJS: new Set()\n        });\n        globalErrorStyles = styles;\n    }\n    return globalErrorStyles;\n};\n\n//# sourceMappingURL=app-render.js.map","const sharedAsyncLocalStorageNotAvailableError = new Error('Invariant: AsyncLocalStorage accessed in runtime where it is not available');\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    static bind(fn) {\n        return fn;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = typeof globalThis !== 'undefined' && globalThis.AsyncLocalStorage;\nexport function createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n}\nexport function bindSnapshot(fn) {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.bind(fn);\n    }\n    return FakeAsyncLocalStorage.bind(fn);\n}\nexport function createSnapshot() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.snapshot();\n    }\n    return function(fn, ...args) {\n        return fn(...args);\n    };\n}\n\n//# sourceMappingURL=async-local-storage.js.map","/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */ // Once postpone is in stable we should switch to importing the postpone export directly\nimport React from 'react';\nimport { DynamicServerError } from '../../client/components/hooks-server-context';\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout';\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { METADATA_BOUNDARY_NAME, VIEWPORT_BOUNDARY_NAME, OUTLET_BOUNDARY_NAME } from '../../lib/metadata/metadata-constants';\nconst hasPostpone = typeof React.unstable_postpone === 'function';\nexport function createDynamicTrackingState(isDebugDynamicAccesses) {\n    return {\n        isDebugDynamicAccesses,\n        dynamicAccesses: [],\n        syncDynamicExpression: undefined,\n        syncDynamicErrorWithStack: null\n    };\n}\nexport function createDynamicValidationState() {\n    return {\n        hasSuspendedDynamic: false,\n        hasDynamicMetadata: false,\n        hasDynamicViewport: false,\n        hasSyncDynamicErrors: false,\n        dynamicErrors: []\n    };\n}\nexport function getFirstDynamicReason(trackingState) {\n    var _trackingState_dynamicAccesses_;\n    return (_trackingState_dynamicAccesses_ = trackingState.dynamicAccesses[0]) == null ? void 0 : _trackingState_dynamicAccesses_.expression;\n}\n/**\n * This function communicates that the current scope should be treated as dynamic.\n *\n * In most cases this function is a no-op but if called during\n * a PPR prerender it will postpone the current sub-tree and calling\n * it during a normal prerender will cause the entire prerender to abort\n */ export function markCurrentScopeAsDynamic(store, workUnitStore, expression) {\n    if (workUnitStore) {\n        if (workUnitStore.type === 'cache' || workUnitStore.type === 'unstable-cache') {\n            // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n            // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n            // forbidden inside a cache scope.\n            return;\n        }\n    }\n    // If we're forcing dynamic rendering or we're forcing static rendering, we\n    // don't need to do anything here because the entire page is already dynamic\n    // or it's static and it should not throw or postpone here.\n    if (store.forceDynamic || store.forceStatic) return;\n    if (store.dynamicShouldError) {\n        throw new StaticGenBailoutError(`Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`);\n    }\n    if (workUnitStore) {\n        if (workUnitStore.type === 'prerender-ppr') {\n            postponeWithTracking(store.route, expression, workUnitStore.dynamicTracking);\n        } else if (workUnitStore.type === 'prerender-legacy') {\n            workUnitStore.revalidate = 0;\n            // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n            const err = new DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`);\n            store.dynamicUsageDescription = expression;\n            store.dynamicUsageStack = err.stack;\n            throw err;\n        } else if (process.env.NODE_ENV === 'development' && workUnitStore && workUnitStore.type === 'request') {\n            workUnitStore.usedDynamic = true;\n        }\n    }\n}\n/**\n * This function communicates that some dynamic path parameter was read. This\n * differs from the more general `trackDynamicDataAccessed` in that it is will\n * not error when `dynamic = \"error\"` is set.\n *\n * @param store The static generation store\n * @param expression The expression that was accessed dynamically\n */ export function trackFallbackParamAccessed(store, expression) {\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    if (!prerenderStore || prerenderStore.type !== 'prerender-ppr') return;\n    postponeWithTracking(store.route, expression, prerenderStore.dynamicTracking);\n}\n/**\n * This function is meant to be used when prerendering without dynamicIO or PPR.\n * When called during a build it will cause Next.js to consider the route as dynamic.\n *\n * @internal\n */ export function throwToInterruptStaticGeneration(expression, store, prerenderStore) {\n    // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n    const err = new DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`);\n    prerenderStore.revalidate = 0;\n    store.dynamicUsageDescription = expression;\n    store.dynamicUsageStack = err.stack;\n    throw err;\n}\n/**\n * This function should be used to track whether something dynamic happened even when\n * we are in a dynamic render. This is useful for Dev where all renders are dynamic but\n * we still track whether dynamic APIs were accessed for helpful messaging\n *\n * @internal\n */ export function trackDynamicDataInDynamicRender(_store, workUnitStore) {\n    if (workUnitStore) {\n        if (workUnitStore.type === 'cache' || workUnitStore.type === 'unstable-cache') {\n            // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n            // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n            // forbidden inside a cache scope.\n            return;\n        }\n        if (workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-legacy') {\n            workUnitStore.revalidate = 0;\n        }\n        if (process.env.NODE_ENV === 'development' && workUnitStore.type === 'request') {\n            workUnitStore.usedDynamic = true;\n        }\n    }\n}\n// Despite it's name we don't actually abort unless we have a controller to call abort on\n// There are times when we let a prerender run long to discover caches where we want the semantics\n// of tracking dynamic access without terminating the prerender early\nfunction abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore) {\n    const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`;\n    const error = createPrerenderInterruptedError(reason);\n    if (prerenderStore.controller) {\n        prerenderStore.controller.abort(error);\n    }\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            // When we aren't debugging, we don't need to create another error for the\n            // stack trace.\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n}\nexport function abortOnSynchronousPlatformIOAccess(route, expression, errorWithStack, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        if (dynamicTracking.syncDynamicErrorWithStack === null) {\n            dynamicTracking.syncDynamicExpression = expression;\n            dynamicTracking.syncDynamicErrorWithStack = errorWithStack;\n        }\n    }\n    return abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore);\n}\nexport function trackSynchronousPlatformIOAccessInDev(requestStore) {\n    // We don't actually have a controller to abort but we do the semantic equivalent by\n    // advancing the request store out of prerender mode\n    requestStore.prerenderPhase = false;\n}\n/**\n * use this function when prerendering with dynamicIO. If we are doing a\n * prospective prerender we don't actually abort because we want to discover\n * all caches for the shell. If this is the actual prerender we do abort.\n *\n * This function accepts a prerenderStore but the caller should ensure we're\n * actually running in dynamicIO mode.\n *\n * @internal\n */ export function abortAndThrowOnSynchronousRequestDataAccess(route, expression, errorWithStack, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        if (dynamicTracking.syncDynamicErrorWithStack === null) {\n            dynamicTracking.syncDynamicExpression = expression;\n            dynamicTracking.syncDynamicErrorWithStack = errorWithStack;\n            if (prerenderStore.validating === true) {\n                // We always log Request Access in dev at the point of calling the function\n                // So we mark the dynamic validation as not requiring it to be printed\n                dynamicTracking.syncDynamicLogged = true;\n            }\n        }\n    }\n    abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore);\n    throw createPrerenderInterruptedError(`Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`);\n}\n// For now these implementations are the same so we just reexport\nexport const trackSynchronousRequestDataAccessInDev = trackSynchronousPlatformIOAccessInDev;\nexport function Postpone({ reason, route }) {\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    const dynamicTracking = prerenderStore && prerenderStore.type === 'prerender-ppr' ? prerenderStore.dynamicTracking : null;\n    postponeWithTracking(route, reason, dynamicTracking);\n}\nexport function postponeWithTracking(route, expression, dynamicTracking) {\n    assertPostpone();\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            // When we aren't debugging, we don't need to create another error for the\n            // stack trace.\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n    React.unstable_postpone(createPostponeReason(route, expression));\n}\nfunction createPostponeReason(route, expression) {\n    return `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` + `React throws this special object to indicate where. It should not be caught by ` + `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`;\n}\nexport function isDynamicPostpone(err) {\n    if (typeof err === 'object' && err !== null && typeof err.message === 'string') {\n        return isDynamicPostponeReason(err.message);\n    }\n    return false;\n}\nfunction isDynamicPostponeReason(reason) {\n    return reason.includes('needs to bail out of prerendering at this point because it used') && reason.includes('Learn more: https://nextjs.org/docs/messages/ppr-caught-error');\n}\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n    throw new Error('Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js');\n}\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED';\nfunction createPrerenderInterruptedError(message) {\n    const error = new Error(message);\n    error.digest = NEXT_PRERENDER_INTERRUPTED;\n    return error;\n}\nexport function isPrerenderInterruptedError(error) {\n    return typeof error === 'object' && error !== null && error.digest === NEXT_PRERENDER_INTERRUPTED && 'name' in error && 'message' in error && error instanceof Error;\n}\nexport function accessedDynamicData(dynamicAccesses) {\n    return dynamicAccesses.length > 0;\n}\nexport function consumeDynamicAccess(serverDynamic, clientDynamic) {\n    // We mutate because we only call this once we are no longer writing\n    // to the dynamicTrackingState and it's more efficient than creating a new\n    // array.\n    serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses);\n    return serverDynamic.dynamicAccesses;\n}\nexport function formatDynamicAPIAccesses(dynamicAccesses) {\n    return dynamicAccesses.filter((access)=>typeof access.stack === 'string' && access.stack.length > 0).map(({ expression, stack })=>{\n        stack = stack.split('\\n')// Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4).filter((line)=>{\n            // Exclude Next.js internals from the stack trace.\n            if (line.includes('node_modules/next/')) {\n                return false;\n            }\n            // Exclude anonymous functions from the stack trace.\n            if (line.includes(' (<anonymous>)')) {\n                return false;\n            }\n            // Exclude Node.js internals from the stack trace.\n            if (line.includes(' (node:')) {\n                return false;\n            }\n            return true;\n        }).join('\\n');\n        return `Dynamic API Usage Debug - ${expression}:\\n${stack}`;\n    });\n}\nfunction assertPostpone() {\n    if (!hasPostpone) {\n        throw new Error(`Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`);\n    }\n}\n/**\n * This is a bit of a hack to allow us to abort a render using a Postpone instance instead of an Error which changes React's\n * abort semantics slightly.\n */ export function createPostponedAbortSignal(reason) {\n    assertPostpone();\n    const controller = new AbortController();\n    // We get our hands on a postpone instance by calling postpone and catching the throw\n    try {\n        React.unstable_postpone(reason);\n    } catch (x) {\n        controller.abort(x);\n    }\n    return controller.signal;\n}\nexport function annotateDynamicAccess(expression, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n}\nexport function useDynamicRouteParams(expression) {\n    if (typeof window === 'undefined') {\n        const workStore = workAsyncStorage.getStore();\n        if (workStore && workStore.isStaticGeneration && workStore.fallbackRouteParams && workStore.fallbackRouteParams.size > 0) {\n            // There are fallback route params, we should track these as dynamic\n            // accesses.\n            const workUnitStore = workUnitAsyncStorage.getStore();\n            if (workUnitStore) {\n                // We're prerendering with dynamicIO or PPR or both\n                if (workUnitStore.type === 'prerender') {\n                    // We are in a prerender with dynamicIO semantics\n                    // We are going to hang here and never resolve. This will cause the currently\n                    // rendering component to effectively be a dynamic hole\n                    React.use(makeHangingPromise(workUnitStore.renderSignal, expression));\n                } else if (workUnitStore.type === 'prerender-ppr') {\n                    // We're prerendering with PPR\n                    postponeWithTracking(workStore.route, expression, workUnitStore.dynamicTracking);\n                } else if (workUnitStore.type === 'prerender-legacy') {\n                    throwToInterruptStaticGeneration(expression, workStore, workUnitStore);\n                }\n            }\n        }\n    }\n}\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/;\nconst hasMetadataRegex = new RegExp(`\\\\n\\\\s+at ${METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`);\nconst hasViewportRegex = new RegExp(`\\\\n\\\\s+at ${VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`);\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`);\nexport function trackAllowedDynamicAccess(route, componentStack, dynamicValidation, serverDynamic, clientDynamic) {\n    if (hasOutletRegex.test(componentStack)) {\n        // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n        return;\n    } else if (hasMetadataRegex.test(componentStack)) {\n        dynamicValidation.hasDynamicMetadata = true;\n        return;\n    } else if (hasViewportRegex.test(componentStack)) {\n        dynamicValidation.hasDynamicViewport = true;\n        return;\n    } else if (hasSuspenseRegex.test(componentStack)) {\n        dynamicValidation.hasSuspendedDynamic = true;\n        return;\n    } else if (serverDynamic.syncDynamicErrorWithStack || clientDynamic.syncDynamicErrorWithStack) {\n        dynamicValidation.hasSyncDynamicErrors = true;\n        return;\n    } else {\n        const message = `Route \"${route}\": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a \"use cache\" above it. We don't have the exact line number added to error messages yet but you can see which component in the stack below. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense`;\n        const error = createErrorWithComponentStack(message, componentStack);\n        dynamicValidation.dynamicErrors.push(error);\n        return;\n    }\n}\nfunction createErrorWithComponentStack(message, componentStack) {\n    const error = new Error(message);\n    error.stack = 'Error: ' + message + componentStack;\n    return error;\n}\nexport function throwIfDisallowedDynamic(route, dynamicValidation, serverDynamic, clientDynamic) {\n    let syncError;\n    let syncExpression;\n    let syncLogged;\n    if (serverDynamic.syncDynamicErrorWithStack) {\n        syncError = serverDynamic.syncDynamicErrorWithStack;\n        syncExpression = serverDynamic.syncDynamicExpression;\n        syncLogged = serverDynamic.syncDynamicLogged === true;\n    } else if (clientDynamic.syncDynamicErrorWithStack) {\n        syncError = clientDynamic.syncDynamicErrorWithStack;\n        syncExpression = clientDynamic.syncDynamicExpression;\n        syncLogged = clientDynamic.syncDynamicLogged === true;\n    } else {\n        syncError = null;\n        syncExpression = undefined;\n        syncLogged = false;\n    }\n    if (dynamicValidation.hasSyncDynamicErrors && syncError) {\n        if (!syncLogged) {\n            // In dev we already log errors about sync dynamic access. But during builds we need to ensure\n            // the offending sync error is logged before we exit the build\n            console.error(syncError);\n        }\n        // The actual error should have been logged when the sync access ocurred\n        throw new StaticGenBailoutError();\n    }\n    const dynamicErrors = dynamicValidation.dynamicErrors;\n    if (dynamicErrors.length) {\n        for(let i = 0; i < dynamicErrors.length; i++){\n            console.error(dynamicErrors[i]);\n        }\n        throw new StaticGenBailoutError();\n    }\n    if (!dynamicValidation.hasSuspendedDynamic) {\n        if (dynamicValidation.hasDynamicMetadata) {\n            if (syncError) {\n                console.error(syncError);\n                throw new StaticGenBailoutError(`Route \"${route}\" has a \\`generateMetadata\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`);\n            }\n            throw new StaticGenBailoutError(`Route \"${route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateMetadata\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`);\n        } else if (dynamicValidation.hasDynamicViewport) {\n            if (syncError) {\n                console.error(syncError);\n                throw new StaticGenBailoutError(`Route \"${route}\" has a \\`generateViewport\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`);\n            }\n            throw new StaticGenBailoutError(`Route \"${route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateViewport\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`);\n        }\n    }\n}\n\n//# sourceMappingURL=dynamic-rendering.js.map","import type { ActionManifest } from '../../build/webpack/plugins/flight-client-entry-plugin'\nimport type {\n  ClientReferenceManifest,\n  ClientReferenceManifestForRsc,\n} from '../../build/webpack/plugins/flight-manifest-plugin'\nimport type { DeepReadonly } from '../../shared/lib/deep-readonly'\nimport { InvariantError } from '../../shared/lib/invariant-error'\nimport { workAsyncStorage } from './work-async-storage.external'\n\nlet __next_loaded_action_key: CryptoKey\n\nexport function arrayBufferToString(buffer: ArrayBuffer) {\n  const bytes = new Uint8Array(buffer)\n  const len = bytes.byteLength\n\n  // @anonrig: V8 has a limit of 65535 arguments in a function.\n  // For len < 65535, this is faster.\n  // https://github.com/vercel/next.js/pull/56377#pullrequestreview-1656181623\n  if (len < 65535) {\n    return String.fromCharCode.apply(null, bytes as unknown as number[])\n  }\n\n  let binary = ''\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i])\n  }\n  return binary\n}\n\nexport function stringToUint8Array(binary: string) {\n  const len = binary.length\n  const arr = new Uint8Array(len)\n\n  for (let i = 0; i < len; i++) {\n    arr[i] = binary.charCodeAt(i)\n  }\n\n  return arr\n}\n\nexport function encrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array) {\n  return crypto.subtle.encrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    data\n  )\n}\n\nexport function decrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array) {\n  return crypto.subtle.decrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    data\n  )\n}\n\n// This is a global singleton that is used to encode/decode the action bound args from\n// the closure. This can't be using a AsyncLocalStorage as it might happen on the module\n// level. Since the client reference manifest won't be mutated, let's use a global singleton\n// to keep it.\nconst SERVER_ACTION_MANIFESTS_SINGLETON = Symbol.for(\n  'next.server.action-manifests'\n)\n\nexport function setReferenceManifestsSingleton({\n  page,\n  clientReferenceManifest,\n  serverActionsManifest,\n  serverModuleMap,\n}: {\n  page: string\n  clientReferenceManifest: DeepReadonly<ClientReferenceManifest>\n  serverActionsManifest: DeepReadonly<ActionManifest>\n  serverModuleMap: {\n    [id: string]: {\n      id: string\n      chunks: string[]\n      name: string\n    }\n  }\n}) {\n  // @ts-expect-error\n  const clientReferenceManifestsPerPage = globalThis[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ]?.clientReferenceManifestsPerPage as\n    | undefined\n    | DeepReadonly<Record<string, ClientReferenceManifest>>\n\n  // @ts-expect-error\n  globalThis[SERVER_ACTION_MANIFESTS_SINGLETON] = {\n    clientReferenceManifestsPerPage: {\n      ...clientReferenceManifestsPerPage,\n      [normalizePage(page)]: clientReferenceManifest,\n    },\n    serverActionsManifest,\n    serverModuleMap,\n  }\n}\n\nexport function getServerModuleMap() {\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    serverModuleMap: {\n      [id: string]: {\n        id: string\n        chunks: string[]\n        name: string\n      }\n    }\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  return serverActionsManifestSingleton.serverModuleMap\n}\n\nexport function getClientReferenceManifestForRsc(): DeepReadonly<ClientReferenceManifestForRsc> {\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    clientReferenceManifestsPerPage: DeepReadonly<\n      Record<string, ClientReferenceManifest>\n    >\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  const { clientReferenceManifestsPerPage } = serverActionsManifestSingleton\n  const workStore = workAsyncStorage.getStore()\n\n  if (!workStore) {\n    // If there's no work store defined, we can assume that a client reference\n    // manifest is needed during module evaluation, e.g. to create a server\n    // action using a higher-order function. This might also use client\n    // components which need to be serialized by Flight, and therefore client\n    // references need to be resolvable. To make this work, we're returning a\n    // merged manifest across all pages. This is fine as long as the module IDs\n    // are not page specific, which they are not for Webpack. TODO: Fix this in\n    // Turbopack.\n    return mergeClientReferenceManifests(clientReferenceManifestsPerPage)\n  }\n\n  const page = normalizePage(workStore.page)\n\n  const clientReferenceManifest = clientReferenceManifestsPerPage[page]\n\n  if (!clientReferenceManifest) {\n    throw new InvariantError(`Missing Client Reference Manifest for ${page}.`)\n  }\n\n  return clientReferenceManifest\n}\n\nexport async function getActionEncryptionKey() {\n  if (__next_loaded_action_key) {\n    return __next_loaded_action_key\n  }\n\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    serverActionsManifest: DeepReadonly<ActionManifest>\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  const rawKey =\n    process.env.NEXT_SERVER_ACTIONS_ENCRYPTION_KEY ||\n    serverActionsManifestSingleton.serverActionsManifest.encryptionKey\n\n  if (rawKey === undefined) {\n    throw new InvariantError('Missing encryption key for Server Actions')\n  }\n\n  __next_loaded_action_key = await crypto.subtle.importKey(\n    'raw',\n    stringToUint8Array(atob(rawKey)),\n    'AES-GCM',\n    true,\n    ['encrypt', 'decrypt']\n  )\n\n  return __next_loaded_action_key\n}\n\nfunction normalizePage(page: string): string {\n  return page.replace(/\\/(page|route)$/, '')\n}\n\nfunction mergeClientReferenceManifests(\n  clientReferenceManifestsPerPage: DeepReadonly<\n    Record<string, ClientReferenceManifest>\n  >\n): ClientReferenceManifestForRsc {\n  const clientReferenceManifests = Object.values(\n    clientReferenceManifestsPerPage as Record<string, ClientReferenceManifest>\n  )\n\n  const mergedClientReferenceManifest: ClientReferenceManifestForRsc = {\n    clientModules: {},\n    edgeRscModuleMapping: {},\n    rscModuleMapping: {},\n  }\n\n  for (const clientReferenceManifest of clientReferenceManifests) {\n    mergedClientReferenceManifest.clientModules = {\n      ...mergedClientReferenceManifest.clientModules,\n      ...clientReferenceManifest.clientModules,\n    }\n    mergedClientReferenceManifest.edgeRscModuleMapping = {\n      ...mergedClientReferenceManifest.edgeRscModuleMapping,\n      ...clientReferenceManifest.edgeRscModuleMapping,\n    }\n    mergedClientReferenceManifest.rscModuleMapping = {\n      ...mergedClientReferenceManifest.rscModuleMapping,\n      ...clientReferenceManifest.rscModuleMapping,\n    }\n  }\n\n  return mergedClientReferenceManifest\n}\n","import { INTERCEPTION_ROUTE_MARKERS } from '../lib/interception-routes';\n/**\n * Parse dynamic route segment to type of parameter\n */ export function getSegmentParam(segment) {\n    const interceptionMarker = INTERCEPTION_ROUTE_MARKERS.find((marker)=>segment.startsWith(marker));\n    // if an interception marker is part of the path segment, we need to jump ahead\n    // to the relevant portion for param parsing\n    if (interceptionMarker) {\n        segment = segment.slice(interceptionMarker.length);\n    }\n    if (segment.startsWith('[[...') && segment.endsWith(']]')) {\n        return {\n            // TODO-APP: Optional catchall does not currently work with parallel routes,\n            // so for now aren't handling a potential interception marker.\n            type: 'optional-catchall',\n            param: segment.slice(5, -2)\n        };\n    }\n    if (segment.startsWith('[...') && segment.endsWith(']')) {\n        return {\n            type: interceptionMarker ? 'catchall-intercepted' : 'catchall',\n            param: segment.slice(4, -1)\n        };\n    }\n    if (segment.startsWith('[') && segment.endsWith(']')) {\n        return {\n            type: interceptionMarker ? 'dynamic-intercepted' : 'dynamic',\n            param: segment.slice(1, -1)\n        };\n    }\n    return null;\n}\n\n//# sourceMappingURL=get-segment-param.js.map","import { COOKIE_NAME_PRERENDER_BYPASS, checkIsOnDemandRevalidate } from '../api-utils';\nexport class DraftModeProvider {\n    constructor(previewProps, req, cookies, mutableCookies){\n        var _cookies_get;\n        // The logic for draftMode() is very similar to tryGetPreviewData()\n        // but Draft Mode does not have any data associated with it.\n        const isOnDemandRevalidate = previewProps && checkIsOnDemandRevalidate(req, previewProps).isOnDemandRevalidate;\n        const cookieValue = (_cookies_get = cookies.get(COOKIE_NAME_PRERENDER_BYPASS)) == null ? void 0 : _cookies_get.value;\n        this.isEnabled = Boolean(!isOnDemandRevalidate && cookieValue && previewProps && (cookieValue === previewProps.previewModeId || // In dev mode, the cookie can be actual hash value preview id but the preview props can still be `development-id`.\n        process.env.NODE_ENV !== 'production' && previewProps.previewModeId === 'development-id'));\n        this._previewModeId = previewProps == null ? void 0 : previewProps.previewModeId;\n        this._mutableCookies = mutableCookies;\n    }\n    enable() {\n        if (!this._previewModeId) {\n            throw new Error('Invariant: previewProps missing previewModeId this should never happen');\n        }\n        this._mutableCookies.set({\n            name: COOKIE_NAME_PRERENDER_BYPASS,\n            value: this._previewModeId,\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/'\n        });\n    }\n    disable() {\n        // To delete a cookie, set `expires` to a date in the past:\n        // https://tools.ietf.org/html/rfc6265#section-4.1.1\n        // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n        this._mutableCookies.set({\n            name: COOKIE_NAME_PRERENDER_BYPASS,\n            value: '',\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/',\n            expires: new Date(0)\n        });\n    }\n}\n\n//# sourceMappingURL=draft-mode-provider.js.map","import { FLIGHT_HEADERS } from '../../client/components/app-router-headers';\nimport { HeadersAdapter } from '../web/spec-extension/adapters/headers';\nimport { MutableRequestCookiesAdapter, RequestCookiesAdapter, responseCookiesToRequestCookies, wrapWithMutableAccessCheck } from '../web/spec-extension/adapters/request-cookies';\nimport { ResponseCookies, RequestCookies } from '../web/spec-extension/cookies';\nimport { DraftModeProvider } from './draft-mode-provider';\nimport { splitCookiesString } from '../web/utils';\nfunction getHeaders(headers) {\n    const cleaned = HeadersAdapter.from(headers);\n    for (const header of FLIGHT_HEADERS){\n        cleaned.delete(header.toLowerCase());\n    }\n    return HeadersAdapter.seal(cleaned);\n}\nfunction getMutableCookies(headers, onUpdateCookies) {\n    const cookies = new RequestCookies(HeadersAdapter.from(headers));\n    return MutableRequestCookiesAdapter.wrap(cookies, onUpdateCookies);\n}\n/**\n * If middleware set cookies in this request (indicated by `x-middleware-set-cookie`),\n * then merge those into the existing cookie object, so that when `cookies()` is accessed\n * it's able to read the newly set cookies.\n */ function mergeMiddlewareCookies(req, existingCookies) {\n    if ('x-middleware-set-cookie' in req.headers && typeof req.headers['x-middleware-set-cookie'] === 'string') {\n        const setCookieValue = req.headers['x-middleware-set-cookie'];\n        const responseHeaders = new Headers();\n        for (const cookie of splitCookiesString(setCookieValue)){\n            responseHeaders.append('set-cookie', cookie);\n        }\n        const responseCookies = new ResponseCookies(responseHeaders);\n        // Transfer cookies from ResponseCookies to RequestCookies\n        for (const cookie of responseCookies.getAll()){\n            existingCookies.set(cookie);\n        }\n    }\n}\nexport function createRequestStoreForRender(req, res, url, implicitTags, onUpdateCookies, previewProps, isHmrRefresh, serverComponentsHmrCache) {\n    return createRequestStoreImpl(// Pages start in render phase by default\n    'render', req, res, url, implicitTags, onUpdateCookies, previewProps, isHmrRefresh, serverComponentsHmrCache);\n}\nexport function createRequestStoreForAPI(req, url, implicitTags, onUpdateCookies, previewProps) {\n    return createRequestStoreImpl(// API routes start in action phase by default\n    'action', req, undefined, url, implicitTags, onUpdateCookies, previewProps, false, undefined);\n}\nfunction createRequestStoreImpl(phase, req, res, url, implicitTags, onUpdateCookies, previewProps, isHmrRefresh, serverComponentsHmrCache) {\n    function defaultOnUpdateCookies(cookies) {\n        if (res) {\n            res.setHeader('Set-Cookie', cookies);\n        }\n    }\n    const cache = {};\n    return {\n        type: 'request',\n        phase,\n        implicitTags: implicitTags ?? [],\n        // Rather than just using the whole `url` here, we pull the parts we want\n        // to ensure we don't use parts of the URL that we shouldn't. This also\n        // lets us avoid requiring an empty string for `search` in the type.\n        url: {\n            pathname: url.pathname,\n            search: url.search ?? ''\n        },\n        get headers () {\n            if (!cache.headers) {\n                // Seal the headers object that'll freeze out any methods that could\n                // mutate the underlying data.\n                cache.headers = getHeaders(req.headers);\n            }\n            return cache.headers;\n        },\n        get cookies () {\n            if (!cache.cookies) {\n                // if middleware is setting cookie(s), then include those in\n                // the initial cached cookies so they can be read in render\n                const requestCookies = new RequestCookies(HeadersAdapter.from(req.headers));\n                mergeMiddlewareCookies(req, requestCookies);\n                // Seal the cookies object that'll freeze out any methods that could\n                // mutate the underlying data.\n                cache.cookies = RequestCookiesAdapter.seal(requestCookies);\n            }\n            return cache.cookies;\n        },\n        set cookies (value){\n            cache.cookies = value;\n        },\n        get mutableCookies () {\n            if (!cache.mutableCookies) {\n                const mutableCookies = getMutableCookies(req.headers, onUpdateCookies || (res ? defaultOnUpdateCookies : undefined));\n                mergeMiddlewareCookies(req, mutableCookies);\n                cache.mutableCookies = mutableCookies;\n            }\n            return cache.mutableCookies;\n        },\n        get userspaceMutableCookies () {\n            if (!cache.userspaceMutableCookies) {\n                const userspaceMutableCookies = wrapWithMutableAccessCheck(this.mutableCookies);\n                cache.userspaceMutableCookies = userspaceMutableCookies;\n            }\n            return cache.userspaceMutableCookies;\n        },\n        get draftMode () {\n            if (!cache.draftMode) {\n                cache.draftMode = new DraftModeProvider(previewProps, req, this.cookies, this.mutableCookies);\n            }\n            return cache.draftMode;\n        },\n        isHmrRefresh,\n        serverComponentsHmrCache: serverComponentsHmrCache || globalThis.__serverComponentsHmrCache\n    };\n}\nexport function synchronizeMutableCookies(store) {\n    // TODO: does this need to update headers as well?\n    store.cookies = RequestCookiesAdapter.seal(responseCookiesToRequestCookies(store.mutableCookies));\n}\n\n//# sourceMappingURL=request-store.js.map","/** Run a callback, and execute any *new* revalidations added during its runtime. */ export async function withExecuteRevalidates(store, callback) {\n    if (!store) {\n        return callback();\n    }\n    // If we executed any revalidates during the request, then we don't want to execute them again.\n    // save the state so we can check if anything changed after we're done running callbacks.\n    const savedRevalidationState = cloneRevalidationState(store);\n    try {\n        return await callback();\n    } finally{\n        // Check if we have any new revalidates, and if so, wait until they are all resolved.\n        const newRevalidates = diffRevalidationState(savedRevalidationState, cloneRevalidationState(store));\n        await executeRevalidates(store, newRevalidates);\n    }\n}\nfunction cloneRevalidationState(store) {\n    return {\n        revalidatedTags: store.revalidatedTags ? [\n            ...store.revalidatedTags\n        ] : [],\n        pendingRevalidates: {\n            ...store.pendingRevalidates\n        },\n        pendingRevalidateWrites: store.pendingRevalidateWrites ? [\n            ...store.pendingRevalidateWrites\n        ] : []\n    };\n}\nfunction diffRevalidationState(prev, curr) {\n    const prevTags = new Set(prev.revalidatedTags);\n    const prevRevalidateWrites = new Set(prev.pendingRevalidateWrites);\n    return {\n        revalidatedTags: curr.revalidatedTags.filter((tag)=>!prevTags.has(tag)),\n        pendingRevalidates: Object.fromEntries(Object.entries(curr.pendingRevalidates).filter(([key])=>!(key in prev.pendingRevalidates))),\n        pendingRevalidateWrites: curr.pendingRevalidateWrites.filter((promise)=>!prevRevalidateWrites.has(promise))\n    };\n}\nasync function executeRevalidates(workStore, { revalidatedTags, pendingRevalidates, pendingRevalidateWrites }) {\n    var _workStore_incrementalCache;\n    return Promise.all([\n        (_workStore_incrementalCache = workStore.incrementalCache) == null ? void 0 : _workStore_incrementalCache.revalidateTag(revalidatedTags),\n        ...Object.values(pendingRevalidates),\n        ...pendingRevalidateWrites\n    ]);\n}\n\n//# sourceMappingURL=revalidation-utils.js.map","import PromiseQueue from 'next/dist/compiled/p-queue';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { isThenable } from '../../shared/lib/is-thenable';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { withExecuteRevalidates } from './revalidation-utils';\nimport { bindSnapshot } from '../app-render/async-local-storage';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nexport class AfterContext {\n    constructor({ waitUntil, onClose, onTaskError }){\n        this.workUnitStores = new Set();\n        this.waitUntil = waitUntil;\n        this.onClose = onClose;\n        this.onTaskError = onTaskError;\n        this.callbackQueue = new PromiseQueue();\n        this.callbackQueue.pause();\n    }\n    after(task) {\n        if (isThenable(task)) {\n            if (!this.waitUntil) {\n                errorWaitUntilNotAvailable();\n            }\n            this.waitUntil(task.catch((error)=>this.reportTaskError(error)));\n        } else if (typeof task === 'function') {\n            // TODO(after): implement tracing\n            this.addCallback(task);\n        } else {\n            throw new Error('`unstable_after()`: Argument must be a promise or a function');\n        }\n    }\n    addCallback(callback) {\n        // if something is wrong, throw synchronously, bubbling up to the `unstable_after` callsite.\n        if (!this.waitUntil) {\n            errorWaitUntilNotAvailable();\n        }\n        if (!this.onClose) {\n            throw new InvariantError('unstable_after: Missing `onClose` implementation');\n        }\n        const workUnitStore = workUnitAsyncStorage.getStore();\n        if (!workUnitStore) {\n            throw new InvariantError('Missing workUnitStore in AfterContext.addCallback');\n        }\n        this.workUnitStores.add(workUnitStore);\n        // this should only happen once.\n        if (!this.runCallbacksOnClosePromise) {\n            this.runCallbacksOnClosePromise = this.runCallbacksOnClose();\n            this.waitUntil(this.runCallbacksOnClosePromise);\n        }\n        // Bind the callback to the current execution context (i.e. preserve all currently available ALS-es).\n        // We do this because we want all of these to be equivalent in every regard except timing:\n        //   after(() => x())\n        //   after(x())\n        //   await x()\n        const wrappedCallback = bindSnapshot(async ()=>{\n            try {\n                await callback();\n            } catch (error) {\n                this.reportTaskError(error);\n            }\n        });\n        this.callbackQueue.add(wrappedCallback);\n    }\n    async runCallbacksOnClose() {\n        await new Promise((resolve)=>this.onClose(resolve));\n        return this.runCallbacks();\n    }\n    async runCallbacks() {\n        if (this.callbackQueue.size === 0) return;\n        for (const workUnitStore of this.workUnitStores){\n            workUnitStore.phase = 'after';\n        }\n        const workStore = workAsyncStorage.getStore();\n        if (!workStore) {\n            throw new InvariantError('Missing workStore in AfterContext.runCallbacks');\n        }\n        return withExecuteRevalidates(workStore, ()=>{\n            this.callbackQueue.start();\n            return this.callbackQueue.onIdle();\n        });\n    }\n    reportTaskError(error) {\n        // TODO(after): this is fine for now, but will need better intergration with our error reporting.\n        // TODO(after): should we log this if we have a onTaskError callback?\n        console.error('An error occurred in a function passed to `unstable_after()`:', error);\n        if (this.onTaskError) {\n            // this is very defensive, but we really don't want anything to blow up in an error handler\n            try {\n                this.onTaskError == null ? void 0 : this.onTaskError.call(this, error);\n            } catch (handlerError) {\n                console.error(new InvariantError('`onTaskError` threw while handling an error thrown from an `unstable_after` task', {\n                    cause: handlerError\n                }));\n            }\n        }\n    }\n}\nfunction errorWaitUntilNotAvailable() {\n    throw new Error('`unstable_after()` will not work correctly, because `waitUntil` is not available in the current environment.');\n}\n\n//# sourceMappingURL=after-context.js.map","import { AfterContext } from '../after/after-context';\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths';\nexport const withWorkStore = (storage, { page, fallbackRouteParams, renderOpts, requestEndedState, isPrefetchRequest }, callback)=>{\n    /**\n   * Rules of Static & Dynamic HTML:\n   *\n   *    1.) We must generate static HTML unless the caller explicitly opts\n   *        in to dynamic HTML support.\n   *\n   *    2.) If dynamic HTML support is requested, we must honor that request\n   *        or throw an error. It is the sole responsibility of the caller to\n   *        ensure they aren't e.g. requesting dynamic HTML for an AMP page.\n   *\n   *    3.) If the request is in draft mode, we must generate dynamic HTML.\n   *\n   *    4.) If the request is a server action, we must generate dynamic HTML.\n   *\n   * These rules help ensure that other existing features like request caching,\n   * coalescing, and ISR continue working as intended.\n   */ const isStaticGeneration = !renderOpts.supportsDynamicResponse && !renderOpts.isDraftMode && !renderOpts.isServerAction;\n    const store = {\n        isStaticGeneration,\n        page,\n        fallbackRouteParams,\n        route: normalizeAppPath(page),\n        incrementalCache: // we fallback to a global incremental cache for edge-runtime locally\n        // so that it can access the fs cache without mocks\n        renderOpts.incrementalCache || globalThis.__incrementalCache,\n        cacheLifeProfiles: renderOpts.cacheLifeProfiles,\n        isRevalidate: renderOpts.isRevalidate,\n        isPrerendering: renderOpts.nextExport,\n        fetchCache: renderOpts.fetchCache,\n        isOnDemandRevalidate: renderOpts.isOnDemandRevalidate,\n        isDraftMode: renderOpts.isDraftMode,\n        requestEndedState,\n        isPrefetchRequest,\n        buildId: renderOpts.buildId,\n        reactLoadableManifest: (renderOpts == null ? void 0 : renderOpts.reactLoadableManifest) || {},\n        assetPrefix: (renderOpts == null ? void 0 : renderOpts.assetPrefix) || '',\n        afterContext: createAfterContext(renderOpts)\n    };\n    // TODO: remove this when we resolve accessing the store outside the execution context\n    renderOpts.store = store;\n    return storage.run(store, callback, store);\n};\nfunction createAfterContext(renderOpts) {\n    var _renderOpts_experimental;\n    const isAfterEnabled = (renderOpts == null ? void 0 : (_renderOpts_experimental = renderOpts.experimental) == null ? void 0 : _renderOpts_experimental.after) ?? false;\n    if (!isAfterEnabled) {\n        return undefined;\n    }\n    const { waitUntil, onClose, onAfterTaskError } = renderOpts;\n    return new AfterContext({\n        waitUntil,\n        onClose,\n        onTaskError: onAfterTaskError\n    });\n}\n\n//# sourceMappingURL=with-work-store.js.map","/**\n * This file provides some helpers that should be used in conjunction with\n * explicit environment checks. When combined with the environment checks, it\n * will ensure that the correct typings are used as well as enable code\n * elimination.\n */ /**\n * Type guard to determine if a request is a WebNextRequest. This does not\n * actually check the type of the request, but rather the runtime environment.\n * It's expected that when the runtime environment is the edge runtime, that any\n * base request is a WebNextRequest.\n */ export const isWebNextRequest = (req)=>process.env.NEXT_RUNTIME === 'edge';\n/**\n * Type guard to determine if a response is a WebNextResponse. This does not\n * actually check the type of the response, but rather the runtime environment.\n * It's expected that when the runtime environment is the edge runtime, that any\n * base response is a WebNextResponse.\n */ export const isWebNextResponse = (res)=>process.env.NEXT_RUNTIME === 'edge';\n/**\n * Type guard to determine if a request is a NodeNextRequest. This does not\n * actually check the type of the request, but rather the runtime environment.\n * It's expected that when the runtime environment is the node runtime, that any\n * base request is a NodeNextRequest.\n */ export const isNodeNextRequest = (req)=>process.env.NEXT_RUNTIME !== 'edge';\n/**\n * Type guard to determine if a response is a NodeNextResponse. This does not\n * actually check the type of the response, but rather the runtime environment.\n * It's expected that when the runtime environment is the node runtime, that any\n * base response is a NodeNextResponse.\n */ export const isNodeNextResponse = (res)=>process.env.NEXT_RUNTIME !== 'edge';\n\n//# sourceMappingURL=helpers.js.map","// Combined load times for loading client components\nlet clientComponentLoadStart = 0;\nlet clientComponentLoadTimes = 0;\nlet clientComponentLoadCount = 0;\nexport function wrapClientComponentLoader(ComponentMod) {\n    if (!('performance' in globalThis)) {\n        return ComponentMod.__next_app__;\n    }\n    return {\n        require: (...args)=>{\n            const startTime = performance.now();\n            if (clientComponentLoadStart === 0) {\n                clientComponentLoadStart = startTime;\n            }\n            try {\n                clientComponentLoadCount += 1;\n                return ComponentMod.__next_app__.require(...args);\n            } finally{\n                clientComponentLoadTimes += performance.now() - startTime;\n            }\n        },\n        loadChunk: (...args)=>{\n            const startTime = performance.now();\n            try {\n                clientComponentLoadCount += 1;\n                return ComponentMod.__next_app__.loadChunk(...args);\n            } finally{\n                clientComponentLoadTimes += performance.now() - startTime;\n            }\n        }\n    };\n}\nexport function getClientComponentLoaderMetrics(options = {}) {\n    const metrics = clientComponentLoadStart === 0 ? undefined : {\n        clientComponentLoadStart,\n        clientComponentLoadTimes,\n        clientComponentLoadCount\n    };\n    if (options.reset) {\n        clientComponentLoadStart = 0;\n        clientComponentLoadTimes = 0;\n        clientComponentLoadCount = 0;\n    }\n    return metrics;\n}\n\n//# sourceMappingURL=client-component-renderer-logger.js.map","import * as React from 'react';\nconst errorRef = {\n    current: null\n};\n// React.cache is currently only available in canary/experimental React channels.\nconst cache = typeof React.cache === 'function' ? React.cache : (fn)=>fn;\n// When Dynamic IO is enabled, we record these as errors so that they\n// are captured by the dev overlay as it's more critical to fix these\n// when enabled.\nconst logErrorOrWarn = process.env.__NEXT_DYNAMIC_IO ? console.error : console.warn;\n// We don't want to dedupe across requests.\n// The developer might've just attempted to fix the warning so we should warn again if it still happens.\nconst flushCurrentErrorIfNew = cache(// eslint-disable-next-line @typescript-eslint/no-unused-vars -- cache key\n(key)=>{\n    try {\n        logErrorOrWarn(errorRef.current);\n    } finally{\n        errorRef.current = null;\n    }\n});\n/**\n * Creates a function that logs an error message that is deduped by the userland\n * callsite.\n * This requires no indirection between the call of this function and the userland\n * callsite i.e. there's only a single library frame above this.\n * Do not use on the Client where sourcemaps and ignore listing might be enabled.\n * Only use that for warnings need a fix independent of the callstack.\n *\n * @param getMessage\n * @returns\n */ export function createDedupedByCallsiteServerErrorLoggerDev(getMessage) {\n    return function logDedupedError(...args) {\n        const message = getMessage(...args);\n        if (process.env.NODE_ENV !== 'production') {\n            var _stack;\n            const callStackFrames = (_stack = new Error().stack) == null ? void 0 : _stack.split('\\n');\n            if (callStackFrames === undefined || callStackFrames.length < 4) {\n                logErrorOrWarn(message);\n            } else {\n                // Error:\n                //   logDedupedError\n                //   asyncApiBeingAccessedSynchronously\n                //   <userland callsite>\n                // TODO: This breaks if sourcemaps with ignore lists are enabled.\n                const key = callStackFrames[4];\n                errorRef.current = message;\n                flushCurrentErrorIfNew(key);\n            }\n        } else {\n            logErrorOrWarn(message);\n        }\n    };\n}\n\n//# sourceMappingURL=create-deduped-by-callsite-server-error-logger.js.map","/**\n * This function constructs a promise that will never resolve. This is primarily\n * useful for dynamicIO where we use promise resolution timing to determine which\n * parts of a render can be included in a prerender.\n *\n * @internal\n */ export function makeHangingPromise(signal, expression) {\n    const hangingPromise = new Promise((_, reject)=>{\n        signal.addEventListener('abort', ()=>{\n            reject(new Error(`During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`unstable_after\\`, or similar functions you may observe this error and you should handle it in that context.`));\n        }, {\n            once: true\n        });\n    });\n    // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n    // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n    // your own promise out of it you'll need to ensure you handle the error when it rejects.\n    hangingPromise.catch(ignoreReject);\n    return hangingPromise;\n}\nfunction ignoreReject() {}\n\n//# sourceMappingURL=dynamic-rendering-utils.js.map","export function getRevalidateReason(params) {\n    if (params.isOnDemandRevalidate) {\n        return 'on-demand';\n    }\n    if (params.isRevalidate) {\n        return 'stale';\n    }\n    return undefined;\n}\n\n//# sourceMappingURL=utils.js.map","import { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers';\nconst INTERNAL_QUERY_NAMES = [\n    '__nextFallback',\n    '__nextLocale',\n    '__nextInferredLocaleFromDefault',\n    '__nextDefaultLocale',\n    '__nextIsNotFound',\n    NEXT_RSC_UNION_QUERY\n];\nconst EDGE_EXTENDED_INTERNAL_QUERY_NAMES = [\n    '__nextDataReq'\n];\nexport function stripInternalQueries(query) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        delete query[name];\n    }\n}\nexport function stripInternalSearchParams(url, isEdge) {\n    const isStringUrl = typeof url === 'string';\n    const instance = isStringUrl ? new URL(url) : url;\n    for (const name of INTERNAL_QUERY_NAMES){\n        instance.searchParams.delete(name);\n    }\n    if (isEdge) {\n        for (const name of EDGE_EXTENDED_INTERNAL_QUERY_NAMES){\n            instance.searchParams.delete(name);\n        }\n    }\n    return isStringUrl ? instance.toString() : instance;\n}\n\n//# sourceMappingURL=internal-utils.js.map","import { normalizeAppPath } from '../../shared/lib/router/utils/app-paths';\n// order matters here, the first match will be used\nexport const INTERCEPTION_ROUTE_MARKERS = [\n    '(..)(..)',\n    '(.)',\n    '(..)',\n    '(...)'\n];\nexport function isInterceptionRouteAppPath(path) {\n    // TODO-APP: add more serious validation\n    return path.split('/').find((segment)=>INTERCEPTION_ROUTE_MARKERS.find((m)=>segment.startsWith(m))) !== undefined;\n}\nexport function extractInterceptionRouteInformation(path) {\n    let interceptingRoute, marker, interceptedRoute;\n    for (const segment of path.split('/')){\n        marker = INTERCEPTION_ROUTE_MARKERS.find((m)=>segment.startsWith(m));\n        if (marker) {\n            [interceptingRoute, interceptedRoute] = path.split(marker, 2);\n            break;\n        }\n    }\n    if (!interceptingRoute || !marker || !interceptedRoute) {\n        throw new Error(`Invalid interception route: ${path}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`);\n    }\n    interceptingRoute = normalizeAppPath(interceptingRoute) // normalize the path, e.g. /(blog)/feed -> /feed\n    ;\n    switch(marker){\n        case '(.)':\n            // (.) indicates that we should match with sibling routes, so we just need to append the intercepted route to the intercepting route\n            if (interceptingRoute === '/') {\n                interceptedRoute = `/${interceptedRoute}`;\n            } else {\n                interceptedRoute = interceptingRoute + '/' + interceptedRoute;\n            }\n            break;\n        case '(..)':\n            // (..) indicates that we should match at one level up, so we need to remove the last segment of the intercepting route\n            if (interceptingRoute === '/') {\n                throw new Error(`Invalid interception route: ${path}. Cannot use (..) marker at the root level, use (.) instead.`);\n            }\n            interceptedRoute = interceptingRoute.split('/').slice(0, -1).concat(interceptedRoute).join('/');\n            break;\n        case '(...)':\n            // (...) will match the route segment in the root directory, so we need to use the root directory to prepend the intercepted route\n            interceptedRoute = '/' + interceptedRoute;\n            break;\n        case '(..)(..)':\n            // (..)(..) indicates that we should match at two levels up, so we need to remove the last two segments of the intercepting route\n            const splitInterceptingRoute = interceptingRoute.split('/');\n            if (splitInterceptingRoute.length <= 2) {\n                throw new Error(`Invalid interception route: ${path}. Cannot use (..)(..) marker at the root level or one level up.`);\n            }\n            interceptedRoute = splitInterceptingRoute.slice(0, -2).concat(interceptedRoute).join('/');\n            break;\n        default:\n            throw new Error('Invariant: unexpected marker');\n    }\n    return {\n        interceptingRoute,\n        interceptedRoute\n    };\n}\n\n//# sourceMappingURL=interception-routes.js.map","import { ACTION_HEADER } from '../../client/components/app-router-headers';\nexport function getServerActionRequestMetadata(req) {\n    let actionId;\n    let contentType;\n    if (req.headers instanceof Headers) {\n        actionId = req.headers.get(ACTION_HEADER.toLowerCase()) ?? null;\n        contentType = req.headers.get('content-type');\n    } else {\n        actionId = req.headers[ACTION_HEADER.toLowerCase()] ?? null;\n        contentType = req.headers['content-type'] ?? null;\n    }\n    const isURLEncodedAction = Boolean(req.method === 'POST' && contentType === 'application/x-www-form-urlencoded');\n    const isMultipartAction = Boolean(req.method === 'POST' && (contentType == null ? void 0 : contentType.startsWith('multipart/form-data')));\n    const isFetchAction = Boolean(actionId !== undefined && typeof actionId === 'string' && req.method === 'POST');\n    const isServerAction = Boolean(isFetchAction || isURLEncodedAction || isMultipartAction);\n    return {\n        actionId,\n        isURLEncodedAction,\n        isMultipartAction,\n        isFetchAction,\n        isServerAction\n    };\n}\nexport function getIsServerAction(req) {\n    return getServerActionRequestMetadata(req).isServerAction;\n}\n\n//# sourceMappingURL=server-action-request-meta.js.map","/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/ // eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */ var BaseServerSpan;\n(function(BaseServerSpan) {\n    BaseServerSpan[\"handleRequest\"] = \"BaseServer.handleRequest\";\n    BaseServerSpan[\"run\"] = \"BaseServer.run\";\n    BaseServerSpan[\"pipe\"] = \"BaseServer.pipe\";\n    BaseServerSpan[\"getStaticHTML\"] = \"BaseServer.getStaticHTML\";\n    BaseServerSpan[\"render\"] = \"BaseServer.render\";\n    BaseServerSpan[\"renderToResponseWithComponents\"] = \"BaseServer.renderToResponseWithComponents\";\n    BaseServerSpan[\"renderToResponse\"] = \"BaseServer.renderToResponse\";\n    BaseServerSpan[\"renderToHTML\"] = \"BaseServer.renderToHTML\";\n    BaseServerSpan[\"renderError\"] = \"BaseServer.renderError\";\n    BaseServerSpan[\"renderErrorToResponse\"] = \"BaseServer.renderErrorToResponse\";\n    BaseServerSpan[\"renderErrorToHTML\"] = \"BaseServer.renderErrorToHTML\";\n    BaseServerSpan[\"render404\"] = \"BaseServer.render404\";\n})(BaseServerSpan || (BaseServerSpan = {}));\nvar LoadComponentsSpan;\n(function(LoadComponentsSpan) {\n    LoadComponentsSpan[\"loadDefaultErrorComponents\"] = \"LoadComponents.loadDefaultErrorComponents\";\n    LoadComponentsSpan[\"loadComponents\"] = \"LoadComponents.loadComponents\";\n})(LoadComponentsSpan || (LoadComponentsSpan = {}));\nvar NextServerSpan;\n(function(NextServerSpan) {\n    NextServerSpan[\"getRequestHandler\"] = \"NextServer.getRequestHandler\";\n    NextServerSpan[\"getServer\"] = \"NextServer.getServer\";\n    NextServerSpan[\"getServerRequestHandler\"] = \"NextServer.getServerRequestHandler\";\n    NextServerSpan[\"createServer\"] = \"createServer.createServer\";\n})(NextServerSpan || (NextServerSpan = {}));\nvar NextNodeServerSpan;\n(function(NextNodeServerSpan) {\n    NextNodeServerSpan[\"compression\"] = \"NextNodeServer.compression\";\n    NextNodeServerSpan[\"getBuildId\"] = \"NextNodeServer.getBuildId\";\n    NextNodeServerSpan[\"createComponentTree\"] = \"NextNodeServer.createComponentTree\";\n    NextNodeServerSpan[\"clientComponentLoading\"] = \"NextNodeServer.clientComponentLoading\";\n    NextNodeServerSpan[\"getLayoutOrPageModule\"] = \"NextNodeServer.getLayoutOrPageModule\";\n    NextNodeServerSpan[\"generateStaticRoutes\"] = \"NextNodeServer.generateStaticRoutes\";\n    NextNodeServerSpan[\"generateFsStaticRoutes\"] = \"NextNodeServer.generateFsStaticRoutes\";\n    NextNodeServerSpan[\"generatePublicRoutes\"] = \"NextNodeServer.generatePublicRoutes\";\n    NextNodeServerSpan[\"generateImageRoutes\"] = \"NextNodeServer.generateImageRoutes.route\";\n    NextNodeServerSpan[\"sendRenderResult\"] = \"NextNodeServer.sendRenderResult\";\n    NextNodeServerSpan[\"proxyRequest\"] = \"NextNodeServer.proxyRequest\";\n    NextNodeServerSpan[\"runApi\"] = \"NextNodeServer.runApi\";\n    NextNodeServerSpan[\"render\"] = \"NextNodeServer.render\";\n    NextNodeServerSpan[\"renderHTML\"] = \"NextNodeServer.renderHTML\";\n    NextNodeServerSpan[\"imageOptimizer\"] = \"NextNodeServer.imageOptimizer\";\n    NextNodeServerSpan[\"getPagePath\"] = \"NextNodeServer.getPagePath\";\n    NextNodeServerSpan[\"getRoutesManifest\"] = \"NextNodeServer.getRoutesManifest\";\n    NextNodeServerSpan[\"findPageComponents\"] = \"NextNodeServer.findPageComponents\";\n    NextNodeServerSpan[\"getFontManifest\"] = \"NextNodeServer.getFontManifest\";\n    NextNodeServerSpan[\"getServerComponentManifest\"] = \"NextNodeServer.getServerComponentManifest\";\n    NextNodeServerSpan[\"getRequestHandler\"] = \"NextNodeServer.getRequestHandler\";\n    NextNodeServerSpan[\"renderToHTML\"] = \"NextNodeServer.renderToHTML\";\n    NextNodeServerSpan[\"renderError\"] = \"NextNodeServer.renderError\";\n    NextNodeServerSpan[\"renderErrorToHTML\"] = \"NextNodeServer.renderErrorToHTML\";\n    NextNodeServerSpan[\"render404\"] = \"NextNodeServer.render404\";\n    NextNodeServerSpan[\"startResponse\"] = \"NextNodeServer.startResponse\";\n    // nested inner span, does not require parent scope name\n    NextNodeServerSpan[\"route\"] = \"route\";\n    NextNodeServerSpan[\"onProxyReq\"] = \"onProxyReq\";\n    NextNodeServerSpan[\"apiResolver\"] = \"apiResolver\";\n    NextNodeServerSpan[\"internalFetch\"] = \"internalFetch\";\n})(NextNodeServerSpan || (NextNodeServerSpan = {}));\nvar StartServerSpan;\n(function(StartServerSpan) {\n    StartServerSpan[\"startServer\"] = \"startServer.startServer\";\n})(StartServerSpan || (StartServerSpan = {}));\nvar RenderSpan;\n(function(RenderSpan) {\n    RenderSpan[\"getServerSideProps\"] = \"Render.getServerSideProps\";\n    RenderSpan[\"getStaticProps\"] = \"Render.getStaticProps\";\n    RenderSpan[\"renderToString\"] = \"Render.renderToString\";\n    RenderSpan[\"renderDocument\"] = \"Render.renderDocument\";\n    RenderSpan[\"createBodyResult\"] = \"Render.createBodyResult\";\n})(RenderSpan || (RenderSpan = {}));\nvar AppRenderSpan;\n(function(AppRenderSpan) {\n    AppRenderSpan[\"renderToString\"] = \"AppRender.renderToString\";\n    AppRenderSpan[\"renderToReadableStream\"] = \"AppRender.renderToReadableStream\";\n    AppRenderSpan[\"getBodyResult\"] = \"AppRender.getBodyResult\";\n    AppRenderSpan[\"fetch\"] = \"AppRender.fetch\";\n})(AppRenderSpan || (AppRenderSpan = {}));\nvar RouterSpan;\n(function(RouterSpan) {\n    RouterSpan[\"executeRoute\"] = \"Router.executeRoute\";\n})(RouterSpan || (RouterSpan = {}));\nvar NodeSpan;\n(function(NodeSpan) {\n    NodeSpan[\"runHandler\"] = \"Node.runHandler\";\n})(NodeSpan || (NodeSpan = {}));\nvar AppRouteRouteHandlersSpan;\n(function(AppRouteRouteHandlersSpan) {\n    AppRouteRouteHandlersSpan[\"runHandler\"] = \"AppRouteRouteHandlers.runHandler\";\n})(AppRouteRouteHandlersSpan || (AppRouteRouteHandlersSpan = {}));\nvar ResolveMetadataSpan;\n(function(ResolveMetadataSpan) {\n    ResolveMetadataSpan[\"generateMetadata\"] = \"ResolveMetadata.generateMetadata\";\n    ResolveMetadataSpan[\"generateViewport\"] = \"ResolveMetadata.generateViewport\";\n})(ResolveMetadataSpan || (ResolveMetadataSpan = {}));\nvar MiddlewareSpan;\n(function(MiddlewareSpan) {\n    MiddlewareSpan[\"execute\"] = \"Middleware.execute\";\n})(MiddlewareSpan || (MiddlewareSpan = {}));\n// This list is used to filter out spans that are not relevant to the user\nexport const NextVanillaSpanAllowlist = [\n    \"Middleware.execute\",\n    \"BaseServer.handleRequest\",\n    \"Render.getServerSideProps\",\n    \"Render.getStaticProps\",\n    \"AppRender.fetch\",\n    \"AppRender.getBodyResult\",\n    \"Render.renderDocument\",\n    \"Node.runHandler\",\n    \"AppRouteRouteHandlers.runHandler\",\n    \"ResolveMetadata.generateMetadata\",\n    \"ResolveMetadata.generateViewport\",\n    \"NextNodeServer.createComponentTree\",\n    \"NextNodeServer.findPageComponents\",\n    \"NextNodeServer.getLayoutOrPageModule\",\n    \"NextNodeServer.startResponse\",\n    \"NextNodeServer.clientComponentLoading\"\n];\n// These Spans are allowed to be always logged\n// when the otel log prefix env is set\nexport const LogSpanAllowList = [\n    \"NextNodeServer.findPageComponents\",\n    \"NextNodeServer.createComponentTree\",\n    \"NextNodeServer.clientComponentLoading\"\n];\nexport { BaseServerSpan, LoadComponentsSpan, NextServerSpan, NextNodeServerSpan, StartServerSpan, RenderSpan, RouterSpan, AppRenderSpan, NodeSpan, AppRouteRouteHandlersSpan, ResolveMetadataSpan, MiddlewareSpan,  };\n\n//# sourceMappingURL=constants.js.map","import { LogSpanAllowList, NextVanillaSpanAllowlist } from './constants';\nimport { isThenable } from '../../../shared/lib/is-thenable';\nlet api;\n// we want to allow users to use their own version of @opentelemetry/api if they\n// want to, so we try to require it first, and if it fails we fall back to the\n// version that is bundled with Next.js\n// this is because @opentelemetry/api has to be synced with the version of\n// @opentelemetry/tracing that is used, and we don't want to force users to use\n// the version that is bundled with Next.js.\n// the API is ~stable, so this should be fine\nif (process.env.NEXT_RUNTIME === 'edge') {\n    api = require('@opentelemetry/api');\n} else {\n    try {\n        api = require('@opentelemetry/api');\n    } catch (err) {\n        api = require('next/dist/compiled/@opentelemetry/api');\n    }\n}\nconst { context, propagation, trace, SpanStatusCode, SpanKind, ROOT_CONTEXT } = api;\nexport class BubbledError extends Error {\n    constructor(bubble, result){\n        super();\n        this.bubble = bubble;\n        this.result = result;\n    }\n}\nexport function isBubbledError(error) {\n    if (typeof error !== 'object' || error === null) return false;\n    return error instanceof BubbledError;\n}\nconst closeSpanWithError = (span, error)=>{\n    if (isBubbledError(error) && error.bubble) {\n        span.setAttribute('next.bubble', true);\n    } else {\n        if (error) {\n            span.recordException(error);\n        }\n        span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: error == null ? void 0 : error.message\n        });\n    }\n    span.end();\n};\n/** we use this map to propagate attributes from nested spans to the top span */ const rootSpanAttributesStore = new Map();\nconst rootSpanIdKey = api.createContextKey('next.rootSpanId');\nlet lastSpanId = 0;\nconst getSpanId = ()=>lastSpanId++;\nconst clientTraceDataSetter = {\n    set (carrier, key, value) {\n        carrier.push({\n            key,\n            value\n        });\n    }\n};\nclass NextTracerImpl {\n    /**\n   * Returns an instance to the trace with configured name.\n   * Since wrap / trace can be defined in any place prior to actual trace subscriber initialization,\n   * This should be lazily evaluated.\n   */ getTracerInstance() {\n        return trace.getTracer('next.js', '0.0.1');\n    }\n    getContext() {\n        return context;\n    }\n    getTracePropagationData() {\n        const activeContext = context.active();\n        const entries = [];\n        propagation.inject(activeContext, entries, clientTraceDataSetter);\n        return entries;\n    }\n    getActiveScopeSpan() {\n        return trace.getSpan(context == null ? void 0 : context.active());\n    }\n    withPropagatedContext(carrier, fn, getter) {\n        const activeContext = context.active();\n        if (trace.getSpanContext(activeContext)) {\n            // Active span is already set, too late to propagate.\n            return fn();\n        }\n        const remoteContext = propagation.extract(activeContext, carrier, getter);\n        return context.with(remoteContext, fn);\n    }\n    trace(...args) {\n        var _trace_getSpanContext;\n        const [type, fnOrOptions, fnOrEmpty] = args;\n        // coerce options form overload\n        const { fn, options } = typeof fnOrOptions === 'function' ? {\n            fn: fnOrOptions,\n            options: {}\n        } : {\n            fn: fnOrEmpty,\n            options: {\n                ...fnOrOptions\n            }\n        };\n        const spanName = options.spanName ?? type;\n        if (!NextVanillaSpanAllowlist.includes(type) && process.env.NEXT_OTEL_VERBOSE !== '1' || options.hideSpan) {\n            return fn();\n        }\n        // Trying to get active scoped span to assign parent. If option specifies parent span manually, will try to use it.\n        let spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        let isRootSpan = false;\n        if (!spanContext) {\n            spanContext = (context == null ? void 0 : context.active()) ?? ROOT_CONTEXT;\n            isRootSpan = true;\n        } else if ((_trace_getSpanContext = trace.getSpanContext(spanContext)) == null ? void 0 : _trace_getSpanContext.isRemote) {\n            isRootSpan = true;\n        }\n        const spanId = getSpanId();\n        options.attributes = {\n            'next.span_name': spanName,\n            'next.span_type': type,\n            ...options.attributes\n        };\n        return context.with(spanContext.setValue(rootSpanIdKey, spanId), ()=>this.getTracerInstance().startActiveSpan(spanName, options, (span)=>{\n                const startTime = 'performance' in globalThis && 'measure' in performance ? globalThis.performance.now() : undefined;\n                const onCleanup = ()=>{\n                    rootSpanAttributesStore.delete(spanId);\n                    if (startTime && process.env.NEXT_OTEL_PERFORMANCE_PREFIX && LogSpanAllowList.includes(type || '')) {\n                        performance.measure(`${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-${(type.split('.').pop() || '').replace(/[A-Z]/g, (match)=>'-' + match.toLowerCase())}`, {\n                            start: startTime,\n                            end: performance.now()\n                        });\n                    }\n                };\n                if (isRootSpan) {\n                    rootSpanAttributesStore.set(spanId, new Map(Object.entries(options.attributes ?? {})));\n                }\n                try {\n                    if (fn.length > 1) {\n                        return fn(span, (err)=>closeSpanWithError(span, err));\n                    }\n                    const result = fn(span);\n                    if (isThenable(result)) {\n                        // If there's error make sure it throws\n                        return result.then((res)=>{\n                            span.end();\n                            // Need to pass down the promise result,\n                            // it could be react stream response with error { error, stream }\n                            return res;\n                        }).catch((err)=>{\n                            closeSpanWithError(span, err);\n                            throw err;\n                        }).finally(onCleanup);\n                    } else {\n                        span.end();\n                        onCleanup();\n                    }\n                    return result;\n                } catch (err) {\n                    closeSpanWithError(span, err);\n                    onCleanup();\n                    throw err;\n                }\n            }));\n    }\n    wrap(...args) {\n        const tracer = this;\n        const [name, options, fn] = args.length === 3 ? args : [\n            args[0],\n            {},\n            args[1]\n        ];\n        if (!NextVanillaSpanAllowlist.includes(name) && process.env.NEXT_OTEL_VERBOSE !== '1') {\n            return fn;\n        }\n        return function() {\n            let optionsObj = options;\n            if (typeof optionsObj === 'function' && typeof fn === 'function') {\n                optionsObj = optionsObj.apply(this, arguments);\n            }\n            const lastArgId = arguments.length - 1;\n            const cb = arguments[lastArgId];\n            if (typeof cb === 'function') {\n                const scopeBoundCb = tracer.getContext().bind(context.active(), cb);\n                return tracer.trace(name, optionsObj, (_span, done)=>{\n                    arguments[lastArgId] = function(err) {\n                        done == null ? void 0 : done(err);\n                        return scopeBoundCb.apply(this, arguments);\n                    };\n                    return fn.apply(this, arguments);\n                });\n            } else {\n                return tracer.trace(name, optionsObj, ()=>fn.apply(this, arguments));\n            }\n        };\n    }\n    startSpan(...args) {\n        const [type, options] = args;\n        const spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        return this.getTracerInstance().startSpan(type, options, spanContext);\n    }\n    getSpanContext(parentSpan) {\n        const spanContext = parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined;\n        return spanContext;\n    }\n    getRootSpanAttributes() {\n        const spanId = context.active().getValue(rootSpanIdKey);\n        return rootSpanAttributesStore.get(spanId);\n    }\n    setRootSpanAttribute(key, value) {\n        const spanId = context.active().getValue(rootSpanIdKey);\n        const attributes = rootSpanAttributesStore.get(spanId);\n        if (attributes) {\n            attributes.set(key, value);\n        }\n    }\n}\nconst getTracer = (()=>{\n    const tracer = new NextTracerImpl();\n    return ()=>tracer;\n})();\nexport { getTracer, SpanStatusCode, SpanKind };\n\n//# sourceMappingURL=tracer.js.map","import { ResponseAbortedName, createAbortController } from './web/spec-extension/adapters/next-request';\nimport { DetachedPromise } from '../lib/detached-promise';\nimport { getTracer } from './lib/trace/tracer';\nimport { NextNodeServerSpan } from './lib/trace/constants';\nimport { getClientComponentLoaderMetrics } from './client-component-renderer-logger';\nexport function isAbortError(e) {\n    return (e == null ? void 0 : e.name) === 'AbortError' || (e == null ? void 0 : e.name) === ResponseAbortedName;\n}\nfunction createWriterFromResponse(res, waitUntilForEnd) {\n    let started = false;\n    // Create a promise that will resolve once the response has drained. See\n    // https://nodejs.org/api/stream.html#stream_event_drain\n    let drained = new DetachedPromise();\n    function onDrain() {\n        drained.resolve();\n    }\n    res.on('drain', onDrain);\n    // If the finish event fires, it means we shouldn't block and wait for the\n    // drain event.\n    res.once('close', ()=>{\n        res.off('drain', onDrain);\n        drained.resolve();\n    });\n    // Create a promise that will resolve once the response has finished. See\n    // https://nodejs.org/api/http.html#event-finish_1\n    const finished = new DetachedPromise();\n    res.once('finish', ()=>{\n        finished.resolve();\n    });\n    // Create a writable stream that will write to the response.\n    return new WritableStream({\n        write: async (chunk)=>{\n            // You'd think we'd want to use `start` instead of placing this in `write`\n            // but this ensures that we don't actually flush the headers until we've\n            // started writing chunks.\n            if (!started) {\n                started = true;\n                if ('performance' in globalThis && process.env.NEXT_OTEL_PERFORMANCE_PREFIX) {\n                    const metrics = getClientComponentLoaderMetrics();\n                    if (metrics) {\n                        performance.measure(`${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-client-component-loading`, {\n                            start: metrics.clientComponentLoadStart,\n                            end: metrics.clientComponentLoadStart + metrics.clientComponentLoadTimes\n                        });\n                    }\n                }\n                res.flushHeaders();\n                getTracer().trace(NextNodeServerSpan.startResponse, {\n                    spanName: 'start response'\n                }, ()=>undefined);\n            }\n            try {\n                const ok = res.write(chunk);\n                // Added by the `compression` middleware, this is a function that will\n                // flush the partially-compressed response to the client.\n                if ('flush' in res && typeof res.flush === 'function') {\n                    res.flush();\n                }\n                // If the write returns false, it means there's some backpressure, so\n                // wait until it's streamed before continuing.\n                if (!ok) {\n                    await drained.promise;\n                    // Reset the drained promise so that we can wait for the next drain event.\n                    drained = new DetachedPromise();\n                }\n            } catch (err) {\n                res.end();\n                throw new Error('failed to write chunk to response', {\n                    cause: err\n                });\n            }\n        },\n        abort: (err)=>{\n            if (res.writableFinished) return;\n            res.destroy(err);\n        },\n        close: async ()=>{\n            // if a waitUntil promise was passed, wait for it to resolve before\n            // ending the response.\n            if (waitUntilForEnd) {\n                await waitUntilForEnd;\n            }\n            if (res.writableFinished) return;\n            res.end();\n            return finished.promise;\n        }\n    });\n}\nexport async function pipeToNodeResponse(readable, res, waitUntilForEnd) {\n    try {\n        // If the response has already errored, then just return now.\n        const { errored, destroyed } = res;\n        if (errored || destroyed) return;\n        // Create a new AbortController so that we can abort the readable if the\n        // client disconnects.\n        const controller = createAbortController(res);\n        const writer = createWriterFromResponse(res, waitUntilForEnd);\n        await readable.pipeTo(writer, {\n            signal: controller.signal\n        });\n    } catch (err) {\n        // If this isn't related to an abort error, re-throw it.\n        if (isAbortError(err)) return;\n        throw new Error('failed to pipe response', {\n            cause: err\n        });\n    }\n}\n\n//# sourceMappingURL=pipe-readable.js.map","import { chainStreams, streamFromBuffer, streamFromString, streamToBuffer, streamToString } from './stream-utils/node-web-streams-helper';\nimport { isAbortError, pipeToNodeResponse } from './pipe-readable';\nexport default class RenderResult {\n    /**\n   * Creates a new RenderResult instance from a static response.\n   *\n   * @param value the static response value\n   * @returns a new RenderResult instance\n   */ static fromStatic(value) {\n        return new RenderResult(value, {\n            metadata: {}\n        });\n    }\n    constructor(response, { contentType, waitUntil, metadata }){\n        this.response = response;\n        this.contentType = contentType;\n        this.metadata = metadata;\n        this.waitUntil = waitUntil;\n    }\n    assignMetadata(metadata) {\n        Object.assign(this.metadata, metadata);\n    }\n    /**\n   * Returns true if the response is null. It can be null if the response was\n   * not found or was already sent.\n   */ get isNull() {\n        return this.response === null;\n    }\n    /**\n   * Returns false if the response is a string. It can be a string if the page\n   * was prerendered. If it's not, then it was generated dynamically.\n   */ get isDynamic() {\n        return typeof this.response !== 'string';\n    }\n    toUnchunkedBuffer(stream = false) {\n        if (this.response === null) {\n            throw new Error('Invariant: null responses cannot be unchunked');\n        }\n        if (typeof this.response !== 'string') {\n            if (!stream) {\n                throw new Error('Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js');\n            }\n            return streamToBuffer(this.readable);\n        }\n        return Buffer.from(this.response);\n    }\n    toUnchunkedString(stream = false) {\n        if (this.response === null) {\n            throw new Error('Invariant: null responses cannot be unchunked');\n        }\n        if (typeof this.response !== 'string') {\n            if (!stream) {\n                throw new Error('Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js');\n            }\n            return streamToString(this.readable);\n        }\n        return this.response;\n    }\n    /**\n   * Returns the response if it is a stream, or throws an error if it is a\n   * string.\n   */ get readable() {\n        if (this.response === null) {\n            throw new Error('Invariant: null responses cannot be streamed');\n        }\n        if (typeof this.response === 'string') {\n            throw new Error('Invariant: static responses cannot be streamed');\n        }\n        if (Buffer.isBuffer(this.response)) {\n            return streamFromBuffer(this.response);\n        }\n        // If the response is an array of streams, then chain them together.\n        if (Array.isArray(this.response)) {\n            return chainStreams(...this.response);\n        }\n        return this.response;\n    }\n    /**\n   * Chains a new stream to the response. This will convert the response to an\n   * array of streams if it is not already one and will add the new stream to\n   * the end. When this response is piped, all of the streams will be piped\n   * one after the other.\n   *\n   * @param readable The new stream to chain\n   */ chain(readable) {\n        if (this.response === null) {\n            throw new Error('Invariant: response is null. This is a bug in Next.js');\n        }\n        // If the response is not an array of streams already, make it one.\n        let responses;\n        if (typeof this.response === 'string') {\n            responses = [\n                streamFromString(this.response)\n            ];\n        } else if (Array.isArray(this.response)) {\n            responses = this.response;\n        } else if (Buffer.isBuffer(this.response)) {\n            responses = [\n                streamFromBuffer(this.response)\n            ];\n        } else {\n            responses = [\n                this.response\n            ];\n        }\n        // Add the new stream to the array.\n        responses.push(readable);\n        // Update the response.\n        this.response = responses;\n    }\n    /**\n   * Pipes the response to a writable stream. This will close/cancel the\n   * writable stream if an error is encountered. If this doesn't throw, then\n   * the writable stream will be closed or aborted.\n   *\n   * @param writable Writable stream to pipe the response to\n   */ async pipeTo(writable) {\n        try {\n            await this.readable.pipeTo(writable, {\n                // We want to close the writable stream ourselves so that we can wait\n                // for the waitUntil promise to resolve before closing it. If an error\n                // is encountered, we'll abort the writable stream if we swallowed the\n                // error.\n                preventClose: true\n            });\n            // If there is a waitUntil promise, wait for it to resolve before\n            // closing the writable stream.\n            if (this.waitUntil) await this.waitUntil;\n            // Close the writable stream.\n            await writable.close();\n        } catch (err) {\n            // If this is an abort error, we should abort the writable stream (as we\n            // took ownership of it when we started piping). We don't need to re-throw\n            // because we handled the error.\n            if (isAbortError(err)) {\n                // Abort the writable stream if an error is encountered.\n                await writable.abort(err);\n                return;\n            }\n            // We're not aborting the writer here as when this method throws it's not\n            // clear as to how so the caller should assume it's their responsibility\n            // to clean up the writer.\n            throw err;\n        }\n    }\n    /**\n   * Pipes the response to a node response. This will close/cancel the node\n   * response if an error is encountered.\n   *\n   * @param res\n   */ async pipeToNodeResponse(res) {\n        await pipeToNodeResponse(this.readable, res, this.waitUntil);\n    }\n}\n\n//# sourceMappingURL=render-result.js.map","/* eslint-disable no-redeclare */ // FIXME: (wyattjoh) this is a temporary solution to allow us to pass data between bundled modules\nexport const NEXT_REQUEST_META = Symbol.for('NextInternalRequestMeta');\nexport function getRequestMeta(req, key) {\n    const meta = req[NEXT_REQUEST_META] || {};\n    return typeof key === 'string' ? meta[key] : meta;\n}\n/**\n * Sets the request metadata.\n *\n * @param req the request to set the metadata on\n * @param meta the metadata to set\n * @returns the mutated request metadata\n */ export function setRequestMeta(req, meta) {\n    req[NEXT_REQUEST_META] = meta;\n    return meta;\n}\n/**\n * Adds a value to the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to set\n * @param value the value to set\n * @returns the mutated request metadata\n */ export function addRequestMeta(request, key, value) {\n    const meta = getRequestMeta(request);\n    meta[key] = value;\n    return setRequestMeta(request, meta);\n}\n/**\n * Removes a key from the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to remove\n * @returns the mutated request metadata\n */ export function removeRequestMeta(request, key) {\n    const meta = getRequestMeta(request);\n    delete meta[key];\n    return setRequestMeta(request, meta);\n}\nexport function getNextInternalQuery(query) {\n    const keysToInclude = [\n        '__nextDefaultLocale',\n        '__nextFallback',\n        '__nextLocale',\n        '__nextSsgPath',\n        '_nextBubbleNoFallback',\n        '__nextDataReq',\n        '__nextInferredLocaleFromDefault'\n    ];\n    const nextInternalQuery = {};\n    for (const key of keysToInclude){\n        if (key in query) {\n            // @ts-ignore this can't be typed correctly\n            nextInternalQuery[key] = query[key];\n        }\n    }\n    return nextInternalQuery;\n}\n\n//# sourceMappingURL=request-meta.js.map","import { ReflectAdapter } from '../web/spec-extension/adapters/reflect';\nimport { abortAndThrowOnSynchronousRequestDataAccess, throwToInterruptStaticGeneration, postponeWithTracking, trackSynchronousRequestDataAccessInDev } from '../app-render/dynamic-rendering';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { describeStringPropertyAccess, wellKnownProperties } from './utils';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger';\nimport { scheduleImmediate } from '../../lib/scheduler';\nexport function createParamsFromClient(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderParams(underlyingParams, workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderParams(underlyingParams, workStore);\n}\nexport const createServerParamsForMetadata = createServerParamsForServerSegment;\n// routes always runs in RSC context so it is equivalent to a Server Page Component\nexport function createServerParamsForRoute(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderParams(underlyingParams, workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderParams(underlyingParams, workStore);\n}\nexport function createServerParamsForServerSegment(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderParams(underlyingParams, workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderParams(underlyingParams, workStore);\n}\nexport function createPrerenderParamsForClientSegment(underlyingParams, workStore) {\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    if (prerenderStore && prerenderStore.type === 'prerender') {\n        const fallbackParams = workStore.fallbackRouteParams;\n        if (fallbackParams) {\n            for(let key in underlyingParams){\n                if (fallbackParams.has(key)) {\n                    // This params object has one of more fallback params so we need to consider\n                    // the awaiting of this params object \"dynamic\". Since we are in dynamicIO mode\n                    // we encode this as a promise that never resolves\n                    return makeHangingPromise(prerenderStore.renderSignal, '`params`');\n                }\n            }\n        }\n    }\n    // We're prerendering in a mode that does not abort. We resolve the promise without\n    // any tracking because we're just transporting a value from server to client where the tracking\n    // will be applied.\n    return Promise.resolve(underlyingParams);\n}\nfunction createPrerenderParams(underlyingParams, workStore, prerenderStore) {\n    const fallbackParams = workStore.fallbackRouteParams;\n    if (fallbackParams) {\n        let hasSomeFallbackParams = false;\n        for(const key in underlyingParams){\n            if (fallbackParams.has(key)) {\n                hasSomeFallbackParams = true;\n                break;\n            }\n        }\n        if (hasSomeFallbackParams) {\n            // params need to be treated as dynamic because we have at least one fallback param\n            if (prerenderStore.type === 'prerender') {\n                // We are in a dynamicIO (PPR or otherwise) prerender\n                return makeAbortingExoticParams(underlyingParams, workStore.route, prerenderStore);\n            }\n            // remaining cases are prender-ppr and prerender-legacy\n            // We aren't in a dynamicIO prerender but we do have fallback params at this\n            // level so we need to make an erroring exotic params object which will postpone\n            // if you access the fallback params\n            return makeErroringExoticParams(underlyingParams, fallbackParams, workStore, prerenderStore);\n        }\n    }\n    // We don't have any fallback params so we have an entirely static safe params object\n    return makeUntrackedExoticParams(underlyingParams);\n}\nfunction createRenderParams(underlyingParams, workStore) {\n    if (process.env.NODE_ENV === 'development' && !workStore.isPrefetchRequest) {\n        return makeDynamicallyTrackedExoticParamsWithDevWarnings(underlyingParams, workStore);\n    } else {\n        return makeUntrackedExoticParams(underlyingParams);\n    }\n}\nconst CachedParams = new WeakMap();\nfunction makeAbortingExoticParams(underlyingParams, route, prerenderStore) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const promise = makeHangingPromise(prerenderStore.renderSignal, '`params`');\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            Object.defineProperty(promise, prop, {\n                get () {\n                    const expression = describeStringPropertyAccess('params', prop);\n                    const error = createParamsAccessError(route, expression);\n                    abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n                },\n                set (newValue) {\n                    Object.defineProperty(promise, prop, {\n                        value: newValue,\n                        writable: true,\n                        enumerable: true\n                    });\n                },\n                enumerable: true,\n                configurable: true\n            });\n        }\n    });\n    return promise;\n}\nfunction makeErroringExoticParams(underlyingParams, fallbackParams, workStore, prerenderStore) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const augmentedUnderlying = {\n        ...underlyingParams\n    };\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(augmentedUnderlying);\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            if (fallbackParams.has(prop)) {\n                Object.defineProperty(augmentedUnderlying, prop, {\n                    get () {\n                        const expression = describeStringPropertyAccess('params', prop);\n                        // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n                        // for params is only dynamic when we're generating a fallback shell\n                        // and even when `dynamic = \"error\"` we still support generating dynamic\n                        // fallback shells\n                        // TODO remove this comment when dynamicIO is the default since there\n                        // will be no `dynamic = \"error\"`\n                        if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no dynamicIO)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                    },\n                    enumerable: true\n                });\n                Object.defineProperty(promise, prop, {\n                    get () {\n                        const expression = describeStringPropertyAccess('params', prop);\n                        // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n                        // for params is only dynamic when we're generating a fallback shell\n                        // and even when `dynamic = \"error\"` we still support generating dynamic\n                        // fallback shells\n                        // TODO remove this comment when dynamicIO is the default since there\n                        // will be no `dynamic = \"error\"`\n                        if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no dynamicIO)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                    },\n                    set (newValue) {\n                        Object.defineProperty(promise, prop, {\n                            value: newValue,\n                            writable: true,\n                            enumerable: true\n                        });\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n            } else {\n                promise[prop] = underlyingParams[prop];\n            }\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedExoticParams(underlyingParams) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(underlyingParams);\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            promise[prop] = underlyingParams[prop];\n        }\n    });\n    return promise;\n}\nfunction makeDynamicallyTrackedExoticParamsWithDevWarnings(underlyingParams, store) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = new Promise((resolve)=>scheduleImmediate(()=>resolve(underlyingParams)));\n    const proxiedProperties = new Set();\n    const unproxiedProperties = [];\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n            // These properties cannot be shadowed because they need to be the\n            // true underlying value for Promises to work correctly at runtime\n            unproxiedProperties.push(prop);\n        } else {\n            proxiedProperties.add(prop);\n            promise[prop] = underlyingParams[prop];\n        }\n    });\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (typeof prop === 'string') {\n                if (// We are accessing a property that was proxied to the promise instance\n                proxiedProperties.has(prop)) {\n                    const expression = describeStringPropertyAccess('params', prop);\n                    syncIODev(store.route, expression);\n                }\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        set (target, prop, value, receiver) {\n            if (typeof prop === 'string') {\n                proxiedProperties.delete(prop);\n            }\n            return ReflectAdapter.set(target, prop, value, receiver);\n        },\n        ownKeys (target) {\n            const expression = '`...params` or similar expression';\n            syncIODev(store.route, expression, unproxiedProperties);\n            return Reflect.ownKeys(target);\n        }\n    });\n    CachedParams.set(underlyingParams, proxiedPromise);\n    return proxiedPromise;\n}\nfunction syncIODev(route, expression, missingProperties) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore && workUnitStore.type === 'request' && workUnitStore.prerenderPhase === true) {\n        // When we're rendering dynamically in dev we need to advance out of the\n        // Prerender environment when we read Request data synchronously\n        const requestStore = workUnitStore;\n        trackSynchronousRequestDataAccessInDev(requestStore);\n    }\n    // In all cases we warn normally\n    if (missingProperties && missingProperties.length > 0) {\n        warnForIncompleteEnumeration(route, expression, missingProperties);\n    } else {\n        warnForSyncAccess(route, expression);\n    }\n}\nconst noop = ()=>{};\nconst warnForSyncAccess = process.env.__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS ? noop : createDedupedByCallsiteServerErrorLoggerDev(createParamsAccessError);\nconst warnForIncompleteEnumeration = process.env.__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS ? noop : createDedupedByCallsiteServerErrorLoggerDev(createIncompleteEnumerationError);\nfunction createParamsAccessError(route, expression) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return new Error(`${prefix}used ${expression}. ` + `\\`params\\` should be awaited before using its properties. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`);\n}\nfunction createIncompleteEnumerationError(route, expression, missingProperties) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return new Error(`${prefix}used ${expression}. ` + `\\`params\\` should be awaited before using its properties. ` + `The following properties were not available through enumeration ` + `because they conflict with builtin property names: ` + `${describeListOfPropertyNames(missingProperties)}. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`);\n}\nfunction describeListOfPropertyNames(properties) {\n    switch(properties.length){\n        case 0:\n            throw new InvariantError('Expected describeListOfPropertyNames to be called with a non-empty list of strings.');\n        case 1:\n            return `\\`${properties[0]}\\``;\n        case 2:\n            return `\\`${properties[0]}\\` and \\`${properties[1]}\\``;\n        default:\n            {\n                let description = '';\n                for(let i = 0; i < properties.length - 1; i++){\n                    description += `\\`${properties[i]}\\`, `;\n                }\n                description += `, and \\`${properties[properties.length - 1]}\\``;\n                return description;\n            }\n    }\n}\n\n//# sourceMappingURL=params.js.map","import { ReflectAdapter } from '../web/spec-extension/adapters/reflect';\nimport { abortAndThrowOnSynchronousRequestDataAccess, throwToInterruptStaticGeneration, postponeWithTracking, trackDynamicDataInDynamicRender, annotateDynamicAccess, trackSynchronousRequestDataAccessInDev } from '../app-render/dynamic-rendering';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger';\nimport { describeStringPropertyAccess, describeHasCheckingStringProperty, throwWithStaticGenerationBailoutErrorWithDynamicError, wellKnownProperties } from './utils';\nimport { scheduleImmediate } from '../../lib/scheduler';\nexport function createSearchParamsFromClient(underlyingSearchParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderSearchParams(workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderSearchParams(underlyingSearchParams, workStore);\n}\n// generateMetadata always runs in RSC context so it is equivalent to a Server Page Component\nexport const createServerSearchParamsForMetadata = createServerSearchParamsForServerPage;\nexport function createServerSearchParamsForServerPage(underlyingSearchParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderSearchParams(workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderSearchParams(underlyingSearchParams, workStore);\n}\nexport function createPrerenderSearchParamsForClientPage(workStore) {\n    if (workStore.forceStatic) {\n        // When using forceStatic we override all other logic and always just return an empty\n        // dictionary object.\n        return Promise.resolve({});\n    }\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    if (prerenderStore && prerenderStore.type === 'prerender') {\n        // dynamicIO Prerender\n        // We're prerendering in a mode that aborts (dynamicIO) and should stall\n        // the promise to ensure the RSC side is considered dynamic\n        return makeHangingPromise(prerenderStore.renderSignal, '`searchParams`');\n    }\n    // We're prerendering in a mode that does not aborts. We resolve the promise without\n    // any tracking because we're just transporting a value from server to client where the tracking\n    // will be applied.\n    return Promise.resolve({});\n}\nfunction createPrerenderSearchParams(workStore, prerenderStore) {\n    if (workStore.forceStatic) {\n        // When using forceStatic we override all other logic and always just return an empty\n        // dictionary object.\n        return Promise.resolve({});\n    }\n    if (prerenderStore.type === 'prerender') {\n        // We are in a dynamicIO (PPR or otherwise) prerender\n        return makeAbortingExoticSearchParams(workStore.route, prerenderStore);\n    }\n    // The remaining cases are prerender-ppr and prerender-legacy\n    // We are in a legacy static generation and need to interrupt the prerender\n    // when search params are accessed.\n    return makeErroringExoticSearchParams(workStore, prerenderStore);\n}\nfunction createRenderSearchParams(underlyingSearchParams, workStore) {\n    if (workStore.forceStatic) {\n        // When using forceStatic we override all other logic and always just return an empty\n        // dictionary object.\n        return Promise.resolve({});\n    } else {\n        if (process.env.NODE_ENV === 'development' && !workStore.isPrefetchRequest) {\n            return makeDynamicallyTrackedExoticSearchParamsWithDevWarnings(underlyingSearchParams, workStore);\n        } else {\n            return makeUntrackedExoticSearchParams(underlyingSearchParams, workStore);\n        }\n    }\n}\nconst CachedSearchParams = new WeakMap();\nfunction makeAbortingExoticSearchParams(route, prerenderStore) {\n    const cachedSearchParams = CachedSearchParams.get(prerenderStore);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const promise = makeHangingPromise(prerenderStore.renderSignal, '`searchParams`');\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (Object.hasOwn(promise, prop)) {\n                // The promise has this property directly. we must return it.\n                // We know it isn't a dynamic access because it can only be something\n                // that was previously written to the promise and thus not an underlying searchParam value\n                return ReflectAdapter.get(target, prop, receiver);\n            }\n            switch(prop){\n                case 'then':\n                    {\n                        const expression = '`await searchParams`, `searchParams.then`, or similar';\n                        annotateDynamicAccess(expression, prerenderStore);\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n                case 'status':\n                    {\n                        const expression = '`use(searchParams)`, `searchParams.status`, or similar';\n                        annotateDynamicAccess(expression, prerenderStore);\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n                // Object prototype\n                case 'hasOwnProperty':\n                case 'isPrototypeOf':\n                case 'propertyIsEnumerable':\n                case 'toString':\n                case 'valueOf':\n                case 'toLocaleString':\n                // Promise prototype\n                // fallthrough\n                case 'catch':\n                case 'finally':\n                // Common tested properties\n                // fallthrough\n                case 'toJSON':\n                case '$$typeof':\n                case '__esModule':\n                    {\n                        // These properties cannot be shadowed because they need to be the\n                        // true underlying value for Promises to work correctly at runtime\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n                default:\n                    {\n                        if (typeof prop === 'string') {\n                            const expression = describeStringPropertyAccess('searchParams', prop);\n                            const error = createSearchAccessError(route, expression);\n                            abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n                        }\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n            }\n        },\n        has (target, prop) {\n            // We don't expect key checking to be used except for testing the existence of\n            // searchParams so we make all has tests trigger dynamic. this means that `promise.then`\n            // can resolve to the then function on the Promise prototype but 'then' in promise will assume\n            // you are testing whether the searchParams has a 'then' property.\n            if (typeof prop === 'string') {\n                const expression = describeHasCheckingStringProperty('searchParams', prop);\n                const error = createSearchAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n            return ReflectAdapter.has(target, prop);\n        },\n        ownKeys () {\n            const expression = '`{...searchParams}`, `Object.keys(searchParams)`, or similar';\n            const error = createSearchAccessError(route, expression);\n            abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n        }\n    });\n    CachedSearchParams.set(prerenderStore, proxiedPromise);\n    return proxiedPromise;\n}\nfunction makeErroringExoticSearchParams(workStore, prerenderStore) {\n    const cachedSearchParams = CachedSearchParams.get(workStore);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const underlyingSearchParams = {};\n    // For search params we don't construct a ReactPromise because we want to interrupt\n    // rendering on any property access that was not set from outside and so we only want\n    // to have properties like value and status if React sets them.\n    const promise = Promise.resolve(underlyingSearchParams);\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (Object.hasOwn(promise, prop)) {\n                // The promise has this property directly. we must return it.\n                // We know it isn't a dynamic access because it can only be something\n                // that was previously written to the promise and thus not an underlying searchParam value\n                return ReflectAdapter.get(target, prop, receiver);\n            }\n            switch(prop){\n                // Object prototype\n                case 'hasOwnProperty':\n                case 'isPrototypeOf':\n                case 'propertyIsEnumerable':\n                case 'toString':\n                case 'valueOf':\n                case 'toLocaleString':\n                // Promise prototype\n                // fallthrough\n                case 'catch':\n                case 'finally':\n                // Common tested properties\n                // fallthrough\n                case 'toJSON':\n                case '$$typeof':\n                case '__esModule':\n                    {\n                        // These properties cannot be shadowed because they need to be the\n                        // true underlying value for Promises to work correctly at runtime\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n                case 'then':\n                    {\n                        const expression = '`await searchParams`, `searchParams.then`, or similar';\n                        if (workStore.dynamicShouldError) {\n                            throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n                        } else if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no dynamicIO)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                        return;\n                    }\n                case 'status':\n                    {\n                        const expression = '`use(searchParams)`, `searchParams.status`, or similar';\n                        if (workStore.dynamicShouldError) {\n                            throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n                        } else if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no dynamicIO)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                        return;\n                    }\n                default:\n                    {\n                        if (typeof prop === 'string') {\n                            const expression = describeStringPropertyAccess('searchParams', prop);\n                            if (workStore.dynamicShouldError) {\n                                throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n                            } else if (prerenderStore.type === 'prerender-ppr') {\n                                // PPR Prerender (no dynamicIO)\n                                postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                            } else {\n                                // Legacy Prerender\n                                throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                            }\n                        }\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n            }\n        },\n        has (target, prop) {\n            // We don't expect key checking to be used except for testing the existence of\n            // searchParams so we make all has tests trigger dynamic. this means that `promise.then`\n            // can resolve to the then function on the Promise prototype but 'then' in promise will assume\n            // you are testing whether the searchParams has a 'then' property.\n            if (typeof prop === 'string') {\n                const expression = describeHasCheckingStringProperty('searchParams', prop);\n                if (workStore.dynamicShouldError) {\n                    throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n                } else if (prerenderStore.type === 'prerender-ppr') {\n                    // PPR Prerender (no dynamicIO)\n                    postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                } else {\n                    // Legacy Prerender\n                    throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                }\n                return false;\n            }\n            return ReflectAdapter.has(target, prop);\n        },\n        ownKeys () {\n            const expression = '`{...searchParams}`, `Object.keys(searchParams)`, or similar';\n            if (workStore.dynamicShouldError) {\n                throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n            } else if (prerenderStore.type === 'prerender-ppr') {\n                // PPR Prerender (no dynamicIO)\n                postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n            } else {\n                // Legacy Prerender\n                throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n            }\n        }\n    });\n    CachedSearchParams.set(workStore, proxiedPromise);\n    return proxiedPromise;\n}\nfunction makeUntrackedExoticSearchParams(underlyingSearchParams, store) {\n    const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    // We don't use makeResolvedReactPromise here because searchParams\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(underlyingSearchParams);\n    CachedSearchParams.set(underlyingSearchParams, promise);\n    Object.keys(underlyingSearchParams).forEach((prop)=>{\n        switch(prop){\n            // Object prototype\n            case 'hasOwnProperty':\n            case 'isPrototypeOf':\n            case 'propertyIsEnumerable':\n            case 'toString':\n            case 'valueOf':\n            case 'toLocaleString':\n            // Promise prototype\n            // fallthrough\n            case 'then':\n            case 'catch':\n            case 'finally':\n            // React Promise extension\n            // fallthrough\n            case 'status':\n            // Common tested properties\n            // fallthrough\n            case 'toJSON':\n            case '$$typeof':\n            case '__esModule':\n                {\n                    break;\n                }\n            default:\n                {\n                    Object.defineProperty(promise, prop, {\n                        get () {\n                            const workUnitStore = workUnitAsyncStorage.getStore();\n                            trackDynamicDataInDynamicRender(store, workUnitStore);\n                            return underlyingSearchParams[prop];\n                        },\n                        set (value) {\n                            Object.defineProperty(promise, prop, {\n                                value,\n                                writable: true,\n                                enumerable: true\n                            });\n                        },\n                        enumerable: true,\n                        configurable: true\n                    });\n                }\n        }\n    });\n    return promise;\n}\nfunction makeDynamicallyTrackedExoticSearchParamsWithDevWarnings(underlyingSearchParams, store) {\n    const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const proxiedProperties = new Set();\n    const unproxiedProperties = [];\n    // We have an unfortunate sequence of events that requires this initialization logic. We want to instrument the underlying\n    // searchParams object to detect if you are accessing values in dev. This is used for warnings and for things like the static prerender\n    // indicator. However when we pass this proxy to our Promise.resolve() below the VM checks if the resolved value is a promise by looking\n    // at the `.then` property. To our dynamic tracking logic this is indistinguishable from a `then` searchParam and so we would normally trigger\n    // dynamic tracking. However we know that this .then is not real dynamic access, it's just how thenables resolve in sequence. So we introduce\n    // this initialization concept so we omit the dynamic check until after we've constructed our resolved promise.\n    let promiseInitialized = false;\n    const proxiedUnderlying = new Proxy(underlyingSearchParams, {\n        get (target, prop, receiver) {\n            if (typeof prop === 'string' && promiseInitialized) {\n                if (store.dynamicShouldError) {\n                    const expression = describeStringPropertyAccess('searchParams', prop);\n                    throwWithStaticGenerationBailoutErrorWithDynamicError(store.route, expression);\n                }\n                const workUnitStore = workUnitAsyncStorage.getStore();\n                trackDynamicDataInDynamicRender(store, workUnitStore);\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        has (target, prop) {\n            if (typeof prop === 'string') {\n                if (store.dynamicShouldError) {\n                    const expression = describeHasCheckingStringProperty('searchParams', prop);\n                    throwWithStaticGenerationBailoutErrorWithDynamicError(store.route, expression);\n                }\n            }\n            return Reflect.has(target, prop);\n        },\n        ownKeys (target) {\n            if (store.dynamicShouldError) {\n                const expression = '`{...searchParams}`, `Object.keys(searchParams)`, or similar';\n                throwWithStaticGenerationBailoutErrorWithDynamicError(store.route, expression);\n            }\n            return Reflect.ownKeys(target);\n        }\n    });\n    // We don't use makeResolvedReactPromise here because searchParams\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = new Promise((resolve)=>scheduleImmediate(()=>resolve(underlyingSearchParams)));\n    promise.then(()=>{\n        promiseInitialized = true;\n    });\n    Object.keys(underlyingSearchParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n            // These properties cannot be shadowed because they need to be the\n            // true underlying value for Promises to work correctly at runtime\n            unproxiedProperties.push(prop);\n        } else {\n            proxiedProperties.add(prop);\n            Object.defineProperty(promise, prop, {\n                get () {\n                    return proxiedUnderlying[prop];\n                },\n                set (newValue) {\n                    Object.defineProperty(promise, prop, {\n                        value: newValue,\n                        writable: true,\n                        enumerable: true\n                    });\n                },\n                enumerable: true,\n                configurable: true\n            });\n        }\n    });\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (prop === 'then' && store.dynamicShouldError) {\n                const expression = '`searchParams.then`';\n                throwWithStaticGenerationBailoutErrorWithDynamicError(store.route, expression);\n            }\n            if (typeof prop === 'string') {\n                if (!wellKnownProperties.has(prop) && (proxiedProperties.has(prop) || // We are accessing a property that doesn't exist on the promise nor\n                // the underlying searchParams.\n                Reflect.has(target, prop) === false)) {\n                    const expression = describeStringPropertyAccess('searchParams', prop);\n                    syncIODev(store.route, expression);\n                }\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        set (target, prop, value, receiver) {\n            if (typeof prop === 'string') {\n                proxiedProperties.delete(prop);\n            }\n            return Reflect.set(target, prop, value, receiver);\n        },\n        has (target, prop) {\n            if (typeof prop === 'string') {\n                if (!wellKnownProperties.has(prop) && (proxiedProperties.has(prop) || // We are accessing a property that doesn't exist on the promise nor\n                // the underlying searchParams.\n                Reflect.has(target, prop) === false)) {\n                    const expression = describeHasCheckingStringProperty('searchParams', prop);\n                    syncIODev(store.route, expression);\n                }\n            }\n            return Reflect.has(target, prop);\n        },\n        ownKeys (target) {\n            const expression = '`Object.keys(searchParams)` or similar';\n            syncIODev(store.route, expression, unproxiedProperties);\n            return Reflect.ownKeys(target);\n        }\n    });\n    CachedSearchParams.set(underlyingSearchParams, proxiedPromise);\n    return proxiedPromise;\n}\nfunction syncIODev(route, expression, missingProperties) {\n    // In all cases we warn normally\n    if (missingProperties && missingProperties.length > 0) {\n        warnForIncompleteEnumeration(route, expression, missingProperties);\n    } else {\n        warnForSyncAccess(route, expression);\n    }\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore && workUnitStore.type === 'request' && workUnitStore.prerenderPhase === true) {\n        // When we're rendering dynamically in dev we need to advance out of the\n        // Prerender environment when we read Request data synchronously\n        const requestStore = workUnitStore;\n        trackSynchronousRequestDataAccessInDev(requestStore);\n    }\n}\nconst noop = ()=>{};\nconst warnForSyncAccess = process.env.__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS ? noop : createDedupedByCallsiteServerErrorLoggerDev(createSearchAccessError);\nconst warnForIncompleteEnumeration = process.env.__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS ? noop : createDedupedByCallsiteServerErrorLoggerDev(createIncompleteEnumerationError);\nfunction createSearchAccessError(route, expression) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return new Error(`${prefix}used ${expression}. ` + `\\`searchParams\\` should be awaited before using its properties. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`);\n}\nfunction createIncompleteEnumerationError(route, expression, missingProperties) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return new Error(`${prefix}used ${expression}. ` + `\\`searchParams\\` should be awaited before using its properties. ` + `The following properties were not available through enumeration ` + `because they conflict with builtin or well-known property names: ` + `${describeListOfPropertyNames(missingProperties)}. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`);\n}\nfunction describeListOfPropertyNames(properties) {\n    switch(properties.length){\n        case 0:\n            throw new InvariantError('Expected describeListOfPropertyNames to be called with a non-empty list of strings.');\n        case 1:\n            return `\\`${properties[0]}\\``;\n        case 2:\n            return `\\`${properties[0]}\\` and \\`${properties[1]}\\``;\n        default:\n            {\n                let description = '';\n                for(let i = 0; i < properties.length - 1; i++){\n                    description += `\\`${properties[i]}\\`, `;\n                }\n                description += `, and \\`${properties[properties.length - 1]}\\``;\n                return description;\n            }\n    }\n}\n\n//# sourceMappingURL=search-params.js.map","import { StaticGenBailoutError } from '../../client/components/static-generation-bailout';\n// This regex will have fast negatives meaning valid identifiers may not pass\n// this test. However this is only used during static generation to provide hints\n// about why a page bailed out of some or all prerendering and we can use bracket notation\n// for example while `ಠ_ಠ` is a valid identifier it's ok to print `searchParams['ಠ_ಠ']`\n// even if this would have been fine too `searchParams.ಠ_ಠ`\nconst isDefinitelyAValidIdentifier = /^[A-Za-z_$][A-Za-z0-9_$]*$/;\nexport function describeStringPropertyAccess(target, prop) {\n    if (isDefinitelyAValidIdentifier.test(prop)) {\n        return `\\`${target}.${prop}\\``;\n    }\n    return `\\`${target}[${JSON.stringify(prop)}]\\``;\n}\nexport function describeHasCheckingStringProperty(target, prop) {\n    const stringifiedProp = JSON.stringify(prop);\n    return `\\`Reflect.has(${target}, ${stringifiedProp})\\`, \\`${stringifiedProp} in ${target}\\`, or similar`;\n}\nexport function throwWithStaticGenerationBailoutError(route, expression) {\n    throw new StaticGenBailoutError(`Route ${route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`);\n}\nexport function throwWithStaticGenerationBailoutErrorWithDynamicError(route, expression) {\n    throw new StaticGenBailoutError(`Route ${route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`);\n}\nexport const wellKnownProperties = new Set([\n    'hasOwnProperty',\n    'isPrototypeOf',\n    'propertyIsEnumerable',\n    'toString',\n    'valueOf',\n    'toLocaleString',\n    // Promise prototype\n    // fallthrough\n    'then',\n    'catch',\n    'finally',\n    // React Promise extension\n    // fallthrough\n    'status',\n    // React introspection\n    'displayName',\n    // Common tested properties\n    // fallthrough\n    'toJSON',\n    '$$typeof',\n    '__esModule'\n]);\n\n//# sourceMappingURL=utils.js.map","import { CachedRouteKind } from './types';\nimport { Batcher } from '../../lib/batcher';\nimport { scheduleOnNextTick } from '../../lib/scheduler';\nimport { fromResponseCacheEntry, routeKindToIncrementalCacheKind, toResponseCacheEntry } from './utils';\nexport * from './types';\nexport default class ResponseCache {\n    constructor(minimalMode){\n        this.batcher = Batcher.create({\n            // Ensure on-demand revalidate doesn't block normal requests, it should be\n            // safe to run an on-demand revalidate for the same key as a normal request.\n            cacheKeyFn: ({ key, isOnDemandRevalidate })=>`${key}-${isOnDemandRevalidate ? '1' : '0'}`,\n            // We wait to do any async work until after we've added our promise to\n            // `pendingResponses` to ensure that any any other calls will reuse the\n            // same promise until we've fully finished our work.\n            schedulerFn: scheduleOnNextTick\n        });\n        // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n        // because we replace this.minimalMode to true in production bundles.\n        const minimalModeKey = 'minimalMode';\n        this[minimalModeKey] = minimalMode;\n    }\n    async get(key, responseGenerator, context) {\n        // If there is no key for the cache, we can't possibly look this up in the\n        // cache so just return the result of the response generator.\n        if (!key) {\n            return responseGenerator({\n                hasResolved: false,\n                previousCacheEntry: null\n            });\n        }\n        const { incrementalCache, isOnDemandRevalidate = false, isFallback = false, isRoutePPREnabled = false } = context;\n        const response = await this.batcher.batch({\n            key,\n            isOnDemandRevalidate\n        }, async (cacheKey, resolve)=>{\n            var _this_previousCacheItem;\n            // We keep the previous cache entry around to leverage when the\n            // incremental cache is disabled in minimal mode.\n            if (this.minimalMode && ((_this_previousCacheItem = this.previousCacheItem) == null ? void 0 : _this_previousCacheItem.key) === cacheKey && this.previousCacheItem.expiresAt > Date.now()) {\n                return this.previousCacheItem.entry;\n            }\n            // Coerce the kindHint into a given kind for the incremental cache.\n            const kind = routeKindToIncrementalCacheKind(context.routeKind);\n            let resolved = false;\n            let cachedResponse = null;\n            try {\n                cachedResponse = !this.minimalMode ? await incrementalCache.get(key, {\n                    kind,\n                    isRoutePPREnabled: context.isRoutePPREnabled,\n                    isFallback\n                }) : null;\n                if (cachedResponse && !isOnDemandRevalidate) {\n                    var _cachedResponse_value;\n                    if (((_cachedResponse_value = cachedResponse.value) == null ? void 0 : _cachedResponse_value.kind) === CachedRouteKind.FETCH) {\n                        throw new Error(`invariant: unexpected cachedResponse of kind fetch in response cache`);\n                    }\n                    resolve({\n                        ...cachedResponse,\n                        revalidate: cachedResponse.curRevalidate\n                    });\n                    resolved = true;\n                    if (!cachedResponse.isStale || context.isPrefetch) {\n                        // The cached value is still valid, so we don't need\n                        // to update it yet.\n                        return null;\n                    }\n                }\n                const cacheEntry = await responseGenerator({\n                    hasResolved: resolved,\n                    previousCacheEntry: cachedResponse,\n                    isRevalidating: true\n                });\n                // If the cache entry couldn't be generated, we don't want to cache\n                // the result.\n                if (!cacheEntry) {\n                    // Unset the previous cache item if it was set.\n                    if (this.minimalMode) this.previousCacheItem = undefined;\n                    return null;\n                }\n                const resolveValue = await fromResponseCacheEntry({\n                    ...cacheEntry,\n                    isMiss: !cachedResponse\n                });\n                if (!resolveValue) {\n                    // Unset the previous cache item if it was set.\n                    if (this.minimalMode) this.previousCacheItem = undefined;\n                    return null;\n                }\n                // For on-demand revalidate wait to resolve until cache is set.\n                // Otherwise resolve now.\n                if (!isOnDemandRevalidate && !resolved) {\n                    resolve(resolveValue);\n                    resolved = true;\n                }\n                // We want to persist the result only if it has a revalidate value\n                // defined.\n                if (typeof resolveValue.revalidate !== 'undefined') {\n                    if (this.minimalMode) {\n                        this.previousCacheItem = {\n                            key: cacheKey,\n                            entry: resolveValue,\n                            expiresAt: Date.now() + 1000\n                        };\n                    } else {\n                        await incrementalCache.set(key, resolveValue.value, {\n                            revalidate: resolveValue.revalidate,\n                            isRoutePPREnabled,\n                            isFallback\n                        });\n                    }\n                }\n                return resolveValue;\n            } catch (err) {\n                // When a getStaticProps path is erroring we automatically re-set the\n                // existing cache under a new expiration to prevent non-stop retrying.\n                if (cachedResponse) {\n                    await incrementalCache.set(key, cachedResponse.value, {\n                        revalidate: Math.min(Math.max(cachedResponse.revalidate || 3, 3), 30),\n                        isRoutePPREnabled,\n                        isFallback\n                    });\n                }\n                // While revalidating in the background we can't reject as we already\n                // resolved the cache entry so log the error here.\n                if (resolved) {\n                    console.error(err);\n                    return null;\n                }\n                // We haven't resolved yet, so let's throw to indicate an error.\n                throw err;\n            }\n        });\n        return toResponseCacheEntry(response);\n    }\n}\n\n//# sourceMappingURL=index.js.map","export var CachedRouteKind;\n(function(CachedRouteKind) {\n    CachedRouteKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    CachedRouteKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    CachedRouteKind[\"PAGES\"] = \"PAGES\";\n    CachedRouteKind[\"FETCH\"] = \"FETCH\";\n    CachedRouteKind[\"REDIRECT\"] = \"REDIRECT\";\n    CachedRouteKind[\"IMAGE\"] = \"IMAGE\";\n})(CachedRouteKind || (CachedRouteKind = {}));\nexport var IncrementalCacheKind;\n(function(IncrementalCacheKind) {\n    IncrementalCacheKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    IncrementalCacheKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    IncrementalCacheKind[\"PAGES\"] = \"PAGES\";\n    IncrementalCacheKind[\"FETCH\"] = \"FETCH\";\n    IncrementalCacheKind[\"IMAGE\"] = \"IMAGE\";\n})(IncrementalCacheKind || (IncrementalCacheKind = {}));\n\n//# sourceMappingURL=types.js.map","import { CachedRouteKind, IncrementalCacheKind } from './types';\nimport RenderResult from '../render-result';\nimport { RouteKind } from '../route-kind';\nexport async function fromResponseCacheEntry(cacheEntry) {\n    var _cacheEntry_value, _cacheEntry_value1;\n    return {\n        ...cacheEntry,\n        value: ((_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) === CachedRouteKind.PAGES ? {\n            kind: CachedRouteKind.PAGES,\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            pageData: cacheEntry.value.pageData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status\n        } : ((_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind) === CachedRouteKind.APP_PAGE ? {\n            kind: CachedRouteKind.APP_PAGE,\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            postponed: cacheEntry.value.postponed,\n            rscData: cacheEntry.value.rscData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status,\n            segmentData: cacheEntry.value.segmentData\n        } : cacheEntry.value\n    };\n}\nexport async function toResponseCacheEntry(response) {\n    var _response_value, _response_value1, _response_value2;\n    if (!response) return null;\n    if (((_response_value = response.value) == null ? void 0 : _response_value.kind) === CachedRouteKind.FETCH) {\n        throw new Error('Invariant: unexpected cachedResponse of kind fetch in response cache');\n    }\n    return {\n        isMiss: response.isMiss,\n        isStale: response.isStale,\n        revalidate: response.revalidate,\n        isFallback: response.isFallback,\n        value: ((_response_value1 = response.value) == null ? void 0 : _response_value1.kind) === CachedRouteKind.PAGES ? {\n            kind: CachedRouteKind.PAGES,\n            html: RenderResult.fromStatic(response.value.html),\n            pageData: response.value.pageData,\n            headers: response.value.headers,\n            status: response.value.status\n        } : ((_response_value2 = response.value) == null ? void 0 : _response_value2.kind) === CachedRouteKind.APP_PAGE ? {\n            kind: CachedRouteKind.APP_PAGE,\n            html: RenderResult.fromStatic(response.value.html),\n            rscData: response.value.rscData,\n            headers: response.value.headers,\n            status: response.value.status,\n            postponed: response.value.postponed,\n            segmentData: response.value.segmentData\n        } : response.value\n    };\n}\nexport function routeKindToIncrementalCacheKind(routeKind) {\n    switch(routeKind){\n        case RouteKind.PAGES:\n            return IncrementalCacheKind.PAGES;\n        case RouteKind.APP_PAGE:\n            return IncrementalCacheKind.APP_PAGE;\n        case RouteKind.IMAGE:\n            return IncrementalCacheKind.IMAGE;\n        case RouteKind.APP_ROUTE:\n            return IncrementalCacheKind.APP_ROUTE;\n        default:\n            throw new Error(`Unexpected route kind ${routeKind}`);\n    }\n}\n\n//# sourceMappingURL=utils.js.map","export var RouteKind;\n(function(RouteKind) {\n    /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */ RouteKind[\"PAGES\"] = \"PAGES\";\n    /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */ RouteKind[\"PAGES_API\"] = \"PAGES_API\";\n    /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */ RouteKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */ RouteKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */ RouteKind[\"IMAGE\"] = \"IMAGE\";\n})(RouteKind || (RouteKind = {}));\n\n//# sourceMappingURL=route-kind.js.map","/**\n * RouteModule is the base class for all route modules. This class should be\n * extended by all route modules.\n */ export class RouteModule {\n    constructor({ userland, definition }){\n        this.userland = userland;\n        this.definition = definition;\n    }\n}\n\n//# sourceMappingURL=route-module.js.map","import React from 'react'\nimport type { NextRouter } from './router/router'\n\nexport const RouterContext = React.createContext<NextRouter | null>(null)\n\nif (process.env.NODE_ENV !== 'production') {\n  RouterContext.displayName = 'RouterContext'\n}\n","import React from 'react'\n\nexport const AmpStateContext: React.Context<any> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  AmpStateContext.displayName = 'AmpStateContext'\n}\n","export const VALID_LOADERS = [\n  'default',\n  'imgix',\n  'cloudinary',\n  'akamai',\n  'custom',\n] as const\n\nexport type LoaderValue = (typeof VALID_LOADERS)[number]\n\nexport type ImageLoaderProps = {\n  src: string\n  width: number\n  quality?: number\n}\n\nexport type ImageLoaderPropsWithConfig = ImageLoaderProps & {\n  config: Readonly<ImageConfig>\n}\n\nexport type LocalPattern = {\n  /**\n   * Can be literal or wildcard.\n   * Single `*` matches a single path segment.\n   * Double `**` matches any number of path segments.\n   */\n  pathname?: string\n\n  /**\n   * Can be literal query string such as `?v=1` or\n   * empty string meaning no query string.\n   */\n  search?: string\n}\n\nexport type RemotePattern = {\n  /**\n   * Must be `http` or `https`.\n   */\n  protocol?: 'http' | 'https'\n\n  /**\n   * Can be literal or wildcard.\n   * Single `*` matches a single subdomain.\n   * Double `**` matches any number of subdomains.\n   */\n  hostname: string\n\n  /**\n   * Can be literal port such as `8080` or empty string\n   * meaning no port.\n   */\n  port?: string\n\n  /**\n   * Can be literal or wildcard.\n   * Single `*` matches a single path segment.\n   * Double `**` matches any number of path segments.\n   */\n  pathname?: string\n\n  /**\n   * Can be literal query string such as `?v=1` or\n   * empty string meaning no query string.\n   */\n  search?: string\n}\n\ntype ImageFormat = 'image/avif' | 'image/webp'\n\n/**\n * Image configurations\n *\n * @see [Image configuration options](https://nextjs.org/docs/api-reference/next/image#configuration-options)\n */\nexport type ImageConfigComplete = {\n  /** @see [Device sizes documentation](https://nextjs.org/docs/api-reference/next/image#device-sizes) */\n  deviceSizes: number[]\n\n  /** @see [Image sizing documentation](https://nextjs.org/docs/basic-features/image-optimization#image-sizing) */\n  imageSizes: number[]\n\n  /** @see [Image loaders configuration](https://nextjs.org/docs/api-reference/next/legacy/image#loader) */\n  loader: LoaderValue\n\n  /** @see [Image loader configuration](https://nextjs.org/docs/api-reference/next/legacy/image#loader-configuration) */\n  path: string\n\n  /** @see [Image loader configuration](https://nextjs.org/docs/api-reference/next/image#loader-configuration) */\n  loaderFile: string\n\n  /**\n   * @deprecated Use `remotePatterns` instead.\n   */\n  domains: string[]\n\n  /** @see [Disable static image import configuration](https://nextjs.org/docs/api-reference/next/image#disable-static-imports) */\n  disableStaticImages: boolean\n\n  /** @see [Cache behavior](https://nextjs.org/docs/api-reference/next/image#caching-behavior) */\n  minimumCacheTTL: number\n\n  /** @see [Acceptable formats](https://nextjs.org/docs/api-reference/next/image#acceptable-formats) */\n  formats: ImageFormat[]\n\n  /** @see [Dangerously Allow SVG](https://nextjs.org/docs/api-reference/next/image#dangerously-allow-svg) */\n  dangerouslyAllowSVG: boolean\n\n  /** @see [Dangerously Allow SVG](https://nextjs.org/docs/api-reference/next/image#dangerously-allow-svg) */\n  contentSecurityPolicy: string\n\n  /** @see [Dangerously Allow SVG](https://nextjs.org/docs/api-reference/next/image#dangerously-allow-svg) */\n  contentDispositionType: 'inline' | 'attachment'\n\n  /** @see [Remote Patterns](https://nextjs.org/docs/api-reference/next/image#remotepatterns) */\n  remotePatterns: RemotePattern[]\n\n  /** @see [Remote Patterns](https://nextjs.org/docs/api-reference/next/image#localPatterns) */\n  localPatterns: LocalPattern[] | undefined\n\n  /** @see [Unoptimized](https://nextjs.org/docs/api-reference/next/image#unoptimized) */\n  unoptimized: boolean\n}\n\nexport type ImageConfig = Partial<ImageConfigComplete>\n\nexport const imageConfigDefault: ImageConfigComplete = {\n  deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],\n  imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],\n  path: '/_next/image',\n  loader: 'default',\n  loaderFile: '',\n  domains: [],\n  disableStaticImages: false,\n  minimumCacheTTL: 60,\n  formats: ['image/webp'],\n  dangerouslyAllowSVG: false,\n  contentSecurityPolicy: `script-src 'none'; frame-src 'none'; sandbox;`,\n  contentDispositionType: 'attachment',\n  localPatterns: undefined, // default: allow all local images\n  remotePatterns: [], // default: allow no remote images\n  unoptimized: false,\n}\n","import React from 'react'\nimport type { ImageConfigComplete } from './image-config'\nimport { imageConfigDefault } from './image-config'\n\nexport const ImageConfigContext =\n  React.createContext<ImageConfigComplete>(imageConfigDefault)\n\nif (process.env.NODE_ENV !== 'production') {\n  ImageConfigContext.displayName = 'ImageConfigContext'\n}\n","export * as HeadManagerContext from '../../../../../shared/lib/head-manager-context.shared-runtime';\nexport * as ServerInsertedHtml from '../../../../../shared/lib/server-inserted-html.shared-runtime';\nexport * as AppRouterContext from '../../../../../shared/lib/app-router-context.shared-runtime';\nexport * as HooksClientContext from '../../../../../shared/lib/hooks-client-context.shared-runtime';\nexport * as RouterContext from '../../../../../shared/lib/router-context.shared-runtime';\nexport * as AmpContext from '../../../../../shared/lib/amp-context.shared-runtime';\nexport * as ImageConfigContext from '../../../../../shared/lib/image-config-context.shared-runtime';\n\n//# sourceMappingURL=entrypoints.js.map","import { renderToHTMLOrFlight } from '../../app-render/app-render';\nimport { RouteModule } from '../route-module';\nimport * as vendoredContexts from './vendored/contexts/entrypoints';\nlet vendoredReactRSC;\nlet vendoredReactSSR;\n// the vendored Reacts are loaded from their original source in the edge runtime\nif (process.env.NEXT_RUNTIME !== 'edge') {\n    vendoredReactRSC = require('./vendored/rsc/entrypoints');\n    vendoredReactSSR = require('./vendored/ssr/entrypoints');\n}\nexport class AppPageRouteModule extends RouteModule {\n    render(req, res, context) {\n        return renderToHTMLOrFlight(req, res, context.page, context.query, context.fallbackRouteParams, context.renderOpts, context.serverComponentsHmrCache);\n    }\n}\nconst vendored = {\n    'react-rsc': vendoredReactRSC,\n    'react-ssr': vendoredReactSSR,\n    contexts: vendoredContexts\n};\nexport { renderToHTMLOrFlight, vendored };\nexport default AppPageRouteModule;\n\n//# sourceMappingURL=module.js.map","export const ENCODED_TAGS = {\n    // opening tags do not have the closing `>` since they can contain other attributes such as `<body className=''>`\n    OPENING: {\n        // <html\n        HTML: new Uint8Array([\n            60,\n            104,\n            116,\n            109,\n            108\n        ]),\n        // <body\n        BODY: new Uint8Array([\n            60,\n            98,\n            111,\n            100,\n            121\n        ])\n    },\n    CLOSED: {\n        // </head>\n        HEAD: new Uint8Array([\n            60,\n            47,\n            104,\n            101,\n            97,\n            100,\n            62\n        ]),\n        // </body>\n        BODY: new Uint8Array([\n            60,\n            47,\n            98,\n            111,\n            100,\n            121,\n            62\n        ]),\n        // </html>\n        HTML: new Uint8Array([\n            60,\n            47,\n            104,\n            116,\n            109,\n            108,\n            62\n        ]),\n        // </body></html>\n        BODY_AND_HTML: new Uint8Array([\n            60,\n            47,\n            98,\n            111,\n            100,\n            121,\n            62,\n            60,\n            47,\n            104,\n            116,\n            109,\n            108,\n            62\n        ])\n    }\n};\n\n//# sourceMappingURL=encodedTags.js.map","/**\n * Find the starting index of Uint8Array `b` within Uint8Array `a`.\n */ export function indexOfUint8Array(a, b) {\n    if (b.length === 0) return 0;\n    if (a.length === 0 || b.length > a.length) return -1;\n    // start iterating through `a`\n    for(let i = 0; i <= a.length - b.length; i++){\n        let completeMatch = true;\n        // from index `i`, iterate through `b` and check for mismatch\n        for(let j = 0; j < b.length; j++){\n            // if the values do not match, then this isn't a complete match, exit `b` iteration early and iterate to next index of `a`.\n            if (a[i + j] !== b[j]) {\n                completeMatch = false;\n                break;\n            }\n        }\n        if (completeMatch) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Check if two Uint8Arrays are strictly equivalent.\n */ export function isEquivalentUint8Arrays(a, b) {\n    if (a.length !== b.length) return false;\n    for(let i = 0; i < a.length; i++){\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n/**\n * Remove Uint8Array `b` from Uint8Array `a`.\n *\n * If `b` is not in `a`, `a` is returned unchanged.\n *\n * Otherwise, the function returns a new Uint8Array instance with size `a.length - b.length`\n */ export function removeFromUint8Array(a, b) {\n    const tagIndex = indexOfUint8Array(a, b);\n    if (tagIndex === 0) return a.subarray(b.length);\n    if (tagIndex > -1) {\n        const removed = new Uint8Array(a.length - b.length);\n        removed.set(a.slice(0, tagIndex));\n        removed.set(a.slice(tagIndex + b.length), tagIndex);\n        return removed;\n    } else {\n        return a;\n    }\n}\n\n//# sourceMappingURL=uint8array-helpers.js.map","import { getTracer } from '../lib/trace/tracer';\nimport { AppRenderSpan } from '../lib/trace/constants';\nimport { DetachedPromise } from '../../lib/detached-promise';\nimport { scheduleImmediate, atLeastOneTask } from '../../lib/scheduler';\nimport { ENCODED_TAGS } from './encodedTags';\nimport { indexOfUint8Array, isEquivalentUint8Arrays, removeFromUint8Array } from './uint8array-helpers';\nfunction voidCatch() {\n// this catcher is designed to be used with pipeTo where we expect the underlying\n// pipe implementation to forward errors but we don't want the pipeTo promise to reject\n// and be unhandled\n}\n// We can share the same encoder instance everywhere\n// Notably we cannot do the same for TextDecoder because it is stateful\n// when handling streaming data\nconst encoder = new TextEncoder();\nexport function chainStreams(...streams) {\n    // We could encode this invariant in the arguments but current uses of this function pass\n    // use spread so it would be missed by\n    if (streams.length === 0) {\n        throw new Error('Invariant: chainStreams requires at least one stream');\n    }\n    // If we only have 1 stream we fast path it by returning just this stream\n    if (streams.length === 1) {\n        return streams[0];\n    }\n    const { readable, writable } = new TransformStream();\n    // We always initiate pipeTo immediately. We know we have at least 2 streams\n    // so we need to avoid closing the writable when this one finishes.\n    let promise = streams[0].pipeTo(writable, {\n        preventClose: true\n    });\n    let i = 1;\n    for(; i < streams.length - 1; i++){\n        const nextStream = streams[i];\n        promise = promise.then(()=>nextStream.pipeTo(writable, {\n                preventClose: true\n            }));\n    }\n    // We can omit the length check because we halted before the last stream and there\n    // is at least two streams so the lastStream here will always be defined\n    const lastStream = streams[i];\n    promise = promise.then(()=>lastStream.pipeTo(writable));\n    // Catch any errors from the streams and ignore them, they will be handled\n    // by whatever is consuming the readable stream.\n    promise.catch(voidCatch);\n    return readable;\n}\nexport function streamFromString(str) {\n    return new ReadableStream({\n        start (controller) {\n            controller.enqueue(encoder.encode(str));\n            controller.close();\n        }\n    });\n}\nexport function streamFromBuffer(chunk) {\n    return new ReadableStream({\n        start (controller) {\n            controller.enqueue(chunk);\n            controller.close();\n        }\n    });\n}\nexport async function streamToBuffer(stream) {\n    const reader = stream.getReader();\n    const chunks = [];\n    while(true){\n        const { done, value } = await reader.read();\n        if (done) {\n            break;\n        }\n        chunks.push(value);\n    }\n    return Buffer.concat(chunks);\n}\nexport async function streamToString(stream) {\n    const decoder = new TextDecoder('utf-8', {\n        fatal: true\n    });\n    let string = '';\n    for await (const chunk of stream){\n        string += decoder.decode(chunk, {\n            stream: true\n        });\n    }\n    string += decoder.decode();\n    return string;\n}\nexport function createBufferedTransformStream() {\n    let bufferedChunks = [];\n    let bufferByteLength = 0;\n    let pending;\n    const flush = (controller)=>{\n        // If we already have a pending flush, then return early.\n        if (pending) return;\n        const detached = new DetachedPromise();\n        pending = detached;\n        scheduleImmediate(()=>{\n            try {\n                const chunk = new Uint8Array(bufferByteLength);\n                let copiedBytes = 0;\n                for(let i = 0; i < bufferedChunks.length; i++){\n                    const bufferedChunk = bufferedChunks[i];\n                    chunk.set(bufferedChunk, copiedBytes);\n                    copiedBytes += bufferedChunk.byteLength;\n                }\n                // We just wrote all the buffered chunks so we need to reset the bufferedChunks array\n                // and our bufferByteLength to prepare for the next round of buffered chunks\n                bufferedChunks.length = 0;\n                bufferByteLength = 0;\n                controller.enqueue(chunk);\n            } catch  {\n            // If an error occurs while enqueuing it can't be due to this\n            // transformers fault. It's likely due to the controller being\n            // errored due to the stream being cancelled.\n            } finally{\n                pending = undefined;\n                detached.resolve();\n            }\n        });\n    };\n    return new TransformStream({\n        transform (chunk, controller) {\n            // Combine the previous buffer with the new chunk.\n            bufferedChunks.push(chunk);\n            bufferByteLength += chunk.byteLength;\n            // Flush the buffer to the controller.\n            flush(controller);\n        },\n        flush () {\n            if (!pending) return;\n            return pending.promise;\n        }\n    });\n}\nfunction createInsertedHTMLStream(getServerInsertedHTML) {\n    return new TransformStream({\n        transform: async (chunk, controller)=>{\n            const html = await getServerInsertedHTML();\n            if (html) {\n                controller.enqueue(encoder.encode(html));\n            }\n            controller.enqueue(chunk);\n        }\n    });\n}\nexport function renderToInitialFizzStream({ ReactDOMServer, element, streamOptions }) {\n    return getTracer().trace(AppRenderSpan.renderToReadableStream, async ()=>ReactDOMServer.renderToReadableStream(element, streamOptions));\n}\nfunction createHeadInsertionTransformStream(insert) {\n    let inserted = false;\n    let freezing = false;\n    // We need to track if this transform saw any bytes because if it didn't\n    // we won't want to insert any server HTML at all\n    let hasBytes = false;\n    return new TransformStream({\n        async transform (chunk, controller) {\n            hasBytes = true;\n            // While react is flushing chunks, we don't apply insertions\n            if (freezing) {\n                controller.enqueue(chunk);\n                return;\n            }\n            const insertion = await insert();\n            if (inserted) {\n                if (insertion) {\n                    const encodedInsertion = encoder.encode(insertion);\n                    controller.enqueue(encodedInsertion);\n                }\n                controller.enqueue(chunk);\n                freezing = true;\n            } else {\n                // TODO (@Ethan-Arrowood): Replace the generic `indexOfUint8Array` method with something finely tuned for the subset of things actually being checked for.\n                const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.HEAD);\n                if (index !== -1) {\n                    if (insertion) {\n                        const encodedInsertion = encoder.encode(insertion);\n                        const insertedHeadContent = new Uint8Array(chunk.length + encodedInsertion.length);\n                        insertedHeadContent.set(chunk.slice(0, index));\n                        insertedHeadContent.set(encodedInsertion, index);\n                        insertedHeadContent.set(chunk.slice(index), index + encodedInsertion.length);\n                        controller.enqueue(insertedHeadContent);\n                    } else {\n                        controller.enqueue(chunk);\n                    }\n                    freezing = true;\n                    inserted = true;\n                }\n            }\n            if (!inserted) {\n                controller.enqueue(chunk);\n            } else {\n                scheduleImmediate(()=>{\n                    freezing = false;\n                });\n            }\n        },\n        async flush (controller) {\n            // Check before closing if there's anything remaining to insert.\n            if (hasBytes) {\n                const insertion = await insert();\n                if (insertion) {\n                    controller.enqueue(encoder.encode(insertion));\n                }\n            }\n        }\n    });\n}\n// Suffix after main body content - scripts before </body>,\n// but wait for the major chunks to be enqueued.\nfunction createDeferredSuffixStream(suffix) {\n    let flushed = false;\n    let pending;\n    const flush = (controller)=>{\n        const detached = new DetachedPromise();\n        pending = detached;\n        scheduleImmediate(()=>{\n            try {\n                controller.enqueue(encoder.encode(suffix));\n            } catch  {\n            // If an error occurs while enqueuing it can't be due to this\n            // transformers fault. It's likely due to the controller being\n            // errored due to the stream being cancelled.\n            } finally{\n                pending = undefined;\n                detached.resolve();\n            }\n        });\n    };\n    return new TransformStream({\n        transform (chunk, controller) {\n            controller.enqueue(chunk);\n            // If we've already flushed, we're done.\n            if (flushed) return;\n            // Schedule the flush to happen.\n            flushed = true;\n            flush(controller);\n        },\n        flush (controller) {\n            if (pending) return pending.promise;\n            if (flushed) return;\n            // Flush now.\n            controller.enqueue(encoder.encode(suffix));\n        }\n    });\n}\n// Merge two streams into one. Ensure the final transform stream is closed\n// when both are finished.\nfunction createMergedTransformStream(stream) {\n    let pull = null;\n    let donePulling = false;\n    async function startPulling(controller) {\n        if (pull) {\n            return;\n        }\n        const reader = stream.getReader();\n        // NOTE: streaming flush\n        // We are buffering here for the inlined data stream because the\n        // \"shell\" stream might be chunkenized again by the underlying stream\n        // implementation, e.g. with a specific high-water mark. To ensure it's\n        // the safe timing to pipe the data stream, this extra tick is\n        // necessary.\n        // We don't start reading until we've left the current Task to ensure\n        // that it's inserted after flushing the shell. Note that this implementation\n        // might get stale if impl details of Fizz change in the future.\n        await atLeastOneTask();\n        try {\n            while(true){\n                const { done, value } = await reader.read();\n                if (done) {\n                    donePulling = true;\n                    return;\n                }\n                controller.enqueue(value);\n            }\n        } catch (err) {\n            controller.error(err);\n        }\n    }\n    return new TransformStream({\n        transform (chunk, controller) {\n            controller.enqueue(chunk);\n            // Start the streaming if it hasn't already been started yet.\n            if (!pull) {\n                pull = startPulling(controller);\n            }\n        },\n        flush (controller) {\n            if (donePulling) {\n                return;\n            }\n            return pull || startPulling(controller);\n        }\n    });\n}\nconst CLOSE_TAG = '</body></html>';\n/**\n * This transform stream moves the suffix to the end of the stream, so results\n * like `</body></html><script>...</script>` will be transformed to\n * `<script>...</script></body></html>`.\n */ function createMoveSuffixStream() {\n    let foundSuffix = false;\n    return new TransformStream({\n        transform (chunk, controller) {\n            if (foundSuffix) {\n                return controller.enqueue(chunk);\n            }\n            const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n            if (index > -1) {\n                foundSuffix = true;\n                // If the whole chunk is the suffix, then don't write anything, it will\n                // be written in the flush.\n                if (chunk.length === ENCODED_TAGS.CLOSED.BODY_AND_HTML.length) {\n                    return;\n                }\n                // Write out the part before the suffix.\n                const before = chunk.slice(0, index);\n                controller.enqueue(before);\n                // In the case where the suffix is in the middle of the chunk, we need\n                // to split the chunk into two parts.\n                if (chunk.length > ENCODED_TAGS.CLOSED.BODY_AND_HTML.length + index) {\n                    // Write out the part after the suffix.\n                    const after = chunk.slice(index + ENCODED_TAGS.CLOSED.BODY_AND_HTML.length);\n                    controller.enqueue(after);\n                }\n            } else {\n                controller.enqueue(chunk);\n            }\n        },\n        flush (controller) {\n            // Even if we didn't find the suffix, the HTML is not valid if we don't\n            // add it, so insert it at the end.\n            controller.enqueue(ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n        }\n    });\n}\nfunction createStripDocumentClosingTagsTransform() {\n    return new TransformStream({\n        transform (chunk, controller) {\n            // We rely on the assumption that chunks will never break across a code unit.\n            // This is reasonable because we currently concat all of React's output from a single\n            // flush into one chunk before streaming it forward which means the chunk will represent\n            // a single coherent utf-8 string. This is not safe to use if we change our streaming to no\n            // longer do this large buffered chunk\n            if (isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML) || isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY) || isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.HTML)) {\n                // the entire chunk is the closing tags; return without enqueueing anything.\n                return;\n            }\n            // We assume these tags will go at together at the end of the document and that\n            // they won't appear anywhere else in the document. This is not really a safe assumption\n            // but until we revamp our streaming infra this is a performant way to string the tags\n            chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY);\n            chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.HTML);\n            controller.enqueue(chunk);\n        }\n    });\n}\n/*\n * Checks if the root layout is missing the html or body tags\n * and if so, it will inject a script tag to throw an error in the browser, showing the user\n * the error message in the error overlay.\n */ export function createRootLayoutValidatorStream() {\n    let foundHtml = false;\n    let foundBody = false;\n    return new TransformStream({\n        async transform (chunk, controller) {\n            // Peek into the streamed chunk to see if the tags are present.\n            if (!foundHtml && indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.HTML) > -1) {\n                foundHtml = true;\n            }\n            if (!foundBody && indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.BODY) > -1) {\n                foundBody = true;\n            }\n            controller.enqueue(chunk);\n        },\n        flush (controller) {\n            const missingTags = [];\n            if (!foundHtml) missingTags.push('html');\n            if (!foundBody) missingTags.push('body');\n            if (!missingTags.length) return;\n            controller.enqueue(encoder.encode(`<script>self.__next_root_layout_missing_tags=${JSON.stringify(missingTags)}</script>`));\n        }\n    });\n}\nfunction chainTransformers(readable, transformers) {\n    let stream = readable;\n    for (const transformer of transformers){\n        if (!transformer) continue;\n        stream = stream.pipeThrough(transformer);\n    }\n    return stream;\n}\nexport async function continueFizzStream(renderStream, { suffix, inlinedDataStream, isStaticGeneration, getServerInsertedHTML, serverInsertedHTMLToHead, validateRootLayout }) {\n    // Suffix itself might contain close tags at the end, so we need to split it.\n    const suffixUnclosed = suffix ? suffix.split(CLOSE_TAG, 1)[0] : null;\n    // If we're generating static HTML and there's an `allReady` promise on the\n    // stream, we need to wait for it to resolve before continuing.\n    if (isStaticGeneration && 'allReady' in renderStream) {\n        await renderStream.allReady;\n    }\n    return chainTransformers(renderStream, [\n        // Buffer everything to avoid flushing too frequently\n        createBufferedTransformStream(),\n        // Insert generated tags to head\n        getServerInsertedHTML && !serverInsertedHTMLToHead ? createInsertedHTMLStream(getServerInsertedHTML) : null,\n        // Insert suffix content\n        suffixUnclosed != null && suffixUnclosed.length > 0 ? createDeferredSuffixStream(suffixUnclosed) : null,\n        // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n        inlinedDataStream ? createMergedTransformStream(inlinedDataStream) : null,\n        // Validate the root layout for missing html or body tags\n        validateRootLayout ? createRootLayoutValidatorStream() : null,\n        // Close tags should always be deferred to the end\n        createMoveSuffixStream(),\n        // Special head insertions\n        // TODO-APP: Insert server side html to end of head in app layout rendering, to avoid\n        // hydration errors. Remove this once it's ready to be handled by react itself.\n        getServerInsertedHTML && serverInsertedHTMLToHead ? createHeadInsertionTransformStream(getServerInsertedHTML) : null\n    ]);\n}\nexport async function continueDynamicPrerender(prerenderStream, { getServerInsertedHTML }) {\n    return prerenderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream()).pipeThrough(createStripDocumentClosingTagsTransform())// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML));\n}\nexport async function continueStaticPrerender(prerenderStream, { inlinedDataStream, getServerInsertedHTML }) {\n    return prerenderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream())// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))// Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    .pipeThrough(createMergedTransformStream(inlinedDataStream))// Close tags should always be deferred to the end\n    .pipeThrough(createMoveSuffixStream());\n}\nexport async function continueDynamicHTMLResume(renderStream, { inlinedDataStream, getServerInsertedHTML }) {\n    return renderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream())// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))// Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    .pipeThrough(createMergedTransformStream(inlinedDataStream))// Close tags should always be deferred to the end\n    .pipeThrough(createMoveSuffixStream());\n}\nexport function createDocumentClosingStream() {\n    return streamFromString(CLOSE_TAG);\n}\n\n//# sourceMappingURL=node-web-streams-helper.js.map","export class PageSignatureError extends Error {\n    constructor({ page }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nexport class RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nexport class RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n}\n\n//# sourceMappingURL=error.js.map","import { detectDomainLocale } from '../../shared/lib/i18n/detect-domain-locale';\nimport { formatNextPathnameInfo } from '../../shared/lib/router/utils/format-next-pathname-info';\nimport { getHostname } from '../../shared/lib/get-hostname';\nimport { getNextPathnameInfo } from '../../shared/lib/router/utils/get-next-pathname-info';\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'));\n}\nconst Internal = Symbol('NextURLInternal');\nexport class NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === 'object' && 'pathname' in baseOrOpts || typeof baseOrOpts === 'string') {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: ''\n        };\n        this.analyze();\n    }\n    analyze() {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig, _this_Internal_domainLocale, _this_Internal_options_nextConfig_i18n1, _this_Internal_options_nextConfig1;\n        const info = getNextPathnameInfo(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE,\n            i18nProvider: this[Internal].options.i18nProvider\n        });\n        const hostname = getHostname(this[Internal].url, this[Internal].options.headers);\n        this[Internal].domainLocale = this[Internal].options.i18nProvider ? this[Internal].options.i18nProvider.detectDomainLocale(hostname) : detectDomainLocale((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.domains, hostname);\n        const defaultLocale = ((_this_Internal_domainLocale = this[Internal].domainLocale) == null ? void 0 : _this_Internal_domainLocale.defaultLocale) || ((_this_Internal_options_nextConfig1 = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n1 = _this_Internal_options_nextConfig1.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n1.defaultLocale);\n        this[Internal].url.pathname = info.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = info.basePath ?? '';\n        this[Internal].buildId = info.buildId;\n        this[Internal].locale = info.locale ?? defaultLocale;\n        this[Internal].trailingSlash = info.trailingSlash;\n    }\n    formatPathname() {\n        return formatNextPathnameInfo({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? '';\n    }\n    set locale(locale) {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig;\n        if (!this[Internal].locale || !((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.locales.includes(locale))) {\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyze();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith('/') ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for('edge-runtime.inspect.custom')]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n}\n\n//# sourceMappingURL=next-url.js.map","import { ReflectAdapter } from './reflect';\n/**\n * @internal\n */ export class ReadonlyHeadersError extends Error {\n    constructor(){\n        super('Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers');\n    }\n    static callable() {\n        throw new ReadonlyHeadersError();\n    }\n}\nexport class HeadersAdapter extends Headers {\n    constructor(headers){\n        // We've already overridden the methods that would be called, so we're just\n        // calling the super constructor to ensure that the instanceof check works.\n        super();\n        this.headers = new Proxy(headers, {\n            get (target, prop, receiver) {\n                // Because this is just an object, we expect that all \"get\" operations\n                // are for properties. If it's a \"get\" for a symbol, we'll just return\n                // the symbol.\n                if (typeof prop === 'symbol') {\n                    return ReflectAdapter.get(target, prop, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return undefined.\n                if (typeof original === 'undefined') return;\n                // If the original casing exists, return the value.\n                return ReflectAdapter.get(target, original, receiver);\n            },\n            set (target, prop, value, receiver) {\n                if (typeof prop === 'symbol') {\n                    return ReflectAdapter.set(target, prop, value, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, use the prop as the key.\n                return ReflectAdapter.set(target, original ?? prop, value, receiver);\n            },\n            has (target, prop) {\n                if (typeof prop === 'symbol') return ReflectAdapter.has(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return false.\n                if (typeof original === 'undefined') return false;\n                // If the original casing exists, return true.\n                return ReflectAdapter.has(target, original);\n            },\n            deleteProperty (target, prop) {\n                if (typeof prop === 'symbol') return ReflectAdapter.deleteProperty(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return true.\n                if (typeof original === 'undefined') return true;\n                // If the original casing exists, delete the property.\n                return ReflectAdapter.deleteProperty(target, original);\n            }\n        });\n    }\n    /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */ static seal(headers) {\n        return new Proxy(headers, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case 'append':\n                    case 'delete':\n                    case 'set':\n                        return ReadonlyHeadersError.callable;\n                    default:\n                        return ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n    /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */ merge(value) {\n        if (Array.isArray(value)) return value.join(', ');\n        return value;\n    }\n    /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */ static from(headers) {\n        if (headers instanceof Headers) return headers;\n        return new HeadersAdapter(headers);\n    }\n    append(name, value) {\n        const existing = this.headers[name];\n        if (typeof existing === 'string') {\n            this.headers[name] = [\n                existing,\n                value\n            ];\n        } else if (Array.isArray(existing)) {\n            existing.push(value);\n        } else {\n            this.headers[name] = value;\n        }\n    }\n    delete(name) {\n        delete this.headers[name];\n    }\n    get(name) {\n        const value = this.headers[name];\n        if (typeof value !== 'undefined') return this.merge(value);\n        return null;\n    }\n    has(name) {\n        return typeof this.headers[name] !== 'undefined';\n    }\n    set(name, value) {\n        this.headers[name] = value;\n    }\n    forEach(callbackfn, thisArg) {\n        for (const [name, value] of this.entries()){\n            callbackfn.call(thisArg, value, name, this);\n        }\n    }\n    *entries() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(name);\n            yield [\n                name,\n                value\n            ];\n        }\n    }\n    *keys() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            yield name;\n        }\n    }\n    *values() {\n        for (const key of Object.keys(this.headers)){\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(key);\n            yield value;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\n\n//# sourceMappingURL=headers.js.map","import { getRequestMeta } from '../../../request-meta';\nimport { fromNodeOutgoingHttpHeaders } from '../../utils';\nimport { NextRequest } from '../request';\nimport { isNodeNextRequest, isWebNextRequest } from '../../../base-http/helpers';\nexport const ResponseAbortedName = 'ResponseAborted';\nexport class ResponseAborted extends Error {\n    constructor(...args){\n        super(...args);\n        this.name = ResponseAbortedName;\n    }\n}\n/**\n * Creates an AbortController tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * If the `close` event is fired before the `finish` event, then we'll send the\n * `abort` signal.\n */ export function createAbortController(response) {\n    const controller = new AbortController();\n    // If `finish` fires first, then `res.end()` has been called and the close is\n    // just us finishing the stream on our side. If `close` fires first, then we\n    // know the client disconnected before we finished.\n    response.once('close', ()=>{\n        if (response.writableFinished) return;\n        controller.abort(new ResponseAborted());\n    });\n    return controller;\n}\n/**\n * Creates an AbortSignal tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * This cannot be done with the request (IncomingMessage or Readable) because\n * the `abort` event will not fire if to data has been fully read (because that\n * will \"close\" the readable stream and nothing fires after that).\n */ export function signalFromNodeResponse(response) {\n    const { errored, destroyed } = response;\n    if (errored || destroyed) {\n        return AbortSignal.abort(errored ?? new ResponseAborted());\n    }\n    const { signal } = createAbortController(response);\n    return signal;\n}\nexport class NextRequestAdapter {\n    static fromBaseNextRequest(request, signal) {\n        if (// The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME === 'edge' && isWebNextRequest(request)) {\n            return NextRequestAdapter.fromWebNextRequest(request);\n        } else if (// The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME !== 'edge' && isNodeNextRequest(request)) {\n            return NextRequestAdapter.fromNodeNextRequest(request, signal);\n        } else {\n            throw new Error('Invariant: Unsupported NextRequest type');\n        }\n    }\n    static fromNodeNextRequest(request, signal) {\n        // HEAD and GET requests can not have a body.\n        let body = null;\n        if (request.method !== 'GET' && request.method !== 'HEAD' && request.body) {\n            // @ts-expect-error - this is handled by undici, when streams/web land use it instead\n            body = request.body;\n        }\n        let url;\n        if (request.url.startsWith('http')) {\n            url = new URL(request.url);\n        } else {\n            // Grab the full URL from the request metadata.\n            const base = getRequestMeta(request, 'initURL');\n            if (!base || !base.startsWith('http')) {\n                // Because the URL construction relies on the fact that the URL provided\n                // is absolute, we need to provide a base URL. We can't use the request\n                // URL because it's relative, so we use a dummy URL instead.\n                url = new URL(request.url, 'http://n');\n            } else {\n                url = new URL(request.url, base);\n            }\n        }\n        return new NextRequest(url, {\n            method: request.method,\n            headers: fromNodeOutgoingHttpHeaders(request.headers),\n            // @ts-expect-error - see https://github.com/whatwg/fetch/pull/1457\n            duplex: 'half',\n            signal,\n            // geo\n            // ip\n            // nextConfig\n            // body can not be passed if request was aborted\n            // or we get a Request body was disturbed error\n            ...signal.aborted ? {} : {\n                body\n            }\n        });\n    }\n    static fromWebNextRequest(request) {\n        // HEAD and GET requests can not have a body.\n        let body = null;\n        if (request.method !== 'GET' && request.method !== 'HEAD') {\n            body = request.body;\n        }\n        return new NextRequest(request.url, {\n            method: request.method,\n            headers: fromNodeOutgoingHttpHeaders(request.headers),\n            // @ts-expect-error - see https://github.com/whatwg/fetch/pull/1457\n            duplex: 'half',\n            signal: request.request.signal,\n            // geo\n            // ip\n            // nextConfig\n            // body can not be passed if request was aborted\n            // or we get a Request body was disturbed error\n            ...request.request.signal.aborted ? {} : {\n                body\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=next-request.js.map","export class ReflectAdapter {\n    static get(target, prop, receiver) {\n        const value = Reflect.get(target, prop, receiver);\n        if (typeof value === 'function') {\n            return value.bind(target);\n        }\n        return value;\n    }\n    static set(target, prop, value, receiver) {\n        return Reflect.set(target, prop, value, receiver);\n    }\n    static has(target, prop) {\n        return Reflect.has(target, prop);\n    }\n    static deleteProperty(target, prop) {\n        return Reflect.deleteProperty(target, prop);\n    }\n}\n\n//# sourceMappingURL=reflect.js.map","import { RequestCookies } from '../cookies';\nimport { ResponseCookies } from '../cookies';\nimport { ReflectAdapter } from './reflect';\nimport { workAsyncStorage } from '../../../app-render/work-async-storage.external';\nimport { getExpectedRequestStore } from '../../../app-render/work-unit-async-storage.external';\n/**\n * @internal\n */ export class ReadonlyRequestCookiesError extends Error {\n    constructor(){\n        super('Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#cookiessetname-value-options');\n    }\n    static callable() {\n        throw new ReadonlyRequestCookiesError();\n    }\n}\nexport class RequestCookiesAdapter {\n    static seal(cookies) {\n        return new Proxy(cookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case 'clear':\n                    case 'delete':\n                    case 'set':\n                        return ReadonlyRequestCookiesError.callable;\n                    default:\n                        return ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n}\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for('next.mutated.cookies');\nexport function getModifiedCookieValues(cookies) {\n    const modified = cookies[SYMBOL_MODIFY_COOKIE_VALUES];\n    if (!modified || !Array.isArray(modified) || modified.length === 0) {\n        return [];\n    }\n    return modified;\n}\nexport function appendMutableCookies(headers, mutableCookies) {\n    const modifiedCookieValues = getModifiedCookieValues(mutableCookies);\n    if (modifiedCookieValues.length === 0) {\n        return false;\n    }\n    // Return a new response that extends the response with\n    // the modified cookies as fallbacks. `res` cookies\n    // will still take precedence.\n    const resCookies = new ResponseCookies(headers);\n    const returnedCookies = resCookies.getAll();\n    // Set the modified cookies as fallbacks.\n    for (const cookie of modifiedCookieValues){\n        resCookies.set(cookie);\n    }\n    // Set the original cookies as the final values.\n    for (const cookie of returnedCookies){\n        resCookies.set(cookie);\n    }\n    return true;\n}\nexport class MutableRequestCookiesAdapter {\n    static wrap(cookies, onUpdateCookies) {\n        const responseCookies = new ResponseCookies(new Headers());\n        for (const cookie of cookies.getAll()){\n            responseCookies.set(cookie);\n        }\n        let modifiedValues = [];\n        const modifiedCookies = new Set();\n        const updateResponseCookies = ()=>{\n            // TODO-APP: change method of getting workStore\n            const workStore = workAsyncStorage.getStore();\n            if (workStore) {\n                workStore.pathWasRevalidated = true;\n            }\n            const allCookies = responseCookies.getAll();\n            modifiedValues = allCookies.filter((c)=>modifiedCookies.has(c.name));\n            if (onUpdateCookies) {\n                const serializedCookies = [];\n                for (const cookie of modifiedValues){\n                    const tempCookies = new ResponseCookies(new Headers());\n                    tempCookies.set(cookie);\n                    serializedCookies.push(tempCookies.toString());\n                }\n                onUpdateCookies(serializedCookies);\n            }\n        };\n        const wrappedCookies = new Proxy(responseCookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    // A special symbol to get the modified cookie values\n                    case SYMBOL_MODIFY_COOKIE_VALUES:\n                        return modifiedValues;\n                    // TODO: Throw error if trying to set a cookie after the response\n                    // headers have been set.\n                    case 'delete':\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === 'string' ? args[0] : args[0].name);\n                            try {\n                                target.delete(...args);\n                                return wrappedCookies;\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    case 'set':\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === 'string' ? args[0] : args[0].name);\n                            try {\n                                target.set(...args);\n                                return wrappedCookies;\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    default:\n                        return ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n        return wrappedCookies;\n    }\n}\nexport function wrapWithMutableAccessCheck(responseCookies) {\n    const wrappedCookies = new Proxy(responseCookies, {\n        get (target, prop, receiver) {\n            switch(prop){\n                case 'delete':\n                    return function(...args) {\n                        ensureCookiesAreStillMutable('cookies().delete');\n                        target.delete(...args);\n                        return wrappedCookies;\n                    };\n                case 'set':\n                    return function(...args) {\n                        ensureCookiesAreStillMutable('cookies().set');\n                        target.set(...args);\n                        return wrappedCookies;\n                    };\n                default:\n                    return ReflectAdapter.get(target, prop, receiver);\n            }\n        }\n    });\n    return wrappedCookies;\n}\nexport function areCookiesMutableInCurrentPhase(requestStore) {\n    return requestStore.phase === 'action';\n}\n/** Ensure that cookies() starts throwing on mutation\n * if we changed phases and can no longer mutate.\n *\n * This can happen when going:\n *   'render' -> 'after'\n *   'action' -> 'render'\n * */ function ensureCookiesAreStillMutable(callingExpression) {\n    const requestStore = getExpectedRequestStore(callingExpression);\n    if (!areCookiesMutableInCurrentPhase(requestStore)) {\n        // TODO: maybe we can give a more precise error message based on callingExpression?\n        throw new ReadonlyRequestCookiesError();\n    }\n}\nexport function responseCookiesToRequestCookies(responseCookies) {\n    const requestCookies = new RequestCookies(new Headers());\n    for (const cookie of responseCookies.getAll()){\n        requestCookies.set(cookie);\n    }\n    return requestCookies;\n}\n\n//# sourceMappingURL=request-cookies.js.map","export { RequestCookies, ResponseCookies, stringifyCookie } from 'next/dist/compiled/@edge-runtime/cookies';\n\n//# sourceMappingURL=cookies.js.map","import { NextURL } from '../next-url';\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils';\nimport { RemovedUAError, RemovedPageError } from '../error';\nimport { RequestCookies } from './cookies';\nexport const INTERNALS = Symbol('internal request');\n/**\n * This class extends the [Web `Request` API](https://developer.mozilla.org/docs/Web/API/Request) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextRequest`](https://nextjs.org/docs/app/api-reference/functions/next-request)\n */ export class NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== 'string' && 'url' in input ? input.url : String(input);\n        validateURL(url);\n        if (input instanceof Request) super(input, init);\n        else super(url, init);\n        const nextUrl = new NextURL(url, {\n            headers: toNodeOutgoingHttpHeaders(this.headers),\n            nextConfig: init.nextConfig\n        });\n        this[INTERNALS] = {\n            cookies: new RequestCookies(this.headers),\n            nextUrl,\n            url: process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE ? url : nextUrl.toString()\n        };\n    }\n    [Symbol.for('edge-runtime.inspect.custom')]() {\n        return {\n            cookies: this.cookies,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get nextUrl() {\n        return this[INTERNALS].nextUrl;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url;\n    }\n}\n\n//# sourceMappingURL=request.js.map","import { NEXT_INTERCEPTION_MARKER_PREFIX, NEXT_QUERY_PARAM_PREFIX } from '../../lib/constants';\n/**\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\n * headers with multiple values will be joined with a comma and space. Any\n * headers that have an undefined value will be ignored and others will be\n * coerced to strings.\n *\n * @param nodeHeaders the headers object to convert\n * @returns the converted headers object\n */ export function fromNodeOutgoingHttpHeaders(nodeHeaders) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(nodeHeaders)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (typeof v === 'undefined') continue;\n            if (typeof v === 'number') {\n                v = v.toString();\n            }\n            headers.append(key, v);\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ export function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== '=' && ch !== ';' && ch !== ',';\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === ',') {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === '=') {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\n/**\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\n * required to support the set-cookie header, which may have multiple values.\n *\n * @param headers the headers object to convert\n * @returns the converted headers object\n */ export function toNodeOutgoingHttpHeaders(headers) {\n    const nodeHeaders = {};\n    const cookies = [];\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            if (key.toLowerCase() === 'set-cookie') {\n                // We may have gotten a comma joined string of cookies, or multiple\n                // set-cookie headers. We need to merge them into one header array\n                // to represent all the cookies.\n                cookies.push(...splitCookiesString(value));\n                nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies;\n            } else {\n                nodeHeaders[key] = value;\n            }\n        }\n    }\n    return nodeHeaders;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ export function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        });\n    }\n}\n/**\n * Normalizes `nxtP` and `nxtI` query param values to remove the prefix.\n * This function does not mutate the input key; it calls the provided function\n * with the normalized key.\n */ export function normalizeNextQueryParam(key, onKeyNormalized) {\n    const prefixes = [\n        NEXT_QUERY_PARAM_PREFIX,\n        NEXT_INTERCEPTION_MARKER_PREFIX\n    ];\n    for (const prefix of prefixes){\n        if (key !== prefix && key.startsWith(prefix)) {\n            const normalizedKey = key.substring(prefix.length);\n            onKeyNormalized(normalizedKey);\n        }\n    }\n}\n\n//# sourceMappingURL=utils.js.map","'use client'\n\nimport type { FetchServerResponseResult } from '../../client/components/router-reducer/fetch-server-response'\nimport type {\n  FocusAndScrollRef,\n  PrefetchKind,\n  RouterChangeByServerResponse,\n} from '../../client/components/router-reducer/router-reducer-types'\nimport type { FlightRouterState } from '../../server/app-render/types'\nimport React from 'react'\n\nexport type ChildSegmentMap = Map<string, CacheNode>\n\n/**\n * Cache node used in app-router / layout-router.\n */\nexport type CacheNode = ReadyCacheNode | LazyCacheNode\n\nexport type LoadingModuleData =\n  | [React.JSX.Element, React.ReactNode, React.ReactNode]\n  | null\n\nexport type LazyCacheNode = {\n  /**\n   * When rsc is null, this is a lazily-initialized cache node.\n   *\n   * If the app attempts to render it, it triggers a lazy data fetch,\n   * postpones the render, and schedules an update to a new tree.\n   *\n   * TODO: This mechanism should not be used when PPR is enabled, though it\n   * currently is in some cases until we've implemented partial\n   * segment fetching.\n   */\n  rsc: null\n\n  /**\n   * A prefetched version of the segment data. See explanation in corresponding\n   * field of ReadyCacheNode (below).\n   *\n   * Since LazyCacheNode mostly only exists in the non-PPR implementation, this\n   * will usually be null, but it could have been cloned from a previous\n   * CacheNode that was created by the PPR implementation. Eventually we want\n   * to migrate everything away from LazyCacheNode entirely.\n   */\n  prefetchRsc: React.ReactNode\n\n  /**\n   * A pending response for the lazy data fetch. If this is not present\n   * during render, it is lazily created.\n   */\n  lazyData: Promise<FetchServerResponseResult> | null\n\n  prefetchHead: React.ReactNode\n  head: React.ReactNode\n\n  loading: LoadingModuleData\n\n  /**\n   * Child parallel routes.\n   */\n  parallelRoutes: Map<string, ChildSegmentMap>\n}\n\nexport type ReadyCacheNode = {\n  /**\n   * When rsc is not null, it represents the RSC data for the\n   * corresponding segment.\n   *\n   * `null` is a valid React Node but because segment data is always a\n   * <LayoutRouter> component, we can use `null` to represent empty.\n   *\n   * TODO: For additional type safety, update this type to\n   * Exclude<React.ReactNode, null>. Need to update createEmptyCacheNode to\n   * accept rsc as an argument, or just inline the callers.\n   */\n  rsc: React.ReactNode\n\n  /**\n   * Represents a static version of the segment that can be shown immediately,\n   * and may or may not contain dynamic holes. It's prefetched before a\n   * navigation occurs.\n   *\n   * During rendering, we will choose whether to render `rsc` or `prefetchRsc`\n   * with `useDeferredValue`. As with the `rsc` field, a value of `null` means\n   * no value was provided. In this case, the LayoutRouter will go straight to\n   * rendering the `rsc` value; if that one is also missing, it will suspend and\n   * trigger a lazy fetch.\n   */\n  prefetchRsc: React.ReactNode\n\n  /**\n   * There should never be a lazy data request in this case.\n   */\n  lazyData: null\n  prefetchHead: React.ReactNode\n  head: React.ReactNode\n\n  loading: LoadingModuleData\n\n  parallelRoutes: Map<string, ChildSegmentMap>\n}\n\nexport interface NavigateOptions {\n  scroll?: boolean\n}\n\nexport interface PrefetchOptions {\n  kind: PrefetchKind\n}\n\nexport interface AppRouterInstance {\n  /**\n   * Navigate to the previous history entry.\n   */\n  back(): void\n  /**\n   * Navigate to the next history entry.\n   */\n  forward(): void\n  /**\n   * Refresh the current page.\n   */\n  refresh(): void\n  /**\n   * Refresh the current page. Use in development only.\n   * @internal\n   */\n  hmrRefresh(): void\n  /**\n   * Navigate to the provided href.\n   * Pushes a new history entry.\n   */\n  push(href: string, options?: NavigateOptions): void\n  /**\n   * Navigate to the provided href.\n   * Replaces the current history entry.\n   */\n  replace(href: string, options?: NavigateOptions): void\n  /**\n   * Prefetch the provided href.\n   */\n  prefetch(href: string, options?: PrefetchOptions): void\n}\n\nexport const AppRouterContext = React.createContext<AppRouterInstance | null>(\n  null\n)\nexport const LayoutRouterContext = React.createContext<{\n  childNodes: CacheNode['parallelRoutes']\n  tree: FlightRouterState\n  url: string\n  loading: LoadingModuleData\n} | null>(null)\n\nexport const GlobalLayoutRouterContext = React.createContext<{\n  buildId: string\n  tree: FlightRouterState\n  changeByServerResponse: RouterChangeByServerResponse\n  focusAndScrollRef: FocusAndScrollRef\n  nextUrl: string | null\n}>(null as any)\n\nexport const TemplateContext = React.createContext<React.ReactNode>(null as any)\n\nif (process.env.NODE_ENV !== 'production') {\n  AppRouterContext.displayName = 'AppRouterContext'\n  LayoutRouterContext.displayName = 'LayoutRouterContext'\n  GlobalLayoutRouterContext.displayName = 'GlobalLayoutRouterContext'\n  TemplateContext.displayName = 'TemplateContext'\n}\n\nexport const MissingSlotContext = React.createContext<Set<string>>(new Set())\n","// regexp is based on https://github.com/sindresorhus/escape-string-regexp\nconst reHasRegExp = /[|\\\\{}()[\\]^$+*?.-]/\nconst reReplaceRegExp = /[|\\\\{}()[\\]^$+*?.-]/g\n\nexport function escapeStringRegexp(str: string) {\n  // see also: https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/escapeRegExp.js#L23\n  if (reHasRegExp.test(str)) {\n    return str.replace(reReplaceRegExp, '\\\\$&')\n  }\n  return str\n}\n","// http://www.cse.yorku.ca/~oz/hash.html\n// More specifically, 32-bit hash via djbxor\n// (ref: https://gist.github.com/eplawless/52813b1d8ad9af510d85?permalink_comment_id=3367765#gistcomment-3367765)\n// This is due to number type differences between rust for turbopack to js number types,\n// where rust does not have easy way to repreesnt js's 53-bit float number type for the matching\n// overflow behavior. This is more `correct` in terms of having canonical hash across different runtime / implementation\n// as can gaurantee determinstic output from 32bit hash.\nexport function djb2Hash(str: string) {\n  let hash = 5381\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i)\n    hash = ((hash << 5) + hash + char) & 0xffffffff\n  }\n  return hash >>> 0\n}\n\nexport function hexHash(str: string) {\n  return djb2Hash(str).toString(36).slice(0, 5)\n}\n","import React from 'react'\n\nexport const HeadManagerContext: React.Context<{\n  updateHead?: (state: any) => void\n  mountedInstances?: any\n  updateScripts?: (state: any) => void\n  scripts?: any\n  getIsSsr?: () => boolean\n\n  // Used in app directory, to render script tags as server components.\n  appDir?: boolean\n  nonce?: string\n}> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  HeadManagerContext.displayName = 'HeadManagerContext'\n}\n","'use client'\n\nimport { createContext } from 'react'\nimport type { Params } from '../../server/request/params'\n\nexport const SearchParamsContext = createContext<URLSearchParams | null>(null)\nexport const PathnameContext = createContext<string | null>(null)\nexport const PathParamsContext = createContext<Params | null>(null)\n\nif (process.env.NODE_ENV !== 'production') {\n  SearchParamsContext.displayName = 'SearchParamsContext'\n  PathnameContext.displayName = 'PathnameContext'\n  PathParamsContext.displayName = 'PathParamsContext'\n}\n","/**\n * This module is for next.js server internal usage of path module.\n * It will use native path module for nodejs runtime.\n * It will use path-browserify polyfill for edge runtime.\n */\nlet path\n\nif (process.env.NEXT_RUNTIME === 'edge') {\n  path = require('next/dist/compiled/path-browserify')\n} else {\n  path = require('path')\n}\n\nmodule.exports = path\n","// This has to be a shared module which is shared between client component error boundary and dynamic component\nconst BAILOUT_TO_CSR = 'BAILOUT_TO_CLIENT_SIDE_RENDERING'\n\n/** An error that should be thrown when we want to bail out to client-side rendering. */\nexport class BailoutToCSRError extends Error {\n  public readonly digest = BAILOUT_TO_CSR\n\n  constructor(public readonly reason: string) {\n    super(`Bail out to client-side rendering: ${reason}`)\n  }\n}\n\n/** Checks if a passed argument is an error that is thrown if we want to bail out to client-side rendering. */\nexport function isBailoutToCSRError(err: unknown): err is BailoutToCSRError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === BAILOUT_TO_CSR\n}\n","// Note: This file is JS because it's used by the taskfile-swc.js file, which is JS.\n// Keep file changes in sync with the corresponding `.d.ts` files.\n/**\n * These are the browser versions that support all of the following:\n * static import: https://caniuse.com/es6-module\n * dynamic import: https://caniuse.com/es6-module-dynamic-import\n * import.meta: https://caniuse.com/mdn-javascript_operators_import_meta\n */\nconst MODERN_BROWSERSLIST_TARGET = [\n  'chrome 64',\n  'edge 79',\n  'firefox 67',\n  'opera 51',\n  'safari 12',\n]\n\nmodule.exports = MODERN_BROWSERSLIST_TARGET\n","/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */\nexport function ensureLeadingSlash(path: string) {\n  return path.startsWith('/') ? path : `/${path}`\n}\n","import { ensureLeadingSlash } from '../../page-path/ensure-leading-slash'\nimport { isGroupSegment } from '../../segment'\n\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */\nexport function normalizeAppPath(route: string) {\n  return ensureLeadingSlash(\n    route.split('/').reduce((pathname, segment, index, segments) => {\n      // Empty segments are ignored.\n      if (!segment) {\n        return pathname\n      }\n\n      // Groups are ignored.\n      if (isGroupSegment(segment)) {\n        return pathname\n      }\n\n      // Parallel segments are ignored.\n      if (segment[0] === '@') {\n        return pathname\n      }\n\n      // The last segment (if it's a leaf) should be ignored.\n      if (\n        (segment === 'page' || segment === 'route') &&\n        index === segments.length - 1\n      ) {\n        return pathname\n      }\n\n      return `${pathname}/${segment}`\n    }, '')\n  )\n}\n\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */\nexport function normalizeRscURL(url: string) {\n  return url.replace(\n    /\\.rsc($|\\?)/,\n    // $1 ensures `?` is preserved\n    '$1'\n  )\n}\n","const BOT_UA_RE =\n  /Googlebot|Mediapartners-Google|AdsBot-Google|googleweblight|Storebot-Google|Google-PageRenderer|Bingbot|BingPreview|Slurp|DuckDuckBot|baiduspider|yandex|sogou|LinkedInBot|bitlybot|tumblr|vkShare|quora link preview|facebookexternalhit|facebookcatalog|Twitterbot|applebot|redditbot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|ia_archiver/i\n\nexport function isBot(userAgent: string): boolean {\n  return BOT_UA_RE.test(userAgent)\n}\n","import type { ParsedUrlQuery } from 'querystring'\nimport { getLocationOrigin } from '../../utils'\nimport { searchParamsToUrlQuery } from './querystring'\n\nexport interface ParsedRelativeUrl {\n  hash: string\n  href: string\n  pathname: string\n  query: ParsedUrlQuery\n  search: string\n}\n\n/**\n * Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative\n * (e.g. `./hello`) then at least base must be.\n * Absolute urls are rejected with one exception, in the browser, absolute urls that are on\n * the current origin will be parsed as relative\n */\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery?: true\n): ParsedRelativeUrl\nexport function parseRelativeUrl(\n  url: string,\n  base: string | undefined,\n  parseQuery: false\n): Omit<ParsedRelativeUrl, 'query'>\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery = true\n): ParsedRelativeUrl | Omit<ParsedRelativeUrl, 'query'> {\n  const globalBase = new URL(\n    typeof window === 'undefined' ? 'http://n' : getLocationOrigin()\n  )\n\n  const resolvedBase = base\n    ? new URL(base, globalBase)\n    : url.startsWith('.')\n      ? new URL(\n          typeof window === 'undefined' ? 'http://n' : window.location.href\n        )\n      : globalBase\n\n  const { pathname, searchParams, search, hash, href, origin } = new URL(\n    url,\n    resolvedBase\n  )\n\n  if (origin !== globalBase.origin) {\n    throw new Error(`invariant: invalid relative URL, router received ${url}`)\n  }\n\n  return {\n    pathname,\n    query: parseQuery ? searchParamsToUrlQuery(searchParams) : undefined,\n    search,\n    hash,\n    href: href.slice(origin.length),\n  }\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nexport function searchParamsToUrlQuery(\n  searchParams: URLSearchParams\n): ParsedUrlQuery {\n  const query: ParsedUrlQuery = {}\n  searchParams.forEach((value, key) => {\n    if (typeof query[key] === 'undefined') {\n      query[key] = value\n    } else if (Array.isArray(query[key])) {\n      ;(query[key] as string[]).push(value)\n    } else {\n      query[key] = [query[key] as string, value]\n    }\n  })\n  return query\n}\n\nfunction stringifyUrlQueryParam(param: unknown): string {\n  if (\n    typeof param === 'string' ||\n    (typeof param === 'number' && !isNaN(param)) ||\n    typeof param === 'boolean'\n  ) {\n    return String(param)\n  } else {\n    return ''\n  }\n}\n\nexport function urlQueryToSearchParams(\n  urlQuery: ParsedUrlQuery\n): URLSearchParams {\n  const result = new URLSearchParams()\n  Object.entries(urlQuery).forEach(([key, value]) => {\n    if (Array.isArray(value)) {\n      value.forEach((item) => result.append(key, stringifyUrlQueryParam(item)))\n    } else {\n      result.set(key, stringifyUrlQueryParam(value))\n    }\n  })\n  return result\n}\n\nexport function assign(\n  target: URLSearchParams,\n  ...searchParamsList: URLSearchParams[]\n): URLSearchParams {\n  searchParamsList.forEach((searchParams) => {\n    Array.from(searchParams.keys()).forEach((key) => target.delete(key))\n    searchParams.forEach((value, key) => target.append(key, value))\n  })\n  return target\n}\n","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */\nexport function removeTrailingSlash(route: string) {\n  return route.replace(/\\/$/, '') || '/'\n}\n","import {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../../../lib/constants'\nimport { INTERCEPTION_ROUTE_MARKERS } from '../../../../server/lib/interception-routes'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { removeTrailingSlash } from './remove-trailing-slash'\n\nexport interface Group {\n  pos: number\n  repeat: boolean\n  optional: boolean\n}\n\nexport interface RouteRegex {\n  groups: { [groupName: string]: Group }\n  re: RegExp\n}\n\n/**\n * Regular expression pattern used to match route parameters.\n * Matches both single parameters and parameter groups.\n * Examples:\n *   - `[[...slug]]` matches parameter group with key 'slug', repeat: true, optional: true\n *   - `[...slug]` matches parameter group with key 'slug', repeat: true, optional: false\n *   - `[[foo]]` matches parameter with key 'foo', repeat: false, optional: true\n *   - `[bar]` matches parameter with key 'bar', repeat: false, optional: false\n */\nconst PARAMETER_PATTERN = /\\[((?:\\[.*\\])|.+)\\]/\n\n/**\n * Parses a given parameter from a route to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[[...slug]]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[[foo]]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `[bar]` -> `{ key: 'bar', repeat: false, optional: false }`\n *   - `fizz` -> `{ key: 'fizz', repeat: false, optional: false }`\n * @param param - The parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nexport function parseParameter(param: string) {\n  const match = param.match(PARAMETER_PATTERN)\n\n  if (!match) {\n    return parseMatchedParameter(param)\n  }\n\n  return parseMatchedParameter(match[1])\n}\n\n/**\n * Parses a matched parameter from the PARAMETER_PATTERN regex to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `...slug` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[foo]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `bar` -> `{ key: 'bar', repeat: false, optional: false }`\n * @param param - The matched parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nfunction parseMatchedParameter(param: string) {\n  const optional = param.startsWith('[') && param.endsWith(']')\n  if (optional) {\n    param = param.slice(1, -1)\n  }\n  const repeat = param.startsWith('...')\n  if (repeat) {\n    param = param.slice(3)\n  }\n  return { key: param, repeat, optional }\n}\n\nfunction getParametrizedRoute(route: string) {\n  const segments = removeTrailingSlash(route).slice(1).split('/')\n  const groups: { [groupName: string]: Group } = {}\n  let groupIndex = 1\n  return {\n    parameterizedRoute: segments\n      .map((segment) => {\n        const markerMatch = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n          segment.startsWith(m)\n        )\n        const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n        if (markerMatch && paramMatches) {\n          const { key, optional, repeat } = parseMatchedParameter(\n            paramMatches[1]\n          )\n          groups[key] = { pos: groupIndex++, repeat, optional }\n          return `/${escapeStringRegexp(markerMatch)}([^/]+?)`\n        } else if (paramMatches) {\n          const { key, repeat, optional } = parseMatchedParameter(\n            paramMatches[1]\n          )\n          groups[key] = { pos: groupIndex++, repeat, optional }\n          return repeat ? (optional ? '(?:/(.+?))?' : '/(.+?)') : '/([^/]+?)'\n        } else {\n          return `/${escapeStringRegexp(segment)}`\n        }\n      })\n      .join(''),\n    groups,\n  }\n}\n\n/**\n * From a normalized route this function generates a regular expression and\n * a corresponding groups object intended to be used to store matching groups\n * from the regular expression.\n */\nexport function getRouteRegex(normalizedRoute: string): RouteRegex {\n  const { parameterizedRoute, groups } = getParametrizedRoute(normalizedRoute)\n  return {\n    re: new RegExp(`^${parameterizedRoute}(?:/)?$`),\n    groups: groups,\n  }\n}\n\n/**\n * Builds a function to generate a minimal routeKey using only a-z and minimal\n * number of characters.\n */\nfunction buildGetSafeRouteKey() {\n  let i = 0\n\n  return () => {\n    let routeKey = ''\n    let j = ++i\n    while (j > 0) {\n      routeKey += String.fromCharCode(97 + ((j - 1) % 26))\n      j = Math.floor((j - 1) / 26)\n    }\n    return routeKey\n  }\n}\n\nfunction getSafeKeyFromSegment({\n  interceptionMarker,\n  getSafeRouteKey,\n  segment,\n  routeKeys,\n  keyPrefix,\n}: {\n  interceptionMarker?: string\n  getSafeRouteKey: () => string\n  segment: string\n  routeKeys: Record<string, string>\n  keyPrefix?: string\n}) {\n  const { key, optional, repeat } = parseMatchedParameter(segment)\n\n  // replace any non-word characters since they can break\n  // the named regex\n  let cleanedKey = key.replace(/\\W/g, '')\n\n  if (keyPrefix) {\n    cleanedKey = `${keyPrefix}${cleanedKey}`\n  }\n  let invalidKey = false\n\n  // check if the key is still invalid and fallback to using a known\n  // safe key\n  if (cleanedKey.length === 0 || cleanedKey.length > 30) {\n    invalidKey = true\n  }\n  if (!isNaN(parseInt(cleanedKey.slice(0, 1)))) {\n    invalidKey = true\n  }\n\n  if (invalidKey) {\n    cleanedKey = getSafeRouteKey()\n  }\n\n  if (keyPrefix) {\n    routeKeys[cleanedKey] = `${keyPrefix}${key}`\n  } else {\n    routeKeys[cleanedKey] = key\n  }\n\n  // if the segment has an interception marker, make sure that's part of the regex pattern\n  // this is to ensure that the route with the interception marker doesn't incorrectly match\n  // the non-intercepted route (ie /app/(.)[username] should not match /app/[username])\n  const interceptionPrefix = interceptionMarker\n    ? escapeStringRegexp(interceptionMarker)\n    : ''\n\n  return repeat\n    ? optional\n      ? `(?:/${interceptionPrefix}(?<${cleanedKey}>.+?))?`\n      : `/${interceptionPrefix}(?<${cleanedKey}>.+?)`\n    : `/${interceptionPrefix}(?<${cleanedKey}>[^/]+?)`\n}\n\nfunction getNamedParametrizedRoute(route: string, prefixRouteKeys: boolean) {\n  const segments = removeTrailingSlash(route).slice(1).split('/')\n  const getSafeRouteKey = buildGetSafeRouteKey()\n  const routeKeys: { [named: string]: string } = {}\n  return {\n    namedParameterizedRoute: segments\n      .map((segment) => {\n        const hasInterceptionMarker = INTERCEPTION_ROUTE_MARKERS.some((m) =>\n          segment.startsWith(m)\n        )\n        const paramMatches = segment.match(/\\[((?:\\[.*\\])|.+)\\]/) // Check for parameters\n\n        if (hasInterceptionMarker && paramMatches) {\n          const [usedMarker] = segment.split(paramMatches[0])\n\n          return getSafeKeyFromSegment({\n            getSafeRouteKey,\n            interceptionMarker: usedMarker,\n            segment: paramMatches[1],\n            routeKeys,\n            keyPrefix: prefixRouteKeys\n              ? NEXT_INTERCEPTION_MARKER_PREFIX\n              : undefined,\n          })\n        } else if (paramMatches) {\n          return getSafeKeyFromSegment({\n            getSafeRouteKey,\n            segment: paramMatches[1],\n            routeKeys,\n            keyPrefix: prefixRouteKeys ? NEXT_QUERY_PARAM_PREFIX : undefined,\n          })\n        } else {\n          return `/${escapeStringRegexp(segment)}`\n        }\n      })\n      .join(''),\n    routeKeys,\n  }\n}\n\n/**\n * This function extends `getRouteRegex` generating also a named regexp where\n * each group is named along with a routeKeys object that indexes the assigned\n * named group with its corresponding key. When the routeKeys need to be\n * prefixed to uniquely identify internally the \"prefixRouteKey\" arg should\n * be \"true\" currently this is only the case when creating the routes-manifest\n * during the build\n */\nexport function getNamedRouteRegex(\n  normalizedRoute: string,\n  prefixRouteKey: boolean\n) {\n  const result = getNamedParametrizedRoute(normalizedRoute, prefixRouteKey)\n  return {\n    ...getRouteRegex(normalizedRoute),\n    namedRegex: `^${result.namedParameterizedRoute}(?:/)?$`,\n    routeKeys: result.routeKeys,\n  }\n}\n\n/**\n * Generates a named regexp.\n * This is intended to be using for build time only.\n */\nexport function getNamedMiddlewareRegex(\n  normalizedRoute: string,\n  options: {\n    catchAll?: boolean\n  }\n) {\n  const { parameterizedRoute } = getParametrizedRoute(normalizedRoute)\n  const { catchAll = true } = options\n  if (parameterizedRoute === '/') {\n    let catchAllRegex = catchAll ? '.*' : ''\n    return {\n      namedRegex: `^/${catchAllRegex}$`,\n    }\n  }\n\n  const { namedParameterizedRoute } = getNamedParametrizedRoute(\n    normalizedRoute,\n    false\n  )\n  let catchAllGroupedRegex = catchAll ? '(?:(/.*)?)' : ''\n  return {\n    namedRegex: `^${namedParameterizedRoute}${catchAllGroupedRegex}$`,\n  }\n}\n","import type { Segment } from '../../server/app-render/types'\n\nexport function isGroupSegment(segment: string) {\n  // Use array[0] for performant purpose\n  return segment[0] === '(' && segment.endsWith(')')\n}\n\nexport function addSearchParamsIfPageSegment(\n  segment: Segment,\n  searchParams: Record<string, string | string[] | undefined>\n) {\n  const isPageSegment = segment.includes(PAGE_SEGMENT_KEY)\n\n  if (isPageSegment) {\n    const stringifiedQuery = JSON.stringify(searchParams)\n    return stringifiedQuery !== '{}'\n      ? PAGE_SEGMENT_KEY + '?' + stringifiedQuery\n      : PAGE_SEGMENT_KEY\n  }\n\n  return segment\n}\n\nexport const PAGE_SEGMENT_KEY = '__PAGE__'\nexport const DEFAULT_SEGMENT_KEY = '__DEFAULT__'\n","'use client'\n\nimport React, { useContext } from 'react'\n\nexport type ServerInsertedHTMLHook = (callbacks: () => React.ReactNode) => void\n\n// Use `React.createContext` to avoid errors from the RSC checks because\n// it can't be imported directly in Server Components:\n//\n//   import { createContext } from 'react'\n//\n// More info: https://github.com/vercel/next.js/pull/40686\nexport const ServerInsertedHTMLContext =\n  React.createContext<ServerInsertedHTMLHook | null>(null as any)\n\nexport function useServerInsertedHTML(callback: () => React.ReactNode): void {\n  const addInsertedServerHTMLCallback = useContext(ServerInsertedHTMLContext)\n  // Should have no effects on client where there's no flush effects provider\n  if (addInsertedServerHTMLCallback) {\n    addInsertedServerHTMLCallback(callback)\n  }\n}\n","import type { HtmlProps } from './html-context.shared-runtime'\nimport type { ComponentType, JSX } from 'react'\nimport type { DomainLocale } from '../../server/config'\nimport type { Env } from '@next/env'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextRouter } from './router/router'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { PreviewData } from '../../types'\nimport type { COMPILER_NAMES } from './constants'\nimport type fs from 'fs'\n\nexport type NextComponentType<\n  Context extends BaseContext = NextPageContext,\n  InitialProps = {},\n  Props = {},\n> = ComponentType<Props> & {\n  /**\n   * Used for initial page load data population. Data returned from `getInitialProps` is serialized when server rendered.\n   * Make sure to return plain `Object` without using `Date`, `Map`, `Set`.\n   * @param context Context of `page`\n   */\n  getInitialProps?(context: Context): InitialProps | Promise<InitialProps>\n}\n\nexport type DocumentType = NextComponentType<\n  DocumentContext,\n  DocumentInitialProps,\n  DocumentProps\n>\n\nexport type AppType<P = {}> = NextComponentType<\n  AppContextType,\n  P,\n  AppPropsType<any, P>\n>\n\nexport type AppTreeType = ComponentType<\n  AppInitialProps & { [name: string]: any }\n>\n\n/**\n * Web vitals provided to _app.reportWebVitals by Core Web Vitals plugin developed by Google Chrome team.\n * https://nextjs.org/blog/next-9-4#integrated-web-vitals-reporting\n */\nexport const WEB_VITALS = ['CLS', 'FCP', 'FID', 'INP', 'LCP', 'TTFB'] as const\nexport type NextWebVitalsMetric = {\n  id: string\n  startTime: number\n  value: number\n  attribution?: { [key: string]: unknown }\n} & (\n  | {\n      label: 'web-vital'\n      name: (typeof WEB_VITALS)[number]\n    }\n  | {\n      label: 'custom'\n      name:\n        | 'Next.js-hydration'\n        | 'Next.js-route-change-to-render'\n        | 'Next.js-render'\n    }\n)\n\nexport type Enhancer<C> = (Component: C) => C\n\nexport type ComponentsEnhancer =\n  | {\n      enhanceApp?: Enhancer<AppType>\n      enhanceComponent?: Enhancer<NextComponentType>\n    }\n  | Enhancer<NextComponentType>\n\nexport type RenderPageResult = {\n  html: string\n  head?: Array<JSX.Element | null>\n}\n\nexport type RenderPage = (\n  options?: ComponentsEnhancer\n) => DocumentInitialProps | Promise<DocumentInitialProps>\n\nexport type BaseContext = {\n  res?: ServerResponse\n  [k: string]: any\n}\n\nexport type NEXT_DATA = {\n  props: Record<string, any>\n  page: string\n  query: ParsedUrlQuery\n  buildId: string\n  assetPrefix?: string\n  runtimeConfig?: { [key: string]: any }\n  nextExport?: boolean\n  autoExport?: boolean\n  isFallback?: boolean\n  isExperimentalCompile?: boolean\n  dynamicIds?: (string | number)[]\n  err?: Error & {\n    statusCode?: number\n    source?: typeof COMPILER_NAMES.server | typeof COMPILER_NAMES.edgeServer\n  }\n  gsp?: boolean\n  gssp?: boolean\n  customServer?: boolean\n  gip?: boolean\n  appGip?: boolean\n  locale?: string\n  locales?: string[]\n  defaultLocale?: string\n  domainLocales?: DomainLocale[]\n  scriptLoader?: any[]\n  isPreview?: boolean\n  notFoundSrcPage?: string\n}\n\n/**\n * `Next` context\n */\nexport interface NextPageContext {\n  /**\n   * Error object if encountered during rendering\n   */\n  err?: (Error & { statusCode?: number }) | null\n  /**\n   * `HTTP` request object.\n   */\n  req?: IncomingMessage\n  /**\n   * `HTTP` response object.\n   */\n  res?: ServerResponse\n  /**\n   * Path section of `URL`.\n   */\n  pathname: string\n  /**\n   * Query string section of `URL` parsed as an object.\n   */\n  query: ParsedUrlQuery\n  /**\n   * `String` of the actual path including query.\n   */\n  asPath?: string\n  /**\n   * The currently active locale\n   */\n  locale?: string\n  /**\n   * All configured locales\n   */\n  locales?: string[]\n  /**\n   * The configured default locale\n   */\n  defaultLocale?: string\n  /**\n   * `Component` the tree of the App to use if needing to render separately\n   */\n  AppTree: AppTreeType\n}\n\nexport type AppContextType<Router extends NextRouter = NextRouter> = {\n  Component: NextComponentType<NextPageContext>\n  AppTree: AppTreeType\n  ctx: NextPageContext\n  router: Router\n}\n\nexport type AppInitialProps<PageProps = any> = {\n  pageProps: PageProps\n}\n\nexport type AppPropsType<\n  Router extends NextRouter = NextRouter,\n  PageProps = {},\n> = AppInitialProps<PageProps> & {\n  Component: NextComponentType<NextPageContext, any, any>\n  router: Router\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n}\n\nexport type DocumentContext = NextPageContext & {\n  renderPage: RenderPage\n  defaultGetInitialProps(\n    ctx: DocumentContext,\n    options?: { nonce?: string }\n  ): Promise<DocumentInitialProps>\n}\n\nexport type DocumentInitialProps = RenderPageResult & {\n  styles?: React.ReactElement[] | Iterable<React.ReactNode> | JSX.Element\n}\n\nexport type DocumentProps = DocumentInitialProps & HtmlProps\n\n/**\n * Next `API` route request\n */\nexport interface NextApiRequest extends IncomingMessage {\n  /**\n   * Object of `query` values from url\n   */\n  query: Partial<{\n    [key: string]: string | string[]\n  }>\n  /**\n   * Object of `cookies` from header\n   */\n  cookies: Partial<{\n    [key: string]: string\n  }>\n\n  body: any\n\n  env: Env\n\n  draftMode?: boolean\n\n  preview?: boolean\n  /**\n   * Preview data set on the request, if any\n   * */\n  previewData?: PreviewData\n}\n\n/**\n * Send body of response\n */\ntype Send<T> = (body: T) => void\n\n/**\n * Next `API` route response\n */\nexport type NextApiResponse<Data = any> = ServerResponse & {\n  /**\n   * Send data `any` data in response\n   */\n  send: Send<Data>\n  /**\n   * Send data `json` data in response\n   */\n  json: Send<Data>\n  status: (statusCode: number) => NextApiResponse<Data>\n  redirect(url: string): NextApiResponse<Data>\n  redirect(status: number, url: string): NextApiResponse<Data>\n\n  /**\n   * Set draft mode\n   */\n  setDraftMode: (options: { enable: boolean }) => NextApiResponse<Data>\n\n  /**\n   * Set preview data for Next.js' prerender mode\n   */\n  setPreviewData: (\n    data: object | string,\n    options?: {\n      /**\n       * Specifies the number (in seconds) for the preview session to last for.\n       * The given number will be converted to an integer by rounding down.\n       * By default, no maximum age is set and the preview session finishes\n       * when the client shuts down (browser is closed).\n       */\n      maxAge?: number\n      /**\n       * Specifies the path for the preview session to work under. By default,\n       * the path is considered the \"default path\", i.e., any pages under \"/\".\n       */\n      path?: string\n    }\n  ) => NextApiResponse<Data>\n\n  /**\n   * Clear preview data for Next.js' prerender mode\n   */\n  clearPreviewData: (options?: { path?: string }) => NextApiResponse<Data>\n\n  /**\n   * Revalidate a specific page and regenerate it using On-Demand Incremental\n   * Static Regeneration.\n   * The path should be an actual path, not a rewritten path. E.g. for\n   * \"/blog/[slug]\" this should be \"/blog/post-1\".\n   * @link https://nextjs.org/docs/basic-features/data-fetching/incremental-static-regeneration#on-demand-revalidation\n   */\n  revalidate: (\n    urlPath: string,\n    opts?: {\n      unstable_onlyGenerated?: boolean\n    }\n  ) => Promise<void>\n}\n\n/**\n * Next `API` route handler\n */\nexport type NextApiHandler<T = any> = (\n  req: NextApiRequest,\n  res: NextApiResponse<T>\n) => unknown | Promise<unknown>\n\n/**\n * Utils\n */\nexport function execOnce<T extends (...args: any[]) => ReturnType<T>>(\n  fn: T\n): T {\n  let used = false\n  let result: ReturnType<T>\n\n  return ((...args: any[]) => {\n    if (!used) {\n      used = true\n      result = fn(...args)\n    }\n    return result\n  }) as T\n}\n\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/\nexport const isAbsoluteUrl = (url: string) => ABSOLUTE_URL_REGEX.test(url)\n\nexport function getLocationOrigin() {\n  const { protocol, hostname, port } = window.location\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`\n}\n\nexport function getURL() {\n  const { href } = window.location\n  const origin = getLocationOrigin()\n  return href.substring(origin.length)\n}\n\nexport function getDisplayName<P>(Component: ComponentType<P>) {\n  return typeof Component === 'string'\n    ? Component\n    : Component.displayName || Component.name || 'Unknown'\n}\n\nexport function isResSent(res: ServerResponse) {\n  return res.finished || res.headersSent\n}\n\nexport function normalizeRepeatedSlashes(url: string) {\n  const urlParts = url.split('?')\n  const urlNoQuery = urlParts[0]\n\n  return (\n    urlNoQuery\n      // first we replace any non-encoded backslashes with forward\n      // then normalize repeated forward slashes\n      .replace(/\\\\/g, '/')\n      .replace(/\\/\\/+/g, '/') +\n    (urlParts[1] ? `?${urlParts.slice(1).join('?')}` : '')\n  )\n}\n\nexport async function loadGetInitialProps<\n  C extends BaseContext,\n  IP = {},\n  P = {},\n>(App: NextComponentType<C, IP, P>, ctx: C): Promise<IP> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {} as IP\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\nexport const SP = typeof performance !== 'undefined'\nexport const ST =\n  SP &&\n  (['mark', 'measure', 'getEntriesByName'] as const).every(\n    (method) => typeof performance[method] === 'function'\n  )\n\nexport class DecodeError extends Error {}\nexport class NormalizeError extends Error {}\nexport class PageNotFoundError extends Error {\n  code: string\n\n  constructor(page: string) {\n    super()\n    this.code = 'ENOENT'\n    this.name = 'PageNotFoundError'\n    this.message = `Cannot find module for page: ${page}`\n  }\n}\n\nexport class MissingStaticPage extends Error {\n  constructor(page: string, message: string) {\n    super()\n    this.message = `Failed to load static file for page: ${page} ${message}`\n  }\n}\n\nexport class MiddlewareNotFoundError extends Error {\n  code: string\n  constructor() {\n    super()\n    this.code = 'ENOENT'\n    this.message = `Cannot find the middleware module`\n  }\n}\n\nexport interface CacheFs {\n  existsSync: typeof fs.existsSync\n  readFile: typeof fs.promises.readFile\n  readFileSync: typeof fs.readFileSync\n  writeFile(f: string, d: any): Promise<void>\n  mkdir(dir: string): Promise<void | string>\n  stat(f: string): Promise<{ mtime: Date }>\n}\n\nexport function stringifyError(error: Error) {\n  return JSON.stringify({ message: error.message, stack: error.stack })\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    getTestReqInfo: null,\n    withRequest: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    getTestReqInfo: function() {\n        return getTestReqInfo;\n    },\n    withRequest: function() {\n        return withRequest;\n    }\n});\nconst _nodeasync_hooks = require(\"node:async_hooks\");\nconst testStorage = new _nodeasync_hooks.AsyncLocalStorage();\nfunction extractTestInfoFromRequest(req, reader) {\n    const proxyPortHeader = reader.header(req, 'next-test-proxy-port');\n    if (!proxyPortHeader) {\n        return undefined;\n    }\n    const url = reader.url(req);\n    const proxyPort = Number(proxyPortHeader);\n    const testData = reader.header(req, 'next-test-data') || '';\n    return {\n        url,\n        proxyPort,\n        testData\n    };\n}\nfunction withRequest(req, reader, fn) {\n    const testReqInfo = extractTestInfoFromRequest(req, reader);\n    if (!testReqInfo) {\n        return fn();\n    }\n    return testStorage.run(testReqInfo, fn);\n}\nfunction getTestReqInfo(req, reader) {\n    const testReqInfo = testStorage.getStore();\n    if (testReqInfo) {\n        return testReqInfo;\n    }\n    if (req && reader) {\n        return extractTestInfoFromRequest(req, reader);\n    }\n    return undefined;\n}\n\n//# sourceMappingURL=context.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    handleFetch: null,\n    interceptFetch: null,\n    reader: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    handleFetch: function() {\n        return handleFetch;\n    },\n    interceptFetch: function() {\n        return interceptFetch;\n    },\n    reader: function() {\n        return reader;\n    }\n});\nconst _context = require(\"./context\");\nconst reader = {\n    url (req) {\n        return req.url;\n    },\n    header (req, name) {\n        return req.headers.get(name);\n    }\n};\nfunction getTestStack() {\n    let stack = (new Error().stack ?? '').split('\\n');\n    // Skip the first line and find first non-empty line.\n    for(let i = 1; i < stack.length; i++){\n        if (stack[i].length > 0) {\n            stack = stack.slice(i);\n            break;\n        }\n    }\n    // Filter out franmework lines.\n    stack = stack.filter((f)=>!f.includes('/next/dist/'));\n    // At most 5 lines.\n    stack = stack.slice(0, 5);\n    // Cleanup some internal info and trim.\n    stack = stack.map((s)=>s.replace('webpack-internal:///(rsc)/', '').trim());\n    return stack.join('    ');\n}\nasync function buildProxyRequest(testData, request) {\n    const { url, method, headers, body, cache, credentials, integrity, mode, redirect, referrer, referrerPolicy } = request;\n    return {\n        testData,\n        api: 'fetch',\n        request: {\n            url,\n            method,\n            headers: [\n                ...Array.from(headers),\n                [\n                    'next-test-stack',\n                    getTestStack()\n                ]\n            ],\n            body: body ? Buffer.from(await request.arrayBuffer()).toString('base64') : null,\n            cache,\n            credentials,\n            integrity,\n            mode,\n            redirect,\n            referrer,\n            referrerPolicy\n        }\n    };\n}\nfunction buildResponse(proxyResponse) {\n    const { status, headers, body } = proxyResponse.response;\n    return new Response(body ? Buffer.from(body, 'base64') : null, {\n        status,\n        headers: new Headers(headers)\n    });\n}\nasync function handleFetch(originalFetch, request) {\n    const testInfo = (0, _context.getTestReqInfo)(request, reader);\n    if (!testInfo) {\n        // Passthrough non-test requests.\n        return originalFetch(request);\n    }\n    const { testData, proxyPort } = testInfo;\n    const proxyRequest = await buildProxyRequest(testData, request);\n    const resp = await originalFetch(`http://localhost:${proxyPort}`, {\n        method: 'POST',\n        body: JSON.stringify(proxyRequest),\n        next: {\n            // @ts-ignore\n            internal: true\n        }\n    });\n    if (!resp.ok) {\n        throw new Error(`Proxy request failed: ${resp.status}`);\n    }\n    const proxyResponse = await resp.json();\n    const { api } = proxyResponse;\n    switch(api){\n        case 'continue':\n            return originalFetch(request);\n        case 'abort':\n        case 'unhandled':\n            throw new Error(`Proxy request aborted [${request.method} ${request.url}]`);\n        default:\n            break;\n    }\n    return buildResponse(proxyResponse);\n}\nfunction interceptFetch(originalFetch) {\n    global.fetch = function testFetch(input, init) {\n        var _init_next;\n        // Passthrough internal requests.\n        // @ts-ignore\n        if (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next.internal) {\n            return originalFetch(input, init);\n        }\n        return handleFetch(originalFetch, new Request(input, init));\n    };\n    return ()=>{\n        global.fetch = originalFetch;\n    };\n}\n\n//# sourceMappingURL=fetch.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    interceptTestApis: null,\n    wrapRequestHandler: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    interceptTestApis: function() {\n        return interceptTestApis;\n    },\n    wrapRequestHandler: function() {\n        return wrapRequestHandler;\n    }\n});\nconst _context = require(\"./context\");\nconst _fetch = require(\"./fetch\");\nfunction interceptTestApis() {\n    return (0, _fetch.interceptFetch)(global.fetch);\n}\nfunction wrapRequestHandler(handler) {\n    return (req, fn)=>(0, _context.withRequest)(req, _fetch.reader, ()=>handler(req, fn));\n}\n\n//# sourceMappingURL=server-edge.js.map","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies,\n  parseCookie: () => parseCookie,\n  parseSetCookie: () => parseSetCookie,\n  stringifyCookie: () => stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction stringifyCookie(c) {\n  var _a;\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\n    \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\n    \"partitioned\" in c && c.partitioned && \"Partitioned\",\n    \"priority\" in c && c.priority && `Priority=${c.priority}`\n  ].filter(Boolean);\n  const stringified = `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}`;\n  return attrs.length === 0 ? stringified : `${stringified}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    if (splitAt === -1) {\n      map.set(pair, \"true\");\n      continue;\n    }\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookie(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookie(setCookie);\n  const {\n    domain,\n    expires,\n    httponly,\n    maxage,\n    path,\n    samesite,\n    secure,\n    partitioned,\n    priority\n  } = Object.fromEntries(\n    attributes.map(([key, value2]) => [key.toLowerCase(), value2])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true },\n    ...priority && { priority: parsePriority(priority) },\n    ...partitioned && { partitioned: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\"low\", \"medium\", \"high\"];\nfunction parsePriority(string) {\n  string = string.toLowerCase();\n  return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookie(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  /**\n   * The amount of cookies received from the client\n   */\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => stringifyCookie(value2)).join(\"; \")\n    );\n    return this;\n  }\n  /**\n   * Delete the cookies matching the passed name or names in the request.\n   */\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => stringifyCookie(value)).join(\"; \")\n    );\n    return result;\n  }\n  /**\n   * Delete all the cookies in the cookies in the request.\n   */\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  /**\n   * Format the cookies in the request as a string for logging\n   */\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a, _b, _c;\n    this._headers = responseHeaders;\n    const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookie(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */\n  delete(...args) {\n    const [name, path, domain] = typeof args[0] === \"string\" ? [args[0]] : [args[0].name, args[0].path, args[0].domain];\n    return this.set({ name, path, domain, value: \"\", expires: /* @__PURE__ */ new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(stringifyCookie).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = stringifyCookie(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (typeof cookie.expires === \"number\") {\n    cookie.expires = new Date(cookie.expires);\n  }\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RequestCookies,\n  ResponseCookies,\n  parseCookie,\n  parseSetCookie,\n  stringifyCookie\n});\n","(()=>{\"use strict\";var e={491:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ContextAPI=void 0;const n=r(223);const a=r(172);const o=r(930);const i=\"context\";const c=new n.NoopContextManager;class ContextAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new ContextAPI}return this._instance}setGlobalContextManager(e){return(0,a.registerGlobal)(i,e,o.DiagAPI.instance())}active(){return this._getContextManager().active()}with(e,t,r,...n){return this._getContextManager().with(e,t,r,...n)}bind(e,t){return this._getContextManager().bind(e,t)}_getContextManager(){return(0,a.getGlobal)(i)||c}disable(){this._getContextManager().disable();(0,a.unregisterGlobal)(i,o.DiagAPI.instance())}}t.ContextAPI=ContextAPI},930:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagAPI=void 0;const n=r(56);const a=r(912);const o=r(957);const i=r(172);const c=\"diag\";class DiagAPI{constructor(){function _logProxy(e){return function(...t){const r=(0,i.getGlobal)(\"diag\");if(!r)return;return r[e](...t)}}const e=this;const setLogger=(t,r={logLevel:o.DiagLogLevel.INFO})=>{var n,c,s;if(t===e){const t=new Error(\"Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation\");e.error((n=t.stack)!==null&&n!==void 0?n:t.message);return false}if(typeof r===\"number\"){r={logLevel:r}}const u=(0,i.getGlobal)(\"diag\");const l=(0,a.createLogLevelDiagLogger)((c=r.logLevel)!==null&&c!==void 0?c:o.DiagLogLevel.INFO,t);if(u&&!r.suppressOverrideMessage){const e=(s=(new Error).stack)!==null&&s!==void 0?s:\"<failed to generate stacktrace>\";u.warn(`Current logger will be overwritten from ${e}`);l.warn(`Current logger will overwrite one already registered from ${e}`)}return(0,i.registerGlobal)(\"diag\",l,e,true)};e.setLogger=setLogger;e.disable=()=>{(0,i.unregisterGlobal)(c,e)};e.createComponentLogger=e=>new n.DiagComponentLogger(e);e.verbose=_logProxy(\"verbose\");e.debug=_logProxy(\"debug\");e.info=_logProxy(\"info\");e.warn=_logProxy(\"warn\");e.error=_logProxy(\"error\")}static instance(){if(!this._instance){this._instance=new DiagAPI}return this._instance}}t.DiagAPI=DiagAPI},653:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.MetricsAPI=void 0;const n=r(660);const a=r(172);const o=r(930);const i=\"metrics\";class MetricsAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new MetricsAPI}return this._instance}setGlobalMeterProvider(e){return(0,a.registerGlobal)(i,e,o.DiagAPI.instance())}getMeterProvider(){return(0,a.getGlobal)(i)||n.NOOP_METER_PROVIDER}getMeter(e,t,r){return this.getMeterProvider().getMeter(e,t,r)}disable(){(0,a.unregisterGlobal)(i,o.DiagAPI.instance())}}t.MetricsAPI=MetricsAPI},181:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.PropagationAPI=void 0;const n=r(172);const a=r(874);const o=r(194);const i=r(277);const c=r(369);const s=r(930);const u=\"propagation\";const l=new a.NoopTextMapPropagator;class PropagationAPI{constructor(){this.createBaggage=c.createBaggage;this.getBaggage=i.getBaggage;this.getActiveBaggage=i.getActiveBaggage;this.setBaggage=i.setBaggage;this.deleteBaggage=i.deleteBaggage}static getInstance(){if(!this._instance){this._instance=new PropagationAPI}return this._instance}setGlobalPropagator(e){return(0,n.registerGlobal)(u,e,s.DiagAPI.instance())}inject(e,t,r=o.defaultTextMapSetter){return this._getGlobalPropagator().inject(e,t,r)}extract(e,t,r=o.defaultTextMapGetter){return this._getGlobalPropagator().extract(e,t,r)}fields(){return this._getGlobalPropagator().fields()}disable(){(0,n.unregisterGlobal)(u,s.DiagAPI.instance())}_getGlobalPropagator(){return(0,n.getGlobal)(u)||l}}t.PropagationAPI=PropagationAPI},997:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceAPI=void 0;const n=r(172);const a=r(846);const o=r(139);const i=r(607);const c=r(930);const s=\"trace\";class TraceAPI{constructor(){this._proxyTracerProvider=new a.ProxyTracerProvider;this.wrapSpanContext=o.wrapSpanContext;this.isSpanContextValid=o.isSpanContextValid;this.deleteSpan=i.deleteSpan;this.getSpan=i.getSpan;this.getActiveSpan=i.getActiveSpan;this.getSpanContext=i.getSpanContext;this.setSpan=i.setSpan;this.setSpanContext=i.setSpanContext}static getInstance(){if(!this._instance){this._instance=new TraceAPI}return this._instance}setGlobalTracerProvider(e){const t=(0,n.registerGlobal)(s,this._proxyTracerProvider,c.DiagAPI.instance());if(t){this._proxyTracerProvider.setDelegate(e)}return t}getTracerProvider(){return(0,n.getGlobal)(s)||this._proxyTracerProvider}getTracer(e,t){return this.getTracerProvider().getTracer(e,t)}disable(){(0,n.unregisterGlobal)(s,c.DiagAPI.instance());this._proxyTracerProvider=new a.ProxyTracerProvider}}t.TraceAPI=TraceAPI},277:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.deleteBaggage=t.setBaggage=t.getActiveBaggage=t.getBaggage=void 0;const n=r(491);const a=r(780);const o=(0,a.createContextKey)(\"OpenTelemetry Baggage Key\");function getBaggage(e){return e.getValue(o)||undefined}t.getBaggage=getBaggage;function getActiveBaggage(){return getBaggage(n.ContextAPI.getInstance().active())}t.getActiveBaggage=getActiveBaggage;function setBaggage(e,t){return e.setValue(o,t)}t.setBaggage=setBaggage;function deleteBaggage(e){return e.deleteValue(o)}t.deleteBaggage=deleteBaggage},993:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.BaggageImpl=void 0;class BaggageImpl{constructor(e){this._entries=e?new Map(e):new Map}getEntry(e){const t=this._entries.get(e);if(!t){return undefined}return Object.assign({},t)}getAllEntries(){return Array.from(this._entries.entries()).map((([e,t])=>[e,t]))}setEntry(e,t){const r=new BaggageImpl(this._entries);r._entries.set(e,t);return r}removeEntry(e){const t=new BaggageImpl(this._entries);t._entries.delete(e);return t}removeEntries(...e){const t=new BaggageImpl(this._entries);for(const r of e){t._entries.delete(r)}return t}clear(){return new BaggageImpl}}t.BaggageImpl=BaggageImpl},830:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.baggageEntryMetadataSymbol=void 0;t.baggageEntryMetadataSymbol=Symbol(\"BaggageEntryMetadata\")},369:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.baggageEntryMetadataFromString=t.createBaggage=void 0;const n=r(930);const a=r(993);const o=r(830);const i=n.DiagAPI.instance();function createBaggage(e={}){return new a.BaggageImpl(new Map(Object.entries(e)))}t.createBaggage=createBaggage;function baggageEntryMetadataFromString(e){if(typeof e!==\"string\"){i.error(`Cannot create baggage metadata from unknown type: ${typeof e}`);e=\"\"}return{__TYPE__:o.baggageEntryMetadataSymbol,toString(){return e}}}t.baggageEntryMetadataFromString=baggageEntryMetadataFromString},67:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.context=void 0;const n=r(491);t.context=n.ContextAPI.getInstance()},223:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopContextManager=void 0;const n=r(780);class NoopContextManager{active(){return n.ROOT_CONTEXT}with(e,t,r,...n){return t.call(r,...n)}bind(e,t){return t}enable(){return this}disable(){return this}}t.NoopContextManager=NoopContextManager},780:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ROOT_CONTEXT=t.createContextKey=void 0;function createContextKey(e){return Symbol.for(e)}t.createContextKey=createContextKey;class BaseContext{constructor(e){const t=this;t._currentContext=e?new Map(e):new Map;t.getValue=e=>t._currentContext.get(e);t.setValue=(e,r)=>{const n=new BaseContext(t._currentContext);n._currentContext.set(e,r);return n};t.deleteValue=e=>{const r=new BaseContext(t._currentContext);r._currentContext.delete(e);return r}}}t.ROOT_CONTEXT=new BaseContext},506:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.diag=void 0;const n=r(930);t.diag=n.DiagAPI.instance()},56:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagComponentLogger=void 0;const n=r(172);class DiagComponentLogger{constructor(e){this._namespace=e.namespace||\"DiagComponentLogger\"}debug(...e){return logProxy(\"debug\",this._namespace,e)}error(...e){return logProxy(\"error\",this._namespace,e)}info(...e){return logProxy(\"info\",this._namespace,e)}warn(...e){return logProxy(\"warn\",this._namespace,e)}verbose(...e){return logProxy(\"verbose\",this._namespace,e)}}t.DiagComponentLogger=DiagComponentLogger;function logProxy(e,t,r){const a=(0,n.getGlobal)(\"diag\");if(!a){return}r.unshift(t);return a[e](...r)}},972:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagConsoleLogger=void 0;const r=[{n:\"error\",c:\"error\"},{n:\"warn\",c:\"warn\"},{n:\"info\",c:\"info\"},{n:\"debug\",c:\"debug\"},{n:\"verbose\",c:\"trace\"}];class DiagConsoleLogger{constructor(){function _consoleFunc(e){return function(...t){if(console){let r=console[e];if(typeof r!==\"function\"){r=console.log}if(typeof r===\"function\"){return r.apply(console,t)}}}}for(let e=0;e<r.length;e++){this[r[e].n]=_consoleFunc(r[e].c)}}}t.DiagConsoleLogger=DiagConsoleLogger},912:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createLogLevelDiagLogger=void 0;const n=r(957);function createLogLevelDiagLogger(e,t){if(e<n.DiagLogLevel.NONE){e=n.DiagLogLevel.NONE}else if(e>n.DiagLogLevel.ALL){e=n.DiagLogLevel.ALL}t=t||{};function _filterFunc(r,n){const a=t[r];if(typeof a===\"function\"&&e>=n){return a.bind(t)}return function(){}}return{error:_filterFunc(\"error\",n.DiagLogLevel.ERROR),warn:_filterFunc(\"warn\",n.DiagLogLevel.WARN),info:_filterFunc(\"info\",n.DiagLogLevel.INFO),debug:_filterFunc(\"debug\",n.DiagLogLevel.DEBUG),verbose:_filterFunc(\"verbose\",n.DiagLogLevel.VERBOSE)}}t.createLogLevelDiagLogger=createLogLevelDiagLogger},957:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagLogLevel=void 0;var r;(function(e){e[e[\"NONE\"]=0]=\"NONE\";e[e[\"ERROR\"]=30]=\"ERROR\";e[e[\"WARN\"]=50]=\"WARN\";e[e[\"INFO\"]=60]=\"INFO\";e[e[\"DEBUG\"]=70]=\"DEBUG\";e[e[\"VERBOSE\"]=80]=\"VERBOSE\";e[e[\"ALL\"]=9999]=\"ALL\"})(r=t.DiagLogLevel||(t.DiagLogLevel={}))},172:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.unregisterGlobal=t.getGlobal=t.registerGlobal=void 0;const n=r(200);const a=r(521);const o=r(130);const i=a.VERSION.split(\".\")[0];const c=Symbol.for(`opentelemetry.js.api.${i}`);const s=n._globalThis;function registerGlobal(e,t,r,n=false){var o;const i=s[c]=(o=s[c])!==null&&o!==void 0?o:{version:a.VERSION};if(!n&&i[e]){const t=new Error(`@opentelemetry/api: Attempted duplicate registration of API: ${e}`);r.error(t.stack||t.message);return false}if(i.version!==a.VERSION){const t=new Error(`@opentelemetry/api: Registration of version v${i.version} for ${e} does not match previously registered API v${a.VERSION}`);r.error(t.stack||t.message);return false}i[e]=t;r.debug(`@opentelemetry/api: Registered a global for ${e} v${a.VERSION}.`);return true}t.registerGlobal=registerGlobal;function getGlobal(e){var t,r;const n=(t=s[c])===null||t===void 0?void 0:t.version;if(!n||!(0,o.isCompatible)(n)){return}return(r=s[c])===null||r===void 0?void 0:r[e]}t.getGlobal=getGlobal;function unregisterGlobal(e,t){t.debug(`@opentelemetry/api: Unregistering a global for ${e} v${a.VERSION}.`);const r=s[c];if(r){delete r[e]}}t.unregisterGlobal=unregisterGlobal},130:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.isCompatible=t._makeCompatibilityCheck=void 0;const n=r(521);const a=/^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;function _makeCompatibilityCheck(e){const t=new Set([e]);const r=new Set;const n=e.match(a);if(!n){return()=>false}const o={major:+n[1],minor:+n[2],patch:+n[3],prerelease:n[4]};if(o.prerelease!=null){return function isExactmatch(t){return t===e}}function _reject(e){r.add(e);return false}function _accept(e){t.add(e);return true}return function isCompatible(e){if(t.has(e)){return true}if(r.has(e)){return false}const n=e.match(a);if(!n){return _reject(e)}const i={major:+n[1],minor:+n[2],patch:+n[3],prerelease:n[4]};if(i.prerelease!=null){return _reject(e)}if(o.major!==i.major){return _reject(e)}if(o.major===0){if(o.minor===i.minor&&o.patch<=i.patch){return _accept(e)}return _reject(e)}if(o.minor<=i.minor){return _accept(e)}return _reject(e)}}t._makeCompatibilityCheck=_makeCompatibilityCheck;t.isCompatible=_makeCompatibilityCheck(n.VERSION)},886:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.metrics=void 0;const n=r(653);t.metrics=n.MetricsAPI.getInstance()},901:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ValueType=void 0;var r;(function(e){e[e[\"INT\"]=0]=\"INT\";e[e[\"DOUBLE\"]=1]=\"DOUBLE\"})(r=t.ValueType||(t.ValueType={}))},102:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createNoopMeter=t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=t.NOOP_OBSERVABLE_GAUGE_METRIC=t.NOOP_OBSERVABLE_COUNTER_METRIC=t.NOOP_UP_DOWN_COUNTER_METRIC=t.NOOP_HISTOGRAM_METRIC=t.NOOP_COUNTER_METRIC=t.NOOP_METER=t.NoopObservableUpDownCounterMetric=t.NoopObservableGaugeMetric=t.NoopObservableCounterMetric=t.NoopObservableMetric=t.NoopHistogramMetric=t.NoopUpDownCounterMetric=t.NoopCounterMetric=t.NoopMetric=t.NoopMeter=void 0;class NoopMeter{constructor(){}createHistogram(e,r){return t.NOOP_HISTOGRAM_METRIC}createCounter(e,r){return t.NOOP_COUNTER_METRIC}createUpDownCounter(e,r){return t.NOOP_UP_DOWN_COUNTER_METRIC}createObservableGauge(e,r){return t.NOOP_OBSERVABLE_GAUGE_METRIC}createObservableCounter(e,r){return t.NOOP_OBSERVABLE_COUNTER_METRIC}createObservableUpDownCounter(e,r){return t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC}addBatchObservableCallback(e,t){}removeBatchObservableCallback(e){}}t.NoopMeter=NoopMeter;class NoopMetric{}t.NoopMetric=NoopMetric;class NoopCounterMetric extends NoopMetric{add(e,t){}}t.NoopCounterMetric=NoopCounterMetric;class NoopUpDownCounterMetric extends NoopMetric{add(e,t){}}t.NoopUpDownCounterMetric=NoopUpDownCounterMetric;class NoopHistogramMetric extends NoopMetric{record(e,t){}}t.NoopHistogramMetric=NoopHistogramMetric;class NoopObservableMetric{addCallback(e){}removeCallback(e){}}t.NoopObservableMetric=NoopObservableMetric;class NoopObservableCounterMetric extends NoopObservableMetric{}t.NoopObservableCounterMetric=NoopObservableCounterMetric;class NoopObservableGaugeMetric extends NoopObservableMetric{}t.NoopObservableGaugeMetric=NoopObservableGaugeMetric;class NoopObservableUpDownCounterMetric extends NoopObservableMetric{}t.NoopObservableUpDownCounterMetric=NoopObservableUpDownCounterMetric;t.NOOP_METER=new NoopMeter;t.NOOP_COUNTER_METRIC=new NoopCounterMetric;t.NOOP_HISTOGRAM_METRIC=new NoopHistogramMetric;t.NOOP_UP_DOWN_COUNTER_METRIC=new NoopUpDownCounterMetric;t.NOOP_OBSERVABLE_COUNTER_METRIC=new NoopObservableCounterMetric;t.NOOP_OBSERVABLE_GAUGE_METRIC=new NoopObservableGaugeMetric;t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=new NoopObservableUpDownCounterMetric;function createNoopMeter(){return t.NOOP_METER}t.createNoopMeter=createNoopMeter},660:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NOOP_METER_PROVIDER=t.NoopMeterProvider=void 0;const n=r(102);class NoopMeterProvider{getMeter(e,t,r){return n.NOOP_METER}}t.NoopMeterProvider=NoopMeterProvider;t.NOOP_METER_PROVIDER=new NoopMeterProvider},200:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){if(n===undefined)n=r;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,n){if(n===undefined)n=r;e[n]=t[r]});var a=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});a(r(46),t)},651:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t._globalThis=void 0;t._globalThis=typeof globalThis===\"object\"?globalThis:global},46:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){if(n===undefined)n=r;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,n){if(n===undefined)n=r;e[n]=t[r]});var a=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});a(r(651),t)},939:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.propagation=void 0;const n=r(181);t.propagation=n.PropagationAPI.getInstance()},874:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTextMapPropagator=void 0;class NoopTextMapPropagator{inject(e,t){}extract(e,t){return e}fields(){return[]}}t.NoopTextMapPropagator=NoopTextMapPropagator},194:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.defaultTextMapSetter=t.defaultTextMapGetter=void 0;t.defaultTextMapGetter={get(e,t){if(e==null){return undefined}return e[t]},keys(e){if(e==null){return[]}return Object.keys(e)}};t.defaultTextMapSetter={set(e,t,r){if(e==null){return}e[t]=r}}},845:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.trace=void 0;const n=r(997);t.trace=n.TraceAPI.getInstance()},403:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NonRecordingSpan=void 0;const n=r(476);class NonRecordingSpan{constructor(e=n.INVALID_SPAN_CONTEXT){this._spanContext=e}spanContext(){return this._spanContext}setAttribute(e,t){return this}setAttributes(e){return this}addEvent(e,t){return this}setStatus(e){return this}updateName(e){return this}end(e){}isRecording(){return false}recordException(e,t){}}t.NonRecordingSpan=NonRecordingSpan},614:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTracer=void 0;const n=r(491);const a=r(607);const o=r(403);const i=r(139);const c=n.ContextAPI.getInstance();class NoopTracer{startSpan(e,t,r=c.active()){const n=Boolean(t===null||t===void 0?void 0:t.root);if(n){return new o.NonRecordingSpan}const s=r&&(0,a.getSpanContext)(r);if(isSpanContext(s)&&(0,i.isSpanContextValid)(s)){return new o.NonRecordingSpan(s)}else{return new o.NonRecordingSpan}}startActiveSpan(e,t,r,n){let o;let i;let s;if(arguments.length<2){return}else if(arguments.length===2){s=t}else if(arguments.length===3){o=t;s=r}else{o=t;i=r;s=n}const u=i!==null&&i!==void 0?i:c.active();const l=this.startSpan(e,o,u);const g=(0,a.setSpan)(u,l);return c.with(g,s,undefined,l)}}t.NoopTracer=NoopTracer;function isSpanContext(e){return typeof e===\"object\"&&typeof e[\"spanId\"]===\"string\"&&typeof e[\"traceId\"]===\"string\"&&typeof e[\"traceFlags\"]===\"number\"}},124:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTracerProvider=void 0;const n=r(614);class NoopTracerProvider{getTracer(e,t,r){return new n.NoopTracer}}t.NoopTracerProvider=NoopTracerProvider},125:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ProxyTracer=void 0;const n=r(614);const a=new n.NoopTracer;class ProxyTracer{constructor(e,t,r,n){this._provider=e;this.name=t;this.version=r;this.options=n}startSpan(e,t,r){return this._getTracer().startSpan(e,t,r)}startActiveSpan(e,t,r,n){const a=this._getTracer();return Reflect.apply(a.startActiveSpan,a,arguments)}_getTracer(){if(this._delegate){return this._delegate}const e=this._provider.getDelegateTracer(this.name,this.version,this.options);if(!e){return a}this._delegate=e;return this._delegate}}t.ProxyTracer=ProxyTracer},846:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ProxyTracerProvider=void 0;const n=r(125);const a=r(124);const o=new a.NoopTracerProvider;class ProxyTracerProvider{getTracer(e,t,r){var a;return(a=this.getDelegateTracer(e,t,r))!==null&&a!==void 0?a:new n.ProxyTracer(this,e,t,r)}getDelegate(){var e;return(e=this._delegate)!==null&&e!==void 0?e:o}setDelegate(e){this._delegate=e}getDelegateTracer(e,t,r){var n;return(n=this._delegate)===null||n===void 0?void 0:n.getTracer(e,t,r)}}t.ProxyTracerProvider=ProxyTracerProvider},996:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SamplingDecision=void 0;var r;(function(e){e[e[\"NOT_RECORD\"]=0]=\"NOT_RECORD\";e[e[\"RECORD\"]=1]=\"RECORD\";e[e[\"RECORD_AND_SAMPLED\"]=2]=\"RECORD_AND_SAMPLED\"})(r=t.SamplingDecision||(t.SamplingDecision={}))},607:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.getSpanContext=t.setSpanContext=t.deleteSpan=t.setSpan=t.getActiveSpan=t.getSpan=void 0;const n=r(780);const a=r(403);const o=r(491);const i=(0,n.createContextKey)(\"OpenTelemetry Context Key SPAN\");function getSpan(e){return e.getValue(i)||undefined}t.getSpan=getSpan;function getActiveSpan(){return getSpan(o.ContextAPI.getInstance().active())}t.getActiveSpan=getActiveSpan;function setSpan(e,t){return e.setValue(i,t)}t.setSpan=setSpan;function deleteSpan(e){return e.deleteValue(i)}t.deleteSpan=deleteSpan;function setSpanContext(e,t){return setSpan(e,new a.NonRecordingSpan(t))}t.setSpanContext=setSpanContext;function getSpanContext(e){var t;return(t=getSpan(e))===null||t===void 0?void 0:t.spanContext()}t.getSpanContext=getSpanContext},325:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceStateImpl=void 0;const n=r(564);const a=32;const o=512;const i=\",\";const c=\"=\";class TraceStateImpl{constructor(e){this._internalState=new Map;if(e)this._parse(e)}set(e,t){const r=this._clone();if(r._internalState.has(e)){r._internalState.delete(e)}r._internalState.set(e,t);return r}unset(e){const t=this._clone();t._internalState.delete(e);return t}get(e){return this._internalState.get(e)}serialize(){return this._keys().reduce(((e,t)=>{e.push(t+c+this.get(t));return e}),[]).join(i)}_parse(e){if(e.length>o)return;this._internalState=e.split(i).reverse().reduce(((e,t)=>{const r=t.trim();const a=r.indexOf(c);if(a!==-1){const o=r.slice(0,a);const i=r.slice(a+1,t.length);if((0,n.validateKey)(o)&&(0,n.validateValue)(i)){e.set(o,i)}else{}}return e}),new Map);if(this._internalState.size>a){this._internalState=new Map(Array.from(this._internalState.entries()).reverse().slice(0,a))}}_keys(){return Array.from(this._internalState.keys()).reverse()}_clone(){const e=new TraceStateImpl;e._internalState=new Map(this._internalState);return e}}t.TraceStateImpl=TraceStateImpl},564:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.validateValue=t.validateKey=void 0;const r=\"[_0-9a-z-*/]\";const n=`[a-z]${r}{0,255}`;const a=`[a-z0-9]${r}{0,240}@[a-z]${r}{0,13}`;const o=new RegExp(`^(?:${n}|${a})$`);const i=/^[ -~]{0,255}[!-~]$/;const c=/,|=/;function validateKey(e){return o.test(e)}t.validateKey=validateKey;function validateValue(e){return i.test(e)&&!c.test(e)}t.validateValue=validateValue},98:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createTraceState=void 0;const n=r(325);function createTraceState(e){return new n.TraceStateImpl(e)}t.createTraceState=createTraceState},476:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.INVALID_SPAN_CONTEXT=t.INVALID_TRACEID=t.INVALID_SPANID=void 0;const n=r(475);t.INVALID_SPANID=\"0000000000000000\";t.INVALID_TRACEID=\"00000000000000000000000000000000\";t.INVALID_SPAN_CONTEXT={traceId:t.INVALID_TRACEID,spanId:t.INVALID_SPANID,traceFlags:n.TraceFlags.NONE}},357:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SpanKind=void 0;var r;(function(e){e[e[\"INTERNAL\"]=0]=\"INTERNAL\";e[e[\"SERVER\"]=1]=\"SERVER\";e[e[\"CLIENT\"]=2]=\"CLIENT\";e[e[\"PRODUCER\"]=3]=\"PRODUCER\";e[e[\"CONSUMER\"]=4]=\"CONSUMER\"})(r=t.SpanKind||(t.SpanKind={}))},139:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.wrapSpanContext=t.isSpanContextValid=t.isValidSpanId=t.isValidTraceId=void 0;const n=r(476);const a=r(403);const o=/^([0-9a-f]{32})$/i;const i=/^[0-9a-f]{16}$/i;function isValidTraceId(e){return o.test(e)&&e!==n.INVALID_TRACEID}t.isValidTraceId=isValidTraceId;function isValidSpanId(e){return i.test(e)&&e!==n.INVALID_SPANID}t.isValidSpanId=isValidSpanId;function isSpanContextValid(e){return isValidTraceId(e.traceId)&&isValidSpanId(e.spanId)}t.isSpanContextValid=isSpanContextValid;function wrapSpanContext(e){return new a.NonRecordingSpan(e)}t.wrapSpanContext=wrapSpanContext},847:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SpanStatusCode=void 0;var r;(function(e){e[e[\"UNSET\"]=0]=\"UNSET\";e[e[\"OK\"]=1]=\"OK\";e[e[\"ERROR\"]=2]=\"ERROR\"})(r=t.SpanStatusCode||(t.SpanStatusCode={}))},475:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceFlags=void 0;var r;(function(e){e[e[\"NONE\"]=0]=\"NONE\";e[e[\"SAMPLED\"]=1]=\"SAMPLED\"})(r=t.TraceFlags||(t.TraceFlags={}))},521:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.VERSION=void 0;t.VERSION=\"1.6.0\"}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var a=t[r]={exports:{}};var o=true;try{e[r].call(a.exports,a,a.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return a.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r={};(()=>{var e=r;Object.defineProperty(e,\"__esModule\",{value:true});e.trace=e.propagation=e.metrics=e.diag=e.context=e.INVALID_SPAN_CONTEXT=e.INVALID_TRACEID=e.INVALID_SPANID=e.isValidSpanId=e.isValidTraceId=e.isSpanContextValid=e.createTraceState=e.TraceFlags=e.SpanStatusCode=e.SpanKind=e.SamplingDecision=e.ProxyTracerProvider=e.ProxyTracer=e.defaultTextMapSetter=e.defaultTextMapGetter=e.ValueType=e.createNoopMeter=e.DiagLogLevel=e.DiagConsoleLogger=e.ROOT_CONTEXT=e.createContextKey=e.baggageEntryMetadataFromString=void 0;var t=__nccwpck_require__(369);Object.defineProperty(e,\"baggageEntryMetadataFromString\",{enumerable:true,get:function(){return t.baggageEntryMetadataFromString}});var n=__nccwpck_require__(780);Object.defineProperty(e,\"createContextKey\",{enumerable:true,get:function(){return n.createContextKey}});Object.defineProperty(e,\"ROOT_CONTEXT\",{enumerable:true,get:function(){return n.ROOT_CONTEXT}});var a=__nccwpck_require__(972);Object.defineProperty(e,\"DiagConsoleLogger\",{enumerable:true,get:function(){return a.DiagConsoleLogger}});var o=__nccwpck_require__(957);Object.defineProperty(e,\"DiagLogLevel\",{enumerable:true,get:function(){return o.DiagLogLevel}});var i=__nccwpck_require__(102);Object.defineProperty(e,\"createNoopMeter\",{enumerable:true,get:function(){return i.createNoopMeter}});var c=__nccwpck_require__(901);Object.defineProperty(e,\"ValueType\",{enumerable:true,get:function(){return c.ValueType}});var s=__nccwpck_require__(194);Object.defineProperty(e,\"defaultTextMapGetter\",{enumerable:true,get:function(){return s.defaultTextMapGetter}});Object.defineProperty(e,\"defaultTextMapSetter\",{enumerable:true,get:function(){return s.defaultTextMapSetter}});var u=__nccwpck_require__(125);Object.defineProperty(e,\"ProxyTracer\",{enumerable:true,get:function(){return u.ProxyTracer}});var l=__nccwpck_require__(846);Object.defineProperty(e,\"ProxyTracerProvider\",{enumerable:true,get:function(){return l.ProxyTracerProvider}});var g=__nccwpck_require__(996);Object.defineProperty(e,\"SamplingDecision\",{enumerable:true,get:function(){return g.SamplingDecision}});var p=__nccwpck_require__(357);Object.defineProperty(e,\"SpanKind\",{enumerable:true,get:function(){return p.SpanKind}});var d=__nccwpck_require__(847);Object.defineProperty(e,\"SpanStatusCode\",{enumerable:true,get:function(){return d.SpanStatusCode}});var _=__nccwpck_require__(475);Object.defineProperty(e,\"TraceFlags\",{enumerable:true,get:function(){return _.TraceFlags}});var f=__nccwpck_require__(98);Object.defineProperty(e,\"createTraceState\",{enumerable:true,get:function(){return f.createTraceState}});var b=__nccwpck_require__(139);Object.defineProperty(e,\"isSpanContextValid\",{enumerable:true,get:function(){return b.isSpanContextValid}});Object.defineProperty(e,\"isValidTraceId\",{enumerable:true,get:function(){return b.isValidTraceId}});Object.defineProperty(e,\"isValidSpanId\",{enumerable:true,get:function(){return b.isValidSpanId}});var v=__nccwpck_require__(476);Object.defineProperty(e,\"INVALID_SPANID\",{enumerable:true,get:function(){return v.INVALID_SPANID}});Object.defineProperty(e,\"INVALID_TRACEID\",{enumerable:true,get:function(){return v.INVALID_TRACEID}});Object.defineProperty(e,\"INVALID_SPAN_CONTEXT\",{enumerable:true,get:function(){return v.INVALID_SPAN_CONTEXT}});const O=__nccwpck_require__(67);Object.defineProperty(e,\"context\",{enumerable:true,get:function(){return O.context}});const P=__nccwpck_require__(506);Object.defineProperty(e,\"diag\",{enumerable:true,get:function(){return P.diag}});const N=__nccwpck_require__(886);Object.defineProperty(e,\"metrics\",{enumerable:true,get:function(){return N.metrics}});const S=__nccwpck_require__(939);Object.defineProperty(e,\"propagation\",{enumerable:true,get:function(){return S.propagation}});const C=__nccwpck_require__(845);Object.defineProperty(e,\"trace\",{enumerable:true,get:function(){return C.trace}});e[\"default\"]={context:O.context,diag:P.diag,metrics:N.metrics,propagation:S.propagation,trace:C.trace}})();module.exports=r})();","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */r.parse=parse;r.serialize=serialize;var i=decodeURIComponent;var t=encodeURIComponent;var a=/; */;var n=/^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;function parse(e,r){if(typeof e!==\"string\"){throw new TypeError(\"argument str must be a string\")}var t={};var n=r||{};var o=e.split(a);var s=n.decode||i;for(var p=0;p<o.length;p++){var f=o[p];var u=f.indexOf(\"=\");if(u<0){continue}var v=f.substr(0,u).trim();var c=f.substr(++u,f.length).trim();if('\"'==c[0]){c=c.slice(1,-1)}if(undefined==t[v]){t[v]=tryDecode(c,s)}}return t}function serialize(e,r,i){var a=i||{};var o=a.encode||t;if(typeof o!==\"function\"){throw new TypeError(\"option encode is invalid\")}if(!n.test(e)){throw new TypeError(\"argument name is invalid\")}var s=o(r);if(s&&!n.test(s)){throw new TypeError(\"argument val is invalid\")}var p=e+\"=\"+s;if(null!=a.maxAge){var f=a.maxAge-0;if(isNaN(f)||!isFinite(f)){throw new TypeError(\"option maxAge is invalid\")}p+=\"; Max-Age=\"+Math.floor(f)}if(a.domain){if(!n.test(a.domain)){throw new TypeError(\"option domain is invalid\")}p+=\"; Domain=\"+a.domain}if(a.path){if(!n.test(a.path)){throw new TypeError(\"option path is invalid\")}p+=\"; Path=\"+a.path}if(a.expires){if(typeof a.expires.toUTCString!==\"function\"){throw new TypeError(\"option expires is invalid\")}p+=\"; Expires=\"+a.expires.toUTCString()}if(a.httpOnly){p+=\"; HttpOnly\"}if(a.secure){p+=\"; Secure\"}if(a.sameSite){var u=typeof a.sameSite===\"string\"?a.sameSite.toLowerCase():a.sameSite;switch(u){case true:p+=\"; SameSite=Strict\";break;case\"lax\":p+=\"; SameSite=Lax\";break;case\"strict\":p+=\"; SameSite=Strict\";break;case\"none\":p+=\"; SameSite=None\";break;default:throw new TypeError(\"option sameSite is invalid\")}}return p}function tryDecode(e,r){try{return r(e)}catch(r){return e}}})();module.exports=e})();","(function(){var e={452:function(e){\"use strict\";e.exports=require(\"next/dist/compiled/querystring-es3\")}};var t={};function __nccwpck_require__(o){var a=t[o];if(a!==undefined){return a.exports}var s=t[o]={exports:{}};var n=true;try{e[o](s,s.exports,__nccwpck_require__);n=false}finally{if(n)delete t[o]}return s.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var o={};!function(){var e=o;var t,a=(t=__nccwpck_require__(452))&&\"object\"==typeof t&&\"default\"in t?t.default:t,s=/https?|ftp|gopher|file/;function r(e){\"string\"==typeof e&&(e=d(e));var t=function(e,t,o){var a=e.auth,s=e.hostname,n=e.protocol||\"\",p=e.pathname||\"\",c=e.hash||\"\",i=e.query||\"\",u=!1;a=a?encodeURIComponent(a).replace(/%3A/i,\":\")+\"@\":\"\",e.host?u=a+e.host:s&&(u=a+(~s.indexOf(\":\")?\"[\"+s+\"]\":s),e.port&&(u+=\":\"+e.port)),i&&\"object\"==typeof i&&(i=t.encode(i));var f=e.search||i&&\"?\"+i||\"\";return n&&\":\"!==n.substr(-1)&&(n+=\":\"),e.slashes||(!n||o.test(n))&&!1!==u?(u=\"//\"+(u||\"\"),p&&\"/\"!==p[0]&&(p=\"/\"+p)):u||(u=\"\"),c&&\"#\"!==c[0]&&(c=\"#\"+c),f&&\"?\"!==f[0]&&(f=\"?\"+f),{protocol:n,host:u,pathname:p=p.replace(/[?#]/g,encodeURIComponent),search:f=f.replace(\"#\",\"%23\"),hash:c}}(e,a,s);return\"\"+t.protocol+t.host+t.pathname+t.search+t.hash}var n=\"http://\",p=\"w.w\",c=n+p,i=/^([a-z0-9.+-]*:\\/\\/\\/)([a-z0-9.+-]:\\/*)?/i,u=/https?|ftp|gopher|file/;function h(e,t){var o=\"string\"==typeof e?d(e):e;e=\"object\"==typeof e?r(e):e;var a=d(t),s=\"\";o.protocol&&!o.slashes&&(s=o.protocol,e=e.replace(o.protocol,\"\"),s+=\"/\"===t[0]||\"/\"===e[0]?\"/\":\"\"),s&&a.protocol&&(s=\"\",a.slashes||(s=a.protocol,t=t.replace(a.protocol,\"\")));var p=e.match(i);p&&!a.protocol&&(e=e.substr((s=p[1]+(p[2]||\"\")).length),/^\\/\\/[^/]/.test(t)&&(s=s.slice(0,-1)));var f=new URL(e,c+\"/\"),m=new URL(t,f).toString().replace(c,\"\"),v=a.protocol||o.protocol;return v+=o.slashes||a.slashes?\"//\":\"\",!s&&v?m=m.replace(n,v):s&&(m=m.replace(n,\"\")),u.test(m)||~t.indexOf(\".\")||\"/\"===e.slice(-1)||\"/\"===t.slice(-1)||\"/\"!==m.slice(-1)||(m=m.slice(0,-1)),s&&(m=s+(\"/\"===m[0]?m.substr(1):m)),m}function l(){}l.prototype.parse=d,l.prototype.format=r,l.prototype.resolve=h,l.prototype.resolveObject=h;var f=/^https?|ftp|gopher|file/,m=/^(.*?)([#?].*)/,v=/^([a-z0-9.+-]*:)(\\/{0,3})(.*)/i,_=/^([a-z0-9.+-]*:)?\\/\\/\\/*/i,b=/^([a-z0-9.+-]*:)(\\/{0,2})\\[(.*)\\]$/i;function d(e,t,o){if(void 0===t&&(t=!1),void 0===o&&(o=!1),e&&\"object\"==typeof e&&e instanceof l)return e;var s=(e=e.trim()).match(m);e=s?s[1].replace(/\\\\/g,\"/\")+s[2]:e.replace(/\\\\/g,\"/\"),b.test(e)&&\"/\"!==e.slice(-1)&&(e+=\"/\");var n=!/(^javascript)/.test(e)&&e.match(v),i=_.test(e),u=\"\";n&&(f.test(n[1])||(u=n[1].toLowerCase(),e=\"\"+n[2]+n[3]),n[2]||(i=!1,f.test(n[1])?(u=n[1],e=\"\"+n[3]):e=\"//\"+n[3]),3!==n[2].length&&1!==n[2].length||(u=n[1],e=\"/\"+n[3]));var g,y=(s?s[1]:e).match(/^https?:\\/\\/[^/]+(:[0-9]+)(?=\\/|$)/),w=y&&y[1],x=new l,C=\"\",U=\"\";try{g=new URL(e)}catch(t){C=t,u||o||!/^\\/\\//.test(e)||/^\\/\\/.+[@.]/.test(e)||(U=\"/\",e=e.substr(1));try{g=new URL(e,c)}catch(e){return x.protocol=u,x.href=u,x}}x.slashes=i&&!U,x.host=g.host===p?\"\":g.host,x.hostname=g.hostname===p?\"\":g.hostname.replace(/(\\[|\\])/g,\"\"),x.protocol=C?u||null:g.protocol,x.search=g.search.replace(/\\\\/g,\"%5C\"),x.hash=g.hash.replace(/\\\\/g,\"%5C\");var j=e.split(\"#\");!x.search&&~j[0].indexOf(\"?\")&&(x.search=\"?\"),x.hash||\"\"!==j[1]||(x.hash=\"#\"),x.query=t?a.decode(g.search.substr(1)):x.search.substr(1),x.pathname=U+(n?function(e){return e.replace(/['^|`]/g,(function(e){return\"%\"+e.charCodeAt().toString(16).toUpperCase()})).replace(/((?:%[0-9A-F]{2})+)/g,(function(e,t){try{return decodeURIComponent(t).split(\"\").map((function(e){var t=e.charCodeAt();return t>256||/^[a-z0-9]$/i.test(e)?e:\"%\"+t.toString(16).toUpperCase()})).join(\"\")}catch(e){return t}}))}(g.pathname):g.pathname),\"about:\"===x.protocol&&\"blank\"===x.pathname&&(x.protocol=\"\",x.pathname=\"\"),C&&\"/\"!==e[0]&&(x.pathname=x.pathname.substr(1)),u&&!f.test(u)&&\"/\"!==e.slice(-1)&&\"/\"===x.pathname&&(x.pathname=\"\"),x.path=x.pathname+x.search,x.auth=[g.username,g.password].map(decodeURIComponent).filter(Boolean).join(\":\"),x.port=g.port,w&&!x.host.endsWith(w)&&(x.host+=w,x.port=w.slice(1)),x.href=U?\"\"+x.pathname+x.search+x.hash:r(x);var q=/^(file)/.test(x.href)?[\"host\",\"hostname\"]:[];return Object.keys(x).forEach((function(e){~q.indexOf(e)||(x[e]=x[e]||null)})),x}e.parse=d,e.format=r,e.resolve=h,e.resolveObject=function(e,t){return d(h(e,t))},e.Url=l}();module.exports=o})();","(function(){\"use strict\";var e={114:function(e){function assertPath(e){if(typeof e!==\"string\"){throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(e))}}function normalizeStringPosix(e,r){var t=\"\";var i=0;var n=-1;var a=0;var f;for(var l=0;l<=e.length;++l){if(l<e.length)f=e.charCodeAt(l);else if(f===47)break;else f=47;if(f===47){if(n===l-1||a===1){}else if(n!==l-1&&a===2){if(t.length<2||i!==2||t.charCodeAt(t.length-1)!==46||t.charCodeAt(t.length-2)!==46){if(t.length>2){var s=t.lastIndexOf(\"/\");if(s!==t.length-1){if(s===-1){t=\"\";i=0}else{t=t.slice(0,s);i=t.length-1-t.lastIndexOf(\"/\")}n=l;a=0;continue}}else if(t.length===2||t.length===1){t=\"\";i=0;n=l;a=0;continue}}if(r){if(t.length>0)t+=\"/..\";else t=\"..\";i=2}}else{if(t.length>0)t+=\"/\"+e.slice(n+1,l);else t=e.slice(n+1,l);i=l-n-1}n=l;a=0}else if(f===46&&a!==-1){++a}else{a=-1}}return t}function _format(e,r){var t=r.dir||r.root;var i=r.base||(r.name||\"\")+(r.ext||\"\");if(!t){return i}if(t===r.root){return t+i}return t+e+i}var r={resolve:function resolve(){var e=\"\";var r=false;var t;for(var i=arguments.length-1;i>=-1&&!r;i--){var n;if(i>=0)n=arguments[i];else{if(t===undefined)t=\"\";n=t}assertPath(n);if(n.length===0){continue}e=n+\"/\"+e;r=n.charCodeAt(0)===47}e=normalizeStringPosix(e,!r);if(r){if(e.length>0)return\"/\"+e;else return\"/\"}else if(e.length>0){return e}else{return\".\"}},normalize:function normalize(e){assertPath(e);if(e.length===0)return\".\";var r=e.charCodeAt(0)===47;var t=e.charCodeAt(e.length-1)===47;e=normalizeStringPosix(e,!r);if(e.length===0&&!r)e=\".\";if(e.length>0&&t)e+=\"/\";if(r)return\"/\"+e;return e},isAbsolute:function isAbsolute(e){assertPath(e);return e.length>0&&e.charCodeAt(0)===47},join:function join(){if(arguments.length===0)return\".\";var e;for(var t=0;t<arguments.length;++t){var i=arguments[t];assertPath(i);if(i.length>0){if(e===undefined)e=i;else e+=\"/\"+i}}if(e===undefined)return\".\";return r.normalize(e)},relative:function relative(e,t){assertPath(e);assertPath(t);if(e===t)return\"\";e=r.resolve(e);t=r.resolve(t);if(e===t)return\"\";var i=1;for(;i<e.length;++i){if(e.charCodeAt(i)!==47)break}var n=e.length;var a=n-i;var f=1;for(;f<t.length;++f){if(t.charCodeAt(f)!==47)break}var l=t.length;var s=l-f;var o=a<s?a:s;var u=-1;var h=0;for(;h<=o;++h){if(h===o){if(s>o){if(t.charCodeAt(f+h)===47){return t.slice(f+h+1)}else if(h===0){return t.slice(f+h)}}else if(a>o){if(e.charCodeAt(i+h)===47){u=h}else if(h===0){u=0}}break}var c=e.charCodeAt(i+h);var v=t.charCodeAt(f+h);if(c!==v)break;else if(c===47)u=h}var g=\"\";for(h=i+u+1;h<=n;++h){if(h===n||e.charCodeAt(h)===47){if(g.length===0)g+=\"..\";else g+=\"/..\"}}if(g.length>0)return g+t.slice(f+u);else{f+=u;if(t.charCodeAt(f)===47)++f;return t.slice(f)}},_makeLong:function _makeLong(e){return e},dirname:function dirname(e){assertPath(e);if(e.length===0)return\".\";var r=e.charCodeAt(0);var t=r===47;var i=-1;var n=true;for(var a=e.length-1;a>=1;--a){r=e.charCodeAt(a);if(r===47){if(!n){i=a;break}}else{n=false}}if(i===-1)return t?\"/\":\".\";if(t&&i===1)return\"//\";return e.slice(0,i)},basename:function basename(e,r){if(r!==undefined&&typeof r!==\"string\")throw new TypeError('\"ext\" argument must be a string');assertPath(e);var t=0;var i=-1;var n=true;var a;if(r!==undefined&&r.length>0&&r.length<=e.length){if(r.length===e.length&&r===e)return\"\";var f=r.length-1;var l=-1;for(a=e.length-1;a>=0;--a){var s=e.charCodeAt(a);if(s===47){if(!n){t=a+1;break}}else{if(l===-1){n=false;l=a+1}if(f>=0){if(s===r.charCodeAt(f)){if(--f===-1){i=a}}else{f=-1;i=l}}}}if(t===i)i=l;else if(i===-1)i=e.length;return e.slice(t,i)}else{for(a=e.length-1;a>=0;--a){if(e.charCodeAt(a)===47){if(!n){t=a+1;break}}else if(i===-1){n=false;i=a+1}}if(i===-1)return\"\";return e.slice(t,i)}},extname:function extname(e){assertPath(e);var r=-1;var t=0;var i=-1;var n=true;var a=0;for(var f=e.length-1;f>=0;--f){var l=e.charCodeAt(f);if(l===47){if(!n){t=f+1;break}continue}if(i===-1){n=false;i=f+1}if(l===46){if(r===-1)r=f;else if(a!==1)a=1}else if(r!==-1){a=-1}}if(r===-1||i===-1||a===0||a===1&&r===i-1&&r===t+1){return\"\"}return e.slice(r,i)},format:function format(e){if(e===null||typeof e!==\"object\"){throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof e)}return _format(\"/\",e)},parse:function parse(e){assertPath(e);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(e.length===0)return r;var t=e.charCodeAt(0);var i=t===47;var n;if(i){r.root=\"/\";n=1}else{n=0}var a=-1;var f=0;var l=-1;var s=true;var o=e.length-1;var u=0;for(;o>=n;--o){t=e.charCodeAt(o);if(t===47){if(!s){f=o+1;break}continue}if(l===-1){s=false;l=o+1}if(t===46){if(a===-1)a=o;else if(u!==1)u=1}else if(a!==-1){u=-1}}if(a===-1||l===-1||u===0||u===1&&a===l-1&&a===f+1){if(l!==-1){if(f===0&&i)r.base=r.name=e.slice(1,l);else r.base=r.name=e.slice(f,l)}}else{if(f===0&&i){r.name=e.slice(1,a);r.base=e.slice(1,l)}else{r.name=e.slice(f,a);r.base=e.slice(f,l)}r.ext=e.slice(a,l)}if(f>0)r.dir=e.slice(0,f-1);else if(i)r.dir=\"/\";return r},sep:\"/\",delimiter:\":\",win32:null,posix:null};r.posix=r;e.exports=r}};var r={};function __nccwpck_require__(t){var i=r[t];if(i!==undefined){return i.exports}var n=r[t]={exports:{}};var a=true;try{e[t](n,n.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(114);module.exports=t})();","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;Object.defineProperty(r,\"__esModule\",{value:true});function lexer(e){var r=[];var n=0;while(n<e.length){var t=e[n];if(t===\"*\"||t===\"+\"||t===\"?\"){r.push({type:\"MODIFIER\",index:n,value:e[n++]});continue}if(t===\"\\\\\"){r.push({type:\"ESCAPED_CHAR\",index:n++,value:e[n++]});continue}if(t===\"{\"){r.push({type:\"OPEN\",index:n,value:e[n++]});continue}if(t===\"}\"){r.push({type:\"CLOSE\",index:n,value:e[n++]});continue}if(t===\":\"){var i=\"\";var a=n+1;while(a<e.length){var o=e.charCodeAt(a);if(o>=48&&o<=57||o>=65&&o<=90||o>=97&&o<=122||o===95){i+=e[a++];continue}break}if(!i)throw new TypeError(\"Missing parameter name at \"+n);r.push({type:\"NAME\",index:n,value:i});n=a;continue}if(t===\"(\"){var f=1;var u=\"\";var a=n+1;if(e[a]===\"?\"){throw new TypeError('Pattern cannot start with \"?\" at '+a)}while(a<e.length){if(e[a]===\"\\\\\"){u+=e[a++]+e[a++];continue}if(e[a]===\")\"){f--;if(f===0){a++;break}}else if(e[a]===\"(\"){f++;if(e[a+1]!==\"?\"){throw new TypeError(\"Capturing groups are not allowed at \"+a)}}u+=e[a++]}if(f)throw new TypeError(\"Unbalanced pattern at \"+n);if(!u)throw new TypeError(\"Missing pattern at \"+n);r.push({type:\"PATTERN\",index:n,value:u});n=a;continue}r.push({type:\"CHAR\",index:n,value:e[n++]})}r.push({type:\"END\",index:n,value:\"\"});return r}function parse(e,r){if(r===void 0){r={}}var n=lexer(e);var t=r.prefixes,i=t===void 0?\"./\":t;var a=\"[^\"+escapeString(r.delimiter||\"/#?\")+\"]+?\";var o=[];var f=0;var u=0;var p=\"\";var tryConsume=function(e){if(u<n.length&&n[u].type===e)return n[u++].value};var mustConsume=function(e){var r=tryConsume(e);if(r!==undefined)return r;var t=n[u],i=t.type,a=t.index;throw new TypeError(\"Unexpected \"+i+\" at \"+a+\", expected \"+e)};var consumeText=function(){var e=\"\";var r;while(r=tryConsume(\"CHAR\")||tryConsume(\"ESCAPED_CHAR\")){e+=r}return e};while(u<n.length){var v=tryConsume(\"CHAR\");var c=tryConsume(\"NAME\");var s=tryConsume(\"PATTERN\");if(c||s){var d=v||\"\";if(i.indexOf(d)===-1){p+=d;d=\"\"}if(p){o.push(p);p=\"\"}o.push({name:c||f++,prefix:d,suffix:\"\",pattern:s||a,modifier:tryConsume(\"MODIFIER\")||\"\"});continue}var g=v||tryConsume(\"ESCAPED_CHAR\");if(g){p+=g;continue}if(p){o.push(p);p=\"\"}var x=tryConsume(\"OPEN\");if(x){var d=consumeText();var l=tryConsume(\"NAME\")||\"\";var h=tryConsume(\"PATTERN\")||\"\";var m=consumeText();mustConsume(\"CLOSE\");o.push({name:l||(h?f++:\"\"),pattern:l&&!h?a:h,prefix:d,suffix:m,modifier:tryConsume(\"MODIFIER\")||\"\"});continue}mustConsume(\"END\")}return o}r.parse=parse;function compile(e,r){return tokensToFunction(parse(e,r),r)}r.compile=compile;function tokensToFunction(e,r){if(r===void 0){r={}}var n=flags(r);var t=r.encode,i=t===void 0?function(e){return e}:t,a=r.validate,o=a===void 0?true:a;var f=e.map((function(e){if(typeof e===\"object\"){return new RegExp(\"^(?:\"+e.pattern+\")$\",n)}}));return function(r){var n=\"\";for(var t=0;t<e.length;t++){var a=e[t];if(typeof a===\"string\"){n+=a;continue}var u=r?r[a.name]:undefined;var p=a.modifier===\"?\"||a.modifier===\"*\";var v=a.modifier===\"*\"||a.modifier===\"+\";if(Array.isArray(u)){if(!v){throw new TypeError('Expected \"'+a.name+'\" to not repeat, but got an array')}if(u.length===0){if(p)continue;throw new TypeError('Expected \"'+a.name+'\" to not be empty')}for(var c=0;c<u.length;c++){var s=i(u[c],a);if(o&&!f[t].test(s)){throw new TypeError('Expected all \"'+a.name+'\" to match \"'+a.pattern+'\", but got \"'+s+'\"')}n+=a.prefix+s+a.suffix}continue}if(typeof u===\"string\"||typeof u===\"number\"){var s=i(String(u),a);if(o&&!f[t].test(s)){throw new TypeError('Expected \"'+a.name+'\" to match \"'+a.pattern+'\", but got \"'+s+'\"')}n+=a.prefix+s+a.suffix;continue}if(p)continue;var d=v?\"an array\":\"a string\";throw new TypeError('Expected \"'+a.name+'\" to be '+d)}return n}}r.tokensToFunction=tokensToFunction;function match(e,r){var n=[];var t=pathToRegexp(e,n,r);return regexpToFunction(t,n,r)}r.match=match;function regexpToFunction(e,r,n){if(n===void 0){n={}}var t=n.decode,i=t===void 0?function(e){return e}:t;return function(n){var t=e.exec(n);if(!t)return false;var a=t[0],o=t.index;var f=Object.create(null);var _loop_1=function(e){if(t[e]===undefined)return\"continue\";var n=r[e-1];if(n.modifier===\"*\"||n.modifier===\"+\"){f[n.name]=t[e].split(n.prefix+n.suffix).map((function(e){return i(e,n)}))}else{f[n.name]=i(t[e],n)}};for(var u=1;u<t.length;u++){_loop_1(u)}return{path:a,index:o,params:f}}}r.regexpToFunction=regexpToFunction;function escapeString(e){return e.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g,\"\\\\$1\")}function flags(e){return e&&e.sensitive?\"\":\"i\"}function regexpToRegexp(e,r){if(!r)return e;var n=e.source.match(/\\((?!\\?)/g);if(n){for(var t=0;t<n.length;t++){r.push({name:t,prefix:\"\",suffix:\"\",modifier:\"\",pattern:\"\"})}}return e}function arrayToRegexp(e,r,n){var t=e.map((function(e){return pathToRegexp(e,r,n).source}));return new RegExp(\"(?:\"+t.join(\"|\")+\")\",flags(n))}function stringToRegexp(e,r,n){return tokensToRegexp(parse(e,n),r,n)}function tokensToRegexp(e,r,n){if(n===void 0){n={}}var t=n.strict,i=t===void 0?false:t,a=n.start,o=a===void 0?true:a,f=n.end,u=f===void 0?true:f,p=n.encode,v=p===void 0?function(e){return e}:p;var c=\"[\"+escapeString(n.endsWith||\"\")+\"]|$\";var s=\"[\"+escapeString(n.delimiter||\"/#?\")+\"]\";var d=o?\"^\":\"\";for(var g=0,x=e;g<x.length;g++){var l=x[g];if(typeof l===\"string\"){d+=escapeString(v(l))}else{var h=escapeString(v(l.prefix));var m=escapeString(v(l.suffix));if(l.pattern){if(r)r.push(l);if(h||m){if(l.modifier===\"+\"||l.modifier===\"*\"){var E=l.modifier===\"*\"?\"?\":\"\";d+=\"(?:\"+h+\"((?:\"+l.pattern+\")(?:\"+m+h+\"(?:\"+l.pattern+\"))*)\"+m+\")\"+E}else{d+=\"(?:\"+h+\"(\"+l.pattern+\")\"+m+\")\"+l.modifier}}else{d+=\"(\"+l.pattern+\")\"+l.modifier}}else{d+=\"(?:\"+h+m+\")\"+l.modifier}}}if(u){if(!i)d+=s+\"?\";d+=!n.endsWith?\"$\":\"(?=\"+c+\")\"}else{var T=e[e.length-1];var y=typeof T===\"string\"?s.indexOf(T[T.length-1])>-1:T===undefined;if(!i){d+=\"(?:\"+s+\"(?=\"+c+\"))?\"}if(!y){d+=\"(?=\"+s+\"|\"+c+\")\"}}return new RegExp(d,flags(n))}r.tokensToRegexp=tokensToRegexp;function pathToRegexp(e,r,n){if(e instanceof RegExp)return regexpToRegexp(e,r);if(Array.isArray(e))return arrayToRegexp(e,r,n);return stringToRegexp(e,r,n)}r.pathToRegexp=pathToRegexp})();module.exports=e})();","(function(){\"use strict\";var e={815:function(e){function hasOwnProperty(e,r){return Object.prototype.hasOwnProperty.call(e,r)}e.exports=function(e,n,t,o){n=n||\"&\";t=t||\"=\";var a={};if(typeof e!==\"string\"||e.length===0){return a}var i=/\\+/g;e=e.split(n);var u=1e3;if(o&&typeof o.maxKeys===\"number\"){u=o.maxKeys}var c=e.length;if(u>0&&c>u){c=u}for(var p=0;p<c;++p){var f=e[p].replace(i,\"%20\"),s=f.indexOf(t),_,l,y,d;if(s>=0){_=f.substr(0,s);l=f.substr(s+1)}else{_=f;l=\"\"}y=decodeURIComponent(_);d=decodeURIComponent(l);if(!hasOwnProperty(a,y)){a[y]=d}else if(r(a[y])){a[y].push(d)}else{a[y]=[a[y],d]}}return a};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"}},577:function(e){var stringifyPrimitive=function(e){switch(typeof e){case\"string\":return e;case\"boolean\":return e?\"true\":\"false\";case\"number\":return isFinite(e)?e:\"\";default:return\"\"}};e.exports=function(e,t,o,a){t=t||\"&\";o=o||\"=\";if(e===null){e=undefined}if(typeof e===\"object\"){return map(n(e),(function(n){var a=encodeURIComponent(stringifyPrimitive(n))+o;if(r(e[n])){return map(e[n],(function(e){return a+encodeURIComponent(stringifyPrimitive(e))})).join(t)}else{return a+encodeURIComponent(stringifyPrimitive(e[n]))}})).join(t)}if(!a)return\"\";return encodeURIComponent(stringifyPrimitive(a))+o+encodeURIComponent(stringifyPrimitive(e))};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"};function map(e,r){if(e.map)return e.map(r);var n=[];for(var t=0;t<e.length;t++){n.push(r(e[t],t))}return n}var n=Object.keys||function(e){var r=[];for(var n in e){if(Object.prototype.hasOwnProperty.call(e,n))r.push(n)}return r}}};var r={};function __nccwpck_require__(n){var t=r[n];if(t!==undefined){return t.exports}var o=r[n]={exports:{}};var a=true;try{e[n](o,o.exports,__nccwpck_require__);a=false}finally{if(a)delete r[n]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};!function(){var e=n;e.decode=e.parse=__nccwpck_require__(815);e.encode=e.stringify=__nccwpck_require__(577)}();module.exports=n})();","/**\n * @license React\n * react-dom.react-server.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"next/dist/compiled/react\");\nfunction noop() {}\nvar Internals = {\n  d: {\n    f: noop,\n    r: function () {\n      throw Error(\n        \"Invalid form element. requestFormReset must be passed a form that was rendered by React.\"\n      );\n    },\n    D: noop,\n    C: noop,\n    L: noop,\n    m: noop,\n    X: noop,\n    S: noop,\n    M: noop\n  },\n  p: 0,\n  findDOMNode: null\n};\nif (!React.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE)\n  throw Error(\n    'The \"react\" package in this environment is not configured correctly. The \"react-server\" condition must be enabled in any environment that runs React Server Components.'\n  );\nfunction getCrossOriginStringAs(as, input) {\n  if (\"font\" === as) return \"\";\n  if (\"string\" === typeof input)\n    return \"use-credentials\" === input ? input : \"\";\n}\nexports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  Internals;\nexports.preconnect = function (href, options) {\n  \"string\" === typeof href &&\n    (options\n      ? ((options = options.crossOrigin),\n        (options =\n          \"string\" === typeof options\n            ? \"use-credentials\" === options\n              ? options\n              : \"\"\n            : void 0))\n      : (options = null),\n    Internals.d.C(href, options));\n};\nexports.prefetchDNS = function (href) {\n  \"string\" === typeof href && Internals.d.D(href);\n};\nexports.preinit = function (href, options) {\n  if (\"string\" === typeof href && options && \"string\" === typeof options.as) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin),\n      integrity =\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      fetchPriority =\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0;\n    \"style\" === as\n      ? Internals.d.S(\n          href,\n          \"string\" === typeof options.precedence ? options.precedence : void 0,\n          {\n            crossOrigin: crossOrigin,\n            integrity: integrity,\n            fetchPriority: fetchPriority\n          }\n        )\n      : \"script\" === as &&\n        Internals.d.X(href, {\n          crossOrigin: crossOrigin,\n          integrity: integrity,\n          fetchPriority: fetchPriority,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n  }\n};\nexports.preinitModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (\"object\" === typeof options && null !== options) {\n      if (null == options.as || \"script\" === options.as) {\n        var crossOrigin = getCrossOriginStringAs(\n          options.as,\n          options.crossOrigin\n        );\n        Internals.d.M(href, {\n          crossOrigin: crossOrigin,\n          integrity:\n            \"string\" === typeof options.integrity ? options.integrity : void 0,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n      }\n    } else null == options && Internals.d.M(href);\n};\nexports.preload = function (href, options) {\n  if (\n    \"string\" === typeof href &&\n    \"object\" === typeof options &&\n    null !== options &&\n    \"string\" === typeof options.as\n  ) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin);\n    Internals.d.L(href, as, {\n      crossOrigin: crossOrigin,\n      integrity:\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      nonce: \"string\" === typeof options.nonce ? options.nonce : void 0,\n      type: \"string\" === typeof options.type ? options.type : void 0,\n      fetchPriority:\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0,\n      referrerPolicy:\n        \"string\" === typeof options.referrerPolicy\n          ? options.referrerPolicy\n          : void 0,\n      imageSrcSet:\n        \"string\" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,\n      imageSizes:\n        \"string\" === typeof options.imageSizes ? options.imageSizes : void 0,\n      media: \"string\" === typeof options.media ? options.media : void 0\n    });\n  }\n};\nexports.preloadModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (options) {\n      var crossOrigin = getCrossOriginStringAs(options.as, options.crossOrigin);\n      Internals.d.m(href, {\n        as:\n          \"string\" === typeof options.as && \"script\" !== options.as\n            ? options.as\n            : void 0,\n        crossOrigin: crossOrigin,\n        integrity:\n          \"string\" === typeof options.integrity ? options.integrity : void 0\n      });\n    } else Internals.d.m(href);\n};\nexports.version = \"19.0.0-rc-02c0e824-20241028\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-dom.react-server.production.js');\n} else {\n  module.exports = require('./cjs/react-dom.react-server.development.js');\n}\n","/**\n * @license React\n * react-server-dom-webpack-server.edge.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar ReactDOM = require(\"react-dom\"),\n  React = require(\"react\");\nfunction handleErrorInNextTick(error) {\n  setTimeoutOrImmediate(function () {\n    throw error;\n  });\n}\nvar LocalPromise = Promise,\n  scheduleMicrotask =\n    \"function\" === typeof queueMicrotask\n      ? queueMicrotask\n      : function (callback) {\n          LocalPromise.resolve(null)\n            .then(callback)\n            .catch(handleErrorInNextTick);\n        },\n  currentView = null,\n  writtenBytes = 0;\nfunction writeChunkAndReturn(destination, chunk) {\n  if (0 !== chunk.byteLength)\n    if (2048 < chunk.byteLength)\n      0 < writtenBytes &&\n        (destination.enqueue(\n          new Uint8Array(currentView.buffer, 0, writtenBytes)\n        ),\n        (currentView = new Uint8Array(2048)),\n        (writtenBytes = 0)),\n        destination.enqueue(chunk);\n    else {\n      var allowableBytes = currentView.length - writtenBytes;\n      allowableBytes < chunk.byteLength &&\n        (0 === allowableBytes\n          ? destination.enqueue(currentView)\n          : (currentView.set(chunk.subarray(0, allowableBytes), writtenBytes),\n            destination.enqueue(currentView),\n            (chunk = chunk.subarray(allowableBytes))),\n        (currentView = new Uint8Array(2048)),\n        (writtenBytes = 0));\n      currentView.set(chunk, writtenBytes);\n      writtenBytes += chunk.byteLength;\n    }\n  return !0;\n}\nvar textEncoder = new TextEncoder();\nfunction stringToChunk(content) {\n  return textEncoder.encode(content);\n}\nfunction byteLengthOfChunk(chunk) {\n  return chunk.byteLength;\n}\nfunction closeWithError(destination, error) {\n  \"function\" === typeof destination.error\n    ? destination.error(error)\n    : destination.close();\n}\nvar CLIENT_REFERENCE_TAG$1 = Symbol.for(\"react.client.reference\"),\n  SERVER_REFERENCE_TAG = Symbol.for(\"react.server.reference\");\nfunction registerClientReferenceImpl(proxyImplementation, id, async) {\n  return Object.defineProperties(proxyImplementation, {\n    $$typeof: { value: CLIENT_REFERENCE_TAG$1 },\n    $$id: { value: id },\n    $$async: { value: async }\n  });\n}\nvar FunctionBind = Function.prototype.bind,\n  ArraySlice = Array.prototype.slice;\nfunction bind() {\n  var newFn = FunctionBind.apply(this, arguments);\n  if (this.$$typeof === SERVER_REFERENCE_TAG) {\n    var args = ArraySlice.call(arguments, 1),\n      $$typeof = { value: SERVER_REFERENCE_TAG },\n      $$id = { value: this.$$id };\n    args = { value: this.$$bound ? this.$$bound.concat(args) : args };\n    return Object.defineProperties(newFn, {\n      $$typeof: $$typeof,\n      $$id: $$id,\n      $$bound: args,\n      bind: { value: bind, configurable: !0 }\n    });\n  }\n  return newFn;\n}\nvar PROMISE_PROTOTYPE = Promise.prototype,\n  deepProxyHandlers = {\n    get: function (target, name) {\n      switch (name) {\n        case \"$$typeof\":\n          return target.$$typeof;\n        case \"$$id\":\n          return target.$$id;\n        case \"$$async\":\n          return target.$$async;\n        case \"name\":\n          return target.name;\n        case \"displayName\":\n          return;\n        case \"defaultProps\":\n          return;\n        case \"toJSON\":\n          return;\n        case Symbol.toPrimitive:\n          return Object.prototype[Symbol.toPrimitive];\n        case Symbol.toStringTag:\n          return Object.prototype[Symbol.toStringTag];\n        case \"Provider\":\n          throw Error(\n            \"Cannot render a Client Context Provider on the Server. Instead, you can export a Client Component wrapper that itself renders a Client Context Provider.\"\n          );\n        case \"then\":\n          throw Error(\n            \"Cannot await or return from a thenable. You cannot await a client module from a server component.\"\n          );\n      }\n      throw Error(\n        \"Cannot access \" +\n          (String(target.name) + \".\" + String(name)) +\n          \" on the server. You cannot dot into a client module from a server component. You can only pass the imported name through.\"\n      );\n    },\n    set: function () {\n      throw Error(\"Cannot assign to a client module from a server module.\");\n    }\n  };\nfunction getReference(target, name) {\n  switch (name) {\n    case \"$$typeof\":\n      return target.$$typeof;\n    case \"$$id\":\n      return target.$$id;\n    case \"$$async\":\n      return target.$$async;\n    case \"name\":\n      return target.name;\n    case \"defaultProps\":\n      return;\n    case \"toJSON\":\n      return;\n    case Symbol.toPrimitive:\n      return Object.prototype[Symbol.toPrimitive];\n    case Symbol.toStringTag:\n      return Object.prototype[Symbol.toStringTag];\n    case \"__esModule\":\n      var moduleId = target.$$id;\n      target.default = registerClientReferenceImpl(\n        function () {\n          throw Error(\n            \"Attempted to call the default export of \" +\n              moduleId +\n              \" from the server but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"\n          );\n        },\n        target.$$id + \"#\",\n        target.$$async\n      );\n      return !0;\n    case \"then\":\n      if (target.then) return target.then;\n      if (target.$$async) return;\n      var clientReference = registerClientReferenceImpl({}, target.$$id, !0),\n        proxy = new Proxy(clientReference, proxyHandlers$1);\n      target.status = \"fulfilled\";\n      target.value = proxy;\n      return (target.then = registerClientReferenceImpl(\n        function (resolve) {\n          return Promise.resolve(resolve(proxy));\n        },\n        target.$$id + \"#then\",\n        !1\n      ));\n  }\n  if (\"symbol\" === typeof name)\n    throw Error(\n      \"Cannot read Symbol exports. Only named exports are supported on a client module imported on the server.\"\n    );\n  clientReference = target[name];\n  clientReference ||\n    ((clientReference = registerClientReferenceImpl(\n      function () {\n        throw Error(\n          \"Attempted to call \" +\n            String(name) +\n            \"() from the server but \" +\n            String(name) +\n            \" is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"\n        );\n      },\n      target.$$id + \"#\" + name,\n      target.$$async\n    )),\n    Object.defineProperty(clientReference, \"name\", { value: name }),\n    (clientReference = target[name] =\n      new Proxy(clientReference, deepProxyHandlers)));\n  return clientReference;\n}\nvar proxyHandlers$1 = {\n    get: function (target, name) {\n      return getReference(target, name);\n    },\n    getOwnPropertyDescriptor: function (target, name) {\n      var descriptor = Object.getOwnPropertyDescriptor(target, name);\n      descriptor ||\n        ((descriptor = {\n          value: getReference(target, name),\n          writable: !1,\n          configurable: !1,\n          enumerable: !1\n        }),\n        Object.defineProperty(target, name, descriptor));\n      return descriptor;\n    },\n    getPrototypeOf: function () {\n      return PROMISE_PROTOTYPE;\n    },\n    set: function () {\n      throw Error(\"Cannot assign to a client module from a server module.\");\n    }\n  },\n  ReactDOMSharedInternals =\n    ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  previousDispatcher = ReactDOMSharedInternals.d;\nReactDOMSharedInternals.d = {\n  f: previousDispatcher.f,\n  r: previousDispatcher.r,\n  D: prefetchDNS,\n  C: preconnect,\n  L: preload,\n  m: preloadModule$1,\n  X: preinitScript,\n  S: preinitStyle,\n  M: preinitModuleScript\n};\nfunction prefetchDNS(href) {\n  if (\"string\" === typeof href && href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"D|\" + href;\n      hints.has(key) || (hints.add(key), emitHint(request, \"D\", href));\n    } else previousDispatcher.D(href);\n  }\n}\nfunction preconnect(href, crossOrigin) {\n  if (\"string\" === typeof href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"C|\" + (null == crossOrigin ? \"null\" : crossOrigin) + \"|\" + href;\n      hints.has(key) ||\n        (hints.add(key),\n        \"string\" === typeof crossOrigin\n          ? emitHint(request, \"C\", [href, crossOrigin])\n          : emitHint(request, \"C\", href));\n    } else previousDispatcher.C(href, crossOrigin);\n  }\n}\nfunction preload(href, as, options) {\n  if (\"string\" === typeof href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"L\";\n      if (\"image\" === as && options) {\n        var imageSrcSet = options.imageSrcSet,\n          imageSizes = options.imageSizes,\n          uniquePart = \"\";\n        \"string\" === typeof imageSrcSet && \"\" !== imageSrcSet\n          ? ((uniquePart += \"[\" + imageSrcSet + \"]\"),\n            \"string\" === typeof imageSizes &&\n              (uniquePart += \"[\" + imageSizes + \"]\"))\n          : (uniquePart += \"[][]\" + href);\n        key += \"[image]\" + uniquePart;\n      } else key += \"[\" + as + \"]\" + href;\n      hints.has(key) ||\n        (hints.add(key),\n        (options = trimOptions(options))\n          ? emitHint(request, \"L\", [href, as, options])\n          : emitHint(request, \"L\", [href, as]));\n    } else previousDispatcher.L(href, as, options);\n  }\n}\nfunction preloadModule$1(href, options) {\n  if (\"string\" === typeof href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"m|\" + href;\n      if (hints.has(key)) return;\n      hints.add(key);\n      return (options = trimOptions(options))\n        ? emitHint(request, \"m\", [href, options])\n        : emitHint(request, \"m\", href);\n    }\n    previousDispatcher.m(href, options);\n  }\n}\nfunction preinitStyle(href, precedence, options) {\n  if (\"string\" === typeof href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"S|\" + href;\n      if (hints.has(key)) return;\n      hints.add(key);\n      return (options = trimOptions(options))\n        ? emitHint(request, \"S\", [\n            href,\n            \"string\" === typeof precedence ? precedence : 0,\n            options\n          ])\n        : \"string\" === typeof precedence\n          ? emitHint(request, \"S\", [href, precedence])\n          : emitHint(request, \"S\", href);\n    }\n    previousDispatcher.S(href, precedence, options);\n  }\n}\nfunction preinitScript(src, options) {\n  if (\"string\" === typeof src) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"X|\" + src;\n      if (hints.has(key)) return;\n      hints.add(key);\n      return (options = trimOptions(options))\n        ? emitHint(request, \"X\", [src, options])\n        : emitHint(request, \"X\", src);\n    }\n    previousDispatcher.X(src, options);\n  }\n}\nfunction preinitModuleScript(src, options) {\n  if (\"string\" === typeof src) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"M|\" + src;\n      if (hints.has(key)) return;\n      hints.add(key);\n      return (options = trimOptions(options))\n        ? emitHint(request, \"M\", [src, options])\n        : emitHint(request, \"M\", src);\n    }\n    previousDispatcher.M(src, options);\n  }\n}\nfunction trimOptions(options) {\n  if (null == options) return null;\n  var hasProperties = !1,\n    trimmed = {},\n    key;\n  for (key in options)\n    null != options[key] &&\n      ((hasProperties = !0), (trimmed[key] = options[key]));\n  return hasProperties ? trimmed : null;\n}\nvar supportsRequestStorage = \"function\" === typeof AsyncLocalStorage,\n  requestStorage = supportsRequestStorage ? new AsyncLocalStorage() : null;\n\"object\" === typeof async_hooks\n  ? async_hooks.createHook\n  : function () {\n      return { enable: function () {}, disable: function () {} };\n    };\n\"object\" === typeof async_hooks ? async_hooks.executionAsyncId : null;\nvar TEMPORARY_REFERENCE_TAG = Symbol.for(\"react.temporary.reference\"),\n  proxyHandlers = {\n    get: function (target, name) {\n      switch (name) {\n        case \"$$typeof\":\n          return target.$$typeof;\n        case \"name\":\n          return;\n        case \"displayName\":\n          return;\n        case \"defaultProps\":\n          return;\n        case \"toJSON\":\n          return;\n        case Symbol.toPrimitive:\n          return Object.prototype[Symbol.toPrimitive];\n        case Symbol.toStringTag:\n          return Object.prototype[Symbol.toStringTag];\n        case \"Provider\":\n          throw Error(\n            \"Cannot render a Client Context Provider on the Server. Instead, you can export a Client Component wrapper that itself renders a Client Context Provider.\"\n          );\n      }\n      throw Error(\n        \"Cannot access \" +\n          String(name) +\n          \" on the server. You cannot dot into a temporary client reference from a server component. You can only pass the value through to the client.\"\n      );\n    },\n    set: function () {\n      throw Error(\n        \"Cannot assign to a temporary client reference from a server module.\"\n      );\n    }\n  };\nfunction createTemporaryReference(temporaryReferences, id) {\n  var reference = Object.defineProperties(\n    function () {\n      throw Error(\n        \"Attempted to call a temporary Client Reference from the server but it is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"\n      );\n    },\n    { $$typeof: { value: TEMPORARY_REFERENCE_TAG } }\n  );\n  reference = new Proxy(reference, proxyHandlers);\n  temporaryReferences.set(reference, id);\n  return reference;\n}\nvar REACT_LEGACY_ELEMENT_TYPE = Symbol.for(\"react.element\"),\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  REACT_MEMO_CACHE_SENTINEL = Symbol.for(\"react.memo_cache_sentinel\");\nSymbol.for(\"react.postpone\");\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ASYNC_ITERATOR = Symbol.asyncIterator,\n  SuspenseException = Error(\n    \"Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\\n\\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`\"\n  );\nfunction noop$1() {}\nfunction trackUsedThenable(thenableState, thenable, index) {\n  index = thenableState[index];\n  void 0 === index\n    ? thenableState.push(thenable)\n    : index !== thenable && (thenable.then(noop$1, noop$1), (thenable = index));\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      \"string\" === typeof thenable.status\n        ? thenable.then(noop$1, noop$1)\n        : ((thenableState = thenable),\n          (thenableState.status = \"pending\"),\n          thenableState.then(\n            function (fulfilledValue) {\n              if (\"pending\" === thenable.status) {\n                var fulfilledThenable = thenable;\n                fulfilledThenable.status = \"fulfilled\";\n                fulfilledThenable.value = fulfilledValue;\n              }\n            },\n            function (error) {\n              if (\"pending\" === thenable.status) {\n                var rejectedThenable = thenable;\n                rejectedThenable.status = \"rejected\";\n                rejectedThenable.reason = error;\n              }\n            }\n          ));\n      switch (thenable.status) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n      suspendedThenable = thenable;\n      throw SuspenseException;\n  }\n}\nvar suspendedThenable = null;\nfunction getSuspendedThenable() {\n  if (null === suspendedThenable)\n    throw Error(\n      \"Expected a suspended thenable. This is a bug in React. Please file an issue.\"\n    );\n  var thenable = suspendedThenable;\n  suspendedThenable = null;\n  return thenable;\n}\nvar currentRequest$1 = null,\n  thenableIndexCounter = 0,\n  thenableState = null;\nfunction getThenableStateAfterSuspending() {\n  var state = thenableState || [];\n  thenableState = null;\n  return state;\n}\nvar HooksDispatcher = {\n  useMemo: function (nextCreate) {\n    return nextCreate();\n  },\n  useCallback: function (callback) {\n    return callback;\n  },\n  useDebugValue: function () {},\n  useDeferredValue: unsupportedHook,\n  useTransition: unsupportedHook,\n  readContext: unsupportedContext,\n  useContext: unsupportedContext,\n  useReducer: unsupportedHook,\n  useRef: unsupportedHook,\n  useState: unsupportedHook,\n  useInsertionEffect: unsupportedHook,\n  useLayoutEffect: unsupportedHook,\n  useImperativeHandle: unsupportedHook,\n  useEffect: unsupportedHook,\n  useId: useId,\n  useSyncExternalStore: unsupportedHook,\n  useCacheRefresh: function () {\n    return unsupportedRefresh;\n  },\n  useMemoCache: function (size) {\n    for (var data = Array(size), i = 0; i < size; i++)\n      data[i] = REACT_MEMO_CACHE_SENTINEL;\n    return data;\n  },\n  use: use\n};\nfunction unsupportedHook() {\n  throw Error(\"This Hook is not supported in Server Components.\");\n}\nfunction unsupportedRefresh() {\n  throw Error(\"Refreshing the cache is not supported in Server Components.\");\n}\nfunction unsupportedContext() {\n  throw Error(\"Cannot read a Client Context from a Server Component.\");\n}\nfunction useId() {\n  if (null === currentRequest$1)\n    throw Error(\"useId can only be used while React is rendering\");\n  var id = currentRequest$1.identifierCount++;\n  return \":\" + currentRequest$1.identifierPrefix + \"S\" + id.toString(32) + \":\";\n}\nfunction use(usable) {\n  if (\n    (null !== usable && \"object\" === typeof usable) ||\n    \"function\" === typeof usable\n  ) {\n    if (\"function\" === typeof usable.then) {\n      var index = thenableIndexCounter;\n      thenableIndexCounter += 1;\n      null === thenableState && (thenableState = []);\n      return trackUsedThenable(thenableState, usable, index);\n    }\n    usable.$$typeof === REACT_CONTEXT_TYPE && unsupportedContext();\n  }\n  if (usable.$$typeof === CLIENT_REFERENCE_TAG$1) {\n    if (null != usable.value && usable.value.$$typeof === REACT_CONTEXT_TYPE)\n      throw Error(\"Cannot read a Client Context from a Server Component.\");\n    throw Error(\"Cannot use() an already resolved Client Reference.\");\n  }\n  throw Error(\"An unsupported type was passed to use(): \" + String(usable));\n}\nvar DefaultAsyncDispatcher = {\n    getCacheForType: function (resourceType) {\n      var JSCompiler_inline_result = (JSCompiler_inline_result =\n        resolveRequest())\n        ? JSCompiler_inline_result.cache\n        : new Map();\n      var entry = JSCompiler_inline_result.get(resourceType);\n      void 0 === entry &&\n        ((entry = resourceType()),\n        JSCompiler_inline_result.set(resourceType, entry));\n      return entry;\n    }\n  },\n  ReactSharedInternalsServer =\n    React.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\nif (!ReactSharedInternalsServer)\n  throw Error(\n    'The \"react\" package in this environment is not configured correctly. The \"react-server\" condition must be enabled in any environment that runs React Server Components.'\n  );\nvar isArrayImpl = Array.isArray,\n  getPrototypeOf = Object.getPrototypeOf;\nfunction objectName(object) {\n  return Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object (.*)\\]$/, function (m, p0) {\n      return p0;\n    });\n}\nfunction describeValueForErrorMessage(value) {\n  switch (typeof value) {\n    case \"string\":\n      return JSON.stringify(\n        10 >= value.length ? value : value.slice(0, 10) + \"...\"\n      );\n    case \"object\":\n      if (isArrayImpl(value)) return \"[...]\";\n      if (null !== value && value.$$typeof === CLIENT_REFERENCE_TAG)\n        return \"client\";\n      value = objectName(value);\n      return \"Object\" === value ? \"{...}\" : value;\n    case \"function\":\n      return value.$$typeof === CLIENT_REFERENCE_TAG\n        ? \"client\"\n        : (value = value.displayName || value.name)\n          ? \"function \" + value\n          : \"function\";\n    default:\n      return String(value);\n  }\n}\nfunction describeElementType(type) {\n  if (\"string\" === typeof type) return type;\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return \"Suspense\";\n    case REACT_SUSPENSE_LIST_TYPE:\n      return \"SuspenseList\";\n  }\n  if (\"object\" === typeof type)\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeElementType(type.render);\n      case REACT_MEMO_TYPE:\n        return describeElementType(type.type);\n      case REACT_LAZY_TYPE:\n        var payload = type._payload;\n        type = type._init;\n        try {\n          return describeElementType(type(payload));\n        } catch (x) {}\n    }\n  return \"\";\n}\nvar CLIENT_REFERENCE_TAG = Symbol.for(\"react.client.reference\");\nfunction describeObjectForErrorMessage(objectOrArray, expandedName) {\n  var objKind = objectName(objectOrArray);\n  if (\"Object\" !== objKind && \"Array\" !== objKind) return objKind;\n  objKind = -1;\n  var length = 0;\n  if (isArrayImpl(objectOrArray)) {\n    var str = \"[\";\n    for (var i = 0; i < objectOrArray.length; i++) {\n      0 < i && (str += \", \");\n      var value = objectOrArray[i];\n      value =\n        \"object\" === typeof value && null !== value\n          ? describeObjectForErrorMessage(value)\n          : describeValueForErrorMessage(value);\n      \"\" + i === expandedName\n        ? ((objKind = str.length), (length = value.length), (str += value))\n        : (str =\n            10 > value.length && 40 > str.length + value.length\n              ? str + value\n              : str + \"...\");\n    }\n    str += \"]\";\n  } else if (objectOrArray.$$typeof === REACT_ELEMENT_TYPE)\n    str = \"<\" + describeElementType(objectOrArray.type) + \"/>\";\n  else {\n    if (objectOrArray.$$typeof === CLIENT_REFERENCE_TAG) return \"client\";\n    str = \"{\";\n    i = Object.keys(objectOrArray);\n    for (value = 0; value < i.length; value++) {\n      0 < value && (str += \", \");\n      var name = i[value],\n        encodedKey = JSON.stringify(name);\n      str += ('\"' + name + '\"' === encodedKey ? name : encodedKey) + \": \";\n      encodedKey = objectOrArray[name];\n      encodedKey =\n        \"object\" === typeof encodedKey && null !== encodedKey\n          ? describeObjectForErrorMessage(encodedKey)\n          : describeValueForErrorMessage(encodedKey);\n      name === expandedName\n        ? ((objKind = str.length),\n          (length = encodedKey.length),\n          (str += encodedKey))\n        : (str =\n            10 > encodedKey.length && 40 > str.length + encodedKey.length\n              ? str + encodedKey\n              : str + \"...\");\n    }\n    str += \"}\";\n  }\n  return void 0 === expandedName\n    ? str\n    : -1 < objKind && 0 < length\n      ? ((objectOrArray = \" \".repeat(objKind) + \"^\".repeat(length)),\n        \"\\n  \" + str + \"\\n  \" + objectOrArray)\n      : \"\\n  \" + str;\n}\nvar ObjectPrototype = Object.prototype,\n  stringify = JSON.stringify;\nfunction defaultErrorHandler(error) {\n  console.error(error);\n}\nfunction defaultPostponeHandler() {}\nfunction RequestInstance(\n  type,\n  model,\n  bundlerConfig,\n  onError,\n  identifierPrefix,\n  onPostpone,\n  temporaryReferences,\n  environmentName,\n  filterStackFrame,\n  onAllReady,\n  onFatalError\n) {\n  if (\n    null !== ReactSharedInternalsServer.A &&\n    ReactSharedInternalsServer.A !== DefaultAsyncDispatcher\n  )\n    throw Error(\"Currently React only supports one RSC renderer at a time.\");\n  ReactSharedInternalsServer.A = DefaultAsyncDispatcher;\n  filterStackFrame = new Set();\n  environmentName = [];\n  var hints = new Set();\n  this.type = type;\n  this.status = 10;\n  this.flushScheduled = !1;\n  this.destination = this.fatalError = null;\n  this.bundlerConfig = bundlerConfig;\n  this.cache = new Map();\n  this.pendingChunks = this.nextChunkId = 0;\n  this.hints = hints;\n  this.abortListeners = new Set();\n  this.abortableTasks = filterStackFrame;\n  this.pingedTasks = environmentName;\n  this.completedImportChunks = [];\n  this.completedHintChunks = [];\n  this.completedRegularChunks = [];\n  this.completedErrorChunks = [];\n  this.writtenSymbols = new Map();\n  this.writtenClientReferences = new Map();\n  this.writtenServerReferences = new Map();\n  this.writtenObjects = new WeakMap();\n  this.temporaryReferences = temporaryReferences;\n  this.identifierPrefix = identifierPrefix || \"\";\n  this.identifierCount = 1;\n  this.taintCleanupQueue = [];\n  this.onError = void 0 === onError ? defaultErrorHandler : onError;\n  this.onPostpone = void 0 === onPostpone ? defaultPostponeHandler : onPostpone;\n  this.onAllReady = onAllReady;\n  this.onFatalError = onFatalError;\n  type = createTask(this, model, null, !1, filterStackFrame);\n  environmentName.push(type);\n}\nfunction noop() {}\nvar currentRequest = null;\nfunction resolveRequest() {\n  if (currentRequest) return currentRequest;\n  if (supportsRequestStorage) {\n    var store = requestStorage.getStore();\n    if (store) return store;\n  }\n  return null;\n}\nfunction serializeThenable(request, task, thenable) {\n  var newTask = createTask(\n    request,\n    null,\n    task.keyPath,\n    task.implicitSlot,\n    request.abortableTasks\n  );\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return (\n        (newTask.model = thenable.value), pingTask(request, newTask), newTask.id\n      );\n    case \"rejected\":\n      return (\n        (task = logRecoverableError(request, thenable.reason, null)),\n        emitErrorChunk(request, newTask.id, task),\n        (newTask.status = 4),\n        request.abortableTasks.delete(newTask),\n        newTask.id\n      );\n    default:\n      if (12 === request.status)\n        return (\n          request.abortableTasks.delete(newTask),\n          (newTask.status = 3),\n          (task = stringify(serializeByValueID(request.fatalError))),\n          emitModelChunk(request, newTask.id, task),\n          newTask.id\n        );\n      \"string\" !== typeof thenable.status &&\n        ((thenable.status = \"pending\"),\n        thenable.then(\n          function (fulfilledValue) {\n            \"pending\" === thenable.status &&\n              ((thenable.status = \"fulfilled\"),\n              (thenable.value = fulfilledValue));\n          },\n          function (error) {\n            \"pending\" === thenable.status &&\n              ((thenable.status = \"rejected\"), (thenable.reason = error));\n          }\n        ));\n  }\n  thenable.then(\n    function (value) {\n      newTask.model = value;\n      pingTask(request, newTask);\n    },\n    function (reason) {\n      0 === newTask.status &&\n        ((reason = logRecoverableError(request, reason, newTask)),\n        emitErrorChunk(request, newTask.id, reason),\n        (newTask.status = 4),\n        request.abortableTasks.delete(newTask),\n        enqueueFlush(request));\n    }\n  );\n  return newTask.id;\n}\nfunction serializeReadableStream(request, task, stream) {\n  function progress(entry) {\n    if (!aborted)\n      if (entry.done)\n        request.abortListeners.delete(abortStream),\n          (entry = streamTask.id.toString(16) + \":C\\n\"),\n          request.completedRegularChunks.push(stringToChunk(entry)),\n          enqueueFlush(request),\n          (aborted = !0);\n      else\n        try {\n          (streamTask.model = entry.value),\n            request.pendingChunks++,\n            emitChunk(request, streamTask, streamTask.model),\n            enqueueFlush(request),\n            reader.read().then(progress, error);\n        } catch (x$8) {\n          error(x$8);\n        }\n  }\n  function error(reason) {\n    if (!aborted) {\n      aborted = !0;\n      request.abortListeners.delete(abortStream);\n      var digest = logRecoverableError(request, reason, streamTask);\n      emitErrorChunk(request, streamTask.id, digest);\n      enqueueFlush(request);\n      reader.cancel(reason).then(error, error);\n    }\n  }\n  function abortStream(reason) {\n    if (!aborted) {\n      aborted = !0;\n      request.abortListeners.delete(abortStream);\n      var digest = logRecoverableError(request, reason, streamTask);\n      emitErrorChunk(request, streamTask.id, digest);\n      enqueueFlush(request);\n      reader.cancel(reason).then(error, error);\n    }\n  }\n  var supportsBYOB = stream.supportsBYOB;\n  if (void 0 === supportsBYOB)\n    try {\n      stream.getReader({ mode: \"byob\" }).releaseLock(), (supportsBYOB = !0);\n    } catch (x) {\n      supportsBYOB = !1;\n    }\n  var reader = stream.getReader(),\n    streamTask = createTask(\n      request,\n      task.model,\n      task.keyPath,\n      task.implicitSlot,\n      request.abortableTasks\n    );\n  request.abortableTasks.delete(streamTask);\n  request.pendingChunks++;\n  task = streamTask.id.toString(16) + \":\" + (supportsBYOB ? \"r\" : \"R\") + \"\\n\";\n  request.completedRegularChunks.push(stringToChunk(task));\n  var aborted = !1;\n  request.abortListeners.add(abortStream);\n  reader.read().then(progress, error);\n  return serializeByValueID(streamTask.id);\n}\nfunction serializeAsyncIterable(request, task, iterable, iterator) {\n  function progress(entry) {\n    if (!aborted)\n      if (entry.done) {\n        request.abortListeners.delete(abortIterable);\n        if (void 0 === entry.value)\n          var endStreamRow = streamTask.id.toString(16) + \":C\\n\";\n        else\n          try {\n            var chunkId = outlineModel(request, entry.value);\n            endStreamRow =\n              streamTask.id.toString(16) +\n              \":C\" +\n              stringify(serializeByValueID(chunkId)) +\n              \"\\n\";\n          } catch (x) {\n            error(x);\n            return;\n          }\n        request.completedRegularChunks.push(stringToChunk(endStreamRow));\n        enqueueFlush(request);\n        aborted = !0;\n      } else\n        try {\n          (streamTask.model = entry.value),\n            request.pendingChunks++,\n            emitChunk(request, streamTask, streamTask.model),\n            enqueueFlush(request),\n            iterator.next().then(progress, error);\n        } catch (x$9) {\n          error(x$9);\n        }\n  }\n  function error(reason) {\n    if (!aborted) {\n      aborted = !0;\n      request.abortListeners.delete(abortIterable);\n      var digest = logRecoverableError(request, reason, streamTask);\n      emitErrorChunk(request, streamTask.id, digest);\n      enqueueFlush(request);\n      \"function\" === typeof iterator.throw &&\n        iterator.throw(reason).then(error, error);\n    }\n  }\n  function abortIterable(reason) {\n    if (!aborted) {\n      aborted = !0;\n      request.abortListeners.delete(abortIterable);\n      var digest = logRecoverableError(request, reason, streamTask);\n      emitErrorChunk(request, streamTask.id, digest);\n      enqueueFlush(request);\n      \"function\" === typeof iterator.throw &&\n        iterator.throw(reason).then(error, error);\n    }\n  }\n  iterable = iterable === iterator;\n  var streamTask = createTask(\n    request,\n    task.model,\n    task.keyPath,\n    task.implicitSlot,\n    request.abortableTasks\n  );\n  request.abortableTasks.delete(streamTask);\n  request.pendingChunks++;\n  task = streamTask.id.toString(16) + \":\" + (iterable ? \"x\" : \"X\") + \"\\n\";\n  request.completedRegularChunks.push(stringToChunk(task));\n  var aborted = !1;\n  request.abortListeners.add(abortIterable);\n  iterator.next().then(progress, error);\n  return serializeByValueID(streamTask.id);\n}\nfunction emitHint(request, code, model) {\n  model = stringify(model);\n  var id = request.nextChunkId++;\n  code = \"H\" + code;\n  code = id.toString(16) + \":\" + code;\n  model = stringToChunk(code + model + \"\\n\");\n  request.completedHintChunks.push(model);\n  enqueueFlush(request);\n}\nfunction readThenable(thenable) {\n  if (\"fulfilled\" === thenable.status) return thenable.value;\n  if (\"rejected\" === thenable.status) throw thenable.reason;\n  throw thenable;\n}\nfunction createLazyWrapperAroundWakeable(wakeable) {\n  switch (wakeable.status) {\n    case \"fulfilled\":\n    case \"rejected\":\n      break;\n    default:\n      \"string\" !== typeof wakeable.status &&\n        ((wakeable.status = \"pending\"),\n        wakeable.then(\n          function (fulfilledValue) {\n            \"pending\" === wakeable.status &&\n              ((wakeable.status = \"fulfilled\"),\n              (wakeable.value = fulfilledValue));\n          },\n          function (error) {\n            \"pending\" === wakeable.status &&\n              ((wakeable.status = \"rejected\"), (wakeable.reason = error));\n          }\n        ));\n  }\n  return { $$typeof: REACT_LAZY_TYPE, _payload: wakeable, _init: readThenable };\n}\nfunction voidHandler() {}\nfunction renderFunctionComponent(request, task, key, Component, props) {\n  var prevThenableState = task.thenableState;\n  task.thenableState = null;\n  thenableIndexCounter = 0;\n  thenableState = prevThenableState;\n  Component = Component(props, void 0);\n  if (12 === request.status)\n    throw (\n      (\"object\" === typeof Component &&\n        null !== Component &&\n        \"function\" === typeof Component.then &&\n        Component.$$typeof !== CLIENT_REFERENCE_TAG$1 &&\n        Component.then(voidHandler, voidHandler),\n      null)\n    );\n  if (\n    \"object\" === typeof Component &&\n    null !== Component &&\n    Component.$$typeof !== CLIENT_REFERENCE_TAG$1\n  ) {\n    if (\"function\" === typeof Component.then) {\n      props = Component;\n      if (\"fulfilled\" === props.status) return props.value;\n      Component = createLazyWrapperAroundWakeable(Component);\n    }\n    var iteratorFn = getIteratorFn(Component);\n    if (iteratorFn) {\n      var iterableChild = Component;\n      Component = {};\n      Component =\n        ((Component[Symbol.iterator] = function () {\n          return iteratorFn.call(iterableChild);\n        }),\n        Component);\n    } else if (\n      !(\n        \"function\" !== typeof Component[ASYNC_ITERATOR] ||\n        (\"function\" === typeof ReadableStream &&\n          Component instanceof ReadableStream)\n      )\n    ) {\n      var iterableChild$10 = Component;\n      Component = {};\n      Component =\n        ((Component[ASYNC_ITERATOR] = function () {\n          return iterableChild$10[ASYNC_ITERATOR]();\n        }),\n        Component);\n    }\n  }\n  props = task.keyPath;\n  prevThenableState = task.implicitSlot;\n  null !== key\n    ? (task.keyPath = null === props ? key : props + \",\" + key)\n    : null === props && (task.implicitSlot = !0);\n  request = renderModelDestructive(request, task, emptyRoot, \"\", Component);\n  task.keyPath = props;\n  task.implicitSlot = prevThenableState;\n  return request;\n}\nfunction renderFragment(request, task, children) {\n  return null !== task.keyPath\n    ? ((request = [\n        REACT_ELEMENT_TYPE,\n        REACT_FRAGMENT_TYPE,\n        task.keyPath,\n        { children: children }\n      ]),\n      task.implicitSlot ? [request] : request)\n    : children;\n}\nfunction renderElement(request, task, type, key, ref, props) {\n  if (null !== ref && void 0 !== ref)\n    throw Error(\n      \"Refs cannot be used in Server Components, nor passed to Client Components.\"\n    );\n  if (\n    \"function\" === typeof type &&\n    type.$$typeof !== CLIENT_REFERENCE_TAG$1 &&\n    type.$$typeof !== TEMPORARY_REFERENCE_TAG\n  )\n    return renderFunctionComponent(request, task, key, type, props);\n  if (type === REACT_FRAGMENT_TYPE && null === key)\n    return (\n      (type = task.implicitSlot),\n      null === task.keyPath && (task.implicitSlot = !0),\n      (props = renderModelDestructive(\n        request,\n        task,\n        emptyRoot,\n        \"\",\n        props.children\n      )),\n      (task.implicitSlot = type),\n      props\n    );\n  if (\n    null != type &&\n    \"object\" === typeof type &&\n    type.$$typeof !== CLIENT_REFERENCE_TAG$1\n  )\n    switch (type.$$typeof) {\n      case REACT_LAZY_TYPE:\n        var init = type._init;\n        type = init(type._payload);\n        if (12 === request.status) throw null;\n        return renderElement(request, task, type, key, ref, props);\n      case REACT_FORWARD_REF_TYPE:\n        return renderFunctionComponent(request, task, key, type.render, props);\n      case REACT_MEMO_TYPE:\n        return renderElement(request, task, type.type, key, ref, props);\n    }\n  request = key;\n  key = task.keyPath;\n  null === request\n    ? (request = key)\n    : null !== key && (request = key + \",\" + request);\n  props = [REACT_ELEMENT_TYPE, type, request, props];\n  task = task.implicitSlot && null !== request ? [props] : props;\n  return task;\n}\nfunction pingTask(request, task) {\n  var pingedTasks = request.pingedTasks;\n  pingedTasks.push(task);\n  1 === pingedTasks.length &&\n    ((request.flushScheduled = null !== request.destination),\n    21 === request.type || 10 === request.status\n      ? scheduleMicrotask(function () {\n          return performWork(request);\n        })\n      : setTimeoutOrImmediate(function () {\n          return performWork(request);\n        }, 0));\n}\nfunction createTask(request, model, keyPath, implicitSlot, abortSet) {\n  request.pendingChunks++;\n  var id = request.nextChunkId++;\n  \"object\" !== typeof model ||\n    null === model ||\n    null !== keyPath ||\n    implicitSlot ||\n    request.writtenObjects.set(model, serializeByValueID(id));\n  var task = {\n    id: id,\n    status: 0,\n    model: model,\n    keyPath: keyPath,\n    implicitSlot: implicitSlot,\n    ping: function () {\n      return pingTask(request, task);\n    },\n    toJSON: function (parentPropertyName, value) {\n      var prevKeyPath = task.keyPath,\n        prevImplicitSlot = task.implicitSlot;\n      try {\n        var JSCompiler_inline_result = renderModelDestructive(\n          request,\n          task,\n          this,\n          parentPropertyName,\n          value\n        );\n      } catch (thrownValue) {\n        if (\n          ((parentPropertyName = task.model),\n          (parentPropertyName =\n            \"object\" === typeof parentPropertyName &&\n            null !== parentPropertyName &&\n            (parentPropertyName.$$typeof === REACT_ELEMENT_TYPE ||\n              parentPropertyName.$$typeof === REACT_LAZY_TYPE)),\n          12 === request.status)\n        )\n          (task.status = 3),\n            (prevKeyPath = request.fatalError),\n            (JSCompiler_inline_result = parentPropertyName\n              ? \"$L\" + prevKeyPath.toString(16)\n              : serializeByValueID(prevKeyPath));\n        else if (\n          ((value =\n            thrownValue === SuspenseException\n              ? getSuspendedThenable()\n              : thrownValue),\n          \"object\" === typeof value &&\n            null !== value &&\n            \"function\" === typeof value.then)\n        ) {\n          JSCompiler_inline_result = createTask(\n            request,\n            task.model,\n            task.keyPath,\n            task.implicitSlot,\n            request.abortableTasks\n          );\n          var ping = JSCompiler_inline_result.ping;\n          value.then(ping, ping);\n          JSCompiler_inline_result.thenableState =\n            getThenableStateAfterSuspending();\n          task.keyPath = prevKeyPath;\n          task.implicitSlot = prevImplicitSlot;\n          JSCompiler_inline_result = parentPropertyName\n            ? \"$L\" + JSCompiler_inline_result.id.toString(16)\n            : serializeByValueID(JSCompiler_inline_result.id);\n        } else\n          (task.keyPath = prevKeyPath),\n            (task.implicitSlot = prevImplicitSlot),\n            request.pendingChunks++,\n            (prevKeyPath = request.nextChunkId++),\n            (prevImplicitSlot = logRecoverableError(request, value, task)),\n            emitErrorChunk(request, prevKeyPath, prevImplicitSlot),\n            (JSCompiler_inline_result = parentPropertyName\n              ? \"$L\" + prevKeyPath.toString(16)\n              : serializeByValueID(prevKeyPath));\n      }\n      return JSCompiler_inline_result;\n    },\n    thenableState: null\n  };\n  abortSet.add(task);\n  return task;\n}\nfunction serializeByValueID(id) {\n  return \"$\" + id.toString(16);\n}\nfunction encodeReferenceChunk(request, id, reference) {\n  request = stringify(reference);\n  id = id.toString(16) + \":\" + request + \"\\n\";\n  return stringToChunk(id);\n}\nfunction serializeClientReference(\n  request,\n  parent,\n  parentPropertyName,\n  clientReference\n) {\n  var clientReferenceKey = clientReference.$$async\n      ? clientReference.$$id + \"#async\"\n      : clientReference.$$id,\n    writtenClientReferences = request.writtenClientReferences,\n    existingId = writtenClientReferences.get(clientReferenceKey);\n  if (void 0 !== existingId)\n    return parent[0] === REACT_ELEMENT_TYPE && \"1\" === parentPropertyName\n      ? \"$L\" + existingId.toString(16)\n      : serializeByValueID(existingId);\n  try {\n    var config = request.bundlerConfig,\n      modulePath = clientReference.$$id;\n    existingId = \"\";\n    var resolvedModuleData = config[modulePath];\n    if (resolvedModuleData) existingId = resolvedModuleData.name;\n    else {\n      var idx = modulePath.lastIndexOf(\"#\");\n      -1 !== idx &&\n        ((existingId = modulePath.slice(idx + 1)),\n        (resolvedModuleData = config[modulePath.slice(0, idx)]));\n      if (!resolvedModuleData)\n        throw Error(\n          'Could not find the module \"' +\n            modulePath +\n            '\" in the React Client Manifest. This is probably a bug in the React Server Components bundler.'\n        );\n    }\n    if (!0 === resolvedModuleData.async && !0 === clientReference.$$async)\n      throw Error(\n        'The module \"' +\n          modulePath +\n          '\" is marked as an async ESM module but was loaded as a CJS proxy. This is probably a bug in the React Server Components bundler.'\n      );\n    var JSCompiler_inline_result =\n      !0 === resolvedModuleData.async || !0 === clientReference.$$async\n        ? [resolvedModuleData.id, resolvedModuleData.chunks, existingId, 1]\n        : [resolvedModuleData.id, resolvedModuleData.chunks, existingId];\n    request.pendingChunks++;\n    var importId = request.nextChunkId++,\n      json = stringify(JSCompiler_inline_result),\n      row = importId.toString(16) + \":I\" + json + \"\\n\",\n      processedChunk = stringToChunk(row);\n    request.completedImportChunks.push(processedChunk);\n    writtenClientReferences.set(clientReferenceKey, importId);\n    return parent[0] === REACT_ELEMENT_TYPE && \"1\" === parentPropertyName\n      ? \"$L\" + importId.toString(16)\n      : serializeByValueID(importId);\n  } catch (x) {\n    return (\n      request.pendingChunks++,\n      (parent = request.nextChunkId++),\n      (parentPropertyName = logRecoverableError(request, x, null)),\n      emitErrorChunk(request, parent, parentPropertyName),\n      serializeByValueID(parent)\n    );\n  }\n}\nfunction outlineModel(request, value) {\n  value = createTask(request, value, null, !1, request.abortableTasks);\n  retryTask(request, value);\n  return value.id;\n}\nfunction serializeTypedArray(request, tag, typedArray) {\n  request.pendingChunks++;\n  var bufferId = request.nextChunkId++;\n  emitTypedArrayChunk(request, bufferId, tag, typedArray);\n  return serializeByValueID(bufferId);\n}\nfunction serializeBlob(request, blob) {\n  function progress(entry) {\n    if (!aborted)\n      if (entry.done)\n        request.abortListeners.delete(abortBlob),\n          (aborted = !0),\n          pingTask(request, newTask);\n      else\n        return (\n          model.push(entry.value), reader.read().then(progress).catch(error)\n        );\n  }\n  function error(reason) {\n    if (!aborted) {\n      aborted = !0;\n      request.abortListeners.delete(abortBlob);\n      var digest = logRecoverableError(request, reason, newTask);\n      emitErrorChunk(request, newTask.id, digest);\n      enqueueFlush(request);\n      reader.cancel(reason).then(error, error);\n    }\n  }\n  function abortBlob(reason) {\n    if (!aborted) {\n      aborted = !0;\n      request.abortListeners.delete(abortBlob);\n      var digest = logRecoverableError(request, reason, newTask);\n      emitErrorChunk(request, newTask.id, digest);\n      enqueueFlush(request);\n      reader.cancel(reason).then(error, error);\n    }\n  }\n  var model = [blob.type],\n    newTask = createTask(request, model, null, !1, request.abortableTasks),\n    reader = blob.stream().getReader(),\n    aborted = !1;\n  request.abortListeners.add(abortBlob);\n  reader.read().then(progress).catch(error);\n  return \"$B\" + newTask.id.toString(16);\n}\nvar modelRoot = !1;\nfunction renderModelDestructive(\n  request,\n  task,\n  parent,\n  parentPropertyName,\n  value\n) {\n  task.model = value;\n  if (value === REACT_ELEMENT_TYPE) return \"$\";\n  if (null === value) return null;\n  if (\"object\" === typeof value) {\n    switch (value.$$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var elementReference = null,\n          writtenObjects = request.writtenObjects;\n        if (null === task.keyPath && !task.implicitSlot) {\n          var existingReference = writtenObjects.get(value);\n          if (void 0 !== existingReference)\n            if (modelRoot === value) modelRoot = null;\n            else return existingReference;\n          else\n            -1 === parentPropertyName.indexOf(\":\") &&\n              ((parent = writtenObjects.get(parent)),\n              void 0 !== parent &&\n                ((elementReference = parent + \":\" + parentPropertyName),\n                writtenObjects.set(value, elementReference)));\n        }\n        parentPropertyName = value.props;\n        parent = parentPropertyName.ref;\n        request = renderElement(\n          request,\n          task,\n          value.type,\n          value.key,\n          void 0 !== parent ? parent : null,\n          parentPropertyName\n        );\n        \"object\" === typeof request &&\n          null !== request &&\n          null !== elementReference &&\n          (writtenObjects.has(request) ||\n            writtenObjects.set(request, elementReference));\n        return request;\n      case REACT_LAZY_TYPE:\n        task.thenableState = null;\n        parentPropertyName = value._init;\n        value = parentPropertyName(value._payload);\n        if (12 === request.status) throw null;\n        return renderModelDestructive(request, task, emptyRoot, \"\", value);\n      case REACT_LEGACY_ELEMENT_TYPE:\n        throw Error(\n          'A React Element from an older version of React was rendered. This is not supported. It can happen if:\\n- Multiple copies of the \"react\" package is used.\\n- A library pre-bundled an old copy of \"react\" or \"react/jsx-runtime\".\\n- A compiler tries to \"inline\" JSX instead of using the runtime.'\n        );\n    }\n    if (value.$$typeof === CLIENT_REFERENCE_TAG$1)\n      return serializeClientReference(\n        request,\n        parent,\n        parentPropertyName,\n        value\n      );\n    if (\n      void 0 !== request.temporaryReferences &&\n      ((elementReference = request.temporaryReferences.get(value)),\n      void 0 !== elementReference)\n    )\n      return \"$T\" + elementReference;\n    elementReference = request.writtenObjects;\n    writtenObjects = elementReference.get(value);\n    if (\"function\" === typeof value.then) {\n      if (void 0 !== writtenObjects) {\n        if (null !== task.keyPath || task.implicitSlot)\n          return \"$@\" + serializeThenable(request, task, value).toString(16);\n        if (modelRoot === value) modelRoot = null;\n        else return writtenObjects;\n      }\n      request = \"$@\" + serializeThenable(request, task, value).toString(16);\n      elementReference.set(value, request);\n      return request;\n    }\n    if (void 0 !== writtenObjects)\n      if (modelRoot === value) modelRoot = null;\n      else return writtenObjects;\n    else if (\n      -1 === parentPropertyName.indexOf(\":\") &&\n      ((writtenObjects = elementReference.get(parent)),\n      void 0 !== writtenObjects)\n    ) {\n      existingReference = parentPropertyName;\n      if (isArrayImpl(parent) && parent[0] === REACT_ELEMENT_TYPE)\n        switch (parentPropertyName) {\n          case \"1\":\n            existingReference = \"type\";\n            break;\n          case \"2\":\n            existingReference = \"key\";\n            break;\n          case \"3\":\n            existingReference = \"props\";\n            break;\n          case \"4\":\n            existingReference = \"_owner\";\n        }\n      elementReference.set(value, writtenObjects + \":\" + existingReference);\n    }\n    if (isArrayImpl(value)) return renderFragment(request, task, value);\n    if (value instanceof Map)\n      return (\n        (value = Array.from(value)),\n        \"$Q\" + outlineModel(request, value).toString(16)\n      );\n    if (value instanceof Set)\n      return (\n        (value = Array.from(value)),\n        \"$W\" + outlineModel(request, value).toString(16)\n      );\n    if (\"function\" === typeof FormData && value instanceof FormData)\n      return (\n        (value = Array.from(value.entries())),\n        \"$K\" + outlineModel(request, value).toString(16)\n      );\n    if (value instanceof Error) return \"$Z\";\n    if (value instanceof ArrayBuffer)\n      return serializeTypedArray(request, \"A\", new Uint8Array(value));\n    if (value instanceof Int8Array)\n      return serializeTypedArray(request, \"O\", value);\n    if (value instanceof Uint8Array)\n      return serializeTypedArray(request, \"o\", value);\n    if (value instanceof Uint8ClampedArray)\n      return serializeTypedArray(request, \"U\", value);\n    if (value instanceof Int16Array)\n      return serializeTypedArray(request, \"S\", value);\n    if (value instanceof Uint16Array)\n      return serializeTypedArray(request, \"s\", value);\n    if (value instanceof Int32Array)\n      return serializeTypedArray(request, \"L\", value);\n    if (value instanceof Uint32Array)\n      return serializeTypedArray(request, \"l\", value);\n    if (value instanceof Float32Array)\n      return serializeTypedArray(request, \"G\", value);\n    if (value instanceof Float64Array)\n      return serializeTypedArray(request, \"g\", value);\n    if (value instanceof BigInt64Array)\n      return serializeTypedArray(request, \"M\", value);\n    if (value instanceof BigUint64Array)\n      return serializeTypedArray(request, \"m\", value);\n    if (value instanceof DataView)\n      return serializeTypedArray(request, \"V\", value);\n    if (\"function\" === typeof Blob && value instanceof Blob)\n      return serializeBlob(request, value);\n    if ((elementReference = getIteratorFn(value)))\n      return (\n        (parentPropertyName = elementReference.call(value)),\n        parentPropertyName === value\n          ? \"$i\" +\n            outlineModel(request, Array.from(parentPropertyName)).toString(16)\n          : renderFragment(request, task, Array.from(parentPropertyName))\n      );\n    if (\"function\" === typeof ReadableStream && value instanceof ReadableStream)\n      return serializeReadableStream(request, task, value);\n    elementReference = value[ASYNC_ITERATOR];\n    if (\"function\" === typeof elementReference)\n      return (\n        null !== task.keyPath\n          ? ((request = [\n              REACT_ELEMENT_TYPE,\n              REACT_FRAGMENT_TYPE,\n              task.keyPath,\n              { children: value }\n            ]),\n            (request = task.implicitSlot ? [request] : request))\n          : ((parentPropertyName = elementReference.call(value)),\n            (request = serializeAsyncIterable(\n              request,\n              task,\n              value,\n              parentPropertyName\n            ))),\n        request\n      );\n    if (value instanceof Date) return \"$D\" + value.toJSON();\n    request = getPrototypeOf(value);\n    if (\n      request !== ObjectPrototype &&\n      (null === request || null !== getPrototypeOf(request))\n    )\n      throw Error(\n        \"Only plain objects, and a few built-ins, can be passed to Client Components from Server Components. Classes or null prototypes are not supported.\" +\n          describeObjectForErrorMessage(parent, parentPropertyName)\n      );\n    return value;\n  }\n  if (\"string\" === typeof value) {\n    if (\n      \"Z\" === value[value.length - 1] &&\n      parent[parentPropertyName] instanceof Date\n    )\n      return \"$D\" + value;\n    if (1024 <= value.length && null !== byteLengthOfChunk)\n      return (\n        request.pendingChunks++,\n        (task = request.nextChunkId++),\n        emitTextChunk(request, task, value),\n        serializeByValueID(task)\n      );\n    request = \"$\" === value[0] ? \"$\" + value : value;\n    return request;\n  }\n  if (\"boolean\" === typeof value) return value;\n  if (\"number\" === typeof value)\n    return Number.isFinite(value)\n      ? 0 === value && -Infinity === 1 / value\n        ? \"$-0\"\n        : value\n      : Infinity === value\n        ? \"$Infinity\"\n        : -Infinity === value\n          ? \"$-Infinity\"\n          : \"$NaN\";\n  if (\"undefined\" === typeof value) return \"$undefined\";\n  if (\"function\" === typeof value) {\n    if (value.$$typeof === CLIENT_REFERENCE_TAG$1)\n      return serializeClientReference(\n        request,\n        parent,\n        parentPropertyName,\n        value\n      );\n    if (value.$$typeof === SERVER_REFERENCE_TAG)\n      return (\n        (task = request.writtenServerReferences),\n        (parentPropertyName = task.get(value)),\n        void 0 !== parentPropertyName\n          ? (request = \"$F\" + parentPropertyName.toString(16))\n          : ((parentPropertyName = value.$$bound),\n            (parentPropertyName =\n              null === parentPropertyName\n                ? null\n                : Promise.resolve(parentPropertyName)),\n            (request = outlineModel(request, {\n              id: value.$$id,\n              bound: parentPropertyName\n            })),\n            task.set(value, request),\n            (request = \"$F\" + request.toString(16))),\n        request\n      );\n    if (\n      void 0 !== request.temporaryReferences &&\n      ((request = request.temporaryReferences.get(value)), void 0 !== request)\n    )\n      return \"$T\" + request;\n    if (value.$$typeof === TEMPORARY_REFERENCE_TAG)\n      throw Error(\n        \"Could not reference an opaque temporary reference. This is likely due to misconfiguring the temporaryReferences options on the server.\"\n      );\n    if (/^on[A-Z]/.test(parentPropertyName))\n      throw Error(\n        \"Event handlers cannot be passed to Client Component props.\" +\n          describeObjectForErrorMessage(parent, parentPropertyName) +\n          \"\\nIf you need interactivity, consider converting part of this to a Client Component.\"\n      );\n    throw Error(\n      'Functions cannot be passed directly to Client Components unless you explicitly expose it by marking it with \"use server\". Or maybe you meant to call this function rather than return it.' +\n        describeObjectForErrorMessage(parent, parentPropertyName)\n    );\n  }\n  if (\"symbol\" === typeof value) {\n    task = request.writtenSymbols;\n    elementReference = task.get(value);\n    if (void 0 !== elementReference)\n      return serializeByValueID(elementReference);\n    elementReference = value.description;\n    if (Symbol.for(elementReference) !== value)\n      throw Error(\n        \"Only global symbols received from Symbol.for(...) can be passed to Client Components. The symbol Symbol.for(\" +\n          (value.description + \") cannot be found among global symbols.\") +\n          describeObjectForErrorMessage(parent, parentPropertyName)\n      );\n    request.pendingChunks++;\n    parentPropertyName = request.nextChunkId++;\n    parent = encodeReferenceChunk(\n      request,\n      parentPropertyName,\n      \"$S\" + elementReference\n    );\n    request.completedImportChunks.push(parent);\n    task.set(value, parentPropertyName);\n    return serializeByValueID(parentPropertyName);\n  }\n  if (\"bigint\" === typeof value) return \"$n\" + value.toString(10);\n  throw Error(\n    \"Type \" +\n      typeof value +\n      \" is not supported in Client Component props.\" +\n      describeObjectForErrorMessage(parent, parentPropertyName)\n  );\n}\nfunction logRecoverableError(request, error) {\n  var prevRequest = currentRequest;\n  currentRequest = null;\n  try {\n    var onError = request.onError;\n    var errorDigest = supportsRequestStorage\n      ? requestStorage.run(void 0, onError, error)\n      : onError(error);\n  } finally {\n    currentRequest = prevRequest;\n  }\n  if (null != errorDigest && \"string\" !== typeof errorDigest)\n    throw Error(\n      'onError returned something with a type other than \"string\". onError should return a string and may return null or undefined but must not return anything else. It received something of type \"' +\n        typeof errorDigest +\n        '\" instead'\n    );\n  return errorDigest || \"\";\n}\nfunction fatalError(request, error) {\n  var onFatalError = request.onFatalError;\n  onFatalError(error);\n  null !== request.destination\n    ? ((request.status = 14), closeWithError(request.destination, error))\n    : ((request.status = 13), (request.fatalError = error));\n}\nfunction emitErrorChunk(request, id, digest) {\n  digest = { digest: digest };\n  id = id.toString(16) + \":E\" + stringify(digest) + \"\\n\";\n  id = stringToChunk(id);\n  request.completedErrorChunks.push(id);\n}\nfunction emitModelChunk(request, id, json) {\n  id = id.toString(16) + \":\" + json + \"\\n\";\n  id = stringToChunk(id);\n  request.completedRegularChunks.push(id);\n}\nfunction emitTypedArrayChunk(request, id, tag, typedArray) {\n  request.pendingChunks++;\n  var buffer = new Uint8Array(\n    typedArray.buffer,\n    typedArray.byteOffset,\n    typedArray.byteLength\n  );\n  typedArray = 2048 < typedArray.byteLength ? buffer.slice() : buffer;\n  buffer = typedArray.byteLength;\n  id = id.toString(16) + \":\" + tag + buffer.toString(16) + \",\";\n  id = stringToChunk(id);\n  request.completedRegularChunks.push(id, typedArray);\n}\nfunction emitTextChunk(request, id, text) {\n  if (null === byteLengthOfChunk)\n    throw Error(\n      \"Existence of byteLengthOfChunk should have already been checked. This is a bug in React.\"\n    );\n  request.pendingChunks++;\n  text = stringToChunk(text);\n  var binaryLength = text.byteLength;\n  id = id.toString(16) + \":T\" + binaryLength.toString(16) + \",\";\n  id = stringToChunk(id);\n  request.completedRegularChunks.push(id, text);\n}\nfunction emitChunk(request, task, value) {\n  var id = task.id;\n  \"string\" === typeof value && null !== byteLengthOfChunk\n    ? emitTextChunk(request, id, value)\n    : value instanceof ArrayBuffer\n      ? emitTypedArrayChunk(request, id, \"A\", new Uint8Array(value))\n      : value instanceof Int8Array\n        ? emitTypedArrayChunk(request, id, \"O\", value)\n        : value instanceof Uint8Array\n          ? emitTypedArrayChunk(request, id, \"o\", value)\n          : value instanceof Uint8ClampedArray\n            ? emitTypedArrayChunk(request, id, \"U\", value)\n            : value instanceof Int16Array\n              ? emitTypedArrayChunk(request, id, \"S\", value)\n              : value instanceof Uint16Array\n                ? emitTypedArrayChunk(request, id, \"s\", value)\n                : value instanceof Int32Array\n                  ? emitTypedArrayChunk(request, id, \"L\", value)\n                  : value instanceof Uint32Array\n                    ? emitTypedArrayChunk(request, id, \"l\", value)\n                    : value instanceof Float32Array\n                      ? emitTypedArrayChunk(request, id, \"G\", value)\n                      : value instanceof Float64Array\n                        ? emitTypedArrayChunk(request, id, \"g\", value)\n                        : value instanceof BigInt64Array\n                          ? emitTypedArrayChunk(request, id, \"M\", value)\n                          : value instanceof BigUint64Array\n                            ? emitTypedArrayChunk(request, id, \"m\", value)\n                            : value instanceof DataView\n                              ? emitTypedArrayChunk(request, id, \"V\", value)\n                              : ((value = stringify(value, task.toJSON)),\n                                emitModelChunk(request, task.id, value));\n}\nvar emptyRoot = {};\nfunction retryTask(request, task) {\n  if (0 === task.status) {\n    task.status = 5;\n    try {\n      modelRoot = task.model;\n      var resolvedModel = renderModelDestructive(\n        request,\n        task,\n        emptyRoot,\n        \"\",\n        task.model\n      );\n      modelRoot = resolvedModel;\n      task.keyPath = null;\n      task.implicitSlot = !1;\n      if (\"object\" === typeof resolvedModel && null !== resolvedModel)\n        request.writtenObjects.set(resolvedModel, serializeByValueID(task.id)),\n          emitChunk(request, task, resolvedModel);\n      else {\n        var json = stringify(resolvedModel);\n        emitModelChunk(request, task.id, json);\n      }\n      request.abortableTasks.delete(task);\n      task.status = 1;\n    } catch (thrownValue) {\n      if (12 === request.status) {\n        request.abortableTasks.delete(task);\n        task.status = 3;\n        var model = stringify(serializeByValueID(request.fatalError));\n        emitModelChunk(request, task.id, model);\n      } else {\n        var x =\n          thrownValue === SuspenseException\n            ? getSuspendedThenable()\n            : thrownValue;\n        if (\n          \"object\" === typeof x &&\n          null !== x &&\n          \"function\" === typeof x.then\n        ) {\n          task.status = 0;\n          task.thenableState = getThenableStateAfterSuspending();\n          var ping = task.ping;\n          x.then(ping, ping);\n        } else {\n          request.abortableTasks.delete(task);\n          task.status = 4;\n          var digest = logRecoverableError(request, x, task);\n          emitErrorChunk(request, task.id, digest);\n        }\n      }\n    } finally {\n    }\n  }\n}\nfunction performWork(request) {\n  var prevDispatcher = ReactSharedInternalsServer.H;\n  ReactSharedInternalsServer.H = HooksDispatcher;\n  var prevRequest = currentRequest;\n  currentRequest$1 = currentRequest = request;\n  var hadAbortableTasks = 0 < request.abortableTasks.size;\n  try {\n    var pingedTasks = request.pingedTasks;\n    request.pingedTasks = [];\n    for (var i = 0; i < pingedTasks.length; i++)\n      retryTask(request, pingedTasks[i]);\n    null !== request.destination &&\n      flushCompletedChunks(request, request.destination);\n    if (hadAbortableTasks && 0 === request.abortableTasks.size) {\n      var onAllReady = request.onAllReady;\n      onAllReady();\n    }\n  } catch (error) {\n    logRecoverableError(request, error, null), fatalError(request, error);\n  } finally {\n    (ReactSharedInternalsServer.H = prevDispatcher),\n      (currentRequest$1 = null),\n      (currentRequest = prevRequest);\n  }\n}\nfunction flushCompletedChunks(request, destination) {\n  currentView = new Uint8Array(2048);\n  writtenBytes = 0;\n  try {\n    for (\n      var importsChunks = request.completedImportChunks, i = 0;\n      i < importsChunks.length;\n      i++\n    )\n      request.pendingChunks--,\n        writeChunkAndReturn(destination, importsChunks[i]);\n    importsChunks.splice(0, i);\n    var hintChunks = request.completedHintChunks;\n    for (i = 0; i < hintChunks.length; i++)\n      writeChunkAndReturn(destination, hintChunks[i]);\n    hintChunks.splice(0, i);\n    var regularChunks = request.completedRegularChunks;\n    for (i = 0; i < regularChunks.length; i++)\n      request.pendingChunks--,\n        writeChunkAndReturn(destination, regularChunks[i]);\n    regularChunks.splice(0, i);\n    var errorChunks = request.completedErrorChunks;\n    for (i = 0; i < errorChunks.length; i++)\n      request.pendingChunks--, writeChunkAndReturn(destination, errorChunks[i]);\n    errorChunks.splice(0, i);\n  } finally {\n    (request.flushScheduled = !1),\n      currentView &&\n        0 < writtenBytes &&\n        (destination.enqueue(\n          new Uint8Array(currentView.buffer, 0, writtenBytes)\n        ),\n        (currentView = null),\n        (writtenBytes = 0));\n  }\n  0 === request.pendingChunks &&\n    ((request.status = 14), destination.close(), (request.destination = null));\n}\nfunction startWork(request) {\n  request.flushScheduled = null !== request.destination;\n  supportsRequestStorage\n    ? scheduleMicrotask(function () {\n        requestStorage.run(request, performWork, request);\n      })\n    : scheduleMicrotask(function () {\n        return performWork(request);\n      });\n  setTimeoutOrImmediate(function () {\n    10 === request.status && (request.status = 11);\n  }, 0);\n}\nfunction enqueueFlush(request) {\n  !1 === request.flushScheduled &&\n    0 === request.pingedTasks.length &&\n    null !== request.destination &&\n    ((request.flushScheduled = !0),\n    setTimeoutOrImmediate(function () {\n      request.flushScheduled = !1;\n      var destination = request.destination;\n      destination && flushCompletedChunks(request, destination);\n    }, 0));\n}\nfunction abort(request, reason) {\n  try {\n    11 >= request.status && (request.status = 12);\n    var abortableTasks = request.abortableTasks;\n    if (0 < abortableTasks.size) {\n      var error =\n          void 0 === reason\n            ? Error(\"The render was aborted by the server without a reason.\")\n            : \"object\" === typeof reason &&\n                null !== reason &&\n                \"function\" === typeof reason.then\n              ? Error(\"The render was aborted by the server with a promise.\")\n              : reason,\n        digest = logRecoverableError(request, error, null),\n        errorId = request.nextChunkId++;\n      request.fatalError = errorId;\n      request.pendingChunks++;\n      emitErrorChunk(request, errorId, digest, error);\n      abortableTasks.forEach(function (task) {\n        if (5 !== task.status) {\n          task.status = 3;\n          var ref = serializeByValueID(errorId);\n          task = encodeReferenceChunk(request, task.id, ref);\n          request.completedErrorChunks.push(task);\n        }\n      });\n      abortableTasks.clear();\n      var onAllReady = request.onAllReady;\n      onAllReady();\n    }\n    var abortListeners = request.abortListeners;\n    if (0 < abortListeners.size) {\n      var error$23 =\n        void 0 === reason\n          ? Error(\"The render was aborted by the server without a reason.\")\n          : \"object\" === typeof reason &&\n              null !== reason &&\n              \"function\" === typeof reason.then\n            ? Error(\"The render was aborted by the server with a promise.\")\n            : reason;\n      abortListeners.forEach(function (callback) {\n        return callback(error$23);\n      });\n      abortListeners.clear();\n    }\n    null !== request.destination &&\n      flushCompletedChunks(request, request.destination);\n  } catch (error$24) {\n    logRecoverableError(request, error$24, null), fatalError(request, error$24);\n  }\n}\nfunction resolveServerReference(bundlerConfig, id) {\n  var name = \"\",\n    resolvedModuleData = bundlerConfig[id];\n  if (resolvedModuleData) name = resolvedModuleData.name;\n  else {\n    var idx = id.lastIndexOf(\"#\");\n    -1 !== idx &&\n      ((name = id.slice(idx + 1)),\n      (resolvedModuleData = bundlerConfig[id.slice(0, idx)]));\n    if (!resolvedModuleData)\n      throw Error(\n        'Could not find the module \"' +\n          id +\n          '\" in the React Server Manifest. This is probably a bug in the React Server Components bundler.'\n      );\n  }\n  return resolvedModuleData.async\n    ? [resolvedModuleData.id, resolvedModuleData.chunks, name, 1]\n    : [resolvedModuleData.id, resolvedModuleData.chunks, name];\n}\nvar chunkCache = new Map();\nfunction requireAsyncModule(id) {\n  var promise = globalThis.__next_require__(id);\n  if (\"function\" !== typeof promise.then || \"fulfilled\" === promise.status)\n    return null;\n  promise.then(\n    function (value) {\n      promise.status = \"fulfilled\";\n      promise.value = value;\n    },\n    function (reason) {\n      promise.status = \"rejected\";\n      promise.reason = reason;\n    }\n  );\n  return promise;\n}\nfunction ignoreReject() {}\nfunction preloadModule(metadata) {\n  for (var chunks = metadata[1], promises = [], i = 0; i < chunks.length; ) {\n    var chunkId = chunks[i++];\n    chunks[i++];\n    var entry = chunkCache.get(chunkId);\n    if (void 0 === entry) {\n      entry = __webpack_chunk_load__(chunkId);\n      promises.push(entry);\n      var resolve = chunkCache.set.bind(chunkCache, chunkId, null);\n      entry.then(resolve, ignoreReject);\n      chunkCache.set(chunkId, entry);\n    } else null !== entry && promises.push(entry);\n  }\n  return 4 === metadata.length\n    ? 0 === promises.length\n      ? requireAsyncModule(metadata[0])\n      : Promise.all(promises).then(function () {\n          return requireAsyncModule(metadata[0]);\n        })\n    : 0 < promises.length\n      ? Promise.all(promises)\n      : null;\n}\nfunction requireModule(metadata) {\n  var moduleExports = globalThis.__next_require__(metadata[0]);\n  if (4 === metadata.length && \"function\" === typeof moduleExports.then)\n    if (\"fulfilled\" === moduleExports.status)\n      moduleExports = moduleExports.value;\n    else throw moduleExports.reason;\n  return \"*\" === metadata[2]\n    ? moduleExports\n    : \"\" === metadata[2]\n      ? moduleExports.__esModule\n        ? moduleExports.default\n        : moduleExports\n      : moduleExports[metadata[2]];\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction Chunk(status, value, reason, response) {\n  this.status = status;\n  this.value = value;\n  this.reason = reason;\n  this._response = response;\n}\nChunk.prototype = Object.create(Promise.prototype);\nChunk.prototype.then = function (resolve, reject) {\n  switch (this.status) {\n    case \"resolved_model\":\n      initializeModelChunk(this);\n  }\n  switch (this.status) {\n    case \"fulfilled\":\n      resolve(this.value);\n      break;\n    case \"pending\":\n    case \"blocked\":\n    case \"cyclic\":\n      resolve &&\n        (null === this.value && (this.value = []), this.value.push(resolve));\n      reject &&\n        (null === this.reason && (this.reason = []), this.reason.push(reject));\n      break;\n    default:\n      reject(this.reason);\n  }\n};\nfunction createPendingChunk(response) {\n  return new Chunk(\"pending\", null, null, response);\n}\nfunction wakeChunk(listeners, value) {\n  for (var i = 0; i < listeners.length; i++) (0, listeners[i])(value);\n}\nfunction triggerErrorOnChunk(chunk, error) {\n  if (\"pending\" !== chunk.status && \"blocked\" !== chunk.status)\n    chunk.reason.error(error);\n  else {\n    var listeners = chunk.reason;\n    chunk.status = \"rejected\";\n    chunk.reason = error;\n    null !== listeners && wakeChunk(listeners, error);\n  }\n}\nfunction resolveModelChunk(chunk, value, id) {\n  if (\"pending\" !== chunk.status)\n    (chunk = chunk.reason),\n      \"C\" === value[0]\n        ? chunk.close(\"C\" === value ? '\"$undefined\"' : value.slice(1))\n        : chunk.enqueueModel(value);\n  else {\n    var resolveListeners = chunk.value,\n      rejectListeners = chunk.reason;\n    chunk.status = \"resolved_model\";\n    chunk.value = value;\n    chunk.reason = id;\n    if (null !== resolveListeners)\n      switch ((initializeModelChunk(chunk), chunk.status)) {\n        case \"fulfilled\":\n          wakeChunk(resolveListeners, chunk.value);\n          break;\n        case \"pending\":\n        case \"blocked\":\n        case \"cyclic\":\n          if (chunk.value)\n            for (value = 0; value < resolveListeners.length; value++)\n              chunk.value.push(resolveListeners[value]);\n          else chunk.value = resolveListeners;\n          if (chunk.reason) {\n            if (rejectListeners)\n              for (value = 0; value < rejectListeners.length; value++)\n                chunk.reason.push(rejectListeners[value]);\n          } else chunk.reason = rejectListeners;\n          break;\n        case \"rejected\":\n          rejectListeners && wakeChunk(rejectListeners, chunk.reason);\n      }\n  }\n}\nfunction createResolvedIteratorResultChunk(response, value, done) {\n  return new Chunk(\n    \"resolved_model\",\n    (done ? '{\"done\":true,\"value\":' : '{\"done\":false,\"value\":') + value + \"}\",\n    -1,\n    response\n  );\n}\nfunction resolveIteratorResultChunk(chunk, value, done) {\n  resolveModelChunk(\n    chunk,\n    (done ? '{\"done\":true,\"value\":' : '{\"done\":false,\"value\":') + value + \"}\",\n    -1\n  );\n}\nfunction loadServerReference$1(\n  response,\n  id,\n  bound,\n  parentChunk,\n  parentObject,\n  key\n) {\n  var serverReference = resolveServerReference(response._bundlerConfig, id);\n  id = preloadModule(serverReference);\n  if (bound)\n    bound = Promise.all([bound, id]).then(function (_ref) {\n      _ref = _ref[0];\n      var fn = requireModule(serverReference);\n      return fn.bind.apply(fn, [null].concat(_ref));\n    });\n  else if (id)\n    bound = Promise.resolve(id).then(function () {\n      return requireModule(serverReference);\n    });\n  else return requireModule(serverReference);\n  bound.then(\n    createModelResolver(\n      parentChunk,\n      parentObject,\n      key,\n      !1,\n      response,\n      createModel,\n      []\n    ),\n    createModelReject(parentChunk)\n  );\n  return null;\n}\nfunction reviveModel(response, parentObj, parentKey, value, reference) {\n  if (\"string\" === typeof value)\n    return parseModelString(response, parentObj, parentKey, value, reference);\n  if (\"object\" === typeof value && null !== value)\n    if (\n      (void 0 !== reference &&\n        void 0 !== response._temporaryReferences &&\n        response._temporaryReferences.set(value, reference),\n      Array.isArray(value))\n    )\n      for (var i = 0; i < value.length; i++)\n        value[i] = reviveModel(\n          response,\n          value,\n          \"\" + i,\n          value[i],\n          void 0 !== reference ? reference + \":\" + i : void 0\n        );\n    else\n      for (i in value)\n        hasOwnProperty.call(value, i) &&\n          ((parentObj =\n            void 0 !== reference && -1 === i.indexOf(\":\")\n              ? reference + \":\" + i\n              : void 0),\n          (parentObj = reviveModel(response, value, i, value[i], parentObj)),\n          void 0 !== parentObj ? (value[i] = parentObj) : delete value[i]);\n  return value;\n}\nvar initializingChunk = null,\n  initializingChunkBlockedModel = null;\nfunction initializeModelChunk(chunk) {\n  var prevChunk = initializingChunk,\n    prevBlocked = initializingChunkBlockedModel;\n  initializingChunk = chunk;\n  initializingChunkBlockedModel = null;\n  var rootReference = -1 === chunk.reason ? void 0 : chunk.reason.toString(16),\n    resolvedModel = chunk.value;\n  chunk.status = \"cyclic\";\n  chunk.value = null;\n  chunk.reason = null;\n  try {\n    var rawModel = JSON.parse(resolvedModel),\n      value = reviveModel(\n        chunk._response,\n        { \"\": rawModel },\n        \"\",\n        rawModel,\n        rootReference\n      );\n    if (\n      null !== initializingChunkBlockedModel &&\n      0 < initializingChunkBlockedModel.deps\n    )\n      (initializingChunkBlockedModel.value = value), (chunk.status = \"blocked\");\n    else {\n      var resolveListeners = chunk.value;\n      chunk.status = \"fulfilled\";\n      chunk.value = value;\n      null !== resolveListeners && wakeChunk(resolveListeners, value);\n    }\n  } catch (error) {\n    (chunk.status = \"rejected\"), (chunk.reason = error);\n  } finally {\n    (initializingChunk = prevChunk),\n      (initializingChunkBlockedModel = prevBlocked);\n  }\n}\nfunction reportGlobalError(response, error) {\n  response._chunks.forEach(function (chunk) {\n    \"pending\" === chunk.status && triggerErrorOnChunk(chunk, error);\n  });\n}\nfunction getChunk(response, id) {\n  var chunks = response._chunks,\n    chunk = chunks.get(id);\n  chunk ||\n    ((chunk = response._formData.get(response._prefix + id)),\n    (chunk =\n      null != chunk\n        ? new Chunk(\"resolved_model\", chunk, id, response)\n        : createPendingChunk(response)),\n    chunks.set(id, chunk));\n  return chunk;\n}\nfunction createModelResolver(\n  chunk,\n  parentObject,\n  key,\n  cyclic,\n  response,\n  map,\n  path\n) {\n  if (initializingChunkBlockedModel) {\n    var blocked = initializingChunkBlockedModel;\n    cyclic || blocked.deps++;\n  } else\n    blocked = initializingChunkBlockedModel = {\n      deps: cyclic ? 0 : 1,\n      value: null\n    };\n  return function (value) {\n    for (var i = 1; i < path.length; i++) value = value[path[i]];\n    parentObject[key] = map(response, value);\n    \"\" === key && null === blocked.value && (blocked.value = parentObject[key]);\n    blocked.deps--;\n    0 === blocked.deps &&\n      \"blocked\" === chunk.status &&\n      ((value = chunk.value),\n      (chunk.status = \"fulfilled\"),\n      (chunk.value = blocked.value),\n      null !== value && wakeChunk(value, blocked.value));\n  };\n}\nfunction createModelReject(chunk) {\n  return function (error) {\n    return triggerErrorOnChunk(chunk, error);\n  };\n}\nfunction getOutlinedModel(response, reference, parentObject, key, map) {\n  reference = reference.split(\":\");\n  var id = parseInt(reference[0], 16);\n  id = getChunk(response, id);\n  switch (id.status) {\n    case \"resolved_model\":\n      initializeModelChunk(id);\n  }\n  switch (id.status) {\n    case \"fulfilled\":\n      parentObject = id.value;\n      for (key = 1; key < reference.length; key++)\n        parentObject = parentObject[reference[key]];\n      return map(response, parentObject);\n    case \"pending\":\n    case \"blocked\":\n    case \"cyclic\":\n      var parentChunk = initializingChunk;\n      id.then(\n        createModelResolver(\n          parentChunk,\n          parentObject,\n          key,\n          \"cyclic\" === id.status,\n          response,\n          map,\n          reference\n        ),\n        createModelReject(parentChunk)\n      );\n      return null;\n    default:\n      throw id.reason;\n  }\n}\nfunction createMap(response, model) {\n  return new Map(model);\n}\nfunction createSet(response, model) {\n  return new Set(model);\n}\nfunction extractIterator(response, model) {\n  return model[Symbol.iterator]();\n}\nfunction createModel(response, model) {\n  return model;\n}\nfunction parseTypedArray(\n  response,\n  reference,\n  constructor,\n  bytesPerElement,\n  parentObject,\n  parentKey\n) {\n  reference = parseInt(reference.slice(2), 16);\n  reference = response._formData.get(response._prefix + reference);\n  reference =\n    constructor === ArrayBuffer\n      ? reference.arrayBuffer()\n      : reference.arrayBuffer().then(function (buffer) {\n          return new constructor(buffer);\n        });\n  bytesPerElement = initializingChunk;\n  reference.then(\n    createModelResolver(\n      bytesPerElement,\n      parentObject,\n      parentKey,\n      !1,\n      response,\n      createModel,\n      []\n    ),\n    createModelReject(bytesPerElement)\n  );\n  return null;\n}\nfunction resolveStream(response, id, stream, controller) {\n  var chunks = response._chunks;\n  stream = new Chunk(\"fulfilled\", stream, controller, response);\n  chunks.set(id, stream);\n  response = response._formData.getAll(response._prefix + id);\n  for (id = 0; id < response.length; id++)\n    (chunks = response[id]),\n      \"C\" === chunks[0]\n        ? controller.close(\"C\" === chunks ? '\"$undefined\"' : chunks.slice(1))\n        : controller.enqueueModel(chunks);\n}\nfunction parseReadableStream(response, reference, type) {\n  reference = parseInt(reference.slice(2), 16);\n  var controller = null;\n  type = new ReadableStream({\n    type: type,\n    start: function (c) {\n      controller = c;\n    }\n  });\n  var previousBlockedChunk = null;\n  resolveStream(response, reference, type, {\n    enqueueModel: function (json) {\n      if (null === previousBlockedChunk) {\n        var chunk = new Chunk(\"resolved_model\", json, -1, response);\n        initializeModelChunk(chunk);\n        \"fulfilled\" === chunk.status\n          ? controller.enqueue(chunk.value)\n          : (chunk.then(\n              function (v) {\n                return controller.enqueue(v);\n              },\n              function (e) {\n                return controller.error(e);\n              }\n            ),\n            (previousBlockedChunk = chunk));\n      } else {\n        chunk = previousBlockedChunk;\n        var chunk$27 = createPendingChunk(response);\n        chunk$27.then(\n          function (v) {\n            return controller.enqueue(v);\n          },\n          function (e) {\n            return controller.error(e);\n          }\n        );\n        previousBlockedChunk = chunk$27;\n        chunk.then(function () {\n          previousBlockedChunk === chunk$27 && (previousBlockedChunk = null);\n          resolveModelChunk(chunk$27, json, -1);\n        });\n      }\n    },\n    close: function () {\n      if (null === previousBlockedChunk) controller.close();\n      else {\n        var blockedChunk = previousBlockedChunk;\n        previousBlockedChunk = null;\n        blockedChunk.then(function () {\n          return controller.close();\n        });\n      }\n    },\n    error: function (error) {\n      if (null === previousBlockedChunk) controller.error(error);\n      else {\n        var blockedChunk = previousBlockedChunk;\n        previousBlockedChunk = null;\n        blockedChunk.then(function () {\n          return controller.error(error);\n        });\n      }\n    }\n  });\n  return type;\n}\nfunction asyncIterator() {\n  return this;\n}\nfunction createIterator(next) {\n  next = { next: next };\n  next[ASYNC_ITERATOR] = asyncIterator;\n  return next;\n}\nfunction parseAsyncIterable(response, reference, iterator) {\n  reference = parseInt(reference.slice(2), 16);\n  var buffer = [],\n    closed = !1,\n    nextWriteIndex = 0,\n    $jscomp$compprop2 = {};\n  $jscomp$compprop2 =\n    (($jscomp$compprop2[ASYNC_ITERATOR] = function () {\n      var nextReadIndex = 0;\n      return createIterator(function (arg) {\n        if (void 0 !== arg)\n          throw Error(\n            \"Values cannot be passed to next() of AsyncIterables passed to Client Components.\"\n          );\n        if (nextReadIndex === buffer.length) {\n          if (closed)\n            return new Chunk(\n              \"fulfilled\",\n              { done: !0, value: void 0 },\n              null,\n              response\n            );\n          buffer[nextReadIndex] = createPendingChunk(response);\n        }\n        return buffer[nextReadIndex++];\n      });\n    }),\n    $jscomp$compprop2);\n  iterator = iterator ? $jscomp$compprop2[ASYNC_ITERATOR]() : $jscomp$compprop2;\n  resolveStream(response, reference, iterator, {\n    enqueueModel: function (value) {\n      nextWriteIndex === buffer.length\n        ? (buffer[nextWriteIndex] = createResolvedIteratorResultChunk(\n            response,\n            value,\n            !1\n          ))\n        : resolveIteratorResultChunk(buffer[nextWriteIndex], value, !1);\n      nextWriteIndex++;\n    },\n    close: function (value) {\n      closed = !0;\n      nextWriteIndex === buffer.length\n        ? (buffer[nextWriteIndex] = createResolvedIteratorResultChunk(\n            response,\n            value,\n            !0\n          ))\n        : resolveIteratorResultChunk(buffer[nextWriteIndex], value, !0);\n      for (nextWriteIndex++; nextWriteIndex < buffer.length; )\n        resolveIteratorResultChunk(\n          buffer[nextWriteIndex++],\n          '\"$undefined\"',\n          !0\n        );\n    },\n    error: function (error) {\n      closed = !0;\n      for (\n        nextWriteIndex === buffer.length &&\n        (buffer[nextWriteIndex] = createPendingChunk(response));\n        nextWriteIndex < buffer.length;\n\n      )\n        triggerErrorOnChunk(buffer[nextWriteIndex++], error);\n    }\n  });\n  return iterator;\n}\nfunction parseModelString(response, obj, key, value, reference) {\n  if (\"$\" === value[0]) {\n    switch (value[1]) {\n      case \"$\":\n        return value.slice(1);\n      case \"@\":\n        return (obj = parseInt(value.slice(2), 16)), getChunk(response, obj);\n      case \"F\":\n        return (\n          (value = value.slice(2)),\n          (value = getOutlinedModel(response, value, obj, key, createModel)),\n          loadServerReference$1(\n            response,\n            value.id,\n            value.bound,\n            initializingChunk,\n            obj,\n            key\n          )\n        );\n      case \"T\":\n        if (void 0 === reference || void 0 === response._temporaryReferences)\n          throw Error(\n            \"Could not reference an opaque temporary reference. This is likely due to misconfiguring the temporaryReferences options on the server.\"\n          );\n        return createTemporaryReference(\n          response._temporaryReferences,\n          reference\n        );\n      case \"Q\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, obj, key, createMap)\n        );\n      case \"W\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, obj, key, createSet)\n        );\n      case \"K\":\n        obj = value.slice(2);\n        var formPrefix = response._prefix + obj + \"_\",\n          data = new FormData();\n        response._formData.forEach(function (entry, entryKey) {\n          entryKey.startsWith(formPrefix) &&\n            data.append(entryKey.slice(formPrefix.length), entry);\n        });\n        return data;\n      case \"i\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, obj, key, extractIterator)\n        );\n      case \"I\":\n        return Infinity;\n      case \"-\":\n        return \"$-0\" === value ? -0 : -Infinity;\n      case \"N\":\n        return NaN;\n      case \"u\":\n        return;\n      case \"D\":\n        return new Date(Date.parse(value.slice(2)));\n      case \"n\":\n        return BigInt(value.slice(2));\n    }\n    switch (value[1]) {\n      case \"A\":\n        return parseTypedArray(response, value, ArrayBuffer, 1, obj, key);\n      case \"O\":\n        return parseTypedArray(response, value, Int8Array, 1, obj, key);\n      case \"o\":\n        return parseTypedArray(response, value, Uint8Array, 1, obj, key);\n      case \"U\":\n        return parseTypedArray(response, value, Uint8ClampedArray, 1, obj, key);\n      case \"S\":\n        return parseTypedArray(response, value, Int16Array, 2, obj, key);\n      case \"s\":\n        return parseTypedArray(response, value, Uint16Array, 2, obj, key);\n      case \"L\":\n        return parseTypedArray(response, value, Int32Array, 4, obj, key);\n      case \"l\":\n        return parseTypedArray(response, value, Uint32Array, 4, obj, key);\n      case \"G\":\n        return parseTypedArray(response, value, Float32Array, 4, obj, key);\n      case \"g\":\n        return parseTypedArray(response, value, Float64Array, 8, obj, key);\n      case \"M\":\n        return parseTypedArray(response, value, BigInt64Array, 8, obj, key);\n      case \"m\":\n        return parseTypedArray(response, value, BigUint64Array, 8, obj, key);\n      case \"V\":\n        return parseTypedArray(response, value, DataView, 1, obj, key);\n      case \"B\":\n        return (\n          (obj = parseInt(value.slice(2), 16)),\n          response._formData.get(response._prefix + obj)\n        );\n    }\n    switch (value[1]) {\n      case \"R\":\n        return parseReadableStream(response, value, void 0);\n      case \"r\":\n        return parseReadableStream(response, value, \"bytes\");\n      case \"X\":\n        return parseAsyncIterable(response, value, !1);\n      case \"x\":\n        return parseAsyncIterable(response, value, !0);\n    }\n    value = value.slice(1);\n    return getOutlinedModel(response, value, obj, key, createModel);\n  }\n  return value;\n}\nfunction createResponse(bundlerConfig, formFieldPrefix, temporaryReferences) {\n  var backingFormData =\n      3 < arguments.length && void 0 !== arguments[3]\n        ? arguments[3]\n        : new FormData(),\n    chunks = new Map();\n  return {\n    _bundlerConfig: bundlerConfig,\n    _prefix: formFieldPrefix,\n    _formData: backingFormData,\n    _chunks: chunks,\n    _temporaryReferences: temporaryReferences\n  };\n}\nfunction close(response) {\n  reportGlobalError(response, Error(\"Connection closed.\"));\n}\nfunction loadServerReference(bundlerConfig, id, bound) {\n  var serverReference = resolveServerReference(bundlerConfig, id);\n  bundlerConfig = preloadModule(serverReference);\n  return bound\n    ? Promise.all([bound, bundlerConfig]).then(function (_ref) {\n        _ref = _ref[0];\n        var fn = requireModule(serverReference);\n        return fn.bind.apply(fn, [null].concat(_ref));\n      })\n    : bundlerConfig\n      ? Promise.resolve(bundlerConfig).then(function () {\n          return requireModule(serverReference);\n        })\n      : Promise.resolve(requireModule(serverReference));\n}\nfunction decodeBoundActionMetaData(body, serverManifest, formFieldPrefix) {\n  body = createResponse(serverManifest, formFieldPrefix, void 0, body);\n  close(body);\n  body = getChunk(body, 0);\n  body.then(function () {});\n  if (\"fulfilled\" !== body.status) throw body.reason;\n  return body.value;\n}\nexports.createClientModuleProxy = function (moduleId) {\n  moduleId = registerClientReferenceImpl({}, moduleId, !1);\n  return new Proxy(moduleId, proxyHandlers$1);\n};\nexports.createTemporaryReferenceSet = function () {\n  return new WeakMap();\n};\nexports.decodeAction = function (body, serverManifest) {\n  var formData = new FormData(),\n    action = null;\n  body.forEach(function (value, key) {\n    key.startsWith(\"$ACTION_\")\n      ? key.startsWith(\"$ACTION_REF_\")\n        ? ((value = \"$ACTION_\" + key.slice(12) + \":\"),\n          (value = decodeBoundActionMetaData(body, serverManifest, value)),\n          (action = loadServerReference(serverManifest, value.id, value.bound)))\n        : key.startsWith(\"$ACTION_ID_\") &&\n          ((value = key.slice(11)),\n          (action = loadServerReference(serverManifest, value, null)))\n      : formData.append(key, value);\n  });\n  return null === action\n    ? null\n    : action.then(function (fn) {\n        return fn.bind(null, formData);\n      });\n};\nexports.decodeFormState = function (actionResult, body, serverManifest) {\n  var keyPath = body.get(\"$ACTION_KEY\");\n  if (\"string\" !== typeof keyPath) return Promise.resolve(null);\n  var metaData = null;\n  body.forEach(function (value, key) {\n    key.startsWith(\"$ACTION_REF_\") &&\n      ((value = \"$ACTION_\" + key.slice(12) + \":\"),\n      (metaData = decodeBoundActionMetaData(body, serverManifest, value)));\n  });\n  if (null === metaData) return Promise.resolve(null);\n  var referenceId = metaData.id;\n  return Promise.resolve(metaData.bound).then(function (bound) {\n    return null === bound\n      ? null\n      : [actionResult, keyPath, referenceId, bound.length - 1];\n  });\n};\nexports.decodeReply = function (body, webpackMap, options) {\n  if (\"string\" === typeof body) {\n    var form = new FormData();\n    form.append(\"0\", body);\n    body = form;\n  }\n  body = createResponse(\n    webpackMap,\n    \"\",\n    options ? options.temporaryReferences : void 0,\n    body\n  );\n  webpackMap = getChunk(body, 0);\n  close(body);\n  return webpackMap;\n};\nexports.registerClientReference = function (\n  proxyImplementation,\n  id,\n  exportName\n) {\n  return registerClientReferenceImpl(\n    proxyImplementation,\n    id + \"#\" + exportName,\n    !1\n  );\n};\nexports.registerServerReference = function (reference, id, exportName) {\n  return Object.defineProperties(reference, {\n    $$typeof: { value: SERVER_REFERENCE_TAG },\n    $$id: {\n      value: null === exportName ? id : id + \"#\" + exportName,\n      configurable: !0\n    },\n    $$bound: { value: null, configurable: !0 },\n    bind: { value: bind, configurable: !0 }\n  });\n};\n\n// This is a patch added by Next.js\nconst setTimeoutOrImmediate =\n  typeof globalThis['set' + 'Immediate'] === 'function' &&\n  // edge runtime sandbox defines a stub for setImmediate\n  // (see 'addStub' in packages/next/src/server/web/sandbox/context.ts)\n  // but it's made non-enumerable, so we can detect it\n  globalThis.propertyIsEnumerable('setImmediate')\n    ? globalThis['set' + 'Immediate']\n    : setTimeout;\n\nexports.renderToReadableStream = function (model, webpackMap, options) {\n  var request = new RequestInstance(\n    20,\n    model,\n    webpackMap,\n    options ? options.onError : void 0,\n    options ? options.identifierPrefix : void 0,\n    options ? options.onPostpone : void 0,\n    options ? options.temporaryReferences : void 0,\n    void 0,\n    void 0,\n    noop,\n    noop\n  );\n  if (options && options.signal) {\n    var signal = options.signal;\n    if (signal.aborted) abort(request, signal.reason);\n    else {\n      var listener = function () {\n        abort(request, signal.reason);\n        signal.removeEventListener(\"abort\", listener);\n      };\n      signal.addEventListener(\"abort\", listener);\n    }\n  }\n  return new ReadableStream(\n    {\n      type: \"bytes\",\n      start: function () {\n        startWork(request);\n      },\n      pull: function (controller) {\n        if (13 === request.status)\n          (request.status = 14), closeWithError(controller, request.fatalError);\n        else if (14 !== request.status && null === request.destination) {\n          request.destination = controller;\n          try {\n            flushCompletedChunks(request, controller);\n          } catch (error) {\n            logRecoverableError(request, error, null),\n              fatalError(request, error);\n          }\n        }\n      },\n      cancel: function (reason) {\n        request.destination = null;\n        abort(request, reason);\n      }\n    },\n    { highWaterMark: 0 }\n  );\n};\n","'use strict';\n\nvar s;\nif (process.env.NODE_ENV === 'production') {\n  s = require('./cjs/react-server-dom-webpack-server.edge.production.js');\n} else {\n  s = require('./cjs/react-server-dom-webpack-server.edge.development.js');\n}\n\nexports.renderToReadableStream = s.renderToReadableStream;\nexports.decodeReply = s.decodeReply;\nexports.decodeAction = s.decodeAction;\nexports.decodeFormState = s.decodeFormState;\nexports.registerServerReference = s.registerServerReference;\nexports.registerClientReference = s.registerClientReference;\nexports.createClientModuleProxy = s.createClientModuleProxy;\nexports.createTemporaryReferenceSet = s.createTemporaryReferenceSet;\n","'use strict';\n\nvar s;\nif (process.env.NODE_ENV === 'production') {\n  s = require('./cjs/react-server-dom-webpack-server.edge.production.js');\n} else {\n  s = require('./cjs/react-server-dom-webpack-server.edge.development.js');\n}\n\nif (s.prerender) {\n  exports.prerender = s.prerender;\n}\n","/**\n * @license React\n * react-jsx-runtime.react-server.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"next/dist/compiled/react\"),\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nif (!React.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE)\n  throw Error(\n    'The \"react\" package in this environment is not configured correctly. The \"react-server\" condition must be enabled in any environment that runs React Server Components.'\n  );\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxDEV = void 0;\nexports.jsxs = jsxProd;\n","/**\n * @license React\n * react.react-server.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar ReactSharedInternals = { H: null, A: null };\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nvar isArrayImpl = Array.isArray,\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty,\n  assign = Object.assign;\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  _ref = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== _ref ? _ref : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(\n    oldElement.type,\n    newKey,\n    null,\n    void 0,\n    void 0,\n    void 0,\n    oldElement.props\n  );\n}\nfunction isValidElement(object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n  return (\n    \"$\" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return \"object\" === typeof element && null !== element && null != element.key\n    ? escape(\"\" + element.key)\n    : index.toString(36);\n}\nfunction noop() {}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      switch (\n        (\"string\" === typeof thenable.status\n          ? thenable.then(noop, noop)\n          : ((thenable.status = \"pending\"),\n            thenable.then(\n              function (fulfilledValue) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"fulfilled\"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"rejected\"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if (\"undefined\" === type || \"boolean\" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        \"\" === nameSoFar ? \".\" + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = \"\"),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n          mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? \"\"\n                  : (\"\" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      \"$&/\"\n                    ) + \"/\") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (\"object\" === type) {\n    if (\"function\" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      formatProdErrorMessage(\n        31,\n        \"[object Object]\" === array\n          ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n          : array\n      )\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, \"\", \"\", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nfunction createCacheRoot() {\n  return new WeakMap();\n}\nfunction createCacheNode() {\n  return { s: 0, v: void 0, o: null, p: null };\n}\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children)) throw Error(formatProdErrorMessage(143));\n    return children;\n  }\n};\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.cache = function (fn) {\n  return function () {\n    var dispatcher = ReactSharedInternals.A;\n    if (!dispatcher) return fn.apply(null, arguments);\n    var fnMap = dispatcher.getCacheForType(createCacheRoot);\n    dispatcher = fnMap.get(fn);\n    void 0 === dispatcher &&\n      ((dispatcher = createCacheNode()), fnMap.set(fn, dispatcher));\n    fnMap = 0;\n    for (var l = arguments.length; fnMap < l; fnMap++) {\n      var arg = arguments[fnMap];\n      if (\n        \"function\" === typeof arg ||\n        (\"object\" === typeof arg && null !== arg)\n      ) {\n        var objectCache = dispatcher.o;\n        null === objectCache && (dispatcher.o = objectCache = new WeakMap());\n        dispatcher = objectCache.get(arg);\n        void 0 === dispatcher &&\n          ((dispatcher = createCacheNode()), objectCache.set(arg, dispatcher));\n      } else\n        (objectCache = dispatcher.p),\n          null === objectCache && (dispatcher.p = objectCache = new Map()),\n          (dispatcher = objectCache.get(arg)),\n          void 0 === dispatcher &&\n            ((dispatcher = createCacheNode()),\n            objectCache.set(arg, dispatcher));\n    }\n    if (1 === dispatcher.s) return dispatcher.v;\n    if (2 === dispatcher.s) throw dispatcher.v;\n    try {\n      var result = fn.apply(null, arguments);\n      fnMap = dispatcher;\n      fnMap.s = 1;\n      return (fnMap.v = result);\n    } catch (error) {\n      throw ((result = dispatcher), (result.s = 2), (result.v = error), error);\n    }\n  };\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(formatProdErrorMessage(267, element));\n  var props = assign({}, element.props),\n    key = element.key,\n    owner = void 0;\n  if (null != config)\n    for (propName in (void 0 !== config.ref && (owner = void 0),\n    void 0 !== config.key && (key = \"\" + config.key),\n    config))\n      !hasOwnProperty.call(config, propName) ||\n        \"key\" === propName ||\n        \"__self\" === propName ||\n        \"__source\" === propName ||\n        (\"ref\" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, null, void 0, void 0, owner, props);\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        \"key\" !== propName &&\n        \"__self\" !== propName &&\n        \"__source\" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, null, void 0, void 0, null, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useDebugValue = function () {};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.version = \"19.0.0-rc-02c0e824-20241028\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.react-server.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.react-server.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.react-server.production.js');\n} else {\n  module.exports = require('./cjs/react.react-server.development.js');\n}\n","export const NEXT_QUERY_PARAM_PREFIX = 'nxtP';\nexport const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI';\nexport const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate';\nexport const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = 'x-prerender-revalidate-if-generated';\nexport const RSC_PREFETCH_SUFFIX = '.prefetch.rsc';\nexport const RSC_SEGMENTS_DIR_SUFFIX = '.segments';\nexport const RSC_SEGMENT_SUFFIX = '.segment.rsc';\nexport const RSC_SUFFIX = '.rsc';\nexport const ACTION_SUFFIX = '.action';\nexport const NEXT_DATA_SUFFIX = '.json';\nexport const NEXT_META_SUFFIX = '.meta';\nexport const NEXT_BODY_SUFFIX = '.body';\nexport const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags';\nexport const NEXT_CACHE_SOFT_TAGS_HEADER = 'x-next-cache-soft-tags';\nexport const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags';\nexport const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER = 'x-next-revalidate-tag-token';\nexport const NEXT_RESUME_HEADER = 'next-resume';\n// if these change make sure we update the related\n// documentation as well\nexport const NEXT_CACHE_TAG_MAX_ITEMS = 64;\nexport const NEXT_CACHE_TAG_MAX_LENGTH = 256;\nexport const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024;\nexport const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_';\n// in seconds\nexport const CACHE_ONE_YEAR = 31536000;\n// in seconds, represents revalidate=false. I.e. never revaliate.\n// We use this value since it can be represented as a V8 SMI for optimal performance.\n// It can also be serialized as JSON if it ever leaks accidentally as an actual value.\nexport const INFINITE_CACHE = 0xfffffffe;\n// Patterns to detect middleware files\nexport const MIDDLEWARE_FILENAME = 'middleware';\nexport const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`;\n// Pattern to detect instrumentation hooks file\nexport const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation';\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nexport const PAGES_DIR_ALIAS = 'private-next-pages';\nexport const DOT_NEXT_ALIAS = 'private-dot-next';\nexport const ROOT_DIR_ALIAS = 'private-next-root-dir';\nexport const APP_DIR_ALIAS = 'private-next-app-dir';\nexport const RSC_MOD_REF_PROXY_ALIAS = 'next/dist/build/webpack/loaders/next-flight-loader/module-proxy';\nexport const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate';\nexport const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference';\nexport const RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper';\nexport const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption';\nexport const RSC_ACTION_CLIENT_WRAPPER_ALIAS = 'private-next-rsc-action-client-wrapper';\nexport const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`;\nexport const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`;\nexport const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`;\nexport const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`;\nexport const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`;\nexport const SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`;\nexport const GSP_NO_RETURNED_VALUE = 'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?';\nexport const GSSP_NO_RETURNED_VALUE = 'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?';\nexport const UNSTABLE_REVALIDATE_RENAME_ERROR = 'The `unstable_revalidate` property is available for general use.\\n' + 'Please use `revalidate` instead.';\nexport const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`;\nexport const NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`;\nexport const SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`;\nexport const ESLINT_DEFAULT_DIRS = [\n    'app',\n    'pages',\n    'components',\n    'lib',\n    'src'\n];\nexport const SERVER_RUNTIME = {\n    edge: 'edge',\n    experimentalEdge: 'experimental-edge',\n    nodejs: 'nodejs'\n};\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */ const WEBPACK_LAYERS_NAMES = {\n    /**\n   * The layer for the shared code between the client and server bundles.\n   */ shared: 'shared',\n    /**\n   * The layer for server-only runtime and picking up `react-server` export conditions.\n   * Including app router RSC pages and app router custom routes.\n   */ reactServerComponents: 'rsc',\n    /**\n   * Server Side Rendering layer for app (ssr).\n   */ serverSideRendering: 'ssr',\n    /**\n   * The browser client bundle layer for actions.\n   */ actionBrowser: 'action-browser',\n    /**\n   * The layer for the API routes.\n   */ api: 'api',\n    /**\n   * The layer for the middleware code.\n   */ middleware: 'middleware',\n    /**\n   * The layer for the instrumentation hooks.\n   */ instrument: 'instrument',\n    /**\n   * The layer for assets on the edge.\n   */ edgeAsset: 'edge-asset',\n    /**\n   * The browser client bundle layer for App directory.\n   */ appPagesBrowser: 'app-pages-browser',\n    /**\n   * The server bundle layer for metadata routes.\n   */ appMetadataRoute: 'app-metadata-route'\n};\nconst WEBPACK_LAYERS = {\n    ...WEBPACK_LAYERS_NAMES,\n    GROUP: {\n        builtinReact: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.appMetadataRoute\n        ],\n        serverOnly: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.appMetadataRoute,\n            WEBPACK_LAYERS_NAMES.instrument,\n            WEBPACK_LAYERS_NAMES.middleware\n        ],\n        neutralTarget: [\n            // pages api\n            WEBPACK_LAYERS_NAMES.api\n        ],\n        clientOnly: [\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser\n        ],\n        bundled: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.appMetadataRoute,\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser,\n            WEBPACK_LAYERS_NAMES.shared,\n            WEBPACK_LAYERS_NAMES.instrument\n        ],\n        appPages: [\n            // app router pages and layouts\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser,\n            WEBPACK_LAYERS_NAMES.actionBrowser\n        ]\n    }\n};\nconst WEBPACK_RESOURCE_QUERIES = {\n    edgeSSREntry: '__next_edge_ssr_entry__',\n    metadata: '__next_metadata__',\n    metadataRoute: '__next_metadata_route__',\n    metadataImageMeta: '__next_metadata_image_meta__'\n};\nexport { WEBPACK_LAYERS, WEBPACK_RESOURCE_QUERIES };\n\n//# sourceMappingURL=constants.js.map","if (process.env.NEXT_RUNTIME === 'edge') {\n    module.exports = require('next/dist/server/route-modules/app-page/module.js');\n} else {\n    if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n        if (process.env.NODE_ENV === 'development') {\n            module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js');\n        } else if (process.env.TURBOPACK) {\n            module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js');\n        } else {\n            module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js');\n        }\n    } else {\n        if (process.env.NODE_ENV === 'development') {\n            module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js');\n        } else if (process.env.TURBOPACK) {\n            module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js');\n        } else {\n            module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js');\n        }\n    }\n}\n\n//# sourceMappingURL=module.compiled.js.map","import type { Metadata } from \"next\";\nimport localFont from \"next/font/local\";\nimport \"./globals.css\";\n\nconst geistSans = localFont({\n  src: \"./fonts/GeistVF.woff\",\n  variable: \"--font-geist-sans\",\n  weight: \"100 900\",\n});\nconst geistMono = localFont({\n  src: \"./fonts/GeistMonoVF.woff\",\n  variable: \"--font-geist-mono\",\n  weight: \"100 900\",\n});\n\nexport const metadata: Metadata = {\n  title: \"Create Next App\",\n  description: \"Generated by create next app\",\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        {children}\n      </body>\n    </html>\n  );\n}\n","export const runtime = \"edge\";\n\nexport default function NotFound() {\n  return (\n    <>\n      <title>404: This page could not be found.</title>\n      <div style={styles.error}>\n        <div>\n          <style\n            dangerouslySetInnerHTML={{\n              __html: `body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}`,\n            }}\n          />\n          <h1 className=\"next-error-h1\" style={styles.h1}>\n            404\n          </h1>\n          <div style={styles.desc}>\n            <h2 style={styles.h2}>This page could not be found.</h2>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst styles = {\n  error: {\n    fontFamily:\n      'system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"',\n    height: \"100vh\",\n    textAlign: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  desc: {\n    display: \"inline-block\",\n  },\n\n  h1: {\n    display: \"inline-block\",\n    margin: \"0 20px 0 0\",\n    padding: \"0 23px 0 0\",\n    fontSize: 24,\n    fontWeight: 500,\n    verticalAlign: \"top\",\n    lineHeight: \"49px\",\n  },\n\n  h2: {\n    fontSize: 14,\n    fontWeight: 400,\n    lineHeight: \"49px\",\n    margin: 0,\n  },\n} as const;\n","import { normalizePathSep } from '../../shared/lib/page-path/normalize-path-sep';\nexport const STATIC_METADATA_IMAGES = {\n    icon: {\n        filename: 'icon',\n        extensions: [\n            'ico',\n            'jpg',\n            'jpeg',\n            'png',\n            'svg'\n        ]\n    },\n    apple: {\n        filename: 'apple-icon',\n        extensions: [\n            'jpg',\n            'jpeg',\n            'png'\n        ]\n    },\n    favicon: {\n        filename: 'favicon',\n        extensions: [\n            'ico'\n        ]\n    },\n    openGraph: {\n        filename: 'opengraph-image',\n        extensions: [\n            'jpg',\n            'jpeg',\n            'png',\n            'gif'\n        ]\n    },\n    twitter: {\n        filename: 'twitter-image',\n        extensions: [\n            'jpg',\n            'jpeg',\n            'png',\n            'gif'\n        ]\n    }\n};\n// Match routes that are metadata routes, e.g. /sitemap.xml, /favicon.<ext>, /<icon>.<ext>, etc.\n// TODO-METADATA: support more metadata routes with more extensions\nconst defaultExtensions = [\n    'js',\n    'jsx',\n    'ts',\n    'tsx'\n];\n// Match the file extension with the dynamic multi-routes extensions\n// e.g. ([xml, js], null) -> can match `/sitemap.xml/route`, `sitemap.js/route`\n// e.g. ([png], [ts]) -> can match `/opengrapg-image.png/route`, `/opengraph-image.ts[]/route`\nexport const getExtensionRegexString = (staticExtensions, dynamicExtensions)=>{\n    // If there's no possible multi dynamic routes, will not match any <name>[].<ext> files\n    if (!dynamicExtensions) {\n        return `\\\\.(?:${staticExtensions.join('|')})`;\n    }\n    return `(?:\\\\.(${staticExtensions.join('|')})|((\\\\[\\\\])?\\\\.(${dynamicExtensions.join('|')})))`;\n};\n// When you only pass the file extension as `[]`, it will only match the static convention files\n// e.g. /robots.txt, /sitemap.xml, /favicon.ico, /manifest.json\n// When you pass the file extension as `['js', 'jsx', 'ts', 'tsx']`, it will also match the dynamic convention files\n// e.g. /robots.js, /sitemap.tsx, /favicon.jsx, /manifest.ts\n// When `withExtension` is false, it will match the static convention files without the extension, by default it's true\n// e.g. /robots, /sitemap, /favicon, /manifest, use to match dynamic API routes like app/robots.ts\nexport function isMetadataRouteFile(appDirRelativePath, pageExtensions, withExtension) {\n    const metadataRouteFilesRegex = [\n        new RegExp(`^[\\\\\\\\/]robots${withExtension ? `${getExtensionRegexString(pageExtensions.concat('txt'), null)}$` : ''}`),\n        new RegExp(`^[\\\\\\\\/]manifest${withExtension ? `${getExtensionRegexString(pageExtensions.concat('webmanifest', 'json'), null)}$` : ''}`),\n        new RegExp(`^[\\\\\\\\/]favicon\\\\.ico$`),\n        new RegExp(`[\\\\\\\\/]sitemap${withExtension ? `${getExtensionRegexString([\n            'xml'\n        ], pageExtensions)}$` : ''}`),\n        new RegExp(`[\\\\\\\\/]${STATIC_METADATA_IMAGES.icon.filename}\\\\d?${withExtension ? `${getExtensionRegexString(STATIC_METADATA_IMAGES.icon.extensions, pageExtensions)}$` : ''}`),\n        new RegExp(`[\\\\\\\\/]${STATIC_METADATA_IMAGES.apple.filename}\\\\d?${withExtension ? `${getExtensionRegexString(STATIC_METADATA_IMAGES.apple.extensions, pageExtensions)}$` : ''}`),\n        new RegExp(`[\\\\\\\\/]${STATIC_METADATA_IMAGES.openGraph.filename}\\\\d?${withExtension ? `${getExtensionRegexString(STATIC_METADATA_IMAGES.openGraph.extensions, pageExtensions)}$` : ''}`),\n        new RegExp(`[\\\\\\\\/]${STATIC_METADATA_IMAGES.twitter.filename}\\\\d?${withExtension ? `${getExtensionRegexString(STATIC_METADATA_IMAGES.twitter.extensions, pageExtensions)}$` : ''}`)\n    ];\n    const normalizedAppDirRelativePath = normalizePathSep(appDirRelativePath);\n    return metadataRouteFilesRegex.some((r)=>r.test(normalizedAppDirRelativePath));\n}\nexport function isStaticMetadataRouteFile(appDirRelativePath) {\n    return isMetadataRouteFile(appDirRelativePath, [], true);\n}\nexport function isStaticMetadataRoute(page) {\n    return page === '/robots' || page === '/manifest' || isStaticMetadataRouteFile(page);\n}\n/*\n * Remove the 'app' prefix or '/route' suffix, only check the route name since they're only allowed in root app directory\n * e.g.\n * /app/robots -> /robots\n * app/robots -> /robots\n * /robots -> /robots\n */ export function isMetadataRoute(route) {\n    let page = route.replace(/^\\/?app\\//, '').replace(/\\/route$/, '');\n    if (page[0] !== '/') page = '/' + page;\n    return !page.endsWith('/page') && isMetadataRouteFile(page, defaultExtensions, false);\n}\n\n//# sourceMappingURL=is-metadata-route.js.map","import { normalizeAppPath } from '../../shared/lib/router/utils/app-paths';\n// order matters here, the first match will be used\nexport const INTERCEPTION_ROUTE_MARKERS = [\n    '(..)(..)',\n    '(.)',\n    '(..)',\n    '(...)'\n];\nexport function isInterceptionRouteAppPath(path) {\n    // TODO-APP: add more serious validation\n    return path.split('/').find((segment)=>INTERCEPTION_ROUTE_MARKERS.find((m)=>segment.startsWith(m))) !== undefined;\n}\nexport function extractInterceptionRouteInformation(path) {\n    let interceptingRoute, marker, interceptedRoute;\n    for (const segment of path.split('/')){\n        marker = INTERCEPTION_ROUTE_MARKERS.find((m)=>segment.startsWith(m));\n        if (marker) {\n            [interceptingRoute, interceptedRoute] = path.split(marker, 2);\n            break;\n        }\n    }\n    if (!interceptingRoute || !marker || !interceptedRoute) {\n        throw new Error(`Invalid interception route: ${path}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`);\n    }\n    interceptingRoute = normalizeAppPath(interceptingRoute) // normalize the path, e.g. /(blog)/feed -> /feed\n    ;\n    switch(marker){\n        case '(.)':\n            // (.) indicates that we should match with sibling routes, so we just need to append the intercepted route to the intercepting route\n            if (interceptingRoute === '/') {\n                interceptedRoute = `/${interceptedRoute}`;\n            } else {\n                interceptedRoute = interceptingRoute + '/' + interceptedRoute;\n            }\n            break;\n        case '(..)':\n            // (..) indicates that we should match at one level up, so we need to remove the last segment of the intercepting route\n            if (interceptingRoute === '/') {\n                throw new Error(`Invalid interception route: ${path}. Cannot use (..) marker at the root level, use (.) instead.`);\n            }\n            interceptedRoute = interceptingRoute.split('/').slice(0, -1).concat(interceptedRoute).join('/');\n            break;\n        case '(...)':\n            // (...) will match the route segment in the root directory, so we need to use the root directory to prepend the intercepted route\n            interceptedRoute = '/' + interceptedRoute;\n            break;\n        case '(..)(..)':\n            // (..)(..) indicates that we should match at two levels up, so we need to remove the last two segments of the intercepting route\n            const splitInterceptingRoute = interceptingRoute.split('/');\n            if (splitInterceptingRoute.length <= 2) {\n                throw new Error(`Invalid interception route: ${path}. Cannot use (..)(..) marker at the root level or one level up.`);\n            }\n            interceptedRoute = splitInterceptingRoute.slice(0, -2).concat(interceptedRoute).join('/');\n            break;\n        default:\n            throw new Error('Invariant: unexpected marker');\n    }\n    return {\n        interceptingRoute,\n        interceptedRoute\n    };\n}\n\n//# sourceMappingURL=interception-routes.js.map","/**\n * Parse cookies from the `headers` of request\n * @param req request object\n */ export function getCookieParser(headers) {\n    return function parseCookie() {\n        const { cookie } = headers;\n        if (!cookie) {\n            return {};\n        }\n        const { parse: parseCookieFn } = require('next/dist/compiled/cookie');\n        return parseCookieFn(Array.isArray(cookie) ? cookie.join('; ') : cookie);\n    };\n}\n\n//# sourceMappingURL=get-cookie-parser.js.map","import { format as formatUrl, parse as parseUrl } from 'url';\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path';\nimport { getPathMatch } from '../shared/lib/router/utils/path-match';\nimport { getNamedRouteRegex } from '../shared/lib/router/utils/route-regex';\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher';\nimport { matchHas, prepareDestination } from '../shared/lib/router/utils/prepare-destination';\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash';\nimport { normalizeRscURL } from '../shared/lib/router/utils/app-paths';\nimport { NEXT_INTERCEPTION_MARKER_PREFIX, NEXT_QUERY_PARAM_PREFIX } from '../lib/constants';\nexport function normalizeVercelUrl(req, trustQuery, paramKeys, pageIsDynamic, defaultRouteRegex) {\n    // make sure to normalize req.url on Vercel to strip dynamic params\n    // from the query which are added during routing\n    if (pageIsDynamic && trustQuery && defaultRouteRegex) {\n        const _parsedUrl = parseUrl(req.url, true);\n        delete _parsedUrl.search;\n        for (const key of Object.keys(_parsedUrl.query)){\n            const isNextQueryPrefix = key !== NEXT_QUERY_PARAM_PREFIX && key.startsWith(NEXT_QUERY_PARAM_PREFIX);\n            const isNextInterceptionMarkerPrefix = key !== NEXT_INTERCEPTION_MARKER_PREFIX && key.startsWith(NEXT_INTERCEPTION_MARKER_PREFIX);\n            if (isNextQueryPrefix || isNextInterceptionMarkerPrefix || (paramKeys || Object.keys(defaultRouteRegex.groups)).includes(key)) {\n                delete _parsedUrl.query[key];\n            }\n        }\n        req.url = formatUrl(_parsedUrl);\n    }\n}\nexport function interpolateDynamicPath(pathname, params, defaultRouteRegex) {\n    if (!defaultRouteRegex) return pathname;\n    for (const param of Object.keys(defaultRouteRegex.groups)){\n        const { optional, repeat } = defaultRouteRegex.groups[param];\n        let builtParam = `[${repeat ? '...' : ''}${param}]`;\n        if (optional) {\n            builtParam = `[${builtParam}]`;\n        }\n        let paramValue;\n        const value = params[param];\n        if (Array.isArray(value)) {\n            paramValue = value.map((v)=>v && encodeURIComponent(v)).join('/');\n        } else if (value) {\n            paramValue = encodeURIComponent(value);\n        } else {\n            paramValue = '';\n        }\n        pathname = pathname.replaceAll(builtParam, paramValue);\n    }\n    return pathname;\n}\nexport function normalizeDynamicRouteParams(params, ignoreOptional, defaultRouteRegex, defaultRouteMatches) {\n    let hasValidParams = true;\n    if (!defaultRouteRegex) return {\n        params,\n        hasValidParams: false\n    };\n    params = Object.keys(defaultRouteRegex.groups).reduce((prev, key)=>{\n        let value = params[key];\n        if (typeof value === 'string') {\n            value = normalizeRscURL(value);\n        }\n        if (Array.isArray(value)) {\n            value = value.map((val)=>{\n                if (typeof val === 'string') {\n                    val = normalizeRscURL(val);\n                }\n                return val;\n            });\n        }\n        // if the value matches the default value we can't rely\n        // on the parsed params, this is used to signal if we need\n        // to parse x-now-route-matches or not\n        const defaultValue = defaultRouteMatches[key];\n        const isOptional = defaultRouteRegex.groups[key].optional;\n        const isDefaultValue = Array.isArray(defaultValue) ? defaultValue.some((defaultVal)=>{\n            return Array.isArray(value) ? value.some((val)=>val.includes(defaultVal)) : value == null ? void 0 : value.includes(defaultVal);\n        }) : value == null ? void 0 : value.includes(defaultValue);\n        if (isDefaultValue || typeof value === 'undefined' && !(isOptional && ignoreOptional)) {\n            hasValidParams = false;\n        }\n        // non-provided optional values should be undefined so normalize\n        // them to undefined\n        if (isOptional && (!value || Array.isArray(value) && value.length === 1 && // fallback optional catch-all SSG pages have\n        // [[...paramName]] for the root path on Vercel\n        (value[0] === 'index' || value[0] === `[[...${key}]]`))) {\n            value = undefined;\n            delete params[key];\n        }\n        // query values from the proxy aren't already split into arrays\n        // so make sure to normalize catch-all values\n        if (value && typeof value === 'string' && defaultRouteRegex.groups[key].repeat) {\n            value = value.split('/');\n        }\n        if (value) {\n            prev[key] = value;\n        }\n        return prev;\n    }, {});\n    return {\n        params,\n        hasValidParams\n    };\n}\nexport function getUtils({ page, i18n, basePath, rewrites, pageIsDynamic, trailingSlash, caseSensitive }) {\n    let defaultRouteRegex;\n    let dynamicRouteMatcher;\n    let defaultRouteMatches;\n    if (pageIsDynamic) {\n        defaultRouteRegex = getNamedRouteRegex(page, false);\n        dynamicRouteMatcher = getRouteMatcher(defaultRouteRegex);\n        defaultRouteMatches = dynamicRouteMatcher(page);\n    }\n    function handleRewrites(req, parsedUrl) {\n        const rewriteParams = {};\n        let fsPathname = parsedUrl.pathname;\n        const matchesPage = ()=>{\n            const fsPathnameNoSlash = removeTrailingSlash(fsPathname || '');\n            return fsPathnameNoSlash === removeTrailingSlash(page) || (dynamicRouteMatcher == null ? void 0 : dynamicRouteMatcher(fsPathnameNoSlash));\n        };\n        const checkRewrite = (rewrite)=>{\n            const matcher = getPathMatch(rewrite.source + (trailingSlash ? '(/)?' : ''), {\n                removeUnnamedParams: true,\n                strict: true,\n                sensitive: !!caseSensitive\n            });\n            let params = matcher(parsedUrl.pathname);\n            if ((rewrite.has || rewrite.missing) && params) {\n                const hasParams = matchHas(req, parsedUrl.query, rewrite.has, rewrite.missing);\n                if (hasParams) {\n                    Object.assign(params, hasParams);\n                } else {\n                    params = false;\n                }\n            }\n            if (params) {\n                const { parsedDestination, destQuery } = prepareDestination({\n                    appendParamsToQuery: true,\n                    destination: rewrite.destination,\n                    params: params,\n                    query: parsedUrl.query\n                });\n                // if the rewrite destination is external break rewrite chain\n                if (parsedDestination.protocol) {\n                    return true;\n                }\n                Object.assign(rewriteParams, destQuery, params);\n                Object.assign(parsedUrl.query, parsedDestination.query);\n                delete parsedDestination.query;\n                Object.assign(parsedUrl, parsedDestination);\n                fsPathname = parsedUrl.pathname;\n                if (basePath) {\n                    fsPathname = fsPathname.replace(new RegExp(`^${basePath}`), '') || '/';\n                }\n                if (i18n) {\n                    const destLocalePathResult = normalizeLocalePath(fsPathname, i18n.locales);\n                    fsPathname = destLocalePathResult.pathname;\n                    parsedUrl.query.nextInternalLocale = destLocalePathResult.detectedLocale || params.nextInternalLocale;\n                }\n                if (fsPathname === page) {\n                    return true;\n                }\n                if (pageIsDynamic && dynamicRouteMatcher) {\n                    const dynamicParams = dynamicRouteMatcher(fsPathname);\n                    if (dynamicParams) {\n                        parsedUrl.query = {\n                            ...parsedUrl.query,\n                            ...dynamicParams\n                        };\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n        for (const rewrite of rewrites.beforeFiles || []){\n            checkRewrite(rewrite);\n        }\n        if (fsPathname !== page) {\n            let finished = false;\n            for (const rewrite of rewrites.afterFiles || []){\n                finished = checkRewrite(rewrite);\n                if (finished) break;\n            }\n            if (!finished && !matchesPage()) {\n                for (const rewrite of rewrites.fallback || []){\n                    finished = checkRewrite(rewrite);\n                    if (finished) break;\n                }\n            }\n        }\n        return rewriteParams;\n    }\n    function getParamsFromRouteMatches(req, renderOpts, detectedLocale) {\n        return getRouteMatcher(function() {\n            const { groups, routeKeys } = defaultRouteRegex;\n            return {\n                re: {\n                    // Simulate a RegExp match from the \\`req.url\\` input\n                    exec: (str)=>{\n                        const obj = Object.fromEntries(new URLSearchParams(str));\n                        const matchesHasLocale = i18n && detectedLocale && obj['1'] === detectedLocale;\n                        for (const key of Object.keys(obj)){\n                            const value = obj[key];\n                            if (key !== NEXT_QUERY_PARAM_PREFIX && key.startsWith(NEXT_QUERY_PARAM_PREFIX)) {\n                                const normalizedKey = key.substring(NEXT_QUERY_PARAM_PREFIX.length);\n                                obj[normalizedKey] = value;\n                                delete obj[key];\n                            }\n                        }\n                        // favor named matches if available\n                        const routeKeyNames = Object.keys(routeKeys || {});\n                        const filterLocaleItem = (val)=>{\n                            if (i18n) {\n                                // locale items can be included in route-matches\n                                // for fallback SSG pages so ensure they are\n                                // filtered\n                                const isCatchAll = Array.isArray(val);\n                                const _val = isCatchAll ? val[0] : val;\n                                if (typeof _val === 'string' && i18n.locales.some((item)=>{\n                                    if (item.toLowerCase() === _val.toLowerCase()) {\n                                        detectedLocale = item;\n                                        renderOpts.locale = detectedLocale;\n                                        return true;\n                                    }\n                                    return false;\n                                })) {\n                                    // remove the locale item from the match\n                                    if (isCatchAll) {\n                                        val.splice(0, 1);\n                                    }\n                                    // the value is only a locale item and\n                                    // shouldn't be added\n                                    return isCatchAll ? val.length === 0 : true;\n                                }\n                            }\n                            return false;\n                        };\n                        if (routeKeyNames.every((name)=>obj[name])) {\n                            return routeKeyNames.reduce((prev, keyName)=>{\n                                const paramName = routeKeys == null ? void 0 : routeKeys[keyName];\n                                if (paramName && !filterLocaleItem(obj[keyName])) {\n                                    prev[groups[paramName].pos] = obj[keyName];\n                                }\n                                return prev;\n                            }, {});\n                        }\n                        return Object.keys(obj).reduce((prev, key)=>{\n                            if (!filterLocaleItem(obj[key])) {\n                                let normalizedKey = key;\n                                if (matchesHasLocale) {\n                                    normalizedKey = parseInt(key, 10) - 1 + '';\n                                }\n                                return Object.assign(prev, {\n                                    [normalizedKey]: obj[key]\n                                });\n                            }\n                            return prev;\n                        }, {});\n                    }\n                },\n                groups\n            };\n        }())(req.headers['x-now-route-matches']);\n    }\n    return {\n        handleRewrites,\n        defaultRouteRegex,\n        dynamicRouteMatcher,\n        defaultRouteMatches,\n        getParamsFromRouteMatches,\n        normalizeDynamicRouteParams: (params, ignoreOptional)=>normalizeDynamicRouteParams(params, ignoreOptional, defaultRouteRegex, defaultRouteMatches),\n        normalizeVercelUrl: (req, trustQuery, paramKeys)=>normalizeVercelUrl(req, trustQuery, paramKeys, pageIsDynamic, defaultRouteRegex),\n        interpolateDynamicPath: (pathname, params)=>interpolateDynamicPath(pathname, params, defaultRouteRegex)\n    };\n}\n\n//# sourceMappingURL=server-utils.js.map","import { isMetadataRoute } from './is-metadata-route';\nimport path from '../../shared/lib/isomorphic/path';\nimport { interpolateDynamicPath } from '../../server/server-utils';\nimport { getNamedRouteRegex } from '../../shared/lib/router/utils/route-regex';\nimport { djb2Hash } from '../../shared/lib/hash';\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths';\nimport { normalizePathSep } from '../../shared/lib/page-path/normalize-path-sep';\n/*\n * If there's special convention like (...) or @ in the page path,\n * Give it a unique hash suffix to avoid conflicts\n *\n * e.g.\n * /app/opengraph-image.tsx -> /opengraph-image\n * /app/(post)/opengraph-image.tsx -> /opengraph-image-[0-9a-z]{6}\n */ function getMetadataRouteSuffix(page) {\n    let suffix = '';\n    if (page.includes('(') && page.includes(')') || page.includes('@')) {\n        suffix = djb2Hash(page).toString(36).slice(0, 6);\n    }\n    return suffix;\n}\n/**\n * Fill the dynamic segment in the metadata route\n *\n * Example:\n * fillMetadataSegment('/a/[slug]', { params: { slug: 'b' } }, 'open-graph') -> '/a/b/open-graph'\n *\n */ export function fillMetadataSegment(segment, params, imageSegment) {\n    const pathname = normalizeAppPath(segment);\n    const routeRegex = getNamedRouteRegex(pathname, false);\n    const route = interpolateDynamicPath(pathname, params, routeRegex);\n    const suffix = getMetadataRouteSuffix(segment);\n    const routeSuffix = suffix ? `-${suffix}` : '';\n    const { name, ext } = path.parse(imageSegment);\n    return normalizePathSep(path.join(route, `${name}${routeSuffix}${ext}`));\n}\n/**\n * Map metadata page key to the corresponding route\n *\n * static file page key:    /app/robots.txt -> /robots.xml -> /robots.txt/route\n * dynamic route page key:  /app/robots.tsx -> /robots -> /robots.txt/route\n *\n * @param page\n * @returns\n */ export function normalizeMetadataRoute(page) {\n    if (!isMetadataRoute(page)) {\n        return page;\n    }\n    let route = page;\n    let suffix = '';\n    if (page === '/robots') {\n        route += '.txt';\n    } else if (page === '/manifest') {\n        route += '.webmanifest';\n    } else {\n        // Remove the file extension,\n        // e.g. /path/robots.txt -> /route-path\n        // e.g. /path/opengraph-image.tsx -> /path/opengraph-image\n        const pathnamePrefix = page.slice(0, -(path.basename(page).length + 1));\n        suffix = getMetadataRouteSuffix(pathnamePrefix);\n    }\n    // Support both /<metadata-route.ext> and custom routes /<metadata-route>/route.ts.\n    // If it's a metadata file route, we need to append /[id]/route to the page.\n    if (!route.endsWith('/route')) {\n        const { dir, name: baseName, ext } = path.parse(route);\n        route = path.posix.join(dir, `${baseName}${suffix ? `-${suffix}` : ''}${ext}`, 'route');\n    }\n    return route;\n}\n// Normalize metadata route page to either a single route or a dynamic route.\n// e.g. Input: /sitemap/route\n// when isDynamic is false, single route -> /sitemap.xml/route\n// when isDynamic is false, dynamic route -> /sitemap/[__metadata_id__]/route\n// also works for pathname such as /sitemap -> /sitemap.xml, but will not append /route suffix\nexport function normalizeMetadataPageToRoute(page, isDynamic) {\n    const isRoute = page.endsWith('/route');\n    const routePagePath = isRoute ? page.slice(0, -'/route'.length) : page;\n    const metadataRouteExtension = routePagePath.endsWith('/sitemap') ? '.xml' : '';\n    const mapped = isDynamic ? `${routePagePath}/[__metadata_id__]` : `${routePagePath}${metadataRouteExtension}`;\n    return mapped + (isRoute ? '/route' : '');\n}\n\n//# sourceMappingURL=get-metadata-route.js.map","  import { fillMetadataSegment } from 'next/dist/lib/metadata/get-metadata-route'\n\n  export default async (props) => {\n    const imageData = {\"type\":\"image/x-icon\",\"sizes\":\"16x16\"}\n    const imageUrl = fillMetadataSegment(\".\", await props.params, \"favicon.ico\")\n\n    return [{\n      ...imageData,\n      url: imageUrl + \"\",\n    }]\n  }",null,"import { createAsyncLocalStorage } from './async-local-storage';\nexport const actionAsyncStorage = createAsyncLocalStorage();\n\n//# sourceMappingURL=action-async-storage-instance.js.map","// Share the instance module in the next-shared layer\nimport { actionAsyncStorage } from './action-async-storage-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nexport { actionAsyncStorage };\n\n//# sourceMappingURL=action-async-storage.external.js.map","const sharedAsyncLocalStorageNotAvailableError = new Error('Invariant: AsyncLocalStorage accessed in runtime where it is not available');\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    static bind(fn) {\n        return fn;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = typeof globalThis !== 'undefined' && globalThis.AsyncLocalStorage;\nexport function createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n}\nexport function bindSnapshot(fn) {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.bind(fn);\n    }\n    return FakeAsyncLocalStorage.bind(fn);\n}\nexport function createSnapshot() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.snapshot();\n    }\n    return function(fn, ...args) {\n        return fn(...args);\n    };\n}\n\n//# sourceMappingURL=async-local-storage.js.map","import { createAsyncLocalStorage } from './async-local-storage';\nexport const workAsyncStorage = createAsyncLocalStorage();\n\n//# sourceMappingURL=work-async-storage-instance.js.map","// Share the instance module in the next-shared layer\nimport { workAsyncStorage } from './work-async-storage-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nexport { workAsyncStorage };\n\n//# sourceMappingURL=work-async-storage.external.js.map","import { createAsyncLocalStorage } from './async-local-storage';\nexport const workUnitAsyncStorage = createAsyncLocalStorage();\n\n//# sourceMappingURL=work-unit-async-storage-instance.js.map","// Share the instance module in the next-shared layer\nimport { workUnitAsyncStorage } from './work-unit-async-storage-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nexport { workUnitAsyncStorage };\nexport function getExpectedRequestStore(callingExpression) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        if (workUnitStore.type === 'request') {\n            return workUnitStore;\n        }\n        if (workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-ppr' || workUnitStore.type === 'prerender-legacy') {\n            // This should not happen because we should have checked it already.\n            throw new Error(`\\`${callingExpression}\\` cannot be called inside a prerender. This is a bug in Next.js.`);\n        }\n        if (workUnitStore.type === 'cache') {\n            throw new Error(`\\`${callingExpression}\\` cannot be called inside \"use cache\". Call it outside and pass an argument instead. Read more: https://nextjs.org/docs/messages/next-request-in-use-cache`);\n        } else if (workUnitStore.type === 'unstable-cache') {\n            throw new Error(`\\`${callingExpression}\\` cannot be called inside unstable_cache. Call it outside and pass an argument instead. Read more: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`);\n        }\n    }\n    throw new Error(`\\`${callingExpression}\\` was called outside a request scope. Read more: https://nextjs.org/docs/messages/next-dynamic-api-wrong-context`);\n}\n\n//# sourceMappingURL=work-unit-async-storage.external.js.map","(()=>{var e={318:function(e,t){(function(e,n){true?n(t):0})(this,(function(e){\"use strict\";class StructError extends TypeError{constructor(e,t){let n;const{message:r,explanation:i,...c}=e;const{path:o}=e;const a=o.length===0?r:`At path: ${o.join(\".\")} -- ${r}`;super(i??a);if(i!=null)this.cause=a;Object.assign(this,c);this.name=this.constructor.name;this.failures=()=>n??(n=[e,...t()])}}function isIterable(e){return isObject(e)&&typeof e[Symbol.iterator]===\"function\"}function isObject(e){return typeof e===\"object\"&&e!=null}function isPlainObject(e){if(Object.prototype.toString.call(e)!==\"[object Object]\"){return false}const t=Object.getPrototypeOf(e);return t===null||t===Object.prototype}function print(e){if(typeof e===\"symbol\"){return e.toString()}return typeof e===\"string\"?JSON.stringify(e):`${e}`}function shiftIterator(e){const{done:t,value:n}=e.next();return t?undefined:n}function toFailure(e,t,n,r){if(e===true){return}else if(e===false){e={}}else if(typeof e===\"string\"){e={message:e}}const{path:i,branch:c}=t;const{type:o}=n;const{refinement:a,message:s=`Expected a value of type \\`${o}\\`${a?` with refinement \\`${a}\\``:\"\"}, but received: \\`${print(r)}\\``}=e;return{value:r,type:o,refinement:a,key:i[i.length-1],path:i,branch:c,...e,message:s}}function*toFailures(e,t,n,r){if(!isIterable(e)){e=[e]}for(const i of e){const e=toFailure(i,t,n,r);if(e){yield e}}}function*run(e,t,n={}){const{path:r=[],branch:i=[e],coerce:c=false,mask:o=false}=n;const a={path:r,branch:i};if(c){e=t.coercer(e,a);if(o&&t.type!==\"type\"&&isObject(t.schema)&&isObject(e)&&!Array.isArray(e)){for(const n in e){if(t.schema[n]===undefined){delete e[n]}}}}let s=\"valid\";for(const r of t.validator(e,a)){r.explanation=n.message;s=\"not_valid\";yield[r,undefined]}for(let[u,f,l]of t.entries(e,a)){const t=run(f,l,{path:u===undefined?r:[...r,u],branch:u===undefined?i:[...i,f],coerce:c,mask:o,message:n.message});for(const n of t){if(n[0]){s=n[0].refinement!=null?\"not_refined\":\"not_valid\";yield[n[0],undefined]}else if(c){f=n[1];if(u===undefined){e=f}else if(e instanceof Map){e.set(u,f)}else if(e instanceof Set){e.add(f)}else if(isObject(e)){if(f!==undefined||u in e)e[u]=f}}}}if(s!==\"not_valid\"){for(const r of t.refiner(e,a)){r.explanation=n.message;s=\"not_refined\";yield[r,undefined]}}if(s===\"valid\"){yield[undefined,e]}}class Struct{constructor(e){const{type:t,schema:n,validator:r,refiner:i,coercer:c=(e=>e),entries:o=function*(){}}=e;this.type=t;this.schema=n;this.entries=o;this.coercer=c;if(r){this.validator=(e,t)=>{const n=r(e,t);return toFailures(n,t,this,e)}}else{this.validator=()=>[]}if(i){this.refiner=(e,t)=>{const n=i(e,t);return toFailures(n,t,this,e)}}else{this.refiner=()=>[]}}assert(e,t){return assert(e,this,t)}create(e,t){return create(e,this,t)}is(e){return is(e,this)}mask(e,t){return mask(e,this,t)}validate(e,t={}){return validate(e,this,t)}}function assert(e,t,n){const r=validate(e,t,{message:n});if(r[0]){throw r[0]}}function create(e,t,n){const r=validate(e,t,{coerce:true,message:n});if(r[0]){throw r[0]}else{return r[1]}}function mask(e,t,n){const r=validate(e,t,{coerce:true,mask:true,message:n});if(r[0]){throw r[0]}else{return r[1]}}function is(e,t){const n=validate(e,t);return!n[0]}function validate(e,t,n={}){const r=run(e,t,n);const i=shiftIterator(r);if(i[0]){const e=new StructError(i[0],(function*(){for(const e of r){if(e[0]){yield e[0]}}}));return[e,undefined]}else{const e=i[1];return[undefined,e]}}function assign(...e){const t=e[0].type===\"type\";const n=e.map((e=>e.schema));const r=Object.assign({},...n);return t?type(r):object(r)}function define(e,t){return new Struct({type:e,schema:null,validator:t})}function deprecated(e,t){return new Struct({...e,refiner:(t,n)=>t===undefined||e.refiner(t,n),validator(n,r){if(n===undefined){return true}else{t(n,r);return e.validator(n,r)}}})}function dynamic(e){return new Struct({type:\"dynamic\",schema:null,*entries(t,n){const r=e(t,n);yield*r.entries(t,n)},validator(t,n){const r=e(t,n);return r.validator(t,n)},coercer(t,n){const r=e(t,n);return r.coercer(t,n)},refiner(t,n){const r=e(t,n);return r.refiner(t,n)}})}function lazy(e){let t;return new Struct({type:\"lazy\",schema:null,*entries(n,r){t??(t=e());yield*t.entries(n,r)},validator(n,r){t??(t=e());return t.validator(n,r)},coercer(n,r){t??(t=e());return t.coercer(n,r)},refiner(n,r){t??(t=e());return t.refiner(n,r)}})}function omit(e,t){const{schema:n}=e;const r={...n};for(const e of t){delete r[e]}switch(e.type){case\"type\":return type(r);default:return object(r)}}function partial(e){const t=e instanceof Struct?{...e.schema}:{...e};for(const e in t){t[e]=optional(t[e])}return object(t)}function pick(e,t){const{schema:n}=e;const r={};for(const e of t){r[e]=n[e]}return object(r)}function struct(e,t){console.warn(\"superstruct@0.11 - The `struct` helper has been renamed to `define`.\");return define(e,t)}function any(){return define(\"any\",(()=>true))}function array(e){return new Struct({type:\"array\",schema:e,*entries(t){if(e&&Array.isArray(t)){for(const[n,r]of t.entries()){yield[n,r,e]}}},coercer(e){return Array.isArray(e)?e.slice():e},validator(e){return Array.isArray(e)||`Expected an array value, but received: ${print(e)}`}})}function bigint(){return define(\"bigint\",(e=>typeof e===\"bigint\"))}function boolean(){return define(\"boolean\",(e=>typeof e===\"boolean\"))}function date(){return define(\"date\",(e=>e instanceof Date&&!isNaN(e.getTime())||`Expected a valid \\`Date\\` object, but received: ${print(e)}`))}function enums(e){const t={};const n=e.map((e=>print(e))).join();for(const n of e){t[n]=n}return new Struct({type:\"enums\",schema:t,validator(t){return e.includes(t)||`Expected one of \\`${n}\\`, but received: ${print(t)}`}})}function func(){return define(\"func\",(e=>typeof e===\"function\"||`Expected a function, but received: ${print(e)}`))}function instance(e){return define(\"instance\",(t=>t instanceof e||`Expected a \\`${e.name}\\` instance, but received: ${print(t)}`))}function integer(){return define(\"integer\",(e=>typeof e===\"number\"&&!isNaN(e)&&Number.isInteger(e)||`Expected an integer, but received: ${print(e)}`))}function intersection(e){return new Struct({type:\"intersection\",schema:null,*entries(t,n){for(const r of e){yield*r.entries(t,n)}},*validator(t,n){for(const r of e){yield*r.validator(t,n)}},*refiner(t,n){for(const r of e){yield*r.refiner(t,n)}}})}function literal(e){const t=print(e);const n=typeof e;return new Struct({type:\"literal\",schema:n===\"string\"||n===\"number\"||n===\"boolean\"?e:null,validator(n){return n===e||`Expected the literal \\`${t}\\`, but received: ${print(n)}`}})}function map(e,t){return new Struct({type:\"map\",schema:null,*entries(n){if(e&&t&&n instanceof Map){for(const[r,i]of n.entries()){yield[r,r,e];yield[r,i,t]}}},coercer(e){return e instanceof Map?new Map(e):e},validator(e){return e instanceof Map||`Expected a \\`Map\\` object, but received: ${print(e)}`}})}function never(){return define(\"never\",(()=>false))}function nullable(e){return new Struct({...e,validator:(t,n)=>t===null||e.validator(t,n),refiner:(t,n)=>t===null||e.refiner(t,n)})}function number(){return define(\"number\",(e=>typeof e===\"number\"&&!isNaN(e)||`Expected a number, but received: ${print(e)}`))}function object(e){const t=e?Object.keys(e):[];const n=never();return new Struct({type:\"object\",schema:e?e:null,*entries(r){if(e&&isObject(r)){const i=new Set(Object.keys(r));for(const n of t){i.delete(n);yield[n,r[n],e[n]]}for(const e of i){yield[e,r[e],n]}}},validator(e){return isObject(e)||`Expected an object, but received: ${print(e)}`},coercer(e){return isObject(e)?{...e}:e}})}function optional(e){return new Struct({...e,validator:(t,n)=>t===undefined||e.validator(t,n),refiner:(t,n)=>t===undefined||e.refiner(t,n)})}function record(e,t){return new Struct({type:\"record\",schema:null,*entries(n){if(isObject(n)){for(const r in n){const i=n[r];yield[r,r,e];yield[r,i,t]}}},validator(e){return isObject(e)||`Expected an object, but received: ${print(e)}`}})}function regexp(){return define(\"regexp\",(e=>e instanceof RegExp))}function set(e){return new Struct({type:\"set\",schema:null,*entries(t){if(e&&t instanceof Set){for(const n of t){yield[n,n,e]}}},coercer(e){return e instanceof Set?new Set(e):e},validator(e){return e instanceof Set||`Expected a \\`Set\\` object, but received: ${print(e)}`}})}function string(){return define(\"string\",(e=>typeof e===\"string\"||`Expected a string, but received: ${print(e)}`))}function tuple(e){const t=never();return new Struct({type:\"tuple\",schema:null,*entries(n){if(Array.isArray(n)){const r=Math.max(e.length,n.length);for(let i=0;i<r;i++){yield[i,n[i],e[i]||t]}}},validator(e){return Array.isArray(e)||`Expected an array, but received: ${print(e)}`}})}function type(e){const t=Object.keys(e);return new Struct({type:\"type\",schema:e,*entries(n){if(isObject(n)){for(const r of t){yield[r,n[r],e[r]]}}},validator(e){return isObject(e)||`Expected an object, but received: ${print(e)}`},coercer(e){return isObject(e)?{...e}:e}})}function union(e){const t=e.map((e=>e.type)).join(\" | \");return new Struct({type:\"union\",schema:null,coercer(t){for(const n of e){const[e,r]=n.validate(t,{coerce:true});if(!e){return r}}return t},validator(n,r){const i=[];for(const t of e){const[...e]=run(n,t,r);const[c]=e;if(!c[0]){return[]}else{for(const[t]of e){if(t){i.push(t)}}}}return[`Expected the value to satisfy a union of \\`${t}\\`, but received: ${print(n)}`,...i]}})}function unknown(){return define(\"unknown\",(()=>true))}function coerce(e,t,n){return new Struct({...e,coercer:(r,i)=>is(r,t)?e.coercer(n(r,i),i):e.coercer(r,i)})}function defaulted(e,t,n={}){return coerce(e,unknown(),(e=>{const r=typeof t===\"function\"?t():t;if(e===undefined){return r}if(!n.strict&&isPlainObject(e)&&isPlainObject(r)){const t={...e};let n=false;for(const e in r){if(t[e]===undefined){t[e]=r[e];n=true}}if(n){return t}}return e}))}function trimmed(e){return coerce(e,string(),(e=>e.trim()))}function empty(e){return refine(e,\"empty\",(t=>{const n=getSize(t);return n===0||`Expected an empty ${e.type} but received one with a size of \\`${n}\\``}))}function getSize(e){if(e instanceof Map||e instanceof Set){return e.size}else{return e.length}}function max(e,t,n={}){const{exclusive:r}=n;return refine(e,\"max\",(n=>r?n<t:n<=t||`Expected a ${e.type} less than ${r?\"\":\"or equal to \"}${t} but received \\`${n}\\``))}function min(e,t,n={}){const{exclusive:r}=n;return refine(e,\"min\",(n=>r?n>t:n>=t||`Expected a ${e.type} greater than ${r?\"\":\"or equal to \"}${t} but received \\`${n}\\``))}function nonempty(e){return refine(e,\"nonempty\",(t=>{const n=getSize(t);return n>0||`Expected a nonempty ${e.type} but received an empty one`}))}function pattern(e,t){return refine(e,\"pattern\",(n=>t.test(n)||`Expected a ${e.type} matching \\`/${t.source}/\\` but received \"${n}\"`))}function size(e,t,n=t){const r=`Expected a ${e.type}`;const i=t===n?`of \\`${t}\\``:`between \\`${t}\\` and \\`${n}\\``;return refine(e,\"size\",(e=>{if(typeof e===\"number\"||e instanceof Date){return t<=e&&e<=n||`${r} ${i} but received \\`${e}\\``}else if(e instanceof Map||e instanceof Set){const{size:c}=e;return t<=c&&c<=n||`${r} with a size ${i} but received one with a size of \\`${c}\\``}else{const{length:c}=e;return t<=c&&c<=n||`${r} with a length ${i} but received one with a length of \\`${c}\\``}}))}function refine(e,t,n){return new Struct({...e,*refiner(r,i){yield*e.refiner(r,i);const c=n(r,i);const o=toFailures(c,i,e,r);for(const e of o){yield{...e,refinement:t}}}})}e.Struct=Struct;e.StructError=StructError;e.any=any;e.array=array;e.assert=assert;e.assign=assign;e.bigint=bigint;e.boolean=boolean;e.coerce=coerce;e.create=create;e.date=date;e.defaulted=defaulted;e.define=define;e.deprecated=deprecated;e.dynamic=dynamic;e.empty=empty;e.enums=enums;e.func=func;e.instance=instance;e.integer=integer;e.intersection=intersection;e.is=is;e.lazy=lazy;e.literal=literal;e.map=map;e.mask=mask;e.max=max;e.min=min;e.never=never;e.nonempty=nonempty;e.nullable=nullable;e.number=number;e.object=object;e.omit=omit;e.optional=optional;e.partial=partial;e.pattern=pattern;e.pick=pick;e.record=record;e.refine=refine;e.regexp=regexp;e.set=set;e.size=size;e.string=string;e.struct=struct;e.trimmed=trimmed;e.tuple=tuple;e.type=type;e.union=union;e.unknown=unknown;e.validate=validate}))}};if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t={};e[318](0,t);module.exports=t})();"],"names":["relativizeURL","url","base","baseURL","URL","relative","origin","protocol","host","toString","replace","getRouteMatcher","re","groups","routeMatch","exec","pathname","decode","decodeURIComponent","param","_","DecodeError","params","Object","keys","forEach","g","slugName","m","pos","undefined","indexOf","split","map","entry","repeat","COMPILER_NAMES","client","server","edgeServer","UNDERSCORE_NOT_FOUND_ROUTE","PAGES_MANIFEST","Symbol","CLIENT_STATIC_FILES_RUNTIME_POLYFILLS","STATIC_STATUS_PAGES","TEST_ROUTE","isDynamicRoute","route","isInterceptionRouteAppPath","extractInterceptionRouteInformation","interceptedRoute","test","denormalizePagePath","page","_page","path","normalizePathSep","startsWith","slice","getPathMatch","options","regexp","pathToRegexp","delimiter","sensitive","strict","matcher","regexpToFunction","regexModifier","RegExp","source","flags","match","removeUnnamedParams","key","name","parseUrl","parseRelativeUrl","parsedURL","hash","hostname","href","port","query","searchParamsToUrlQuery","searchParams","search","unescapeSegments","str","compileNonPath","value","includes","compile","validate","UrlNode","insert","urlPath","_insert","filter","Boolean","smoosh","_smoosh","prefix","childrenPaths","children","sort","splice","restSlugName","optionalRestSlugName","routes","get","c","reduce","prev","curr","push","placeholder","r","unshift","urlPaths","slugNames","isCatchAll","length","Error","nextSegment","endsWith","segmentName","isOptional","substring","handleSlug","previousSlug","nextSlug","slug","has","set","Map","getSortedRoutes","root","normalizedPages","pagePath","normalizePagePath","normalized","ensureLeadingSlash","getRouteFromAssetPath","ext","assetPath","matchHas","missing","hasMatch","hasItem","type","toLowerCase","req","headers","cookies","getCookieParser","paramName","newParamName","i","charCode","charCodeAt","matches","Array","isArray","groupKey","allMatch","item","some","prepareDestination","newUrl","assign","args","__nextLocale","__nextDefaultLocale","__nextDataReq","__nextInferredLocaleFromDefault","NEXT_RSC_UNION_QUERY","escapedDestination","destination","escapeSegment","escapeStringRegexp","parsedDestination","destQuery","destPath","destHostname","destPathParamKeys","destHostnameParamKeys","destParams","destPathCompiler","destHostnameCompiler","strOrArray","entries","paramKeys","appendParamsToQuery","marker","INTERCEPTION_ROUTE_MARKERS","find","segment","err","message","escapeEncoded","encodeURIComponent","char","DYNAMIC_ERROR_CODE","DynamicServerError","constructor","description","digest","isDynamicServerError","StaticGenBailoutError","code","NEXT_STATIC_GEN_BAILOUT","InvariantError","promise","then","isNotFoundError","error","NOT_FOUND_ERROR_CODE","parsePath","hashIndex","queryIndex","hasQuery","addPathPrefix","addPathSuffix","suffix","pathHasPrefix","normalizeLocalePath","locales","detectedLocale","pathnameParts","locale","join","getNextPathnameInfo","result","basePath","i18n","trailingSlash","nextConfig","info","removePathPrefix","withoutPrefix","pathnameNoDataPrefix","paths","buildId","parseData","i18nProvider","analyze","parsed","detectDomainLocale","domainItems","domainHostname","domain","defaultLocale","addLocale","ignorePrefix","lower","removeTrailingSlash","ReactDOM","require","decoderOptions","stream","chunkCache","requireAsyncModule","id","globalThis","__next_require__","status","reason","ignoreReject","preloadModule","metadata","chunks","promises","chunkId","__webpack_chunk_load__","resolve","bind","Promise","all","requireModule","moduleExports","__esModule","default","ReactDOMSharedInternals","__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","REACT_ELEMENT_TYPE","for","REACT_LAZY_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","ASYNC_ITERATOR","asyncIterator","isArrayImpl","getPrototypeOf","ObjectPrototype","prototype","knownServerReferences","WeakMap","processReply","formFieldPrefix","temporaryReferences","reject","serializeTypedArray","tag","typedArray","Blob","Uint8Array","buffer","byteOffset","byteLength","blobId","nextPartId","formData","FormData","append","resolveToJSON","$$typeof","maybeIterable","iterable","streamId","writtenObjects","parentReference","_payload","init","_init","pendingParts","resolvedModel","lazyId","partJSON","serializeModel","x","lazyId$24","partJSON$25","data$26","promiseId","partValue","partJSON$28","modelRoot","data$32","originalValue","originalKey","from","Set","ArrayBuffer","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array","DataView","getIteratorFn","call","ReadableStream","serializeReadableStream","reader","data","binaryReader","getReader","mode","serializeReader","read","progress","done","JSON","stringify","serializeAsyncIterable","next","partJSON$22","x$23","Date","serializeNumber","isFinite","number","Infinity","model","json","boundCache","defaultEncodeFormAction","identifierPrefix","reference","bound","thenable","res","rej","body","e","encodeFormData","prefixedData","method","encType","isSignatureEqual","referenceId","numberOfBoundArgs","boundPromise","boundArgs","registerServerReference","proxy","reference$jscomp$0","encodeFormAction","defineProperties","$$FORM_ACTION","$$IS_SIGNATURE_EQUAL","FunctionBind","Function","ArraySlice","newFn","apply","arguments","concat","ReactPromise","response","_response","readChunk","chunk","initializeModelChunk","initializeModuleChunk","createPendingChunk","wakeChunk","listeners","wakeChunkIfInitialized","resolveListeners","rejectListeners","triggerErrorOnChunk","createResolvedIteratorResultChunk","resolveIteratorResultChunk","resolveModelChunk","enqueueModel","resolveModuleChunk","create","initializingHandler","prevHandler","parse","_fromJSON","errored","deps","reportGlobalError","_chunks","createLazyChunkWrapper","getChunk","waitForReference","referencedChunk","parentObject","handler","parent","fulfill","props","loadServerReference","metaData","_serverReferenceConfig","callServer","action","_callServer","_encodeFormAction","serverReference","resolveServerReference","resolvedModuleData","bundlerConfig","idx","lastIndexOf","async","resolvedValue","getOutlinedModel","parseInt","createMap","createSet","createBlob","createFormData","extractIterator","createModel","missingCall","ResponseInstance","serverReferenceConfig","moduleLoading","nonce","_bundlerConfig","_moduleLoading","_nonce","_stringDecoder","TextDecoder","_rowLength","_rowTag","_rowID","_rowState","_buffer","_tempRefs","createFromJSONCallback","parseModelString","resolveErrorProd","NaN","BigInt","ref","blockedChunk","resolveBuffer","enqueueValue","resolveStream","controller","startReadableStream","start","previousBlockedChunk","enqueue","v","chunk$52","close","startAsyncIterable","closed","nextWriteIndex","$jscomp$compprop0","nextReadIndex","createIterator","arg","stack","mergeBuffer","lastChunk","l","i$53","resolveTypedArray","bytesPerElement","noServerCall","createResponseFromOptions","serverConsumerManifest","moduleMap","serverModuleMap","startReadingFromStream","_ref","rowState","rowTag","rowLength","chunkLength","lastIdx","offset","processFullBinaryRow","stringDecoder","row","resolveModule","clientReference","resolveClientReference","prepareDestinationWithChunks","nonce$jscomp$0","d","JSCompiler_temp_const$jscomp$0","JSCompiler_temp_const","X","JSCompiler_temp_const$jscomp$1","JSCompiler_inline_result","crossOrigin","D","C","L","S","M","catch","exports","promiseForResponse","createServerReference$1","abort","signal","aborted","listener","removeEventListener","addEventListener","globalServerActionDispatcher","useServerActionDispatcher","dispatch","useCallback","actionPayload","startTransition","serverActionDispatcher","ACTION_SERVER_ACTION","actionId","actionArgs","actionDispatcher","findSourceMapURL","process","RSC_HEADER","NEXT_ROUTER_STATE_TREE_HEADER","NEXT_ROUTER_PREFETCH_HEADER","NEXT_HMR_REFRESH_HEADER","NEXT_ROUTER_SEGMENT_PREFETCH_HEADER","useUnwrapState","state","isThenable","use","normalizePathTrailingSlash","addBasePath","required","AppRouterAnnouncer","tree","portalNode","setPortalNode","useState","routeAnnouncement","setRouteAnnouncement","useRef","createPortal","isExternalURL","window","appRouterState","useInsertionEffect","env","__NEXT_APP_NAV_FAIL_HANDLING","historyState","pushRef","preserveCustomHistoryState","__PRIVATE_NEXTJS_INTERNALS_TREE","history","pushState","lazyData","rsc","prefetchRsc","head","prefetchHead","parallelRoutes","loading","headCacheNode","actionQueue","assetPrefix","matchingHead","useReducer","canonicalUrl","setState","React","hasBasePath","navigate","useNavigate","previousTree","ACTION_SERVER_PATCH","serverResponse","location","ACTION_NAVIGATE","isExternalUrl","locationSearch","shouldScroll","navigateType","allowAliasing","routerInstance","forward","prefetch","kind","refresh","ACTION_REFRESH","hmrRefresh","useEffect","mpaNavigation","pendingPush","useMemo","findHeadInCache","cache","findHeadInCacheImpl","keyPrefix","isLastItem","childParallelRoutes","childSegmentMap","cacheKey","createRouterCacheKey","cacheNode","getSelectedParams","childNodes","changeByServerResponse","focusAndScrollRef","nextUrl","Head","headKey","PathParamsContext","Provider","pathParams","globalLayoutRouterContext","appRouter","AppRouterContext","layoutRouterContext","content","globalErrorComponentAndStyles","useNavFailureHandler","errorComponent","globalErrorComponent","errorStyles","globalErrorStyles","runtimeStyleChanged","_N_E_STYLE_LOAD","forceUpdate","renderedStylesSize","runtimeStyles","size","rel","dplId","len","add","cb","bailoutToClientRendering","workStore","workAsyncStorage","getStore","forceStatic","isStaticGeneration","BailoutToCSRError","Component","clientParams","clientSearchParams","store","createSearchParamsFromClient","createParamsFromClient","slots","height","textAlign","display","flexDirection","alignItems","justifyContent","text","fontSize","fontWeight","lineHeight","margin","isRevalidate","console","getDerivedStateFromError","isNextRouterError","previousPathname","errorScripts","this","reset","html","styles","style","isRedirectError","getSegmentValue","rect","getBoundingClientRect","element","top","viewportHeight","componentDidMount","handlePotentialScroll","componentDidUpdate","render","hashFragment","domNode","getHashFragmentDomNode","document","getElementsByName","findDOMNode","getComputedStyle","NODE_ENV","rectProperties","every","segmentPaths","handleSmoothScroll","onlyHashChange","fn","htmlElement","documentElement","existing","scrollBehavior","dontForceLayout","getClientRects","scrollIntoView","clientHeight","segmentPath","context","useContext","GlobalLayoutRouterContext","parallelRouterKey","newLazyCacheNode","resolvedRsc","segmentPathToWalk","parallelRouteKey","isLast","matchSegment","treeToRecreate","hasOwnProperty","subTree","walkAddRefetch","fullTree","includeNextUrl","hasInterceptionRouteInCurrentTree","flightRouterState","refetchTree","childNode","hasLoading","fallback","loadingStyles","loadingScripts","LayoutRouterContext","childNodesForParallelRouter","treeSegment","preservedSegments","preservedSegmentValue","preservedSegment","ScrollAndFocusHandler","NotFoundBoundary","notFound","notFoundStyles","RedirectBoundary","InnerLayoutRouter","isActive","currentChildSegmentValue","templateStyles","templateScripts","template","existingSegment","canSegmentBeOverridden","getSegmentParam","useUntrackedPathname","hasFallbackRouteParams","fallbackRouteParams","PathnameContext","componentDidCatch","notFoundTriggered","asNotFound","missingSlots","MissingSlotContext","useRouter","router","redirect","redirectType","getURLFromRedirectError","getRedirectTypeFromError","HandleRedirect","RedirectStatusCode","errorCode","statusCode","Number","at","REDIRECT_ERROR_CODE","isNaN","getRedirectStatusCodeFromError","RedirectType","currentTree","parallelRoute","values","isDynamicParameter","segmentValue","PAGE_SEGMENT_KEY","extractPathFromFlightRouterState","DEFAULT_SEGMENT_KEY","segments","segmentToPathname","childrenPath","childPath","normalizeSegments","acc","removeLeadingSlash","isGroupSegment","createHrefFromUrl","includeHash","withoutSearchParameters","urlWithoutFlightParameters","delete","flightData","couldBeIntercepted","prerendered","postponed","staleTime","prefetchKind","NEXT_URL","fetchUrl","__NEXT_TEST_MODE","priority","responseUrl","redirected","contentType","interception","NEXT_DID_POSTPONE_HEADER","staleTimeHeader","NEXT_ROUTER_STALE_TIME_HEADER","isFlightResponse","RSC_CONTENT_TYPE_HEADER","doMpaNavigation","ACTION_RESTORE","PrefetchKind","PrefetchCacheEntryStatus","isStaticGenBailoutError","unresolvedThenable","getFlightDataPartsFromPath","flightDataPath","seedData","pathToSegment","isRootRender","normalizeFlightData","isPlainObject","METADATA_BOUNDARY_NAME","VIEWPORT_BOUNDARY_NAME","OUTLET_BOUNDARY_NAME","NameSpace","invalidServerComponentReactHooks","setMessage","lines","getStackWithoutErrorMessage","formatServerError","addedMessage","clientHook","regex","encodeURIPath","file","p","PromiseQueue","promiseFn","taskResolve","taskReject","taskPromise","task","enqueueResult","bump","index","findIndex","bumpedItem","maxConcurrency","forced","shift","createPrefetchCacheKey","createPrefetchCacheKeyImpl","FULL","pathnameFromUrl","includeSearchParams","INTERCEPTION_CACHE_KEY_MARKER","createInitialRouterState","initialSeedData","initialFlightData","initialCanonicalUrlParts","initialParallelRoutes","initialCanonicalUrl","normalizedFlightData","initialTree","initialHead","isServer","addRefreshMarkerToActiveParallelSegments","refetchMarker","prefetchCache","fillLazyItemsTillLeafWithHead","newCache","existingCache","routerState","cacheNodeSeedData","prefetchEntry","isLastSegment","newCacheNode","parallelRouteState","segmentForParallelRoute","parallelSeedData","existingParallelRoutesCacheNode","hasReusablePrefetch","reusable","parallelRouteCacheNode","existingCacheNode","seedNode","existingParallelRoutes","initialState","createSeededPrefetchCacheEntry","prefetchCacheKey","treeAtTimeOfPrefetch","prefetchTime","now","lastUsedTime","fresh","AUTO","DEFERRED","createFromFetch","createTemporaryReferenceSet","encodeReply","runRemainingActions","pending","runAction","needsRefresh","prevState","payload","actionResult","handleResult","nextState","discarded","createMutableActionQueue","dispatchAction","resolvers","deferredPromise","newAction","last","SERVER_ACTION_MANIFESTS_SINGLETON","setReferenceManifestsSingleton","clientReferenceManifest","serverActionsManifest","clientReferenceManifestsPerPage","RouterContext","deviceSizes","imageSizes","loader","loaderFile","domains","disableStaticImages","minimumCacheTTL","formats","dangerouslyAllowSVG","contentSecurityPolicy","contentDispositionType","localPatterns","remotePatterns","unoptimized","createContext","reHasRegExp","reReplaceRegExp","getHostname","djb2Hash","hexHash","HeadManagerContext","module","BAILOUT_TO_CSR","isBailoutToCSRError","MODERN_BROWSERSLIST_TARGET","normalizeAppPath","normalizeRscURL","BOT_UA_RE","isBot","userAgent","parseQuery","globalBase","resolvedBase","getLocationOrigin","PARAMETER_PATTERN","parseParameter","parseMatchedParameter","optional","getRouteRegex","normalizedRoute","parameterizedRoute","getParametrizedRoute","groupIndex","markerMatch","paramMatches","getSafeKeyFromSegment","interceptionMarker","getSafeRouteKey","routeKeys","cleanedKey","invalidKey","interceptionPrefix","getNamedRouteRegex","prefixRouteKey","getNamedParametrizedRoute","prefixRouteKeys","routeKey","j","String","fromCharCode","Math","floor","namedParameterizedRoute","hasInterceptionMarker","usedMarker","NEXT_INTERCEPTION_MARKER_PREFIX","NEXT_QUERY_PARAM_PREFIX","namedRegex","addSearchParamsIfPageSegment","isPageSegment","stringifiedQuery","useServerInsertedHTML","callback","addInsertedServerHTMLCallback","execOnce","used","normalizeRepeatedSlashes","urlParts","performance","NormalizeError","MissingStaticPage","handleErrorInNextTick","setTimeoutOrImmediate","LocalPromise","scheduleMicrotask","queueMicrotask","currentView","writtenBytes","writeChunkAndReturn","allowableBytes","subarray","textEncoder","TextEncoder","stringToChunk","encode","byteLengthOfChunk","closeWithError","CLIENT_REFERENCE_TAG$1","SERVER_REFERENCE_TAG","registerClientReferenceImpl","proxyImplementation","$$id","$$async","$$bound","configurable","PROMISE_PROTOTYPE","deepProxyHandlers","target","toPrimitive","toStringTag","getReference","moduleId","Proxy","proxyHandlers$1","defineProperty","getOwnPropertyDescriptor","descriptor","writable","enumerable","previousDispatcher","trimOptions","hasProperties","trimmed","f","prefetchDNS","request","resolveRequest","hints","emitHint","preconnect","preload","as","imageSrcSet","uniquePart","preloadModule$1","preinitScript","src","preinitStyle","precedence","preinitModuleScript","supportsRequestStorage","AsyncLocalStorage","requestStorage","async_hooks","createHook","executionAsyncId","TEMPORARY_REFERENCE_TAG","proxyHandlers","REACT_LEGACY_ELEMENT_TYPE","REACT_FRAGMENT_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_MEMO_CACHE_SENTINEL","SuspenseException","noop$1","suspendedThenable","getSuspendedThenable","currentRequest$1","thenableIndexCounter","thenableState","getThenableStateAfterSuspending","HooksDispatcher","nextCreate","useDebugValue","useDeferredValue","unsupportedHook","useTransition","readContext","unsupportedContext","useLayoutEffect","useImperativeHandle","useId","identifierCount","useSyncExternalStore","useCacheRefresh","unsupportedRefresh","useMemoCache","usable","trackUsedThenable","fulfilledValue","fulfilledThenable","rejectedThenable","DefaultAsyncDispatcher","getCacheForType","resourceType","ReactSharedInternalsServer","__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","objectName","object","p0","describeValueForErrorMessage","CLIENT_REFERENCE_TAG","displayName","describeObjectForErrorMessage","objectOrArray","expandedName","objKind","describeElementType","encodedKey","defaultErrorHandler","defaultPostponeHandler","RequestInstance","onError","onPostpone","environmentName","filterStackFrame","onAllReady","onFatalError","A","flushScheduled","fatalError","pendingChunks","nextChunkId","abortListeners","abortableTasks","pingedTasks","completedImportChunks","completedHintChunks","completedRegularChunks","completedErrorChunks","writtenSymbols","writtenClientReferences","writtenServerReferences","taintCleanupQueue","createTask","noop","currentRequest","serializeThenable","newTask","keyPath","implicitSlot","pingTask","logRecoverableError","emitErrorChunk","serializeByValueID","emitModelChunk","enqueueFlush","readThenable","voidHandler","renderFunctionComponent","prevThenableState","createLazyWrapperAroundWakeable","wakeable","iteratorFn","iterableChild","iterableChild$10","renderModelDestructive","emptyRoot","renderFragment","performWork","abortSet","ping","toJSON","parentPropertyName","prevKeyPath","prevImplicitSlot","thrownValue","encodeReferenceChunk","serializeClientReference","clientReferenceKey","existingId","config","modulePath","importId","processedChunk","outlineModel","retryTask","bufferId","emitTypedArrayChunk","elementReference","existingReference","renderElement","serializeBlob","blob","abortBlob","cancel","abortStream","streamTask","supportsBYOB","releaseLock","emitChunk","x$8","abortIterable","throw","endStreamRow","x$9","emitTextChunk","prevRequest","errorDigest","run","binaryLength","prevDispatcher","H","hadAbortableTasks","flushCompletedChunks","importsChunks","hintChunks","regularChunks","errorChunks","errorId","clear","error$23","error$24","Chunk","initializingChunk","initializingChunkBlockedModel","prevChunk","prevBlocked","rootReference","rawModel","reviveModel","parentObj","parentKey","obj","loadServerReference$1","parentChunk","createModelResolver","createModelReject","_temporaryReferences","formPrefix","_prefix","_formData","entryKey","parseTypedArray","parseReadableStream","parseAsyncIterable","cyclic","blocked","arrayBuffer","getAll","chunk$27","$jscomp$compprop2","createResponse","backingFormData","decodeBoundActionMetaData","serverManifest","webpackMap","form","exportName","propertyIsEnumerable","setTimeout","pull","highWaterMark","title","RootLayout","lang","className","geistSans","geistMono","runtime","NotFound","div","dangerouslySetInnerHTML","__html","h1","desc","h2","fontFamily","padding","verticalAlign"],"sourceRoot":"","ignoreList":[2,3,4,5,6,8,9,10,11,12,14,15,16,17,18,22,23,29,31,32,34,35,36,37,38,39,41,42,43,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,146,147,148,149,150,151,152,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,232,233,248,249,251,253,254,255,256,257,258,259,260,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,314,315,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,356,357,358,359,360,361,362,363,364,365,366,367,368,369,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,411,412,413,414,415,418,419,420,421,422,423,424,425]}